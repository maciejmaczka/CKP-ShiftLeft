-- MySQL dump 10.13  Distrib 5.7.27, for Linux (x86_64)
--
-- Host: localhost    Database: 
-- ------------------------------------------------------
-- Server version	5.7.27-0ubuntu0.18.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `mysql`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `mysql` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `mysql`;

--
-- Table structure for table `columns_priv`
--

DROP TABLE IF EXISTS `columns_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `columns_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Column_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`,`Column_name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Column privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `columns_priv`
--

LOCK TABLES `columns_priv` WRITE;
/*!40000 ALTER TABLE `columns_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `columns_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `db`
--

DROP TABLE IF EXISTS `db`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `db` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`Db`,`User`),
  KEY `User` (`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Database privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `db`
--

LOCK TABLES `db` WRITE;
/*!40000 ALTER TABLE `db` DISABLE KEYS */;
INSERT INTO `db` VALUES ('localhost','performance_schema','mysql.session','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N'),('localhost','sys','mysql.sys','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','Y');
/*!40000 ALTER TABLE `db` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `engine_cost`
--

DROP TABLE IF EXISTS `engine_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `engine_cost` (
  `engine_name` varchar(64) NOT NULL,
  `device_type` int(11) NOT NULL,
  `cost_name` varchar(64) NOT NULL,
  `cost_value` float DEFAULT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `comment` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`cost_name`,`engine_name`,`device_type`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `engine_cost`
--

LOCK TABLES `engine_cost` WRITE;
/*!40000 ALTER TABLE `engine_cost` DISABLE KEYS */;
INSERT INTO `engine_cost` VALUES ('default',0,'io_block_read_cost',NULL,'2019-10-17 09:52:19',NULL),('default',0,'memory_block_read_cost',NULL,'2019-10-17 09:52:19',NULL);
/*!40000 ALTER TABLE `engine_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `event`
--

DROP TABLE IF EXISTS `event`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `event` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `body` longblob NOT NULL,
  `definer` char(93) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `execute_at` datetime DEFAULT NULL,
  `interval_value` int(11) DEFAULT NULL,
  `interval_field` enum('YEAR','QUARTER','MONTH','DAY','HOUR','MINUTE','WEEK','SECOND','MICROSECOND','YEAR_MONTH','DAY_HOUR','DAY_MINUTE','DAY_SECOND','HOUR_MINUTE','HOUR_SECOND','MINUTE_SECOND','DAY_MICROSECOND','HOUR_MICROSECOND','MINUTE_MICROSECOND','SECOND_MICROSECOND') DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `last_executed` datetime DEFAULT NULL,
  `starts` datetime DEFAULT NULL,
  `ends` datetime DEFAULT NULL,
  `status` enum('ENABLED','DISABLED','SLAVESIDE_DISABLED') NOT NULL DEFAULT 'ENABLED',
  `on_completion` enum('DROP','PRESERVE') NOT NULL DEFAULT 'DROP',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `originator` int(10) unsigned NOT NULL,
  `time_zone` char(64) CHARACTER SET latin1 NOT NULL DEFAULT 'SYSTEM',
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Events';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `event`
--

LOCK TABLES `event` WRITE;
/*!40000 ALTER TABLE `event` DISABLE KEYS */;
/*!40000 ALTER TABLE `event` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `func`
--

DROP TABLE IF EXISTS `func`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `func` (
  `name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `ret` tinyint(1) NOT NULL DEFAULT '0',
  `dl` char(128) COLLATE utf8_bin NOT NULL DEFAULT '',
  `type` enum('function','aggregate') CHARACTER SET utf8 NOT NULL,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User defined functions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `func`
--

LOCK TABLES `func` WRITE;
/*!40000 ALTER TABLE `func` DISABLE KEYS */;
/*!40000 ALTER TABLE `func` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `gtid_executed`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `gtid_executed` (
  `source_uuid` char(36) NOT NULL COMMENT 'uuid of the source where the transaction was originally executed.',
  `interval_start` bigint(20) NOT NULL COMMENT 'First number of interval.',
  `interval_end` bigint(20) NOT NULL COMMENT 'Last number of interval.',
  PRIMARY KEY (`source_uuid`,`interval_start`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `help_category`
--

DROP TABLE IF EXISTS `help_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_category` (
  `help_category_id` smallint(5) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `parent_category_id` smallint(5) unsigned DEFAULT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_category_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='help categories';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_category`
--

LOCK TABLES `help_category` WRITE;
/*!40000 ALTER TABLE `help_category` DISABLE KEYS */;
INSERT INTO `help_category` VALUES (0,'Contents',0,''),(1,'Help Metadata',0,''),(2,'Data Types',0,''),(3,'Administration',0,''),(4,'Procedures',0,''),(5,'Language Structure',0,''),(6,'Geographic Features',0,''),(7,'MBR',6,''),(8,'WKT',6,''),(9,'Functions',0,''),(10,'Comparison Operators',9,''),(11,'Logical Operators',9,''),(12,'Control Flow Functions',9,''),(13,'String Functions',9,''),(14,'Numeric Functions',9,''),(15,'Date and Time Functions',9,''),(16,'Bit Functions',9,''),(17,'Encryption Functions',9,''),(18,'Locking Functions',9,''),(19,'Information Functions',9,''),(20,'Spatial Functions',9,''),(21,'WKT Functions',20,''),(22,'WKB Functions',20,''),(23,'Geometry Constructors',20,''),(24,'Geometry Property Functions',20,''),(25,'Point Property Functions',20,''),(26,'LineString Property Functions',20,''),(27,'Polygon Property Functions',20,''),(28,'GeometryCollection Property Functions',20,''),(29,'Geometry Relation Functions',20,''),(30,'MBR Functions',20,''),(31,'GROUP BY Functions and Modifiers',9,''),(32,'Miscellaneous Functions',9,''),(33,'Data Definition',0,''),(34,'Data Manipulation',0,''),(35,'Transactions',0,''),(36,'Compound Statements',0,''),(37,'Account Management',0,''),(38,'Table Maintenance',0,''),(39,'User-Defined Functions',0,''),(40,'Plugins',0,''),(41,'Utility',0,''),(42,'Storage Engines',0,'');
/*!40000 ALTER TABLE `help_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_keyword`
--

DROP TABLE IF EXISTS `help_keyword`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_keyword` (
  `help_keyword_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  PRIMARY KEY (`help_keyword_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='help keywords';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_keyword`
--

LOCK TABLES `help_keyword` WRITE;
/*!40000 ALTER TABLE `help_keyword` DISABLE KEYS */;
INSERT INTO `help_keyword` VALUES (282,'(JSON'),(283,'->'),(285,'->>'),(52,'<>'),(620,'ACCOUNT'),(415,'ACTION'),(46,'ADD'),(108,'AES_DECRYPT'),(109,'AES_ENCRYPT'),(347,'AFTER'),(97,'AGAINST'),(652,'AGGREGATE'),(348,'ALGORITHM'),(482,'ALL'),(47,'ALTER'),(6,'ANALYSE'),(349,'ANALYZE'),(56,'AND'),(319,'ANY_VALUE'),(416,'ARCHIVE'),(216,'AREA'),(483,'AS'),(181,'ASBINARY'),(310,'ASC'),(183,'ASTEXT'),(182,'ASWKB'),(184,'ASWKT'),(404,'AT'),(508,'AUTOCOMMIT'),(440,'AUTOEXTEND_SIZE'),(350,'AUTO_INCREMENT'),(351,'AVG_ROW_LENGTH'),(536,'BEFORE'),(509,'BEGIN'),(57,'BETWEEN'),(74,'BIGINT'),(104,'BINARY'),(677,'BINLOG'),(14,'BOOL'),(15,'BOOLEAN'),(68,'BOTH'),(408,'BTREE'),(231,'BUFFER'),(311,'BY'),(39,'BYTE'),(8,'CACHE'),(448,'CALL'),(417,'CASCADE'),(59,'CASE'),(600,'CATALOG_NAME'),(77,'CEIL'),(78,'CEILING'),(217,'CENTROID'),(510,'CHAIN'),(352,'CHANGE'),(541,'CHANNEL'),(40,'CHAR'),(36,'CHARACTER'),(660,'CHARSET'),(353,'CHECK'),(354,'CHECKSUM'),(621,'CIPHER'),(601,'CLASS_ORIGIN'),(633,'CLIENT'),(454,'CLOSE'),(355,'COALESCE'),(680,'CODE'),(320,'COLLATE'),(662,'COLLATION'),(356,'COLUMN'),(357,'COLUMNS'),(602,'COLUMN_NAME'),(328,'COMMENT'),(511,'COMMIT'),(525,'COMMITTED'),(418,'COMPACT'),(329,'COMPLETION'),(419,'COMPRESSED'),(358,'COMPRESSION'),(468,'CONCURRENT'),(596,'CONDITION'),(359,'CONNECTION'),(512,'CONSISTENT'),(360,'CONSTRAINT'),(603,'CONSTRAINT_CATALOG'),(604,'CONSTRAINT_NAME'),(605,'CONSTRAINT_SCHEMA'),(259,'CONTAINS'),(597,'CONTINUE'),(103,'CONVERT'),(232,'CONVEXHULL'),(309,'COUNT'),(48,'CREATE'),(307,'CREATE_DH_PARAMETERS'),(501,'CROSS'),(240,'CROSSES'),(420,'CSV'),(330,'CURRENT_USER'),(594,'CURSOR'),(606,'CURSOR_NAME'),(321,'DATA'),(322,'DATABASE'),(663,'DATABASES'),(399,'DATAFILE'),(33,'DATE'),(105,'DATETIME'),(81,'DATE_ADD'),(82,'DATE_SUB'),(83,'DAY'),(84,'DAY_HOUR'),(85,'DAY_MINUTE'),(86,'DAY_SECOND'),(584,'DEALLOCATE'),(25,'DEC'),(28,'DECIMAL'),(585,'DECLARE'),(2,'DEFAULT'),(575,'DEFAULT_AUTH'),(331,'DEFINER'),(461,'DELAYED'),(361,'DELAY_KEY_WRITE'),(421,'DELETE'),(312,'DESC'),(695,'DESCRIBE'),(685,'DES_KEY_FILE'),(607,'DIAGNOSTICS'),(189,'DIMENSION'),(323,'DIRECTORY'),(332,'DISABLE'),(362,'DISCARD'),(260,'DISJOINT'),(241,'DISTANCE'),(308,'DISTINCT'),(484,'DISTINCTROW'),(333,'DO'),(363,'DROP'),(500,'DUAL'),(485,'DUMPFILE'),(462,'DUPLICATE'),(422,'DYNAMIC'),(60,'ELSE'),(586,'ELSEIF'),(334,'ENABLE'),(469,'ENCLOSED'),(364,'ENCRYPTION'),(61,'END'),(205,'ENDPOINT'),(405,'ENDS'),(365,'ENGINE'),(664,'ENGINES'),(190,'ENVELOPE'),(261,'EQUALS'),(686,'ERROR'),(665,'ERRORS'),(72,'ESCAPE'),(470,'ESCAPED'),(335,'EVENT'),(678,'EVENTS'),(406,'EVERY'),(366,'EXCHANGE'),(583,'EXECUTE'),(403,'EXISTS'),(598,'EXIT'),(98,'EXPANSION'),(622,'EXPIRE'),(696,'EXPLAIN'),(687,'EXPORT'),(650,'EXTENDED'),(441,'EXTENT_SIZE'),(218,'EXTERIORRING'),(284,'EXTRACTION)'),(12,'FALSE'),(648,'FAST'),(423,'FEDERATED'),(595,'FETCH'),(471,'FIELDS'),(634,'FILE'),(442,'FILE_BLOCK_SIZE'),(565,'FILTER'),(367,'FIRST'),(26,'FIXED'),(29,'FLOAT4'),(30,'FLOAT8'),(75,'FLOOR'),(9,'FLUSH'),(486,'FOR'),(502,'FORCE'),(368,'FOREIGN'),(697,'FORMAT'),(69,'FROM'),(424,'FULL'),(369,'FULLTEXT'),(341,'FUNCTION'),(688,'GENERAL'),(114,'GEOMCOLLFROMTEXT'),(144,'GEOMCOLLFROMWKB'),(174,'GEOMETRYCOLLECTION'),(115,'GEOMETRYCOLLECTIONFROMTEXT'),(145,'GEOMETRYCOLLECTIONFROMWKB'),(116,'GEOMETRYFROMTEXT'),(146,'GEOMETRYFROMWKB'),(227,'GEOMETRYN'),(191,'GEOMETRYTYPE'),(117,'GEOMFROMTEXT'),(147,'GEOMFROMWKB'),(608,'GET'),(206,'GLENGTH'),(526,'GLOBAL'),(635,'GRANT'),(666,'GRANTS'),(343,'GROUP'),(455,'HANDLER'),(487,'HAVING'),(425,'HEAP'),(5,'HELP'),(0,'HELP_DATE'),(1,'HELP_VERSION'),(463,'HIGH_PRIORITY'),(409,'HOST'),(667,'HOSTS'),(87,'HOUR'),(88,'HOUR_MINUTE'),(89,'HOUR_SECOND'),(480,'IDENTIFIED'),(64,'IF'),(464,'IGNORE'),(542,'IGNORE_SERVER_IDS'),(370,'IMPORT'),(99,'IN'),(49,'INDEX'),(668,'INDEXES'),(472,'INFILE'),(400,'INITIAL_SIZE'),(286,'INLINE'),(503,'INNER'),(426,'INNODB'),(65,'INSERT'),(371,'INSERT_METHOD'),(656,'INSTALL'),(342,'INSTANCE'),(16,'INT1'),(19,'INT2'),(20,'INT3'),(22,'INT4'),(24,'INT8'),(23,'INTEGER'),(219,'INTERIORRINGN'),(262,'INTERSECTS'),(90,'INTERVAL'),(465,'INTO'),(576,'IO_THREAD'),(53,'IS'),(207,'ISCLOSED'),(192,'ISEMPTY'),(527,'ISOLATION'),(193,'ISSIMPLE'),(623,'ISSUER'),(587,'ITERATE'),(488,'JOIN'),(106,'JSON'),(290,'JSON_APPEND'),(276,'JSON_ARRAY'),(315,'JSON_ARRAYAGG'),(291,'JSON_ARRAY_APPEND'),(292,'JSON_ARRAY_INSERT'),(279,'JSON_CONTAINS'),(280,'JSON_CONTAINS_PATH'),(301,'JSON_DEPTH'),(281,'JSON_EXTRACT'),(293,'JSON_INSERT'),(288,'JSON_KEYS'),(302,'JSON_LENGTH'),(294,'JSON_MERGE'),(295,'JSON_MERGE_PATCH'),(296,'JSON_MERGE_PRESERVE'),(277,'JSON_OBJECT'),(316,'JSON_OBJECTAGG'),(305,'JSON_PRETTY'),(278,'JSON_QUOTE'),(297,'JSON_REMOVE'),(298,'JSON_REPLACE'),(289,'JSON_SEARCH'),(299,'JSON_SET'),(306,'JSON_STORAGE_SIZE'),(303,'JSON_TYPE'),(300,'JSON_UNQUOTE'),(304,'JSON_VALID'),(50,'KEY'),(372,'KEYS'),(373,'KEY_BLOCK_SIZE'),(693,'KILL'),(456,'LAST'),(70,'LEADING'),(588,'LEAVE'),(694,'LEAVES'),(504,'LEFT'),(528,'LEVEL'),(66,'LIKE'),(449,'LIMIT'),(118,'LINEFROMTEXT'),(148,'LINEFROMWKB'),(473,'LINES'),(175,'LINESTRING'),(119,'LINESTRINGFROMTEXT'),(149,'LINESTRINGFROMWKB'),(474,'LOAD'),(475,'LOCAL'),(374,'LOCK'),(344,'LOGFILE'),(537,'LOGS'),(44,'LONG'),(45,'LONGBINARY'),(589,'LOOP'),(450,'LOW_PRIORITY'),(538,'MASTER'),(543,'MASTER_AUTO_POSITION'),(544,'MASTER_BIND'),(545,'MASTER_CONNECT_RETRY'),(546,'MASTER_HEARTBEAT_PERIOD'),(547,'MASTER_HOST'),(548,'MASTER_LOG_FILE'),(549,'MASTER_LOG_POS'),(550,'MASTER_PASSWORD'),(551,'MASTER_PORT'),(552,'MASTER_RETRY_COUNT'),(553,'MASTER_SSL'),(554,'MASTER_SSL_CA'),(555,'MASTER_SSL_CERT'),(556,'MASTER_SSL_CIPHER'),(557,'MASTER_SSL_CRL'),(558,'MASTER_SSL_CRLPATH'),(559,'MASTER_SSL_KEY'),(560,'MASTER_SSL_VERIFY_SERVER_CERT'),(561,'MASTER_TLS_VERSION'),(562,'MASTER_USER'),(100,'MATCH'),(624,'MAX_CONNECTIONS_PER_HOUR'),(625,'MAX_QUERIES_PER_HOUR'),(375,'MAX_ROWS'),(443,'MAX_SIZE'),(626,'MAX_UPDATES_PER_HOUR'),(627,'MAX_USER_CONNECTIONS'),(252,'MBRCONTAINS'),(253,'MBRDISJOINT'),(254,'MBREQUAL'),(255,'MBRINTERSECTS'),(256,'MBROVERLAPS'),(257,'MBRTOUCHES'),(258,'MBRWITHIN'),(649,'MEDIUM'),(489,'MEMORY'),(427,'MERGE'),(609,'MESSAGE_TEXT'),(21,'MIDDLEINT'),(91,'MINUTE'),(92,'MINUTE_SECOND'),(376,'MIN_ROWS'),(120,'MLINEFROMTEXT'),(150,'MLINEFROMWKB'),(76,'MOD'),(101,'MODE'),(377,'MODIFY'),(93,'MONTH'),(122,'MPOINTFROMTEXT'),(152,'MPOINTFROMWKB'),(124,'MPOLYFROMTEXT'),(154,'MPOLYFROMWKB'),(428,'MRG_MYISAM'),(176,'MULTILINESTRING'),(121,'MULTILINESTRINGFROMTEXT'),(151,'MULTILINESTRINGFROMWKB'),(177,'MULTIPOINT'),(123,'MULTIPOINTFROMTEXT'),(153,'MULTIPOINTFROMWKB'),(178,'MULTIPOLYGON'),(125,'MULTIPOLYGONFROMTEXT'),(155,'MULTIPOLYGONFROMWKB'),(669,'MUTEX'),(429,'MYISAM'),(610,'MYSQL_ERRNO'),(324,'NAME'),(661,'NAMES'),(37,'NATIONAL'),(505,'NATURAL'),(38,'NCHAR'),(430,'NDB'),(431,'NDBCLUSTER'),(628,'NEVER'),(457,'NEXT'),(432,'NO'),(444,'NODEGROUP'),(636,'NONE'),(54,'NOT'),(647,'NO_WRITE_TO_BINLOG'),(55,'NULL'),(611,'NUMBER'),(27,'NUMERIC'),(228,'NUMGEOMETRIES'),(220,'NUMINTERIORRINGS'),(208,'NUMPOINTS'),(41,'NVARCHAR'),(490,'OFFSET'),(336,'ON'),(513,'ONLY'),(458,'OPEN'),(378,'OPTIMIZE'),(689,'OPTIMIZER_COSTS'),(637,'OPTION'),(476,'OPTIONALLY'),(345,'OPTIONS'),(58,'OR'),(313,'ORDER'),(506,'OUTER'),(491,'OUTFILE'),(263,'OVERLAPS'),(410,'OWNER'),(379,'PACK_KEYS'),(380,'PARSER'),(433,'PARTIAL'),(381,'PARTITION'),(382,'PARTITIONING'),(698,'PARTITIONS'),(383,'PASSWORD'),(287,'PATH)'),(657,'PLUGIN'),(681,'PLUGINS'),(577,'PLUGIN_DIR'),(179,'POINT'),(126,'POINTFROMTEXT'),(156,'POINTFROMWKB'),(209,'POINTN'),(127,'POLYFROMTEXT'),(157,'POLYFROMWKB'),(180,'POLYGON'),(128,'POLYGONFROMTEXT'),(158,'POLYGONFROMWKB'),(411,'PORT'),(79,'POW'),(80,'POWER'),(31,'PRECISION'),(533,'PREPARE'),(337,'PRESERVE'),(459,'PREV'),(384,'PRIMARY'),(638,'PRIVILEGES'),(7,'PROCEDURE'),(639,'PROCESS'),(670,'PROCESSLIST'),(682,'PROFILE'),(683,'PROFILES'),(645,'PROXY'),(539,'PURGE'),(10,'QUERY'),(451,'QUICK'),(110,'RANDOM_BYTES'),(460,'READ'),(32,'REAL'),(385,'REBUILD'),(534,'RECOVER'),(434,'REDUNDANT'),(435,'REFERENCES'),(690,'RELAY'),(684,'RELAYLOG'),(563,'RELAY_LOG_FILE'),(564,'RELAY_LOG_POS'),(514,'RELEASE'),(640,'RELOAD'),(386,'REMOVE'),(338,'RENAME'),(387,'REORGANIZE'),(388,'REPAIR'),(590,'REPEAT'),(529,'REPEATABLE'),(477,'REPLACE'),(566,'REPLICATE_DO_DB'),(567,'REPLICATE_DO_TABLE'),(568,'REPLICATE_IGNORE_DB'),(569,'REPLICATE_IGNORE_TABLE'),(570,'REPLICATE_REWRITE_DB'),(571,'REPLICATE_WILD_DO_TABLE'),(572,'REPLICATE_WILD_IGNORE_TABLE'),(573,'REPLICATION'),(629,'REQUIRE'),(11,'RESET'),(617,'RESIGNAL'),(438,'RESTRICT'),(592,'RETURN'),(612,'RETURNED_SQLSTATE'),(653,'RETURNS'),(646,'REVOKE'),(507,'RIGHT'),(73,'RLIKE'),(515,'ROLLBACK'),(481,'ROWS'),(613,'ROW_COUNT'),(389,'ROW_FORMAT'),(521,'SAVEPOINT'),(339,'SCHEDULE'),(325,'SCHEMA'),(671,'SCHEMAS'),(614,'SCHEMA_NAME'),(94,'SECOND'),(641,'SECURITY'),(466,'SELECT'),(314,'SEPARATOR'),(3,'SERIAL'),(530,'SERIALIZABLE'),(346,'SERVER'),(531,'SESSION'),(326,'SET'),(111,'SHA'),(112,'SHA1'),(113,'SHA2'),(492,'SHARE'),(672,'SHOW'),(642,'SHUTDOWN'),(619,'SIGNAL'),(107,'SIGNED'),(340,'SLAVE'),(691,'SLOW'),(516,'SNAPSHOT'),(412,'SOCKET'),(654,'SONAME'),(67,'SOUNDS'),(390,'SPATIAL'),(618,'SQLSTATE'),(578,'SQL_AFTER_GTIDS'),(579,'SQL_AFTER_MTS_GAPS'),(580,'SQL_BEFORE_GTIDS'),(493,'SQL_BIG_RESULT'),(494,'SQL_BUFFER_RESULT'),(495,'SQL_CACHE'),(496,'SQL_CALC_FOUND_ROWS'),(540,'SQL_LOG_BIN'),(497,'SQL_NO_CACHE'),(574,'SQL_SLAVE_SKIP_COUNTER'),(498,'SQL_SMALL_RESULT'),(581,'SQL_THREAD'),(194,'SRID'),(630,'SSL'),(517,'START'),(478,'STARTING'),(215,'STARTPOINT'),(407,'STARTS'),(391,'STATS_AUTO_RECALC'),(392,'STATS_PERSISTENT'),(393,'STATS_SAMPLE_PAGES'),(673,'STATUS'),(317,'STD'),(318,'STDDEV'),(582,'STOP'),(679,'STORAGE'),(436,'STORED'),(499,'STRAIGHT_JOIN'),(655,'STRING'),(221,'ST_AREA'),(185,'ST_ASBINARY'),(269,'ST_ASGEOJSON'),(187,'ST_ASTEXT'),(186,'ST_ASWKB'),(188,'ST_ASWKT'),(233,'ST_BUFFER'),(234,'ST_BUFFER_STRATEGY'),(222,'ST_CENTROID'),(242,'ST_CONTAINS'),(235,'ST_CONVEXHULL'),(243,'ST_CROSSES'),(236,'ST_DIFFERENCE'),(195,'ST_DIMENSION'),(244,'ST_DISJOINT'),(245,'ST_DISTANCE'),(271,'ST_DISTANCE_SPHERE'),(210,'ST_ENDPOINT'),(196,'ST_ENVELOPE'),(246,'ST_EQUALS'),(223,'ST_EXTERIORRING'),(265,'ST_GEOHASH'),(129,'ST_GEOMCOLLFROMTEXT'),(159,'ST_GEOMCOLLFROMWKB'),(130,'ST_GEOMETRYCOLLECTIONFROMTEXT'),(160,'ST_GEOMETRYCOLLECTIONFROMWKB'),(131,'ST_GEOMETRYFROMTEXT'),(161,'ST_GEOMETRYFROMWKB'),(229,'ST_GEOMETRYN'),(197,'ST_GEOMETRYTYPE'),(270,'ST_GEOMFROMGEOJSON'),(132,'ST_GEOMFROMTEXT'),(162,'ST_GEOMFROMWKB'),(224,'ST_INTERIORRINGN'),(237,'ST_INTERSECTION'),(247,'ST_INTERSECTS'),(211,'ST_ISCLOSED'),(198,'ST_ISEMPTY'),(199,'ST_ISSIMPLE'),(272,'ST_ISVALID'),(266,'ST_LATFROMGEOHASH'),(133,'ST_LINEFROMTEXT'),(163,'ST_LINEFROMWKB'),(134,'ST_LINESTRINGFROMTEXT'),(164,'ST_LINESTRINGFROMWKB'),(267,'ST_LONGFROMGEOHASH'),(273,'ST_MAKEENVELOPE'),(135,'ST_MLINEFROMTEXT'),(165,'ST_MLINEFROMWKB'),(137,'ST_MPOINTFROMTEXT'),(167,'ST_MPOINTFROMWKB'),(139,'ST_MPOLYFROMTEXT'),(169,'ST_MPOLYFROMWKB'),(136,'ST_MULTILINESTRINGFROMTEXT'),(166,'ST_MULTILINESTRINGFROMWKB'),(138,'ST_MULTIPOINTFROMTEXT'),(168,'ST_MULTIPOINTFROMWKB'),(140,'ST_MULTIPOLYGONFROMTEXT'),(170,'ST_MULTIPOLYGONFROMWKB'),(230,'ST_NUMGEOMETRIES'),(225,'ST_NUMINTERIORRING'),(226,'ST_NUMINTERIORRINGS'),(212,'ST_NUMPOINTS'),(248,'ST_OVERLAPS'),(268,'ST_POINTFROMGEOHASH'),(141,'ST_POINTFROMTEXT'),(171,'ST_POINTFROMWKB'),(213,'ST_POINTN'),(142,'ST_POLYFROMTEXT'),(172,'ST_POLYFROMWKB'),(143,'ST_POLYGONFROMTEXT'),(173,'ST_POLYGONFROMWKB'),(274,'ST_SIMPLIFY'),(200,'ST_SRID'),(214,'ST_STARTPOINT'),(238,'ST_SYMDIFFERENCE'),(249,'ST_TOUCHES'),(239,'ST_UNION'),(275,'ST_VALIDATE'),(250,'ST_WITHIN'),(201,'ST_X'),(202,'ST_Y'),(615,'SUBCLASS_ORIGIN'),(631,'SUBJECT'),(643,'SUPER'),(51,'TABLE'),(523,'TABLES'),(394,'TABLESPACE'),(616,'TABLE_NAME'),(447,'TEMPORARY'),(479,'TERMINATED'),(62,'THEN'),(35,'TIME'),(34,'TIMESTAMP'),(522,'TO'),(251,'TOUCHES'),(699,'TRADITIONAL'),(71,'TRAILING'),(518,'TRANSACTION'),(446,'TRIGGER'),(674,'TRIGGERS'),(13,'TRUE'),(395,'TRUNCATE'),(396,'TYPE'),(532,'UNCOMMITTED'),(599,'UNDO'),(658,'UNINSTALL'),(397,'UNION'),(398,'UNIQUE'),(524,'UNLOCK'),(17,'UNSIGNED'),(591,'UNTIL'),(439,'UPDATE'),(327,'UPGRADE'),(644,'USAGE'),(445,'USE'),(413,'USER'),(692,'USER_RESOURCES'),(651,'USE_FRM'),(452,'USING'),(4,'VALUE'),(467,'VALUES'),(42,'VARCHARACTER'),(659,'VARIABLE'),(675,'VARIABLES'),(43,'VARYING'),(402,'VIEW'),(437,'VIRTUAL'),(401,'WAIT'),(676,'WARNINGS'),(63,'WHEN'),(453,'WHERE'),(593,'WHILE'),(102,'WITH'),(264,'WITHIN'),(519,'WORK'),(414,'WRAPPER'),(520,'WRITE'),(203,'X'),(632,'X509'),(535,'XA'),(204,'Y'),(95,'YEAR'),(96,'YEAR_MONTH'),(18,'ZEROFILL');
/*!40000 ALTER TABLE `help_keyword` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_relation`
--

DROP TABLE IF EXISTS `help_relation`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_relation` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `help_keyword_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`help_keyword_id`,`help_topic_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='keyword-topic relation';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_relation`
--

LOCK TABLES `help_relation` WRITE;
/*!40000 ALTER TABLE `help_relation` DISABLE KEYS */;
INSERT INTO `help_relation` VALUES (0,0),(1,1),(2,2),(487,2),(488,2),(495,2),(498,2),(499,2),(506,2),(507,2),(528,2),(533,2),(565,2),(583,2),(584,2),(2,3),(506,3),(2,4),(528,4),(533,4),(581,4),(582,4),(3,5),(658,5),(4,6),(4,7),(493,7),(503,7),(504,7),(515,7),(516,7),(534,7),(603,7),(615,7),(634,7),(635,7),(5,8),(649,8),(650,8),(652,8),(653,8),(5,9),(650,9),(5,10),(229,10),(650,10),(651,10),(653,10),(5,11),(551,11),(555,11),(653,11),(6,12),(7,12),(6,13),(7,13),(9,14),(10,14),(9,15),(229,15),(9,16),(9,17),(13,17),(15,17),(16,17),(18,17),(19,17),(232,17),(9,18),(13,18),(15,18),(16,18),(18,18),(19,18),(11,19),(12,20),(12,21),(13,22),(13,23),(232,23),(595,23),(15,24),(16,25),(16,26),(506,26),(16,27),(17,28),(232,28),(595,28),(18,29),(19,30),(19,31),(19,32),(595,32),(21,33),(177,33),(179,33),(232,33),(23,34),(213,34),(24,35),(211,35),(232,35),(26,36),(28,36),(487,36),(488,36),(495,36),(498,36),(499,36),(506,36),(531,36),(532,36),(534,36),(600,36),(601,36),(603,36),(607,36),(26,37),(28,37),(26,38),(27,39),(27,40),(232,40),(28,41),(28,42),(28,43),(37,44),(37,45),(46,46),(495,46),(496,46),(508,46),(46,47),(487,47),(488,47),(489,47),(490,47),(491,47),(492,47),(493,47),(494,47),(495,47),(496,47),(497,47),(583,47),(586,47),(46,48),(498,48),(499,48),(500,48),(501,48),(502,48),(503,48),(504,48),(505,48),(506,48),(508,48),(509,48),(510,48),(584,48),(595,48),(603,48),(611,48),(612,48),(613,48),(614,48),(615,48),(616,48),(618,48),(46,49),(495,49),(501,49),(506,49),(514,49),(536,49),(603,49),(629,49),(649,49),(652,49),(46,50),(495,50),(506,50),(507,50),(528,50),(46,51),(495,51),(506,51),(518,51),(522,51),(523,51),(590,51),(591,51),(592,51),(593,51),(594,51),(603,51),(616,51),(643,51),(49,52),(54,53),(55,53),(56,53),(57,53),(55,54),(57,54),(67,54),(498,54),(499,54),(500,54),(584,54),(56,55),(57,55),(507,55),(58,56),(68,56),(58,57),(69,58),(73,59),(566,59),(73,60),(566,60),(73,61),(548,61),(563,61),(566,61),(567,61),(570,61),(571,61),(573,61),(73,62),(566,62),(567,62),(73,63),(566,63),(74,64),(498,64),(499,64),(500,64),(511,64),(512,64),(513,64),(517,64),(518,64),(521,64),(567,64),(583,64),(584,64),(585,64),(92,65),(528,65),(529,65),(530,65),(116,66),(603,66),(609,66),(610,66),(116,67),(122,68),(122,69),(525,69),(534,69),(603,69),(606,69),(609,69),(610,69),(629,69),(639,69),(122,70),(122,71),(127,72),(131,73),(137,74),(137,75),(138,76),(157,76),(144,77),(145,78),(159,79),(160,80),(179,81),(179,82),(179,83),(179,84),(179,85),(179,86),(179,87),(179,88),(179,89),(179,90),(500,90),(583,90),(584,90),(179,91),(179,92),(179,93),(179,94),(179,95),(179,96),(229,97),(229,98),(229,99),(534,99),(606,99),(609,99),(610,99),(629,99),(639,99),(229,100),(229,101),(534,101),(229,102),(495,102),(501,102),(506,102),(583,102),(584,102),(586,102),(650,102),(231,103),(232,103),(232,104),(549,104),(550,104),(604,104),(605,104),(650,104),(232,105),(232,106),(655,106),(656,106),(657,106),(232,107),(242,108),(243,109),(253,110),(254,111),(254,112),(255,113),(279,114),(279,115),(280,116),(280,117),(281,118),(281,119),(282,120),(282,121),(283,122),(283,123),(284,124),(284,125),(285,126),(286,127),(286,128),(287,129),(287,130),(288,131),(288,132),(289,133),(289,134),(290,135),(290,136),(291,137),(291,138),(292,139),(292,140),(293,141),(294,142),(294,143),(295,144),(295,145),(296,146),(296,147),(297,148),(297,149),(298,150),(298,151),(299,152),(299,153),(300,154),(300,155),(301,156),(302,157),(302,158),(303,159),(303,160),(304,161),(304,162),(305,163),(305,164),(306,165),(306,166),(307,167),(307,168),(308,169),(308,170),(309,171),(310,172),(310,173),(311,174),(312,175),(313,176),(314,177),(315,178),(316,179),(317,180),(318,181),(318,182),(319,183),(319,184),(320,185),(320,186),(321,187),(321,188),(322,189),(323,190),(324,191),(325,192),(326,193),(327,194),(328,195),(329,196),(330,197),(331,198),(332,199),(333,200),(334,201),(335,202),(336,203),(337,204),(338,205),(339,206),(340,207),(341,208),(342,209),(343,210),(344,211),(346,212),(347,213),(348,214),(349,215),(350,216),(351,217),(352,218),(353,219),(354,220),(355,221),(356,222),(357,223),(358,224),(359,225),(359,226),(360,227),(361,228),(362,229),(363,230),(364,231),(365,232),(366,233),(367,234),(368,235),(369,236),(370,237),(371,238),(372,239),(373,240),(374,241),(375,242),(376,243),(377,244),(378,245),(379,246),(380,247),(381,248),(382,249),(383,250),(384,251),(385,252),(388,253),(389,254),(391,255),(392,256),(393,257),(394,258),(395,259),(396,260),(397,261),(398,262),(399,263),(400,264),(401,265),(402,266),(403,267),(404,268),(405,269),(406,270),(407,271),(408,272),(409,273),(410,274),(411,275),(412,276),(413,277),(414,278),(415,279),(416,280),(417,281),(418,282),(419,282),(418,283),(418,284),(419,285),(419,286),(419,287),(420,288),(421,289),(422,290),(423,291),(424,292),(425,293),(426,294),(427,295),(428,296),(429,297),(430,298),(431,299),(432,300),(433,301),(434,302),(435,303),(436,304),(437,305),(438,306),(450,307),(452,308),(457,308),(458,308),(461,308),(462,308),(467,308),(534,308),(537,308),(457,309),(624,309),(647,309),(458,310),(534,310),(458,311),(495,311),(506,311),(525,311),(531,311),(532,311),(534,311),(538,311),(583,311),(584,311),(586,311),(458,312),(534,312),(655,312),(656,312),(657,312),(458,313),(495,313),(525,313),(534,313),(538,313),(458,314),(459,315),(460,316),(463,317),(464,318),(471,319),(487,320),(488,320),(495,320),(498,320),(499,320),(506,320),(487,321),(488,321),(495,321),(505,321),(506,321),(531,321),(487,322),(488,322),(498,322),(499,322),(505,322),(511,322),(512,322),(603,322),(611,322),(612,322),(487,323),(488,323),(495,323),(506,323),(487,324),(488,324),(487,325),(488,325),(498,325),(499,325),(511,325),(512,325),(603,325),(611,325),(612,325),(487,326),(488,326),(495,326),(498,326),(499,326),(506,326),(507,326),(528,326),(531,326),(532,326),(533,326),(534,326),(538,326),(539,326),(540,326),(541,326),(542,326),(552,326),(556,326),(581,326),(582,326),(589,326),(599,326),(600,326),(601,326),(602,326),(603,326),(607,326),(487,327),(488,327),(495,327),(591,327),(489,328),(495,328),(500,328),(501,328),(506,328),(508,328),(489,329),(500,329),(489,330),(500,330),(489,331),(500,331),(489,332),(495,332),(500,332),(489,333),(500,333),(526,333),(573,333),(489,334),(495,334),(500,334),(489,335),(500,335),(513,335),(613,335),(489,336),(500,336),(507,336),(536,336),(489,337),(500,337),(489,338),(495,338),(522,338),(587,338),(489,339),(500,339),(489,340),(500,340),(555,340),(557,340),(558,340),(640,340),(641,340),(653,340),(490,341),(503,341),(504,341),(515,341),(516,341),(595,341),(596,341),(603,341),(614,341),(626,341),(627,341),(491,342),(492,343),(502,343),(508,343),(534,343),(492,344),(502,344),(508,344),(494,345),(505,345),(494,346),(505,346),(517,346),(495,347),(495,348),(495,349),(590,349),(495,350),(495,351),(506,351),(495,352),(553,352),(554,352),(495,353),(506,353),(591,353),(495,354),(506,354),(592,354),(495,355),(495,356),(495,357),(506,357),(531,357),(603,357),(609,357),(610,357),(495,358),(495,359),(506,359),(651,359),(655,359),(656,359),(657,359),(495,360),(506,360),(495,361),(506,361),(495,362),(495,363),(496,363),(511,363),(512,363),(513,363),(514,363),(515,363),(516,363),(517,363),(518,363),(519,363),(520,363),(521,363),(561,363),(562,363),(585,363),(596,363),(495,364),(495,365),(496,365),(506,365),(508,365),(519,365),(603,365),(622,365),(650,365),(495,366),(495,367),(506,367),(527,367),(495,368),(505,368),(506,368),(507,368),(495,369),(501,369),(506,369),(495,370),(531,370),(495,371),(506,371),(495,372),(603,372),(629,372),(495,373),(506,373),(495,374),(534,374),(546,374),(583,374),(584,374),(650,374),(495,375),(506,375),(495,376),(506,376),(495,377),(495,378),(593,378),(495,379),(506,379),(495,380),(501,380),(506,380),(495,381),(506,381),(525,381),(528,381),(531,381),(533,381),(534,381),(536,381),(649,381),(652,381),(495,382),(495,383),(505,383),(557,383),(583,383),(584,383),(586,383),(589,383),(495,384),(495,385),(495,386),(495,387),(495,388),(594,388),(495,389),(506,389),(495,390),(501,390),(495,391),(506,391),(495,392),(506,392),(495,393),(506,393),(495,394),(496,394),(508,394),(519,394),(495,395),(523,395),(495,396),(495,397),(537,397),(495,398),(496,399),(508,399),(496,400),(508,400),(496,401),(508,401),(497,402),(510,402),(521,402),(498,403),(499,403),(500,403),(511,403),(512,403),(513,403),(517,403),(518,403),(521,403),(583,403),(584,403),(585,403),(500,404),(500,405),(500,406),(500,407),(501,408),(505,409),(505,410),(505,411),(505,412),(505,413),(557,413),(583,413),(584,413),(585,413),(587,413),(618,413),(505,414),(506,415),(507,415),(506,416),(506,417),(507,417),(518,417),(521,417),(506,418),(506,419),(506,420),(531,420),(506,421),(507,421),(525,421),(506,422),(506,423),(506,424),(603,424),(609,424),(610,424),(636,424),(644,424),(506,425),(506,426),(603,426),(506,427),(506,428),(506,429),(506,430),(506,431),(506,432),(507,432),(506,433),(506,434),(506,435),(507,435),(586,435),(506,436),(506,437),(507,438),(518,438),(521,438),(507,439),(528,439),(534,439),(538,439),(508,440),(508,441),(508,442),(508,443),(508,444),(508,445),(536,445),(659,445),(509,446),(520,446),(603,446),(518,447),(524,448),(525,449),(527,449),(534,449),(538,449),(606,449),(639,449),(525,450),(528,450),(531,450),(532,450),(533,450),(538,450),(546,450),(525,451),(591,451),(594,451),(525,452),(536,452),(560,452),(525,453),(527,453),(538,453),(609,453),(610,453),(629,453),(527,454),(574,454),(527,455),(579,455),(527,456),(527,457),(527,458),(577,458),(603,458),(631,458),(527,459),(527,460),(539,460),(540,460),(541,460),(542,460),(546,460),(547,460),(548,460),(650,460),(528,461),(530,461),(533,461),(528,462),(528,463),(534,463),(528,464),(531,464),(532,464),(534,464),(536,464),(538,464),(652,464),(528,465),(533,465),(534,465),(652,465),(528,466),(529,466),(533,466),(534,466),(655,466),(656,466),(657,466),(528,467),(533,467),(531,468),(532,468),(531,469),(531,470),(531,471),(603,471),(609,471),(610,471),(531,472),(532,472),(531,473),(532,473),(531,474),(652,474),(531,475),(532,475),(546,475),(590,475),(593,475),(594,475),(650,475),(531,476),(531,477),(532,477),(533,477),(531,478),(531,479),(532,480),(583,480),(584,480),(586,480),(532,481),(534,482),(537,482),(555,482),(586,482),(588,482),(649,482),(652,482),(534,483),(536,483),(546,483),(583,483),(584,483),(534,484),(534,485),(534,486),(553,486),(555,486),(557,486),(558,486),(575,486),(578,486),(579,486),(589,486),(603,486),(639,486),(641,486),(650,486),(655,486),(656,486),(657,486),(534,487),(534,488),(536,488),(534,489),(534,490),(534,491),(534,492),(534,493),(534,494),(534,495),(534,496),(534,497),(534,498),(534,499),(536,499),(535,500),(536,501),(536,502),(536,503),(536,504),(536,505),(536,506),(536,507),(539,508),(540,508),(541,508),(542,508),(539,509),(540,509),(541,509),(542,509),(548,509),(563,509),(539,510),(540,510),(541,510),(542,510),(539,511),(540,511),(541,511),(542,511),(548,511),(539,512),(540,512),(541,512),(542,512),(548,512),(539,513),(540,513),(541,513),(542,513),(547,513),(548,513),(539,514),(540,514),(541,514),(542,514),(543,514),(544,514),(545,514),(548,514),(539,515),(540,515),(541,515),(542,515),(543,515),(544,515),(545,515),(548,515),(539,516),(540,516),(541,516),(542,516),(548,516),(539,517),(540,517),(541,517),(542,517),(548,517),(557,517),(539,518),(540,518),(541,518),(542,518),(547,518),(539,519),(540,519),(541,519),(542,519),(539,520),(540,520),(541,520),(542,520),(546,520),(547,520),(548,520),(543,521),(544,521),(545,521),(543,522),(544,522),(545,522),(549,522),(550,522),(553,522),(546,523),(603,523),(631,523),(644,523),(650,523),(546,524),(583,524),(584,524),(547,525),(547,526),(556,526),(599,526),(642,526),(646,526),(547,527),(547,528),(547,529),(547,530),(547,531),(599,531),(642,531),(646,531),(547,532),(548,533),(559,533),(561,533),(562,533),(548,534),(548,535),(549,536),(550,536),(549,537),(550,537),(603,537),(604,537),(605,537),(650,537),(549,538),(550,538),(551,538),(553,538),(604,538),(605,538),(630,538),(653,538),(549,539),(550,539),(552,540),(553,541),(555,541),(557,541),(558,541),(639,541),(641,541),(650,541),(553,542),(553,543),(553,544),(553,545),(553,546),(553,547),(553,548),(553,549),(553,550),(553,551),(553,552),(553,553),(553,554),(553,555),(553,556),(553,557),(553,558),(553,559),(553,560),(553,561),(553,562),(553,563),(553,564),(554,565),(554,566),(554,567),(554,568),(554,569),(554,570),(554,571),(554,572),(554,573),(586,573),(556,574),(557,575),(557,576),(558,576),(557,577),(557,578),(557,579),(557,580),(557,581),(558,581),(558,582),(560,583),(586,583),(561,584),(562,584),(565,585),(575,585),(578,585),(579,585),(567,586),(568,587),(569,588),(570,589),(571,590),(571,591),(572,592),(573,593),(575,594),(576,595),(578,596),(579,597),(579,598),(579,599),(580,600),(581,600),(582,600),(580,601),(581,601),(582,601),(580,602),(581,602),(582,602),(580,603),(581,603),(582,603),(580,604),(581,604),(582,604),(580,605),(581,605),(582,605),(580,606),(581,606),(582,606),(580,607),(580,608),(580,609),(581,609),(582,609),(580,610),(581,610),(582,610),(580,611),(580,612),(580,613),(580,614),(581,614),(582,614),(580,615),(581,615),(582,615),(580,616),(581,616),(582,616),(581,617),(581,618),(582,618),(582,619),(583,620),(584,620),(583,621),(584,621),(586,621),(583,622),(584,622),(583,623),(584,623),(586,623),(583,624),(584,624),(586,624),(583,625),(584,625),(586,625),(583,626),(584,626),(586,626),(583,627),(584,627),(586,627),(583,628),(584,628),(583,629),(584,629),(586,629),(583,630),(584,630),(586,630),(583,631),(584,631),(586,631),(583,632),(584,632),(586,632),(586,633),(586,634),(586,635),(588,635),(586,636),(586,637),(588,637),(586,638),(588,638),(633,638),(650,638),(586,639),(586,640),(586,641),(586,642),(654,642),(586,643),(586,644),(588,645),(588,646),(590,647),(593,647),(594,647),(650,647),(591,648),(591,649),(594,650),(655,650),(656,650),(657,650),(594,651),(595,652),(595,653),(595,654),(595,655),(597,656),(597,657),(598,657),(603,657),(598,658),(599,659),(600,660),(601,660),(602,661),(603,662),(608,662),(603,663),(620,663),(621,663),(603,664),(623,664),(603,665),(624,665),(603,666),(628,666),(603,667),(640,667),(650,667),(603,668),(603,669),(622,669),(603,670),(636,670),(603,671),(620,671),(621,671),(603,672),(604,672),(605,672),(606,672),(607,672),(608,672),(609,672),(610,672),(611,672),(612,672),(613,672),(614,672),(615,672),(616,672),(618,672),(620,672),(621,672),(622,672),(623,672),(624,672),(625,672),(626,672),(627,672),(628,672),(629,672),(630,672),(631,672),(632,672),(633,672),(634,672),(635,672),(636,672),(637,672),(638,672),(639,672),(640,672),(641,672),(642,672),(643,672),(644,672),(645,672),(646,672),(647,672),(603,673),(622,673),(627,673),(630,673),(635,673),(641,673),(642,673),(643,673),(650,673),(603,674),(645,674),(603,675),(646,675),(603,676),(647,676),(606,677),(648,677),(606,678),(625,678),(639,678),(623,679),(626,680),(634,680),(632,681),(637,682),(638,683),(639,684),(650,685),(650,686),(650,687),(650,688),(650,689),(650,690),(650,691),(650,692),(651,693),(652,694),(655,695),(656,695),(657,695),(655,696),(656,696),(657,696),(655,697),(656,697),(657,697),(655,698),(656,698),(657,698),(655,699),(656,699),(657,699);
/*!40000 ALTER TABLE `help_relation` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `help_topic`
--

DROP TABLE IF EXISTS `help_topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `help_topic` (
  `help_topic_id` int(10) unsigned NOT NULL,
  `name` char(64) NOT NULL,
  `help_category_id` smallint(5) unsigned NOT NULL,
  `description` text NOT NULL,
  `example` text NOT NULL,
  `url` text NOT NULL,
  PRIMARY KEY (`help_topic_id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='help topics';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `help_topic`
--

LOCK TABLES `help_topic` WRITE;
/*!40000 ALTER TABLE `help_topic` DISABLE KEYS */;
INSERT INTO `help_topic` VALUES (0,'HELP_DATE',1,'This help information was generated from the MySQL 5.7 Reference Manual\non: 2019-06-08\n','',''),(1,'HELP_VERSION',1,'This help information was generated from the MySQL 5.7 Reference Manual\non: 2019-06-08 (revision: 62323)\n\nThis information applies to MySQL 5.7 through 5.7.28.\n','',''),(2,'AUTO_INCREMENT',2,'The AUTO_INCREMENT attribute can be used to generate a unique identity\nfor new rows:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/example-auto-increment.html\n\n','CREATE TABLE animals (\n     id MEDIUMINT NOT NULL AUTO_INCREMENT,\n     name CHAR(30) NOT NULL,\n     PRIMARY KEY (id)\n);\n\nINSERT INTO animals (name) VALUES\n    (\'dog\'),(\'cat\'),(\'penguin\'),\n    (\'lax\'),(\'whale\'),(\'ostrich\');\n\nSELECT * FROM animals;\n','https://dev.mysql.com/doc/refman/5.7/en/example-auto-increment.html'),(3,'HELP COMMAND',3,'Syntax:\nmysql> help search_string\n\nIf you provide an argument to the help command, mysql uses it as a\nsearch string to access server-side help from the contents of the MySQL\nReference Manual. The proper operation of this command requires that\nthe help tables in the mysql database be initialized with help topic\ninformation (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-side-help-support.html).\n\nIf there is no match for the search string, the search fails:\n\nmysql> help me\n\nNothing found\nPlease try to run \'help contents\' for a list of all accessible topics\n\nUse help contents to see a list of the help categories:\n\nmysql> help contents\nYou asked for help about help category: \"Contents\"\nFor more information, type \'help <item>\', where <item> is one of the\nfollowing categories:\n   Account Management\n   Administration\n   Data Definition\n   Data Manipulation\n   Data Types\n   Functions\n   Functions and Modifiers for Use with GROUP BY\n   Geographic Features\n   Language Structure\n   Plugins\n   Storage Engines\n   Stored Routines\n   Table Maintenance\n   Transactions\n   Triggers\n\nIf the search string matches multiple items, mysql shows a list of\nmatching topics:\n\nmysql> help logs\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following topics:\n   SHOW\n   SHOW BINARY LOGS\n   SHOW ENGINE\n   SHOW LOGS\n\nUse a topic as the search string to see the help entry for that topic:\n\nmysql> help show binary logs\nName: \'SHOW BINARY LOGS\'\nDescription:\nSyntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [purge-binary-logs], that shows how\nto determine which logs can be purged.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nThe search string can contain the wildcard characters % and _. These\nhave the same meaning as for pattern-matching operations performed with\nthe LIKE operator. For example, HELP rep% returns a list of topics that\nbegin with rep:\n\nmysql> HELP rep%\nMany help items for your request exist.\nTo make a more specific request, please type \'help <item>\',\nwhere <item> is one of the following\ntopics:\n   REPAIR TABLE\n   REPEAT FUNCTION\n   REPEAT LOOP\n   REPLACE\n   REPLACE FUNCTION\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mysql-server-side-help.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/mysql-server-side-help.html'),(4,'PROCEDURE ANALYSE',4,'Syntax:\nANALYSE([max_elements[,max_memory]])\n\n*Note*:\n\nPROCEDURE ANALYSE() is deprecated as of MySQL 5.7.18, and is removed in\nMySQL 8.0.\n\nANALYSE() examines the result from a query and returns an analysis of\nthe results that suggests optimal data types for each column that may\nhelp reduce table sizes. To obtain this analysis, append PROCEDURE\nANALYSE to the end of a SELECT statement:\n\nSELECT ... FROM ... WHERE ... PROCEDURE ANALYSE([max_elements,[max_memory]])\n\nFor example:\n\nSELECT col1, col2 FROM table1 PROCEDURE ANALYSE(10, 2000);\n\nThe results show some statistics for the values returned by the query,\nand propose an optimal data type for the columns. This can be helpful\nfor checking your existing tables, or after importing new data. You may\nneed to try different settings for the arguments so that PROCEDURE\nANALYSE() does not suggest the ENUM data type when it is not\nappropriate.\n\nThe arguments are optional and are used as follows:\n\no max_elements (default 256) is the maximum number of distinct values\n  that ANALYSE() notices per column. This is used by ANALYSE() to check\n  whether the optimal data type should be of type ENUM; if there are\n  more than max_elements distinct values, then ENUM is not a suggested\n  type.\n\no max_memory (default 8192) is the maximum amount of memory that\n  ANALYSE() should allocate per column while trying to find all\n  distinct values.\n\nA PROCEDURE clause is not permitted in a UNION statement.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html'),(5,'FLUSH QUERY CACHE',3,'You can defragment the query cache to better utilize its memory with\nthe FLUSH QUERY CACHE statement. The statement does not remove any\nqueries from the cache.\n\nThe RESET QUERY CACHE statement removes all query results from the\nquery cache. The FLUSH TABLES statement also does this.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/query-cache-status-and-maintenance.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/query-cache-status-and-maintenance.html'),(6,'TRUE',5,'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html'),(7,'FALSE',5,'The constants TRUE and FALSE evaluate to 1 and 0, respectively. The\nconstant names can be written in any lettercase.\n\nmysql> SELECT TRUE, true, FALSE, false;\n        -> 1, 1, 0, 0\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/boolean-literals.html'),(8,'BIT',2,'BIT[(M)]\n\nA bit-value type. M indicates the number of bits per value, from 1 to\n64. The default is 1 if M is omitted.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(9,'TINYINT',2,'TINYINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA very small integer. The signed range is -128 to 127. The unsigned\nrange is 0 to 255.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(10,'BOOLEAN',2,'BOOL, BOOLEAN\n\nThese types are synonyms for TINYINT(1). A value of zero is considered\nfalse. Nonzero values are considered true:\n\nmysql> SELECT IF(0, \'true\', \'false\');\n+------------------------+\n| IF(0, \'true\', \'false\') |\n+------------------------+\n| false                  |\n+------------------------+\n\nmysql> SELECT IF(1, \'true\', \'false\');\n+------------------------+\n| IF(1, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nmysql> SELECT IF(2, \'true\', \'false\');\n+------------------------+\n| IF(2, \'true\', \'false\') |\n+------------------------+\n| true                   |\n+------------------------+\n\nHowever, the values TRUE and FALSE are merely aliases for 1 and 0,\nrespectively, as shown here:\n\nmysql> SELECT IF(0 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(0 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| true                           |\n+--------------------------------+\n\nmysql> SELECT IF(1 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(1 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT IF(2 = TRUE, \'true\', \'false\');\n+-------------------------------+\n| IF(2 = TRUE, \'true\', \'false\') |\n+-------------------------------+\n| false                         |\n+-------------------------------+\n\nmysql> SELECT IF(2 = FALSE, \'true\', \'false\');\n+--------------------------------+\n| IF(2 = FALSE, \'true\', \'false\') |\n+--------------------------------+\n| false                          |\n+--------------------------------+\n\nThe last two statements display the results shown because 2 is equal to\nneither 1 nor 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(11,'SMALLINT',2,'SMALLINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA small integer. The signed range is -32768 to 32767. The unsigned\nrange is 0 to 65535.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(12,'MEDIUMINT',2,'MEDIUMINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA medium-sized integer. The signed range is -8388608 to 8388607. The\nunsigned range is 0 to 16777215.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(13,'INT',2,'INT[(M)] [UNSIGNED] [ZEROFILL]\n\nA normal-size integer. The signed range is -2147483648 to 2147483647.\nThe unsigned range is 0 to 4294967295.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(14,'INTEGER',2,'INTEGER[(M)] [UNSIGNED] [ZEROFILL]\n\nThis type is a synonym for INT.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(15,'BIGINT',2,'BIGINT[(M)] [UNSIGNED] [ZEROFILL]\n\nA large integer. The signed range is -9223372036854775808 to\n9223372036854775807. The unsigned range is 0 to 18446744073709551615.\n\nSERIAL is an alias for BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(16,'DECIMAL',2,'DECIMAL[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nA packed \"exact\" fixed-point number. M is the total number of digits\n(the precision) and D is the number of digits after the decimal point\n(the scale). The decimal point and (for negative numbers) the - sign\nare not counted in M. If D is 0, values have no decimal point or\nfractional part. The maximum number of digits (M) for DECIMAL is 65.\nThe maximum number of supported decimals (D) is 30. If D is omitted,\nthe default is 0. If M is omitted, the default is 10.\n\nUNSIGNED, if specified, disallows negative values.\n\nAll basic calculations (+, -, *, /) with DECIMAL columns are done with\na precision of 65 digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(17,'DEC',2,'DEC[(M[,D])] [UNSIGNED] [ZEROFILL], NUMERIC[(M[,D])] [UNSIGNED]\n[ZEROFILL], FIXED[(M[,D])] [UNSIGNED] [ZEROFILL]\n\nThese types are synonyms for DECIMAL. The FIXED synonym is available\nfor compatibility with other database systems.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(18,'FLOAT',2,'FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA small (single-precision) floating-point number. Permissible values\nare -3.402823466E+38 to -1.175494351E-38, 0, and 1.175494351E-38 to\n3.402823466E+38. These are the theoretical limits, based on the IEEE\nstandard. The actual range might be slightly smaller depending on your\nhardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits permitted by the hardware. A single-precision floating-point\nnumber is accurate to approximately 7 decimal places.\n\nFLOAT(M,D) is a nonstandard MySQL extension.\n\nUNSIGNED, if specified, disallows negative values.\n\nUsing FLOAT might give you some unexpected problems because all\ncalculations in MySQL are done with double precision. See\nhttps://dev.mysql.com/doc/refman/5.7/en/no-matching-rows.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(19,'DOUBLE',2,'DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]\n\nA normal-size (double-precision) floating-point number. Permissible\nvalues are -1.7976931348623157E+308 to -2.2250738585072014E-308, 0, and\n2.2250738585072014E-308 to 1.7976931348623157E+308. These are the\ntheoretical limits, based on the IEEE standard. The actual range might\nbe slightly smaller depending on your hardware or operating system.\n\nM is the total number of digits and D is the number of digits following\nthe decimal point. If M and D are omitted, values are stored to the\nlimits permitted by the hardware. A double-precision floating-point\nnumber is accurate to approximately 15 decimal places.\n\nDOUBLE(M,D) is a nonstandard MySQL extension.\n\nUNSIGNED, if specified, disallows negative values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(20,'DOUBLE PRECISION',2,'DOUBLE PRECISION[(M,D)] [UNSIGNED] [ZEROFILL], REAL[(M,D)] [UNSIGNED]\n[ZEROFILL]\n\nThese types are synonyms for DOUBLE. Exception: If the REAL_AS_FLOAT\nSQL mode is enabled, REAL is a synonym for FLOAT rather than DOUBLE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/numeric-type-overview.html'),(21,'DATE',2,'DATE\n\nA date. The supported range is \'1000-01-01\' to \'9999-12-31\'. MySQL\ndisplays DATE values in \'YYYY-MM-DD\' format, but permits assignment of\nvalues to DATE columns using either strings or numbers.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(22,'DATETIME',2,'DATETIME[(fsp)]\n\nA date and time combination. The supported range is \'1000-01-01\n00:00:00.000000\' to \'9999-12-31 23:59:59.999999\'. MySQL displays\nDATETIME values in \'YYYY-MM-DD hh:mm:ss[.fraction]\' format, but permits\nassignment of values to DATETIME columns using either strings or\nnumbers.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nAutomatic initialization and updating to the current date and time for\nDATETIME columns can be specified using DEFAULT and ON UPDATE column\ndefinition clauses, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/timestamp-initialization.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(23,'TIMESTAMP',2,'TIMESTAMP[(fsp)]\n\nA timestamp. The range is \'1970-01-01 00:00:01.000000\' UTC to\n\'2038-01-19 03:14:07.999999\' UTC. TIMESTAMP values are stored as the\nnumber of seconds since the epoch (\'1970-01-01 00:00:00\' UTC). A\nTIMESTAMP cannot represent the value \'1970-01-01 00:00:00\' because that\nis equivalent to 0 seconds from the epoch and the value 0 is reserved\nfor representing \'0000-00-00 00:00:00\', the \"zero\" TIMESTAMP value.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nThe way the server handles TIMESTAMP definitions depends on the value\nof the explicit_defaults_for_timestamp system variable (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html).\n\nIf explicit_defaults_for_timestamp is enabled, there is no automatic\nassignment of the DEFAULT CURRENT_TIMESTAMP or ON UPDATE\nCURRENT_TIMESTAMP attributes to any TIMESTAMP column. They must be\nincluded explicitly in the column definition. Also, any TIMESTAMP not\nexplicitly declared as NOT NULL permits NULL values.\n\nIf explicit_defaults_for_timestamp is disabled, the server handles\nTIMESTAMP as follows:\n\nUnless specified otherwise, the first TIMESTAMP column in a table is\ndefined to be automatically set to the date and time of the most recent\nmodification if not explicitly assigned a value. This makes TIMESTAMP\nuseful for recording the timestamp of an INSERT or UPDATE operation.\nYou can also set any TIMESTAMP column to the current date and time by\nassigning it a NULL value, unless it has been defined with the NULL\nattribute to permit NULL values.\n\nAutomatic initialization and updating to the current date and time can\nbe specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE\nCURRENT_TIMESTAMP column definition clauses. By default, the first\nTIMESTAMP column has these properties, as previously noted. However,\nany TIMESTAMP column in a table can be defined to have these\nproperties.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(24,'TIME',2,'TIME[(fsp)]\n\nA time. The range is \'-838:59:59.000000\' to \'838:59:59.000000\'. MySQL\ndisplays TIME values in \'hh:mm:ss[.fraction]\' format, but permits\nassignment of values to TIME columns using either strings or numbers.\n\nAn optional fsp value in the range from 0 to 6 may be given to specify\nfractional seconds precision. A value of 0 signifies that there is no\nfractional part. If omitted, the default precision is 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(25,'YEAR DATA TYPE',2,'YEAR[(4)]\n\nA year in four-digit format. MySQL displays YEAR values in YYYY format,\nbut permits assignment of values to YEAR columns using either strings\nor numbers. Values display as 1901 to 2155, and 0000.\n\n*Note*:\n\nThe YEAR(2) data type is deprecated and support for it is removed in\nMySQL 5.7.5. To convert YEAR(2) columns to YEAR(4), see\nhttps://dev.mysql.com/doc/refman/5.7/en/migrating-to-year4.html.\n\nFor additional information about YEAR display format and interpretation\nof input values, see https://dev.mysql.com/doc/refman/5.7/en/year.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-type-overview.html'),(26,'CHAR',2,'[NATIONAL] CHAR[(M)] [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA fixed-length string that is always right-padded with spaces to the\nspecified length when stored. M represents the column length in\ncharacters. The range of M is 0 to 255. If M is omitted, the length is\n1.\n\n*Note*:\n\nTrailing spaces are removed when CHAR values are retrieved unless the\nPAD_CHAR_TO_FULL_LENGTH SQL mode is enabled.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(27,'CHAR BYTE',2,'The CHAR BYTE data type is an alias for the BINARY data type. This is a\ncompatibility feature.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(28,'VARCHAR',2,'[NATIONAL] VARCHAR(M) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA variable-length string. M represents the maximum column length in\ncharacters. The range of M is 0 to 65,535. The effective maximum length\nof a VARCHAR is subject to the maximum row size (65,535 bytes, which is\nshared among all columns) and the character set used. For example, utf8\ncharacters can require up to three bytes per character, so a VARCHAR\ncolumn that uses the utf8 character set can be declared to be a maximum\nof 21,844 characters. See\nhttps://dev.mysql.com/doc/refman/5.7/en/column-count-limit.html.\n\nMySQL stores VARCHAR values as a 1-byte or 2-byte length prefix plus\ndata. The length prefix indicates the number of bytes in the value. A\nVARCHAR column uses one length byte if values require no more than 255\nbytes, two length bytes if values may require more than 255 bytes.\n\n*Note*:\n\nMySQL follows the standard SQL specification, and does not remove\ntrailing spaces from VARCHAR values.\n\nVARCHAR is shorthand for CHARACTER VARYING. NATIONAL VARCHAR is the\nstandard SQL way to define that a VARCHAR column should use some\npredefined character set. MySQL uses utf8 as this predefined character\nset. https://dev.mysql.com/doc/refman/5.7/en/charset-national.html.\nNVARCHAR is shorthand for NATIONAL VARCHAR.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(29,'BINARY',2,'BINARY[(M)]\n\nThe BINARY type is similar to the CHAR type, but stores binary byte\nstrings rather than nonbinary character strings. An optional length M\nrepresents the column length in bytes. If omitted, M defaults to 1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(30,'VARBINARY',2,'VARBINARY(M)\n\nThe VARBINARY type is similar to the VARCHAR type, but stores binary\nbyte strings rather than nonbinary character strings. M represents the\nmaximum column length in bytes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(31,'TINYBLOB',2,'TINYBLOB\n\nA BLOB column with a maximum length of 255 (28 − 1) bytes. Each\nTINYBLOB value is stored using a 1-byte length prefix that indicates\nthe number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(32,'TINYTEXT',2,'TINYTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 255 (28 − 1) characters. The\neffective maximum length is less if the value contains multibyte\ncharacters. Each TINYTEXT value is stored using a 1-byte length prefix\nthat indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(33,'BLOB',2,'BLOB[(M)]\n\nA BLOB column with a maximum length of 65,535 (216 − 1) bytes. Each\nBLOB value is stored using a 2-byte length prefix that indicates the\nnumber of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest BLOB type large enough to hold\nvalues M bytes long.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(34,'TEXT',2,'TEXT[(M)] [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 65,535 (216 − 1) characters.\nThe effective maximum length is less if the value contains multibyte\ncharacters. Each TEXT value is stored using a 2-byte length prefix that\nindicates the number of bytes in the value.\n\nAn optional length M can be given for this type. If this is done, MySQL\ncreates the column as the smallest TEXT type large enough to hold\nvalues M characters long.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(35,'MEDIUMBLOB',2,'MEDIUMBLOB\n\nA BLOB column with a maximum length of 16,777,215 (224 − 1) bytes.\nEach MEDIUMBLOB value is stored using a 3-byte length prefix that\nindicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(36,'MEDIUMTEXT',2,'MEDIUMTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 16,777,215 (224 − 1)\ncharacters. The effective maximum length is less if the value contains\nmultibyte characters. Each MEDIUMTEXT value is stored using a 3-byte\nlength prefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(37,'LONGBLOB',2,'LONGBLOB\n\nA BLOB column with a maximum length of 4,294,967,295 or 4GB (232 − 1)\nbytes. The effective maximum length of LONGBLOB columns depends on the\nconfigured maximum packet size in the client/server protocol and\navailable memory. Each LONGBLOB value is stored using a 4-byte length\nprefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(38,'LONGTEXT',2,'LONGTEXT [CHARACTER SET charset_name] [COLLATE collation_name]\n\nA TEXT column with a maximum length of 4,294,967,295 or 4GB (232 − 1)\ncharacters. The effective maximum length is less if the value contains\nmultibyte characters. The effective maximum length of LONGTEXT columns\nalso depends on the configured maximum packet size in the client/server\nprotocol and available memory. Each LONGTEXT value is stored using a\n4-byte length prefix that indicates the number of bytes in the value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(39,'ENUM',2,'ENUM(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nAn enumeration. A string object that can have only one value, chosen\nfrom the list of values \'value1\', \'value2\', ..., NULL or the special \'\'\nerror value. ENUM values are represented internally as integers.\n\nAn ENUM column can have a maximum of 65,535 distinct elements. (The\npractical limit is less than 3000.) A table can have no more than 255\nunique element list definitions among its ENUM and SET columns\nconsidered as a group. For more information on these limits, see\nhttps://dev.mysql.com/doc/refman/5.7/en/limits-frm-file.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(40,'SET DATA TYPE',2,'SET(\'value1\',\'value2\',...) [CHARACTER SET charset_name] [COLLATE\ncollation_name]\n\nA set. A string object that can have zero or more values, each of which\nmust be chosen from the list of values \'value1\', \'value2\', ... SET\nvalues are represented internally as integers.\n\nA SET column can have a maximum of 64 distinct members. A table can\nhave no more than 255 unique element list definitions among its ENUM\nand SET columns considered as a group. For more information on this\nlimit, see\nhttps://dev.mysql.com/doc/refman/5.7/en/limits-frm-file.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-type-overview.html'),(41,'BLOB DATA TYPE',2,'A BLOB is a binary large object that can hold a variable amount of\ndata. The four BLOB types are TINYBLOB, BLOB, MEDIUMBLOB, and LONGBLOB.\nThese differ only in the maximum length of the values they can hold.\nThe four TEXT types are TINYTEXT, TEXT, MEDIUMTEXT, and LONGTEXT. These\ncorrespond to the four BLOB types and have the same maximum lengths and\nstorage requirements. See\nhttps://dev.mysql.com/doc/refman/5.7/en/storage-requirements.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/blob.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/blob.html'),(42,'GEOMETRY HIERARCHY',6,'Geometry is the base class. It is an abstract class. The instantiable\nsubclasses of Geometry are restricted to zero-, one-, and\ntwo-dimensional geometric objects that exist in two-dimensional\ncoordinate space. All instantiable geometry classes are defined so that\nvalid instances of a geometry class are topologically closed (that is,\nall defined geometries include their boundary).\n\nThe base Geometry class has subclasses for Point, Curve, Surface, and\nGeometryCollection:\n\no Point represents zero-dimensional objects.\n\no Curve represents one-dimensional objects, and has subclass\n  LineString, with sub-subclasses Line and LinearRing.\n\no Surface is designed for two-dimensional objects and has subclass\n  Polygon.\n\no GeometryCollection has specialized zero-, one-, and two-dimensional\n  collection classes named MultiPoint, MultiLineString, and\n  MultiPolygon for modeling geometries corresponding to collections of\n  Points, LineStrings, and Polygons, respectively. MultiCurve and\n  MultiSurface are introduced as abstract superclasses that generalize\n  the collection interfaces to handle Curves and Surfaces.\n\nGeometry, Curve, Surface, MultiCurve, and MultiSurface are defined as\nnoninstantiable classes. They define a common set of methods for their\nsubclasses and are included for extensibility.\n\nPoint, LineString, Polygon, GeometryCollection, MultiPoint,\nMultiLineString, and MultiPolygon are instantiable classes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometry-class-hierarchy.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-geometry-class-hierarchy.html'),(43,'MBR DEFINITION',7,'Its MBR (minimum bounding rectangle), or envelope. This is the bounding\ngeometry, formed by the minimum and maximum (X,Y) coordinates:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-class-geometry.html\n\n','((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n','https://dev.mysql.com/doc/refman/5.7/en/gis-class-geometry.html'),(44,'WKT DEFINITION',8,'The Well-Known Text (WKT) representation of geometry values is designed\nfor exchanging geometry data in ASCII form. The OpenGIS specification\nprovides a Backus-Naur grammar that specifies the formal production\nrules for writing WKT values (see\nhttps://dev.mysql.com/doc/refman/5.7/en/spatial-types.html).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-data-formats.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-data-formats.html'),(45,'SPATIAL COLUMNS',6,'MySQL provides a standard way of creating spatial columns for geometry\ntypes, for example, with CREATE TABLE or ALTER TABLE. Spatial columns\nare supported for MyISAM, InnoDB, NDB, and ARCHIVE tables. See also the\nnotes about spatial indexes under [HELP SPATIAL indexes].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-columns.html\n\n','CREATE TABLE geom (g GEOMETRY);\n','https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-columns.html'),(46,'SPATIAL INDEXES',6,'For InnoDB and MyISAM tables, MySQL can create spatial indexes using\nsyntax similar to that for creating regular indexes, but using the\nSPATIAL keyword. Columns in spatial indexes must be declared NOT NULL.\nThe following examples demonstrate how to create spatial indexes:\n\no With CREATE TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL, SPATIAL INDEX(g));\n\no With ALTER TABLE:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL);\nALTER TABLE geom ADD SPATIAL INDEX(g);\n\no With CREATE INDEX:\n\nCREATE TABLE geom (g GEOMETRY NOT NULL);\nCREATE SPATIAL INDEX g ON geom (g);\n\nSPATIAL INDEX creates an R-tree index. For storage engines that support\nnonspatial indexing of spatial columns, the engine creates a B-tree\nindex. A B-tree index on spatial values is useful for exact-value\nlookups, but not for range scans.\n\nFor more information on indexing spatial columns, see [HELP CREATE\nINDEX].\n\nTo drop spatial indexes, use ALTER TABLE or DROP INDEX:\n\no With ALTER TABLE:\n\nALTER TABLE geom DROP INDEX g;\n\no With DROP INDEX:\n\nDROP INDEX g ON geom;\n\nExample: Suppose that a table geom contains more than 32,000\ngeometries, which are stored in the column g of type GEOMETRY. The\ntable also has an AUTO_INCREMENT column fid for storing object ID\nvalues.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-indexes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/creating-spatial-indexes.html'),(47,'=',10,'=\n\nEqual:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 = 0;\n        -> 0\nmysql> SELECT \'0\' = 0;\n        -> 1\nmysql> SELECT \'0.0\' = 0;\n        -> 1\nmysql> SELECT \'0.01\' = 0;\n        -> 0\nmysql> SELECT \'.01\' = 0.01;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(48,'<=>',10,'Syntax:\n<=>\n\nNULL-safe equal. This operator performs an equality comparison like the\n= operator, but returns 1 rather than NULL if both operands are NULL,\nand 0 rather than NULL if one operand is NULL.\n\nThe <=> operator is equivalent to the standard SQL IS NOT DISTINCT FROM\noperator.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 <=> 1, NULL <=> NULL, 1 <=> NULL;\n        -> 1, 1, 0\nmysql> SELECT 1 = 1, NULL = NULL, 1 = NULL;\n        -> 1, NULL, NULL\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(49,'!=',10,'Syntax:\n<>, !=\n\nNot equal:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT \'.01\' <> \'0.01\';\n        -> 1\nmysql> SELECT .01 <> \'0.01\';\n        -> 0\nmysql> SELECT \'zapp\' <> \'zappp\';\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(50,'<=',10,'Syntax:\n<=\n\nLess than or equal:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 0.1 <= 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(51,'<',10,'Syntax:\n<\n\nLess than:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 < 2;\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(52,'>=',10,'Syntax:\n>=\n\nGreater than or equal:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 >= 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(53,'>',10,'Syntax:\n>\n\nGreater than:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 > 2;\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(54,'IS',10,'Syntax:\nIS boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS TRUE, 0 IS FALSE, NULL IS UNKNOWN;\n        -> 1, 1, 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(55,'IS NOT',10,'Syntax:\nIS NOT boolean_value\n\nTests a value against a boolean value, where boolean_value can be TRUE,\nFALSE, or UNKNOWN.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NOT UNKNOWN, 0 IS NOT UNKNOWN, NULL IS NOT UNKNOWN;\n        -> 1, 1, 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(56,'IS NULL',10,'Syntax:\nIS NULL\n\nTests whether a value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NULL, 0 IS NULL, NULL IS NULL;\n        -> 0, 0, 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(57,'IS NOT NULL',10,'Syntax:\nIS NOT NULL\n\nTests whether a value is not NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 1 IS NOT NULL, 0 IS NOT NULL, NULL IS NOT NULL;\n        -> 1, 1, 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(58,'BETWEEN AND',10,'Syntax:\nexpr BETWEEN min AND max\n\nIf expr is greater than or equal to min and expr is less than or equal\nto max, BETWEEN returns 1, otherwise it returns 0. This is equivalent\nto the expression (min <= expr AND expr <= max) if all the arguments\nare of the same type. Otherwise type conversion takes place according\nto the rules described in\nhttps://dev.mysql.com/doc/refman/5.7/en/type-conversion.html, but\napplied to all the three arguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 BETWEEN 1 AND 3, 2 BETWEEN 3 and 1;\n        -> 1, 0\nmysql> SELECT 1 BETWEEN 2 AND 3;\n        -> 0\nmysql> SELECT \'b\' BETWEEN \'a\' AND \'c\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'3\';\n        -> 1\nmysql> SELECT 2 BETWEEN 2 AND \'x-3\';\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(59,'NOT BETWEEN',10,'Syntax:\nexpr NOT BETWEEN min AND max\n\nThis is the same as NOT (expr BETWEEN min AND max).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(60,'COALESCE',10,'Syntax:\nCOALESCE(value,...)\n\nReturns the first non-NULL value in the list, or NULL if there are no\nnon-NULL values.\n\nThe return type of COALESCE() is the aggregated type of the argument\ntypes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT COALESCE(NULL,1);\n        -> 1\nmysql> SELECT COALESCE(NULL,NULL,NULL);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(61,'GREATEST',10,'Syntax:\nGREATEST(value1,value2,...)\n\nWith two or more arguments, returns the largest (maximum-valued)\nargument. The arguments are compared using the same rules as for\nLEAST().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT GREATEST(2,0);\n        -> 2\nmysql> SELECT GREATEST(34.0,3.0,5.0,767.0);\n        -> 767.0\nmysql> SELECT GREATEST(\'B\',\'A\',\'C\');\n        -> \'C\'\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(62,'IN',10,'Syntax:\nexpr IN (value,...)\n\nReturns 1 if expr is equal to any of the values in the IN list, else\nreturns 0. If all values are constants, they are evaluated according to\nthe type of expr and sorted. The search for the item then is done using\na binary search. This means IN is very quick if the IN value list\nconsists entirely of constants. Otherwise, type conversion takes place\naccording to the rules described in\nhttps://dev.mysql.com/doc/refman/5.7/en/type-conversion.html, but\napplied to all the arguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT 2 IN (0,3,5,7);\n        -> 0\nmysql> SELECT \'wefwf\' IN (\'wee\',\'wefwf\',\'weg\');\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(63,'NOT IN',10,'Syntax:\nexpr NOT IN (value,...)\n\nThis is the same as NOT (expr IN (value,...)).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(64,'ISNULL',10,'Syntax:\nISNULL(expr)\n\nIf expr is NULL, ISNULL() returns 1, otherwise it returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT ISNULL(1+1);\n        -> 0\nmysql> SELECT ISNULL(1/0);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(65,'INTERVAL',10,'Syntax:\nINTERVAL(N,N1,N2,N3,...)\n\nReturns 0 if N < N1, 1 if N < N2 and so on or -1 if N is NULL. All\narguments are treated as integers. It is required that N1 < N2 < N3 <\n... < Nn for this function to work correctly. This is because a binary\nsearch is used (very fast).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT INTERVAL(23, 1, 15, 17, 30, 44, 200);\n        -> 3\nmysql> SELECT INTERVAL(10, 1, 10, 100, 1000);\n        -> 2\nmysql> SELECT INTERVAL(22, 23, 30, 44, 200);\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(66,'LEAST',10,'Syntax:\nLEAST(value1,value2,...)\n\nWith two or more arguments, returns the smallest (minimum-valued)\nargument. The arguments are compared using the following rules:\n\no If any argument is NULL, the result is NULL. No comparison is needed.\n\no If all arguments are integer-valued, they are compared as integers.\n\no If at least one argument is double precision, they are compared as\n  double-precision values. Otherwise, if at least one argument is a\n  DECIMAL value, they are compared as DECIMAL values.\n\no If the arguments comprise a mix of numbers and strings, they are\n  compared as numbers.\n\no If any argument is a nonbinary (character) string, the arguments are\n  compared as nonbinary strings.\n\no In all other cases, the arguments are compared as binary strings.\n\nThe return type of LEAST() is the aggregated type of the comparison\nargument types.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html\n\n','mysql> SELECT LEAST(2,0);\n        -> 0\nmysql> SELECT LEAST(34.0,3.0,5.0,767.0);\n        -> 3.0\nmysql> SELECT LEAST(\'B\',\'A\',\'C\');\n        -> \'A\'\n','https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html'),(67,'!',11,'Syntax:\nNOT, !\n\nLogical NOT. Evaluates to 1 if the operand is 0, to 0 if the operand is\nnonzero, and NOT NULL returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT NOT 10;\n        -> 0\nmysql> SELECT NOT 0;\n        -> 1\nmysql> SELECT NOT NULL;\n        -> NULL\nmysql> SELECT ! (1+1);\n        -> 0\nmysql> SELECT ! 1+1;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(68,'AND',11,'Syntax:\nAND, &&\n\nLogical AND. Evaluates to 1 if all operands are nonzero and not NULL,\nto 0 if one or more operands are 0, otherwise NULL is returned.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT 1 AND 1;\n        -> 1\nmysql> SELECT 1 AND 0;\n        -> 0\nmysql> SELECT 1 AND NULL;\n        -> NULL\nmysql> SELECT 0 AND NULL;\n        -> 0\nmysql> SELECT NULL AND 0;\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(69,'OR',11,'Syntax:\nOR, ||\n\nLogical OR. When both operands are non-NULL, the result is 1 if any\noperand is nonzero, and 0 otherwise. With a NULL operand, the result is\n1 if the other operand is nonzero, and NULL otherwise. If both operands\nare NULL, the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT 1 OR 1;\n        -> 1\nmysql> SELECT 1 OR 0;\n        -> 1\nmysql> SELECT 0 OR 0;\n        -> 0\nmysql> SELECT 0 OR NULL;\n        -> NULL\nmysql> SELECT 1 OR NULL;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(70,'XOR',11,'Syntax:\nXOR\n\nLogical XOR. Returns NULL if either operand is NULL. For non-NULL\noperands, evaluates to 1 if an odd number of operands is nonzero,\notherwise 0 is returned.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html\n\n','mysql> SELECT 1 XOR 1;\n        -> 0\nmysql> SELECT 1 XOR 0;\n        -> 1\nmysql> SELECT 1 XOR NULL;\n        -> NULL\nmysql> SELECT 1 XOR 1 XOR 1;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/logical-operators.html'),(71,'ASSIGN-VALUE',11,'Syntax:\n:=\n\nAssignment operator. Causes the user variable on the left hand side of\nthe operator to take on the value to its right. The value on the right\nhand side may be a literal value, another variable storing a value, or\nany legal expression that yields a scalar value, including the result\nof a query (provided that this value is a scalar value). You can\nperform multiple assignments in the same SET statement. You can perform\nmultiple assignments in the same statement.\n\nUnlike =, the := operator is never interpreted as a comparison\noperator. This means you can use := in any valid SQL statement (not\njust in SET statements) to assign a value to a variable.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html\n\n','mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1\n\nmysql> SELECT @var1:=COUNT(*) FROM t1;\n        -> 4\nmysql> SELECT @var1;\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html'),(72,'ASSIGN-EQUAL',11,'Syntax:\n=\n\nThis operator is used to perform value assignments in two cases,\ndescribed in the next two paragraphs.\n\nWithin a SET statement, = is treated as an assignment operator that\ncauses the user variable on the left hand side of the operator to take\non the value to its right. (In other words, when used in a SET\nstatement, = is treated identically to :=.) The value on the right hand\nside may be a literal value, another variable storing a value, or any\nlegal expression that yields a scalar value, including the result of a\nquery (provided that this value is a scalar value). You can perform\nmultiple assignments in the same SET statement.\n\nIn the SET clause of an UPDATE statement, = also acts as an assignment\noperator; in this case, however, it causes the column named on the left\nhand side of the operator to assume the value given to the right,\nprovided any WHERE conditions that are part of the UPDATE are met. You\ncan make multiple assignments in the same SET clause of an UPDATE\nstatement.\n\nIn any other context, = is treated as a comparison operator.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html\n\n','mysql> SELECT @var1, @var2;\n        -> NULL, NULL\nmysql> SELECT @var1 := 1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2;\n        -> 1, NULL\nmysql> SELECT @var1, @var2 := @var1;\n        -> 1, 1\nmysql> SELECT @var1, @var2;\n        -> 1, 1\n','https://dev.mysql.com/doc/refman/5.7/en/assignment-operators.html'),(73,'CASE OPERATOR',12,'Syntax:\nCASE value WHEN [compare_value] THEN result [WHEN [compare_value] THEN\nresult ...] [ELSE result] END\n\nCASE WHEN [condition] THEN result [WHEN [condition] THEN result ...]\n[ELSE result] END\n\nThe first CASE syntax returns the result for the first\nvalue=compare_value comparison that is true. The second syntax returns\nthe result for the first condition that is true. If no comparison or\ncondition is true, the result after ELSE is returned, or NULL if there\nis no ELSE part.\n\n*Note*:\n\nThe syntax of the CASE expr described here differs slightly from that\nof the SQL CASE statement described in [HELP CASE statement], for use\ninside stored programs. The CASE statement cannot have an ELSE NULL\nclause, and it is terminated with END CASE instead of END.\n\nThe return type of a CASE expression result is the aggregated type of\nall result values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT CASE 1 WHEN 1 THEN \'one\'\n    ->     WHEN 2 THEN \'two\' ELSE \'more\' END;\n        -> \'one\'\nmysql> SELECT CASE WHEN 1>0 THEN \'true\' ELSE \'false\' END;\n        -> \'true\'\nmysql> SELECT CASE BINARY \'B\'\n    ->     WHEN \'a\' THEN 1 WHEN \'b\' THEN 2 END;\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(74,'IF FUNCTION',12,'Syntax:\nIF(expr1,expr2,expr3)\n\nIf expr1 is TRUE (expr1 <> 0 and expr1 <> NULL), IF() returns expr2.\nOtherwise, it returns expr3.\n\n*Note*:\n\nThere is also an IF statement, which differs from the IF() function\ndescribed here. See [HELP IF statement].\n\nIf only one of expr2 or expr3 is explicitly NULL, the result type of\nthe IF() function is the type of the non-NULL expression.\n\nThe default return type of IF() (which may matter when it is stored\ninto a temporary table) is calculated as follows:\n\no If expr2 or expr3 produce a string, the result is a string.\n\n  If expr2 and expr3 are both strings, the result is case-sensitive if\n  either string is case sensitive.\n\no If expr2 or expr3 produce a floating-point value, the result is a\n  floating-point value.\n\no If expr2 or expr3 produce an integer, the result is an integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT IF(1>2,2,3);\n        -> 3\nmysql> SELECT IF(1<2,\'yes\',\'no\');\n        -> \'yes\'\nmysql> SELECT IF(STRCMP(\'test\',\'test1\'),\'no\',\'yes\');\n        -> \'no\'\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(75,'IFNULL',12,'Syntax:\nIFNULL(expr1,expr2)\n\nIf expr1 is not NULL, IFNULL() returns expr1; otherwise it returns\nexpr2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT IFNULL(1,0);\n        -> 1\nmysql> SELECT IFNULL(NULL,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,10);\n        -> 10\nmysql> SELECT IFNULL(1/0,\'yes\');\n        -> \'yes\'\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(76,'NULLIF',12,'Syntax:\nNULLIF(expr1,expr2)\n\nReturns NULL if expr1 = expr2 is true, otherwise returns expr1. This is\nthe same as CASE WHEN expr1 = expr2 THEN NULL ELSE expr1 END.\n\nThe return value has the same type as the first argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html\n\n','mysql> SELECT NULLIF(1,1);\n        -> NULL\nmysql> SELECT NULLIF(1,2);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html'),(77,'ASCII',13,'Syntax:\nASCII(str)\n\nReturns the numeric value of the leftmost character of the string str.\nReturns 0 if str is the empty string. Returns NULL if str is NULL.\nASCII() works for 8-bit characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT ASCII(\'2\');\n        -> 50\nmysql> SELECT ASCII(2);\n        -> 50\nmysql> SELECT ASCII(\'dx\');\n        -> 100\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(78,'BIN',13,'Syntax:\nBIN(N)\n\nReturns a string representation of the binary value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,2). Returns\nNULL if N is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT BIN(12);\n        -> \'1100\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(79,'BIT_LENGTH',13,'Syntax:\nBIT_LENGTH(str)\n\nReturns the length of the string str in bits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT BIT_LENGTH(\'text\');\n        -> 32\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(80,'CHAR FUNCTION',13,'Syntax:\nCHAR(N,... [USING charset_name])\n\nCHAR() interprets each argument N as an integer and returns a string\nconsisting of the characters given by the code values of those\nintegers. NULL values are skipped.\n\nBy default, CHAR() returns a binary string. To produce a string in a\ngiven character set, use the optional USING clause:\n\nmysql> SELECT CHARSET(CHAR(X\'65\')), CHARSET(CHAR(X\'65\' USING utf8));\n+----------------------+---------------------------------+\n| CHARSET(CHAR(X\'65\')) | CHARSET(CHAR(X\'65\' USING utf8)) |\n+----------------------+---------------------------------+\n| binary               | utf8                            |\n+----------------------+---------------------------------+\n\nIf USING is given and the result string is illegal for the given\ncharacter set, a warning is issued. Also, if strict SQL mode is\nenabled, the result from CHAR() becomes NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT CHAR(77,121,83,81,\'76\');\n        -> \'MySQL\'\nmysql> SELECT CHAR(77,77.3,\'77.3\');\n        -> \'MMM\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(81,'CHAR_LENGTH',13,'Syntax:\nCHAR_LENGTH(str)\n\nReturns the length of the string str, measured in characters. A\nmultibyte character counts as a single character. This means that for a\nstring containing five 2-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(82,'CHARACTER_LENGTH',13,'Syntax:\nCHARACTER_LENGTH(str)\n\nCHARACTER_LENGTH() is a synonym for CHAR_LENGTH().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(83,'CONCAT',13,'Syntax:\nCONCAT(str1,str2,...)\n\nReturns the string that results from concatenating the arguments. May\nhave one or more arguments. If all arguments are nonbinary strings, the\nresult is a nonbinary string. If the arguments include any binary\nstrings, the result is a binary string. A numeric argument is converted\nto its equivalent nonbinary string form.\n\nCONCAT() returns NULL if any argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT CONCAT(\'My\', \'S\', \'QL\');\n        -> \'MySQL\'\nmysql> SELECT CONCAT(\'My\', NULL, \'QL\');\n        -> NULL\nmysql> SELECT CONCAT(14.3);\n        -> \'14.3\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(84,'CONCAT_WS',13,'Syntax:\nCONCAT_WS(separator,str1,str2,...)\n\nCONCAT_WS() stands for Concatenate With Separator and is a special form\nof CONCAT(). The first argument is the separator for the rest of the\narguments. The separator is added between the strings to be\nconcatenated. The separator can be a string, as can the rest of the\narguments. If the separator is NULL, the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT CONCAT_WS(\',\',\'First name\',\'Second name\',\'Last Name\');\n        -> \'First name,Second name,Last Name\'\nmysql> SELECT CONCAT_WS(\',\',\'First name\',NULL,\'Last Name\');\n        -> \'First name,Last Name\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(85,'ELT',13,'Syntax:\nELT(N,str1,str2,str3,...)\n\nELT() returns the Nth element of the list of strings: str1 if N = 1,\nstr2 if N = 2, and so on. Returns NULL if N is less than 1 or greater\nthan the number of arguments. ELT() is the complement of FIELD().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT ELT(1, \'Aa\', \'Bb\', \'Cc\', \'Dd\');\n        -> \'Aa\'\nmysql> SELECT ELT(4, \'Aa\', \'Bb\', \'Cc\', \'Dd\');\n        -> \'Dd\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(86,'EXPORT_SET',13,'Syntax:\nEXPORT_SET(bits,on,off[,separator[,number_of_bits]])\n\nReturns a string such that for every bit set in the value bits, you get\nan on string and for every bit not set in the value, you get an off\nstring. Bits in bits are examined from right to left (from low-order to\nhigh-order bits). Strings are added to the result from left to right,\nseparated by the separator string (the default being the comma\ncharacter ,). The number of bits examined is given by number_of_bits,\nwhich has a default of 64 if not specified. number_of_bits is silently\nclipped to 64 if larger than 64. It is treated as an unsigned integer,\nso a value of −1 is effectively the same as 64.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT EXPORT_SET(5,\'Y\',\'N\',\',\',4);\n        -> \'Y,N,Y,N\'\nmysql> SELECT EXPORT_SET(6,\'1\',\'0\',\',\',10);\n        -> \'0,1,1,0,0,0,0,0,0,0\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(87,'FIELD',13,'Syntax:\nFIELD(str,str1,str2,str3,...)\n\nReturns the index (position) of str in the str1, str2, str3, ... list.\nReturns 0 if str is not found.\n\nIf all arguments to FIELD() are strings, all arguments are compared as\nstrings. If all arguments are numbers, they are compared as numbers.\nOtherwise, the arguments are compared as double.\n\nIf str is NULL, the return value is 0 because NULL fails equality\ncomparison with any value. FIELD() is the complement of ELT().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT FIELD(\'Bb\', \'Aa\', \'Bb\', \'Cc\', \'Dd\', \'Ff\');\n        -> 2\nmysql> SELECT FIELD(\'Gg\', \'Aa\', \'Bb\', \'Cc\', \'Dd\', \'Ff\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(88,'FIND_IN_SET',13,'Syntax:\nFIND_IN_SET(str,strlist)\n\nReturns a value in the range of 1 to N if the string str is in the\nstring list strlist consisting of N substrings. A string list is a\nstring composed of substrings separated by , characters. If the first\nargument is a constant string and the second is a column of type SET,\nthe FIND_IN_SET() function is optimized to use bit arithmetic. Returns\n0 if str is not in strlist or if strlist is the empty string. Returns\nNULL if either argument is NULL. This function does not work properly\nif the first argument contains a comma (,) character.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT FIND_IN_SET(\'b\',\'a,b,c,d\');\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(89,'FORMAT',13,'Syntax:\nFORMAT(X,D[,locale])\n\nFormats the number X to a format like \'#,###,###.##\', rounded to D\ndecimal places, and returns the result as a string. If D is 0, the\nresult has no decimal point or fractional part.\n\nThe optional third parameter enables a locale to be specified to be\nused for the result number\'s decimal point, thousands separator, and\ngrouping between separators. Permissible locale values are the same as\nthe legal values for the lc_time_names system variable (see\nhttps://dev.mysql.com/doc/refman/5.7/en/locale-support.html). If no\nlocale is specified, the default is \'en_US\'.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT FORMAT(12332.123456, 4);\n        -> \'12,332.1235\'\nmysql> SELECT FORMAT(12332.1,4);\n        -> \'12,332.1000\'\nmysql> SELECT FORMAT(12332.2,0);\n        -> \'12,332\'\nmysql> SELECT FORMAT(12332.2,2,\'de_DE\');\n        -> \'12.332,20\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(90,'FROM_BASE64',13,'Syntax:\nFROM_BASE64(str)\n\nTakes a string encoded with the base-64 encoded rules used by\nTO_BASE64() and returns the decoded result as a binary string. The\nresult is NULL if the argument is NULL or not a valid base-64 string.\nSee the description of TO_BASE64() for details about the encoding and\ndecoding rules.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT TO_BASE64(\'abc\'), FROM_BASE64(TO_BASE64(\'abc\'));\n        -> \'JWJj\', \'abc\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(91,'HEX',13,'Syntax:\nHEX(str), HEX(N)\n\nFor a string argument str, HEX() returns a hexadecimal string\nrepresentation of str where each byte of each character in str is\nconverted to two hexadecimal digits. (Multibyte characters therefore\nbecome more than two digits.) The inverse of this operation is\nperformed by the UNHEX() function.\n\nFor a numeric argument N, HEX() returns a hexadecimal string\nrepresentation of the value of N treated as a longlong (BIGINT) number.\nThis is equivalent to CONV(N,10,16). The inverse of this operation is\nperformed by CONV(HEX(N),16,10).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT X\'616263\', HEX(\'abc\'), UNHEX(HEX(\'abc\'));\n        -> \'abc\', 616263, \'abc\'\nmysql> SELECT HEX(255), CONV(HEX(255),16,10);\n        -> \'FF\', 255\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(92,'INSERT FUNCTION',13,'Syntax:\nINSERT(str,pos,len,newstr)\n\nReturns the string str, with the substring beginning at position pos\nand len characters long replaced by the string newstr. Returns the\noriginal string if pos is not within the length of the string. Replaces\nthe rest of the string from position pos if len is not within the\nlength of the rest of the string. Returns NULL if any argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT INSERT(\'Quadratic\', 3, 4, \'What\');\n        -> \'QuWhattic\'\nmysql> SELECT INSERT(\'Quadratic\', -1, 4, \'What\');\n        -> \'Quadratic\'\nmysql> SELECT INSERT(\'Quadratic\', 3, 100, \'What\');\n        -> \'QuWhat\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(93,'INSTR',13,'Syntax:\nINSTR(str,substr)\n\nReturns the position of the first occurrence of substring substr in\nstring str. This is the same as the two-argument form of LOCATE(),\nexcept that the order of the arguments is reversed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT INSTR(\'foobarbar\', \'bar\');\n        -> 4\nmysql> SELECT INSTR(\'xbar\', \'foobar\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(94,'LCASE',13,'Syntax:\nLCASE(str)\n\nLCASE() is a synonym for LOWER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(95,'LEFT',13,'Syntax:\nLEFT(str,len)\n\nReturns the leftmost len characters from the string str, or NULL if any\nargument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LEFT(\'foobarbar\', 5);\n        -> \'fooba\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(96,'LENGTH',13,'Syntax:\nLENGTH(str)\n\nReturns the length of the string str, measured in bytes. A multibyte\ncharacter counts as multiple bytes. This means that for a string\ncontaining five 2-byte characters, LENGTH() returns 10, whereas\nCHAR_LENGTH() returns 5.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LENGTH(\'text\');\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(97,'LOAD_FILE',13,'Syntax:\nLOAD_FILE(file_name)\n\nReads the file and returns the file contents as a string. To use this\nfunction, the file must be located on the server host, you must specify\nthe full path name to the file, and you must have the FILE privilege.\nThe file must be readable by all and its size less than\nmax_allowed_packet bytes. If the secure_file_priv system variable is\nset to a nonempty directory name, the file to be loaded must be located\nin that directory.\n\nIf the file does not exist or cannot be read because one of the\npreceding conditions is not satisfied, the function returns NULL.\n\nThe character_set_filesystem system variable controls interpretation of\nfile names that are given as literal strings.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> UPDATE t\n            SET blob_col=LOAD_FILE(\'/tmp/picture\')\n            WHERE id=1;\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(98,'LOCATE',13,'Syntax:\nLOCATE(substr,str), LOCATE(substr,str,pos)\n\nThe first syntax returns the position of the first occurrence of\nsubstring substr in string str. The second syntax returns the position\nof the first occurrence of substring substr in string str, starting at\nposition pos. Returns 0 if substr is not in str. Returns NULL if substr\nor str is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LOCATE(\'bar\', \'foobarbar\');\n        -> 4\nmysql> SELECT LOCATE(\'xbar\', \'foobar\');\n        -> 0\nmysql> SELECT LOCATE(\'bar\', \'foobarbar\', 5);\n        -> 7\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(99,'LOWER',13,'Syntax:\nLOWER(str)\n\nReturns the string str with all characters changed to lowercase\naccording to the current character set mapping. The default is latin1\n(cp1252 West European).\n\nmysql> SELECT LOWER(\'QUADRATICALLY\');\n        -> \'quadratically\'\n\nLOWER() (and UPPER()) are ineffective when applied to binary strings\n(BINARY, VARBINARY, BLOB). To perform lettercase conversion, convert\nthe string to a nonbinary string:\n\nmysql> SET @str = BINARY \'New York\';\nmysql> SELECT LOWER(@str), LOWER(CONVERT(@str USING latin1));\n+-------------+-----------------------------------+\n| LOWER(@str) | LOWER(CONVERT(@str USING latin1)) |\n+-------------+-----------------------------------+\n| New York    | new york                          |\n+-------------+-----------------------------------+\n\nFor collations of Unicode character sets, LOWER() and UPPER() work\naccording to the Unicode Collation Algorithm (UCA) version in the\ncollation name, if there is one, and UCA 4.0.0 if no version is\nspecified. For example, utf8_unicode_520_ci works according to UCA\n5.2.0, whereas utf8_unicode_ci works according to UCA 4.0.0. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-unicode-sets.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(100,'LPAD',13,'Syntax:\nLPAD(str,len,padstr)\n\nReturns the string str, left-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LPAD(\'hi\',4,\'??\');\n        -> \'??hi\'\nmysql> SELECT LPAD(\'hi\',1,\'??\');\n        -> \'h\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(101,'LTRIM',13,'Syntax:\nLTRIM(str)\n\nReturns the string str with leading space characters removed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT LTRIM(\'  barbar\');\n        -> \'barbar\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(102,'MAKE_SET',13,'Syntax:\nMAKE_SET(bits,str1,str2,...)\n\nReturns a set value (a string containing substrings separated by ,\ncharacters) consisting of the strings that have the corresponding bit\nin bits set. str1 corresponds to bit 0, str2 to bit 1, and so on. NULL\nvalues in str1, str2, ... are not appended to the result.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT MAKE_SET(1,\'a\',\'b\',\'c\');\n        -> \'a\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',\'world\');\n        -> \'hello,world\'\nmysql> SELECT MAKE_SET(1 | 4,\'hello\',\'nice\',NULL,\'world\');\n        -> \'hello\'\nmysql> SELECT MAKE_SET(0,\'a\',\'b\',\'c\');\n        -> \'\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(103,'MID',13,'Syntax:\nMID(str,pos,len)\n\nMID(str,pos,len) is a synonym for SUBSTRING(str,pos,len).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(104,'OCT',13,'Syntax:\nOCT(N)\n\nReturns a string representation of the octal value of N, where N is a\nlonglong (BIGINT) number. This is equivalent to CONV(N,10,8). Returns\nNULL if N is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT OCT(12);\n        -> \'14\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(105,'OCTET_LENGTH',13,'Syntax:\nOCTET_LENGTH(str)\n\nOCTET_LENGTH() is a synonym for LENGTH().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(106,'ORD',13,'Syntax:\nORD(str)\n\nIf the leftmost character of the string str is a multibyte character,\nreturns the code for that character, calculated from the numeric values\nof its constituent bytes using this formula:\n\n  (1st byte code)\n+ (2nd byte code * 256)\n+ (3rd byte code * 256^2) ...\n\nIf the leftmost character is not a multibyte character, ORD() returns\nthe same value as the ASCII() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT ORD(\'2\');\n        -> 50\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(107,'POSITION',13,'Syntax:\nPOSITION(substr IN str)\n\nPOSITION(substr IN str) is a synonym for LOCATE(substr,str).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(108,'QUOTE',13,'Syntax:\nQUOTE(str)\n\nQuotes a string to produce a result that can be used as a properly\nescaped data value in an SQL statement. The string is returned enclosed\nby single quotation marks and with each instance of backslash (\\),\nsingle quote (\'), ASCII NUL, and Control+Z preceded by a backslash. If\nthe argument is NULL, the return value is the word \"NULL\" without\nenclosing single quotation marks.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT QUOTE(\'Don\\\'t!\');\n        -> \'Don\\\'t!\'\nmysql> SELECT QUOTE(NULL);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(109,'REPEAT FUNCTION',13,'Syntax:\nREPEAT(str,count)\n\nReturns a string consisting of the string str repeated count times. If\ncount is less than 1, returns an empty string. Returns NULL if str or\ncount are NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT REPEAT(\'MySQL\', 3);\n        -> \'MySQLMySQLMySQL\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(110,'REPLACE FUNCTION',13,'Syntax:\nREPLACE(str,from_str,to_str)\n\nReturns the string str with all occurrences of the string from_str\nreplaced by the string to_str. REPLACE() performs a case-sensitive\nmatch when searching for from_str.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT REPLACE(\'www.mysql.com\', \'w\', \'Ww\');\n        -> \'WwWwWw.mysql.com\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(111,'REVERSE',13,'Syntax:\nREVERSE(str)\n\nReturns the string str with the order of the characters reversed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT REVERSE(\'abc\');\n        -> \'cba\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(112,'RIGHT',13,'Syntax:\nRIGHT(str,len)\n\nReturns the rightmost len characters from the string str, or NULL if\nany argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT RIGHT(\'foobarbar\', 4);\n        -> \'rbar\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(113,'RPAD',13,'Syntax:\nRPAD(str,len,padstr)\n\nReturns the string str, right-padded with the string padstr to a length\nof len characters. If str is longer than len, the return value is\nshortened to len characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT RPAD(\'hi\',5,\'?\');\n        -> \'hi???\'\nmysql> SELECT RPAD(\'hi\',1,\'?\');\n        -> \'h\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(114,'RTRIM',13,'Syntax:\nRTRIM(str)\n\nReturns the string str with trailing space characters removed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT RTRIM(\'barbar   \');\n        -> \'barbar\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(115,'SOUNDEX',13,'Syntax:\nSOUNDEX(str)\n\nReturns a soundex string from str. Two strings that sound almost the\nsame should have identical soundex strings. A standard soundex string\nis four characters long, but the SOUNDEX() function returns an\narbitrarily long string. You can use SUBSTRING() on the result to get a\nstandard soundex string. All nonalphabetic characters in str are\nignored. All international alphabetic characters outside the A-Z range\nare treated as vowels.\n\n*Important*:\n\nWhen using SOUNDEX(), you should be aware of the following limitations:\n\no This function, as currently implemented, is intended to work well\n  with strings that are in the English language only. Strings in other\n  languages may not produce reliable results.\n\no This function is not guaranteed to provide consistent results with\n  strings that use multibyte character sets, including utf-8. See Bug\n  #22638 for more information.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SOUNDEX(\'Hello\');\n        -> \'H400\'\nmysql> SELECT SOUNDEX(\'Quadratically\');\n        -> \'Q36324\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(116,'SOUNDS LIKE',13,'Syntax:\nexpr1 SOUNDS LIKE expr2\n\nThis is the same as SOUNDEX(expr1) = SOUNDEX(expr2).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(117,'SPACE',13,'Syntax:\nSPACE(N)\n\nReturns a string consisting of N space characters.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SPACE(6);\n        -> \'      \'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(118,'SUBSTR',13,'Syntax:\nSUBSTR(str,pos), SUBSTR(str FROM pos), SUBSTR(str,pos,len), SUBSTR(str\nFROM pos FOR len)\n\nSUBSTR() is a synonym for SUBSTRING().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(119,'SUBSTRING',13,'Syntax:\nSUBSTRING(str,pos), SUBSTRING(str FROM pos), SUBSTRING(str,pos,len),\nSUBSTRING(str FROM pos FOR len)\n\nThe forms without a len argument return a substring from string str\nstarting at position pos. The forms with a len argument return a\nsubstring len characters long from string str, starting at position\npos. The forms that use FROM are standard SQL syntax. It is also\npossible to use a negative value for pos. In this case, the beginning\nof the substring is pos characters from the end of the string, rather\nthan the beginning. A negative value may be used for pos in any of the\nforms of this function.\n\nFor all forms of SUBSTRING(), the position of the first character in\nthe string from which the substring is to be extracted is reckoned as\n1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SUBSTRING(\'Quadratically\',5);\n        -> \'ratically\'\nmysql> SELECT SUBSTRING(\'foobarbar\' FROM 4);\n        -> \'barbar\'\nmysql> SELECT SUBSTRING(\'Quadratically\',5,6);\n        -> \'ratica\'\nmysql> SELECT SUBSTRING(\'Sakila\', -3);\n        -> \'ila\'\nmysql> SELECT SUBSTRING(\'Sakila\', -5, 3);\n        -> \'aki\'\nmysql> SELECT SUBSTRING(\'Sakila\' FROM -4 FOR 2);\n        -> \'ki\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(120,'SUBSTRING_INDEX',13,'Syntax:\nSUBSTRING_INDEX(str,delim,count)\n\nReturns the substring from string str before count occurrences of the\ndelimiter delim. If count is positive, everything to the left of the\nfinal delimiter (counting from the left) is returned. If count is\nnegative, everything to the right of the final delimiter (counting from\nthe right) is returned. SUBSTRING_INDEX() performs a case-sensitive\nmatch when searching for delim.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', 2);\n        -> \'www.mysql\'\nmysql> SELECT SUBSTRING_INDEX(\'www.mysql.com\', \'.\', -2);\n        -> \'mysql.com\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(121,'TO_BASE64',13,'Syntax:\nTO_BASE64(str)\n\nConverts the string argument to base-64 encoded form and returns the\nresult as a character string with the connection character set and\ncollation. If the argument is not a string, it is converted to a string\nbefore conversion takes place. The result is NULL if the argument is\nNULL. Base-64 encoded strings can be decoded using the FROM_BASE64()\nfunction.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT TO_BASE64(\'abc\'), FROM_BASE64(TO_BASE64(\'abc\'));\n        -> \'JWJj\', \'abc\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(122,'TRIM',13,'Syntax:\nTRIM([{BOTH | LEADING | TRAILING} [remstr] FROM] str), TRIM([remstr\nFROM] str)\n\nReturns the string str with all remstr prefixes or suffixes removed. If\nnone of the specifiers BOTH, LEADING, or TRAILING is given, BOTH is\nassumed. remstr is optional and, if not specified, spaces are removed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT TRIM(\'  bar   \');\n        -> \'bar\'\nmysql> SELECT TRIM(LEADING \'x\' FROM \'xxxbarxxx\');\n        -> \'barxxx\'\nmysql> SELECT TRIM(BOTH \'x\' FROM \'xxxbarxxx\');\n        -> \'bar\'\nmysql> SELECT TRIM(TRAILING \'xyz\' FROM \'barxxyz\');\n        -> \'barx\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(123,'UCASE',13,'Syntax:\nUCASE(str)\n\nUCASE() is a synonym for UPPER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(124,'UNHEX',13,'Syntax:\nUNHEX(str)\n\nFor a string argument str, UNHEX(str) interprets each pair of\ncharacters in the argument as a hexadecimal number and converts it to\nthe byte represented by the number. The return value is a binary\nstring.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','mysql> SELECT UNHEX(\'4D7953514C\');\n        -> \'MySQL\'\nmysql> SELECT X\'4D7953514C\';\n        -> \'MySQL\'\nmysql> SELECT UNHEX(HEX(\'string\'));\n        -> \'string\'\nmysql> SELECT HEX(UNHEX(\'1267\'));\n        -> \'1267\'\n','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(125,'UPPER',13,'Syntax:\nUPPER(str)\n\nReturns the string str with all characters changed to uppercase\naccording to the current character set mapping. The default is latin1\n(cp1252 West European).\n\nmysql> SELECT UPPER(\'Hej\');\n        -> \'HEJ\'\n\nSee the description of LOWER() for information that also applies to\nUPPER(). This included information about how to perform lettercase\nconversion of binary strings (BINARY, VARBINARY, BLOB) for which these\nfunctions are ineffective, and information about case folding for\nUnicode character sets.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(126,'WEIGHT_STRING',13,'Syntax:\nWEIGHT_STRING(str [AS {CHAR|BINARY}(N)] [LEVEL levels] [flags])\n\nlevels: N [ASC|DESC|REVERSE] [, N [ASC|DESC|REVERSE]] ...\n\nThis function returns the weight string for the input string. The\nreturn value is a binary string that represents the comparison and\nsorting value of the string. It has these properties:\n\no If WEIGHT_STRING(str1) = WEIGHT_STRING(str2), then str1 = str2 (str1\n  and str2 are considered equal)\n\no If WEIGHT_STRING(str1) < WEIGHT_STRING(str2), then str1 < str2 (str1\n  sorts before str2)\n\nWEIGHT_STRING() is a debugging function intended for internal use. Its\nbehavior can change without notice between MySQL versions. It can be\nused for testing and debugging of collations, especially if you are\nadding a new collation. See\nhttps://dev.mysql.com/doc/refman/5.7/en/adding-collation.html.\n\nThis list briefly summarizes the arguments. More details are given in\nthe discussion following the list.\n\no str: The input string expression.\n\no AS clause: Optional; cast the input string to a given type and\n  length.\n\no LEVEL clause: Optional; specify weight levels for the return value.\n\no flags: Optional; unused.\n\nThe input string, str, is a string expression. If the input is a\nnonbinary (character) string such as a CHAR, VARCHAR, or TEXT value,\nthe return value contains the collation weights for the string. If the\ninput is a binary (byte) string such as a BINARY, VARBINARY, or BLOB\nvalue, the return value is the same as the input (the weight for each\nbyte in a binary string is the byte value). If the input is NULL,\nWEIGHT_STRING() returns NULL.\n\nExamples:\n\nmysql> SET @s = _latin1 \'AB\' COLLATE latin1_swedish_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = _latin1 \'ab\' COLLATE latin1_swedish_ci;\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'AB\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| AB   | 4142    | 4142                   |\n+------+---------+------------------------+\n\nmysql> SET @s = CAST(\'ab\' AS BINARY);\nmysql> SELECT @s, HEX(@s), HEX(WEIGHT_STRING(@s));\n+------+---------+------------------------+\n| @s   | HEX(@s) | HEX(WEIGHT_STRING(@s)) |\n+------+---------+------------------------+\n| ab   | 6162    | 6162                   |\n+------+---------+------------------------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-functions.html'),(127,'LIKE',13,'Syntax:\nexpr LIKE pat [ESCAPE \'escape_char\']\n\nPattern matching using an SQL pattern. Returns 1 (TRUE) or 0 (FALSE).\nIf either expr or pat is NULL, the result is NULL.\n\nThe pattern need not be a literal string. For example, it can be\nspecified as a string expression or table column.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html\n\n','mysql> SELECT \'David!\' LIKE \'David_\';\n        -> 1\nmysql> SELECT \'David!\' LIKE \'%D%v%\';\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html'),(128,'NOT LIKE',13,'Syntax:\nexpr NOT LIKE pat [ESCAPE \'escape_char\']\n\nThis is the same as NOT (expr LIKE pat [ESCAPE \'escape_char\']).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html'),(129,'STRCMP',13,'Syntax:\nSTRCMP(expr1,expr2)\n\nSTRCMP() returns 0 if the strings are the same, -1 if the first\nargument is smaller than the second according to the current sort\norder, and 1 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html\n\n','mysql> SELECT STRCMP(\'text\', \'text2\');\n        -> -1\nmysql> SELECT STRCMP(\'text2\', \'text\');\n        -> 1\nmysql> SELECT STRCMP(\'text\', \'text\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.html'),(130,'NOT REGEXP',13,'Syntax:\nexpr NOT REGEXP pat, expr NOT RLIKE pat\n\nThis is the same as NOT (expr REGEXP pat).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/regexp.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/regexp.html'),(131,'REGEXP',13,'Syntax:\nexpr REGEXP pat, expr RLIKE pat\n\nReturns 1 if the string expr matches the regular expression specified\nby the pattern pat, 0 otherwise. If either expr or pat is NULL, the\nreturn value is NULL.\n\nRLIKE is a synonym for REGEXP.\n\nThe pattern can be an extended regular expression, the syntax for which\nis discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/regexp.html#regexp-syntax. The\npattern need not be a literal string. For example, it can be specified\nas a string expression or table column.\n\n*Note*:\n\nBecause MySQL uses the C escape syntax in strings (for example, \\n to\nrepresent the newline character), you must double any \\ that you use in\nyour REGEXP arguments.\n\nRegular expression operations use the character set and collation of\nthe string expression and pattern arguments when deciding the type of a\ncharacter and performing the comparison. If the arguments have\ndifferent character sets or collations, coercibility rules apply as\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-collation-coercibility.\nhtml. If either argument is a binary string, the arguments are handled\nin case-sensitive fashion as binary strings.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/regexp.html\n\n','mysql> SELECT \'Michael!\' REGEXP \'.*\';\n+------------------------+\n| \'Michael!\' REGEXP \'.*\' |\n+------------------------+\n|                      1 |\n+------------------------+\nmysql> SELECT \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\';\n+---------------------------------------+\n| \'new*\\n*line\' REGEXP \'new\\\\*.\\\\*line\' |\n+---------------------------------------+\n|                                     0 |\n+---------------------------------------+\nmysql> SELECT \'a\' REGEXP \'^[a-d]\';\n+---------------------+\n| \'a\' REGEXP \'^[a-d]\' |\n+---------------------+\n|                   1 |\n+---------------------+\nmysql> SELECT \'a\' REGEXP \'A\', \'a\' REGEXP BINARY \'A\';\n+----------------+-----------------------+\n| \'a\' REGEXP \'A\' | \'a\' REGEXP BINARY \'A\' |\n+----------------+-----------------------+\n|              1 |                     0 |\n+----------------+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/regexp.html'),(132,'+',14,'Syntax:\n+\n\nAddition:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3+5;\n        -> 8\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(133,'- BINARY',14,'Syntax:\n-\n\nSubtraction:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3-5;\n        -> -2\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(134,'- UNARY',14,'Syntax:\n-\n\nUnary minus. This operator changes the sign of the operand.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT - 2;\n        -> -2\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(135,'*',14,'Syntax:\n*\n\nMultiplication:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3*5;\n        -> 15\nmysql> SELECT 18014398509481984*18014398509481984.0;\n        -> 324518553658426726783156020576256.0\nmysql> SELECT 18014398509481984*18014398509481984;\n        -> out-of-range error\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(136,'/',14,'Syntax:\n/\n\nDivision:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 3/5;\n        -> 0.60\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(137,'DIV',14,'Syntax:\nDIV\n\nInteger division. Discards from the division result any fractional part\nto the right of the decimal point.\n\nIf either operand has a noninteger type, the operands are converted to\nDECIMAL and divided using DECIMAL arithmetic before converting the\nresult to BIGINT. If the result exceeds BIGINT range, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','mysql> SELECT 5 DIV 2, -5 DIV 2, 5 DIV -2, -5 DIV -2;\n        -> 2, -2, -2, 2\n','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(138,'%',14,'Syntax:\nN % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M. For more\ninformation, see the description for the MOD() function in\nhttps://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/arithmetic-functions.html'),(139,'ABS',14,'Syntax:\nABS(X)\n\nReturns the absolute value of X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ABS(2);\n        -> 2\nmysql> SELECT ABS(-32);\n        -> 32\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(140,'ACOS',14,'Syntax:\nACOS(X)\n\nReturns the arc cosine of X, that is, the value whose cosine is X.\nReturns NULL if X is not in the range -1 to 1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ACOS(1);\n        -> 0\nmysql> SELECT ACOS(1.0001);\n        -> NULL\nmysql> SELECT ACOS(0);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(141,'ASIN',14,'Syntax:\nASIN(X)\n\nReturns the arc sine of X, that is, the value whose sine is X. Returns\nNULL if X is not in the range -1 to 1.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ASIN(0.2);\n        -> 0.20135792079033\nmysql> SELECT ASIN(\'foo\');\n\n+-------------+\n| ASIN(\'foo\') |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+---------+------+-----------------------------------------+\n| Level   | Code | Message                                 |\n+---------+------+-----------------------------------------+\n| Warning | 1292 | Truncated incorrect DOUBLE value: \'foo\' |\n+---------+------+-----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(142,'ATAN',14,'Syntax:\nATAN(X)\n\nReturns the arc tangent of X, that is, the value whose tangent is X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ATAN(2);\n        -> 1.1071487177941\nmysql> SELECT ATAN(-2);\n        -> -1.1071487177941\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(143,'ATAN2',14,'Syntax:\nATAN(Y,X), ATAN2(Y,X)\n\nReturns the arc tangent of the two variables X and Y. It is similar to\ncalculating the arc tangent of Y / X, except that the signs of both\narguments are used to determine the quadrant of the result.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ATAN(-2,2);\n        -> -0.78539816339745\nmysql> SELECT ATAN2(PI(),0);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(144,'CEIL',14,'Syntax:\nCEIL(X)\n\nCEIL() is a synonym for CEILING().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(145,'CEILING',14,'Syntax:\nCEILING(X)\n\nReturns the smallest integer value not less than X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT CEILING(1.23);\n        -> 2\nmysql> SELECT CEILING(-1.23);\n        -> -1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(146,'CONV',14,'Syntax:\nCONV(N,from_base,to_base)\n\nConverts numbers between different number bases. Returns a string\nrepresentation of the number N, converted from base from_base to base\nto_base. Returns NULL if any argument is NULL. The argument N is\ninterpreted as an integer, but may be specified as an integer or a\nstring. The minimum base is 2 and the maximum base is 36. If from_base\nis a negative number, N is regarded as a signed number. Otherwise, N is\ntreated as unsigned. CONV() works with 64-bit precision.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT CONV(\'a\',16,2);\n        -> \'1010\'\nmysql> SELECT CONV(\'6E\',18,8);\n        -> \'172\'\nmysql> SELECT CONV(-17,10,-18);\n        -> \'-H\'\nmysql> SELECT CONV(10+\'10\'+\'10\'+X\'0a\',10,10);\n        -> \'40\'\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(147,'COS',14,'Syntax:\nCOS(X)\n\nReturns the cosine of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT COS(PI());\n        -> -1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(148,'COT',14,'Syntax:\nCOT(X)\n\nReturns the cotangent of X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT COT(12);\n        -> -1.5726734063977\nmysql> SELECT COT(0);\n        -> out-of-range error\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(149,'CRC32',14,'Syntax:\nCRC32(expr)\n\nComputes a cyclic redundancy check value and returns a 32-bit unsigned\nvalue. The result is NULL if the argument is NULL. The argument is\nexpected to be a string and (if possible) is treated as one if it is\nnot.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT CRC32(\'MySQL\');\n        -> 3259397556\nmysql> SELECT CRC32(\'mysql\');\n        -> 2501908538\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(150,'DEGREES',14,'Syntax:\nDEGREES(X)\n\nReturns the argument X, converted from radians to degrees.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT DEGREES(PI());\n        -> 180\nmysql> SELECT DEGREES(PI() / 2);\n        -> 90\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(151,'EXP',14,'Syntax:\nEXP(X)\n\nReturns the value of e (the base of natural logarithms) raised to the\npower of X. The inverse of this function is LOG() (using a single\nargument only) or LN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT EXP(2);\n        -> 7.3890560989307\nmysql> SELECT EXP(-2);\n        -> 0.13533528323661\nmysql> SELECT EXP(0);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(152,'FLOOR',14,'Syntax:\nFLOOR(X)\n\nReturns the largest integer value not greater than X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT FLOOR(1.23), FLOOR(-1.23);\n        -> 1, -2\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(153,'LN',14,'Syntax:\nLN(X)\n\nReturns the natural logarithm of X; that is, the base-e logarithm of X.\nIf X is less than or equal to 0.0E0, the function returns NULL and (as\nof MySQL 5.7.4) a warning \"Invalid argument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LN(2);\n        -> 0.69314718055995\nmysql> SELECT LN(-2);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(154,'LOG',14,'Syntax:\nLOG(X), LOG(B,X)\n\nIf called with one parameter, this function returns the natural\nlogarithm of X. If X is less than or equal to 0.0E0, the function\nreturns NULL and (as of MySQL 5.7.4) a warning \"Invalid argument for\nlogarithm\" is reported.\n\nThe inverse of this function (when called with a single argument) is\nthe EXP() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LOG(2);\n        -> 0.69314718055995\nmysql> SELECT LOG(-2);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(155,'LOG2',14,'Syntax:\nLOG2(X)\n\nReturns the base-2 logarithm of X. If X is less than or equal to 0.0E0,\nthe function returns NULL and (as of MySQL 5.7.4) a warning \"Invalid\nargument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LOG2(65536);\n        -> 16\nmysql> SELECT LOG2(-100);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(156,'LOG10',14,'Syntax:\nLOG10(X)\n\nReturns the base-10 logarithm of X. If X is less than or equal to\n0.0E0, the function returns NULL and (as of MySQL 5.7.4) a warning\n\"Invalid argument for logarithm\" is reported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT LOG10(2);\n        -> 0.30102999566398\nmysql> SELECT LOG10(100);\n        -> 2\nmysql> SELECT LOG10(-100);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(157,'MOD',14,'Syntax:\nMOD(N,M), N % M, N MOD M\n\nModulo operation. Returns the remainder of N divided by M.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT MOD(234, 10);\n        -> 4\nmysql> SELECT 253 % 7;\n        -> 1\nmysql> SELECT MOD(29,9);\n        -> 2\nmysql> SELECT 29 MOD 9;\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(158,'PI',14,'Syntax:\nPI()\n\nReturns the value of π (pi). The default number of decimal places\ndisplayed is seven, but MySQL uses the full double-precision value\ninternally.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT PI();\n        -> 3.141593\nmysql> SELECT PI()+0.000000000000000000;\n        -> 3.141592653589793116\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(159,'POW',14,'Syntax:\nPOW(X,Y)\n\nReturns the value of X raised to the power of Y.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT POW(2,2);\n        -> 4\nmysql> SELECT POW(2,-2);\n        -> 0.25\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(160,'POWER',14,'Syntax:\nPOWER(X,Y)\n\nThis is a synonym for POW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(161,'RADIANS',14,'Syntax:\nRADIANS(X)\n\nReturns the argument X, converted from degrees to radians. (Note that\nπ radians equals 180 degrees.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT RADIANS(90);\n        -> 1.5707963267949\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(162,'RAND',14,'Syntax:\nRAND([N])\n\nReturns a random floating-point value v in the range 0 <= v < 1.0. To\nobtain a random integer R in the range i <= R < j, use the expression\nFLOOR(i + RAND() * (j − i)). For example, to obtain a random integer\nin the range the range 7 <= R < 12, use the following statement:\n\nSELECT FLOOR(7 + (RAND() * 5));\n\nIf an integer argument N is specified, it is used as the seed value:\n\no With a constant initializer argument, the seed is initialized once\n  when the statement is prepared, prior to execution.\n\no With a nonconstant initializer argument (such as a column name), the\n  seed is initialized with the value for each invocation of RAND().\n\nOne implication of this behavior is that for equal argument values,\nRAND(N) returns the same value each time, and thus produces a\nrepeatable sequence of column values. In the following example, the\nsequence of values produced by RAND(3) is the same both places it\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> CREATE TABLE t (i INT);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.61914388706828 |\n|    2 | 0.93845168309142 |\n|    3 | 0.83482678498591 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND() FROM t;\n+------+------------------+\n| i    | RAND()           |\n+------+------------------+\n|    1 | 0.35877890638893 |\n|    2 | 0.28941420772058 |\n|    3 | 0.37073435016976 |\n+------+------------------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT i, RAND(3) FROM t;\n+------+------------------+\n| i    | RAND(3)          |\n+------+------------------+\n|    1 | 0.90576975597606 |\n|    2 | 0.37307905813035 |\n|    3 | 0.14808605345719 |\n+------+------------------+\n3 rows in set (0.01 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(163,'ROUND',14,'Syntax:\nROUND(X), ROUND(X,D)\n\nRounds the argument X to D decimal places. The rounding algorithm\ndepends on the data type of X. D defaults to 0 if not specified. D can\nbe negative to cause D digits left of the decimal point of the value X\nto become zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT ROUND(-1.23);\n        -> -1\nmysql> SELECT ROUND(-1.58);\n        -> -2\nmysql> SELECT ROUND(1.58);\n        -> 2\nmysql> SELECT ROUND(1.298, 1);\n        -> 1.3\nmysql> SELECT ROUND(1.298, 0);\n        -> 1\nmysql> SELECT ROUND(23.298, -1);\n        -> 20\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(164,'SIGN',14,'Syntax:\nSIGN(X)\n\nReturns the sign of the argument as -1, 0, or 1, depending on whether X\nis negative, zero, or positive.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT SIGN(-32);\n        -> -1\nmysql> SELECT SIGN(0);\n        -> 0\nmysql> SELECT SIGN(234);\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(165,'SIN',14,'Syntax:\nSIN(X)\n\nReturns the sine of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT SIN(PI());\n        -> 1.2246063538224e-16\nmysql> SELECT ROUND(SIN(PI()));\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(166,'SQRT',14,'Syntax:\nSQRT(X)\n\nReturns the square root of a nonnegative number X.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT SQRT(4);\n        -> 2\nmysql> SELECT SQRT(20);\n        -> 4.4721359549996\nmysql> SELECT SQRT(-16);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(167,'TAN',14,'Syntax:\nTAN(X)\n\nReturns the tangent of X, where X is given in radians.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT TAN(PI());\n        -> -1.2246063538224e-16\nmysql> SELECT TAN(PI()+1);\n        -> 1.5574077246549\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(168,'TRUNCATE',14,'Syntax:\nTRUNCATE(X,D)\n\nReturns the number X, truncated to D decimal places. If D is 0, the\nresult has no decimal point or fractional part. D can be negative to\ncause D digits left of the decimal point of the value X to become zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html\n\n','mysql> SELECT TRUNCATE(1.223,1);\n        -> 1.2\nmysql> SELECT TRUNCATE(1.999,1);\n        -> 1.9\nmysql> SELECT TRUNCATE(1.999,0);\n        -> 1\nmysql> SELECT TRUNCATE(-1.999,1);\n        -> -1.9\nmysql> SELECT TRUNCATE(122,-2);\n       -> 100\nmysql> SELECT TRUNCATE(10.28*100,0);\n       -> 1028\n','https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html'),(169,'ADDDATE',15,'Syntax:\nADDDATE(date,INTERVAL expr unit), ADDDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, ADDDATE()\nis a synonym for DATE_ADD(). The related function SUBDATE() is a\nsynonym for DATE_SUB(). For information on the INTERVAL unit argument,\nsee\nhttps://dev.mysql.com/doc/refman/5.7/en/expressions.html#temporal-inter\nvals.\n\nmysql> SELECT DATE_ADD(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\nmysql> SELECT ADDDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2008-02-02\'\n\nWhen invoked with the days form of the second argument, MySQL treats it\nas an integer number of days to be added to expr.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT ADDDATE(\'2008-01-02\', 31);\n        -> \'2008-02-02\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(170,'ADDTIME',15,'Syntax:\nADDTIME(expr1,expr2)\n\nADDTIME() adds expr2 to expr1 and returns the result. expr1 is a time\nor datetime expression, and expr2 is a time expression.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT ADDTIME(\'2007-12-31 23:59:59.999999\', \'1 1:1:1.000002\');\n        -> \'2008-01-02 01:01:01.000001\'\nmysql> SELECT ADDTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'03:00:01.999997\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(171,'CONVERT_TZ',15,'Syntax:\nCONVERT_TZ(dt,from_tz,to_tz)\n\nCONVERT_TZ() converts a datetime value dt from the time zone given by\nfrom_tz to the time zone given by to_tz and returns the resulting\nvalue. Time zones are specified as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html. This\nfunction returns NULL if the arguments are invalid.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'GMT\',\'MET\');\n        -> \'2004-01-01 13:00:00\'\nmysql> SELECT CONVERT_TZ(\'2004-01-01 12:00:00\',\'+00:00\',\'+10:00\');\n        -> \'2004-01-01 22:00:00\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(172,'CURDATE',15,'Syntax:\nCURDATE()\n\nReturns the current date as a value in \'YYYY-MM-DD\' or YYYYMMDD format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT CURDATE();\n        -> \'2008-06-13\'\nmysql> SELECT CURDATE() + 0;\n        -> 20080613\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(173,'CURRENT_DATE',15,'Syntax:\nCURRENT_DATE, CURRENT_DATE()\n\nCURRENT_DATE and CURRENT_DATE() are synonyms for CURDATE().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(174,'CURRENT_TIME',15,'Syntax:\nCURRENT_TIME, CURRENT_TIME([fsp])\n\nCURRENT_TIME and CURRENT_TIME() are synonyms for CURTIME().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(175,'CURRENT_TIMESTAMP',15,'Syntax:\nCURRENT_TIMESTAMP, CURRENT_TIMESTAMP([fsp])\n\nCURRENT_TIMESTAMP and CURRENT_TIMESTAMP() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(176,'CURTIME',15,'Syntax:\nCURTIME([fsp])\n\nReturns the current time as a value in \'hh:mm:ss\' or hhmmss format,\ndepending on whether the function is used in a string or numeric\ncontext. The value is expressed in the session time zone.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT CURTIME();\n        -> \'23:50:26\'\nmysql> SELECT CURTIME() + 0;\n        -> 235026.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(177,'DATE FUNCTION',15,'Syntax:\nDATE(expr)\n\nExtracts the date part of the date or datetime expression expr.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE(\'2003-12-31 01:02:03\');\n        -> \'2003-12-31\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(178,'DATEDIFF',15,'Syntax:\nDATEDIFF(expr1,expr2)\n\nDATEDIFF() returns expr1 − expr2 expressed as a value in days from\none date to the other. expr1 and expr2 are date or date-and-time\nexpressions. Only the date parts of the values are used in the\ncalculation.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATEDIFF(\'2007-12-31 23:59:59\',\'2007-12-30\');\n        -> 1\nmysql> SELECT DATEDIFF(\'2010-11-30 23:59:59\',\'2010-12-31\');\n        -> -31\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(179,'DATE_ADD',15,'Syntax:\nDATE_ADD(date,INTERVAL expr unit), DATE_SUB(date,INTERVAL expr unit)\n\nThese functions perform date arithmetic. The date argument specifies\nthe starting date or datetime value. expr is an expression specifying\nthe interval value to be added or subtracted from the starting date.\nexpr is evaluated as a string; it may start with a - for negative\nintervals. unit is a keyword indicating the units in which the\nexpression should be interpreted.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_ADD(\'2018-05-01\',INTERVAL 1 DAY);\n        -> \'2018-05-02\'\nmysql> SELECT DATE_SUB(\'2018-05-01\',INTERVAL 1 YEAR);\n        -> \'2017-05-01\'\nmysql> SELECT DATE_ADD(\'2020-12-31 23:59:59\',\n    ->                 INTERVAL 1 SECOND);\n        -> \'2021-01-01 00:00:00\'\nmysql> SELECT DATE_ADD(\'2018-12-31 23:59:59\',\n    ->                 INTERVAL 1 DAY);\n        -> \'2019-01-01 23:59:59\'\nmysql> SELECT DATE_ADD(\'2100-12-31 23:59:59\',\n    ->                 INTERVAL \'1:1\' MINUTE_SECOND);\n        -> \'2101-01-01 00:01:00\'\nmysql> SELECT DATE_SUB(\'2025-01-01 00:00:00\',\n    ->                 INTERVAL \'1 1:1:1\' DAY_SECOND);\n        -> \'2024-12-30 22:58:59\'\nmysql> SELECT DATE_ADD(\'1900-01-01 00:00:00\',\n    ->                 INTERVAL \'-1 10\' DAY_HOUR);\n        -> \'1899-12-30 14:00:00\'\nmysql> SELECT DATE_SUB(\'1998-01-02\', INTERVAL 31 DAY);\n        -> \'1997-12-02\'\nmysql> SELECT DATE_ADD(\'1992-12-31 23:59:59.000002\',\n    ->            INTERVAL \'1.999999\' SECOND_MICROSECOND);\n        -> \'1993-01-01 00:00:01.000001\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(180,'DATE_FORMAT',15,'Syntax:\nDATE_FORMAT(date,format)\n\nFormats the date value according to the format string.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_FORMAT(\'2009-10-04 22:23:00\', \'%W %M %Y\');\n        -> \'Sunday October 2009\'\nmysql> SELECT DATE_FORMAT(\'2007-10-04 22:23:00\', \'%H:%i:%s\');\n        -> \'22:23:00\'\nmysql> SELECT DATE_FORMAT(\'1900-10-04 22:23:00\',\n    ->                 \'%D %y %a %d %m %b %j\');\n        -> \'4th 00 Thu 04 10 Oct 277\'\nmysql> SELECT DATE_FORMAT(\'1997-10-04 22:23:00\',\n    ->                 \'%H %k %I %r %T %S %w\');\n        -> \'22 22 10 10:23:00 PM 22:23:00 00 6\'\nmysql> SELECT DATE_FORMAT(\'1999-01-01\', \'%X %V\');\n        -> \'1998 52\'\nmysql> SELECT DATE_FORMAT(\'2006-06-00\', \'%d\');\n        -> \'00\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(181,'DATE_SUB',15,'Syntax:\nDATE_SUB(date,INTERVAL expr unit)\n\nSee the description for DATE_ADD().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(182,'DAY',15,'Syntax:\nDAY(date)\n\nDAY() is a synonym for DAYOFMONTH().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(183,'DAYNAME',15,'Syntax:\nDAYNAME(date)\n\nReturns the name of the weekday for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(https://dev.mysql.com/doc/refman/5.7/en/locale-support.html).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYNAME(\'2007-02-03\');\n        -> \'Saturday\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(184,'DAYOFMONTH',15,'Syntax:\nDAYOFMONTH(date)\n\nReturns the day of the month for date, in the range 1 to 31, or 0 for\ndates such as \'0000-00-00\' or \'2008-00-00\' that have a zero day part.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFMONTH(\'2007-02-03\');\n        -> 3\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(185,'DAYOFWEEK',15,'Syntax:\nDAYOFWEEK(date)\n\nReturns the weekday index for date (1 = Sunday, 2 = Monday, ..., 7 =\nSaturday). These index values correspond to the ODBC standard.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFWEEK(\'2007-02-03\');\n        -> 7\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(186,'DAYOFYEAR',15,'Syntax:\nDAYOFYEAR(date)\n\nReturns the day of the year for date, in the range 1 to 366.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DAYOFYEAR(\'2007-02-03\');\n        -> 34\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(187,'EXTRACT',15,'Syntax:\nEXTRACT(unit FROM date)\n\nThe EXTRACT() function uses the same kinds of unit specifiers as\nDATE_ADD() or DATE_SUB(), but extracts parts from the date rather than\nperforming date arithmetic. For information on the unit argument, see\nhttps://dev.mysql.com/doc/refman/5.7/en/expressions.html#temporal-inter\nvals.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT EXTRACT(YEAR FROM \'2019-07-02\');\n        -> 2019\nmysql> SELECT EXTRACT(YEAR_MONTH FROM \'2019-07-02 01:02:03\');\n        -> 201907\nmysql> SELECT EXTRACT(DAY_MINUTE FROM \'2019-07-02 01:02:03\');\n        -> 20102\nmysql> SELECT EXTRACT(MICROSECOND\n    ->                FROM \'2003-01-02 10:30:00.000123\');\n        -> 123\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(188,'FROM_DAYS',15,'Syntax:\nFROM_DAYS(N)\n\nGiven a day number N, returns a DATE value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT FROM_DAYS(730669);\n        -> \'2000-07-03\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(189,'FROM_UNIXTIME',15,'Syntax:\nFROM_UNIXTIME(unix_timestamp[,format])\n\nReturns a representation of the unix_timestamp argument as a value in\n\'YYYY-MM-DD hh:mm:ss\' or YYYYMMDDhhmmss.uuuuuu format, depending on\nwhether the function is used in a string or numeric context.\nunix_timestamp is an internal timestamp value representing seconds\nsince \'1970-01-01 00:00:00\' UTC, such as produced by the\nUNIX_TIMESTAMP() function.\n\nThe return value is expressed in the session time zone. (Clients can\nset the session time zone as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html.) The\nformat string, if given, is used to format the result the same way as\ndescribed in the entry for the DATE_FORMAT() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT FROM_UNIXTIME(1447430881);\n        -> \'2015-11-13 10:08:01\'\nmysql> SELECT FROM_UNIXTIME(1447430881) + 0;\n        -> 20151113100801\nmysql> SELECT FROM_UNIXTIME(1447430881,\n    ->                      \'%Y %D %M %h:%i:%s %x\');\n        -> \'2015 13th November 10:08:01 2015\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(190,'GET_FORMAT',15,'Syntax:\nGET_FORMAT({DATE|TIME|DATETIME}, {\'EUR\'|\'USA\'|\'JIS\'|\'ISO\'|\'INTERNAL\'})\n\nReturns a format string. This function is useful in combination with\nthe DATE_FORMAT() and the STR_TO_DATE() functions.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT DATE_FORMAT(\'2003-10-03\',GET_FORMAT(DATE,\'EUR\'));\n        -> \'03.10.2003\'\nmysql> SELECT STR_TO_DATE(\'10.31.2003\',GET_FORMAT(DATE,\'USA\'));\n        -> \'2003-10-31\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(191,'HOUR',15,'Syntax:\nHOUR(time)\n\nReturns the hour for time. The range of the return value is 0 to 23 for\ntime-of-day values. However, the range of TIME values actually is much\nlarger, so HOUR can return values greater than 23.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT HOUR(\'10:05:03\');\n        -> 10\nmysql> SELECT HOUR(\'272:59:59\');\n        -> 272\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(192,'LAST_DAY',15,'Syntax:\nLAST_DAY(date)\n\nTakes a date or datetime value and returns the corresponding value for\nthe last day of the month. Returns NULL if the argument is invalid.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT LAST_DAY(\'2003-02-05\');\n        -> \'2003-02-28\'\nmysql> SELECT LAST_DAY(\'2004-02-05\');\n        -> \'2004-02-29\'\nmysql> SELECT LAST_DAY(\'2004-01-01 01:01:01\');\n        -> \'2004-01-31\'\nmysql> SELECT LAST_DAY(\'2003-03-32\');\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(193,'LOCALTIME',15,'Syntax:\nLOCALTIME, LOCALTIME([fsp])\n\nLOCALTIME and LOCALTIME() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(194,'LOCALTIMESTAMP',15,'Syntax:\nLOCALTIMESTAMP, LOCALTIMESTAMP([fsp])\n\nLOCALTIMESTAMP and LOCALTIMESTAMP() are synonyms for NOW().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(195,'MAKEDATE',15,'Syntax:\nMAKEDATE(year,dayofyear)\n\nReturns a date, given year and day-of-year values. dayofyear must be\ngreater than 0 or the result is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MAKEDATE(2011,31), MAKEDATE(2011,32);\n        -> \'2011-01-31\', \'2011-02-01\'\nmysql> SELECT MAKEDATE(2011,365), MAKEDATE(2014,365);\n        -> \'2011-12-31\', \'2014-12-31\'\nmysql> SELECT MAKEDATE(2011,0);\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(196,'MAKETIME',15,'Syntax:\nMAKETIME(hour,minute,second)\n\nReturns a time value calculated from the hour, minute, and second\narguments.\n\nThe second argument can have a fractional part.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MAKETIME(12,15,30);\n        -> \'12:15:30\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(197,'MICROSECOND',15,'Syntax:\nMICROSECOND(expr)\n\nReturns the microseconds from the time or datetime expression expr as a\nnumber in the range from 0 to 999999.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MICROSECOND(\'12:00:00.123456\');\n        -> 123456\nmysql> SELECT MICROSECOND(\'2019-12-31 23:59:59.000010\');\n        -> 10\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(198,'MINUTE',15,'Syntax:\nMINUTE(time)\n\nReturns the minute for time, in the range 0 to 59.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MINUTE(\'2008-02-03 10:05:03\');\n        -> 5\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(199,'MONTH',15,'Syntax:\nMONTH(date)\n\nReturns the month for date, in the range 1 to 12 for January to\nDecember, or 0 for dates such as \'0000-00-00\' or \'2008-00-00\' that have\na zero month part.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MONTH(\'2008-02-03\');\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(200,'MONTHNAME',15,'Syntax:\nMONTHNAME(date)\n\nReturns the full name of the month for date. The language used for the\nname is controlled by the value of the lc_time_names system variable\n(https://dev.mysql.com/doc/refman/5.7/en/locale-support.html).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT MONTHNAME(\'2008-02-03\');\n        -> \'February\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(201,'NOW',15,'Syntax:\nNOW([fsp])\n\nReturns the current date and time as a value in \'YYYY-MM-DD hh:mm:ss\'\nor YYYYMMDDhhmmss format, depending on whether the function is used in\na string or numeric context. The value is expressed in the session time\nzone.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT NOW();\n        -> \'2007-12-15 23:50:26\'\nmysql> SELECT NOW() + 0;\n        -> 20071215235026.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(202,'PERIOD_ADD',15,'Syntax:\nPERIOD_ADD(P,N)\n\nAdds N months to period P (in the format YYMM or YYYYMM). Returns a\nvalue in the format YYYYMM.\n\n*Note*:\n\nThe period argument P is not a date value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT PERIOD_ADD(200801,2);\n        -> 200803\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(203,'PERIOD_DIFF',15,'Syntax:\nPERIOD_DIFF(P1,P2)\n\nReturns the number of months between periods P1 and P2. P1 and P2\nshould be in the format YYMM or YYYYMM. Note that the period arguments\nP1 and P2 are not date values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT PERIOD_DIFF(200802,200703);\n        -> 11\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(204,'QUARTER',15,'Syntax:\nQUARTER(date)\n\nReturns the quarter of the year for date, in the range 1 to 4.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT QUARTER(\'2008-04-01\');\n        -> 2\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(205,'SECOND',15,'Syntax:\nSECOND(time)\n\nReturns the second for time, in the range 0 to 59.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT SECOND(\'10:05:03\');\n        -> 3\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(206,'SEC_TO_TIME',15,'Syntax:\nSEC_TO_TIME(seconds)\n\nReturns the seconds argument, converted to hours, minutes, and seconds,\nas a TIME value. The range of the result is constrained to that of the\nTIME data type. A warning occurs if the argument corresponds to a value\noutside that range.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT SEC_TO_TIME(2378);\n        -> \'00:39:38\'\nmysql> SELECT SEC_TO_TIME(2378) + 0;\n        -> 3938\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(207,'STR_TO_DATE',15,'Syntax:\nSTR_TO_DATE(str,format)\n\nThis is the inverse of the DATE_FORMAT() function. It takes a string\nstr and a format string format. STR_TO_DATE() returns a DATETIME value\nif the format string contains both date and time parts, or a DATE or\nTIME value if the string contains only date or time parts. If the date,\ntime, or datetime value extracted from str is illegal, STR_TO_DATE()\nreturns NULL and produces a warning.\n\nThe server scans str attempting to match format to it. The format\nstring can contain literal characters and format specifiers beginning\nwith %. Literal characters in format must match literally in str.\nFormat specifiers in format must match a date or time part in str. For\nthe specifiers that can be used in format, see the DATE_FORMAT()\nfunction description.\n\nmysql> SELECT STR_TO_DATE(\'01,5,2013\',\'%d,%m,%Y\');\n        -> \'2013-05-01\'\nmysql> SELECT STR_TO_DATE(\'May 1, 2013\',\'%M %d,%Y\');\n        -> \'2013-05-01\'\n\nScanning starts at the beginning of str and fails if format is found\nnot to match. Extra characters at the end of str are ignored.\n\nmysql> SELECT STR_TO_DATE(\'a09:30:17\',\'a%h:%i:%s\');\n        -> \'09:30:17\'\nmysql> SELECT STR_TO_DATE(\'a09:30:17\',\'%h:%i:%s\');\n        -> NULL\nmysql> SELECT STR_TO_DATE(\'09:30:17a\',\'%h:%i:%s\');\n        -> \'09:30:17\'\n\nUnspecified date or time parts have a value of 0, so incompletely\nspecified values in str produce a result with some or all parts set to\n0:\n\nmysql> SELECT STR_TO_DATE(\'abc\',\'abc\');\n        -> \'0000-00-00\'\nmysql> SELECT STR_TO_DATE(\'9\',\'%m\');\n        -> \'0000-09-00\'\nmysql> SELECT STR_TO_DATE(\'9\',\'%s\');\n        -> \'00:00:09\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(208,'SUBDATE',15,'Syntax:\nSUBDATE(date,INTERVAL expr unit), SUBDATE(expr,days)\n\nWhen invoked with the INTERVAL form of the second argument, SUBDATE()\nis a synonym for DATE_SUB(). For information on the INTERVAL unit\nargument, see the discussion for DATE_ADD().\n\nmysql> SELECT DATE_SUB(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\nmysql> SELECT SUBDATE(\'2008-01-02\', INTERVAL 31 DAY);\n        -> \'2007-12-02\'\n\nThe second form enables the use of an integer value for days. In such\ncases, it is interpreted as the number of days to be subtracted from\nthe date or datetime expression expr.\n\nmysql> SELECT SUBDATE(\'2008-01-02 12:00:00\', 31);\n        -> \'2007-12-02 12:00:00\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(209,'SUBTIME',15,'Syntax:\nSUBTIME(expr1,expr2)\n\nSUBTIME() returns expr1 − expr2 expressed as a value in the same\nformat as expr1. expr1 is a time or datetime expression, and expr2 is a\ntime expression.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT SUBTIME(\'2007-12-31 23:59:59.999999\',\'1 1:1:1.000002\');\n        -> \'2007-12-30 22:58:58.999997\'\nmysql> SELECT SUBTIME(\'01:00:00.999999\', \'02:00:00.999998\');\n        -> \'-00:59:59.999999\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(210,'SYSDATE',15,'Syntax:\nSYSDATE([fsp])\n\nReturns the current date and time as a value in \'YYYY-MM-DD hh:mm:ss\'\nor YYYYMMDDhhmmss format, depending on whether the function is used in\na string or numeric context.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nSYSDATE() returns the time at which it executes. This differs from the\nbehavior for NOW(), which returns a constant time that indicates the\ntime at which the statement began to execute. (Within a stored function\nor trigger, NOW() returns the time at which the function or triggering\nstatement began to execute.)\n\nmysql> SELECT NOW(), SLEEP(2), NOW();\n+---------------------+----------+---------------------+\n| NOW()               | SLEEP(2) | NOW()               |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:36 |        0 | 2006-04-12 13:47:36 |\n+---------------------+----------+---------------------+\n\nmysql> SELECT SYSDATE(), SLEEP(2), SYSDATE();\n+---------------------+----------+---------------------+\n| SYSDATE()           | SLEEP(2) | SYSDATE()           |\n+---------------------+----------+---------------------+\n| 2006-04-12 13:47:44 |        0 | 2006-04-12 13:47:46 |\n+---------------------+----------+---------------------+\n\nIn addition, the SET TIMESTAMP statement affects the value returned by\nNOW() but not by SYSDATE(). This means that timestamp settings in the\nbinary log have no effect on invocations of SYSDATE().\n\nBecause SYSDATE() can return different values even within the same\nstatement, and is not affected by SET TIMESTAMP, it is nondeterministic\nand therefore unsafe for replication if statement-based binary logging\nis used. If that is a problem, you can use row-based logging.\n\nAlternatively, you can use the --sysdate-is-now option to cause\nSYSDATE() to be an alias for NOW(). This works if the option is used on\nboth the master and the slave.\n\nThe nondeterministic nature of SYSDATE() also means that indexes cannot\nbe used for evaluating expressions that refer to it.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(211,'TIME FUNCTION',15,'Syntax:\nTIME(expr)\n\nExtracts the time part of the time or datetime expression expr and\nreturns it as a string.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIME(\'2003-12-31 01:02:03\');\n        -> \'01:02:03\'\nmysql> SELECT TIME(\'2003-12-31 01:02:03.000123\');\n        -> \'01:02:03.000123\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(212,'TIMEDIFF',15,'Syntax:\nTIMEDIFF(expr1,expr2)\n\nTIMEDIFF() returns expr1 − expr2 expressed as a time value. expr1 and\nexpr2 are time or date-and-time expressions, but both must be of the\nsame type.\n\nThe result returned by TIMEDIFF() is limited to the range allowed for\nTIME values. Alternatively, you can use either of the functions\nTIMESTAMPDIFF() and UNIX_TIMESTAMP(), both of which return integers.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMEDIFF(\'2000:01:01 00:00:00\',\n    ->                 \'2000:01:01 00:00:00.000001\');\n        -> \'-00:00:00.000001\'\nmysql> SELECT TIMEDIFF(\'2008-12-31 23:59:59.000001\',\n    ->                 \'2008-12-30 01:01:01.000002\');\n        -> \'46:58:57.999999\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(213,'TIMESTAMP FUNCTION',15,'Syntax:\nTIMESTAMP(expr), TIMESTAMP(expr1,expr2)\n\nWith a single argument, this function returns the date or datetime\nexpression expr as a datetime value. With two arguments, it adds the\ntime expression expr2 to the date or datetime expression expr1 and\nreturns the result as a datetime value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMP(\'2003-12-31\');\n        -> \'2003-12-31 00:00:00\'\nmysql> SELECT TIMESTAMP(\'2003-12-31 12:00:00\',\'12:00:00\');\n        -> \'2004-01-01 00:00:00\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(214,'TIMESTAMPADD',15,'Syntax:\nTIMESTAMPADD(unit,interval,datetime_expr)\n\nAdds the integer expression interval to the date or datetime expression\ndatetime_expr. The unit for interval is given by the unit argument,\nwhich should be one of the following values: MICROSECOND\n(microseconds), SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or\nYEAR.\n\nThe unit value may be specified using one of keywords as shown, or with\na prefix of SQL_TSI_. For example, DAY and SQL_TSI_DAY both are legal.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMPADD(MINUTE,1,\'2003-01-02\');\n        -> \'2003-01-02 00:01:00\'\nmysql> SELECT TIMESTAMPADD(WEEK,1,\'2003-01-02\');\n        -> \'2003-01-09\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(215,'TIMESTAMPDIFF',15,'Syntax:\nTIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2)\n\nReturns datetime_expr2 − datetime_expr1, where datetime_expr1 and\ndatetime_expr2 are date or datetime expressions. One expression may be\na date and the other a datetime; a date value is treated as a datetime\nhaving the time part \'00:00:00\' where necessary. The unit for the\nresult (an integer) is given by the unit argument. The legal values for\nunit are the same as those listed in the description of the\nTIMESTAMPADD() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIMESTAMPDIFF(MONTH,\'2003-02-01\',\'2003-05-01\');\n        -> 3\nmysql> SELECT TIMESTAMPDIFF(YEAR,\'2002-05-01\',\'2001-01-01\');\n        -> -1\nmysql> SELECT TIMESTAMPDIFF(MINUTE,\'2003-02-01\',\'2003-05-01 12:05:55\');\n        -> 128885\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(216,'TIME_FORMAT',15,'Syntax:\nTIME_FORMAT(time,format)\n\nThis is used like the DATE_FORMAT() function, but the format string may\ncontain format specifiers only for hours, minutes, seconds, and\nmicroseconds. Other specifiers produce a NULL value or 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIME_FORMAT(\'100:00:00\', \'%H %k %h %I %l\');\n        -> \'100 100 04 04 4\'\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(217,'TIME_TO_SEC',15,'Syntax:\nTIME_TO_SEC(time)\n\nReturns the time argument, converted to seconds.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TIME_TO_SEC(\'22:23:00\');\n        -> 80580\nmysql> SELECT TIME_TO_SEC(\'00:39:38\');\n        -> 2378\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(218,'TO_DAYS',15,'Syntax:\nTO_DAYS(date)\n\nGiven a date date, returns a day number (the number of days since year\n0).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TO_DAYS(950501);\n        -> 728779\nmysql> SELECT TO_DAYS(\'2007-10-07\');\n        -> 733321\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(219,'TO_SECONDS',15,'Syntax:\nTO_SECONDS(expr)\n\nGiven a date or datetime expr, returns the number of seconds since the\nyear 0. If expr is not a valid date or datetime value, returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT TO_SECONDS(950501);\n        -> 62966505600\nmysql> SELECT TO_SECONDS(\'2009-11-29\');\n        -> 63426672000\nmysql> SELECT TO_SECONDS(\'2009-11-29 13:43:32\');\n        -> 63426721412\nmysql> SELECT TO_SECONDS( NOW() );\n        -> 63426721458\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(220,'UNIX_TIMESTAMP',15,'Syntax:\nUNIX_TIMESTAMP([date])\n\nIf UNIX_TIMESTAMP() is called with no date argument, it returns a Unix\ntimestamp representing seconds since \'1970-01-01 00:00:00\' UTC.\n\nIf UNIX_TIMESTAMP() is called with a date argument, it returns the\nvalue of the argument as seconds since \'1970-01-01 00:00:00\' UTC. The\nserver interprets date as a value in the session time zone and converts\nit to an internal Unix timestamp value in UTC. (Clients can set the\nsession time zone as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/time-zone-support.html.) The\ndate argument may be a DATE, DATETIME, or TIMESTAMP string, or a number\nin YYMMDD, YYMMDDhhmmss, YYYYMMDD, or YYYYMMDDhhmmss format. If the\nargument includes a time part, it may optionally include a fractional\nseconds part.\n\nThe return value is an integer if no argument is given or the argument\ndoes not include a fractional seconds part, or DECIMAL if an argument\nis given that includes a fractional seconds part.\n\nWhen the date argument is a TIMESTAMP column, UNIX_TIMESTAMP() returns\nthe internal timestamp value directly, with no implicit\n\"string-to-Unix-timestamp\" conversion.\n\nThe valid range of argument values is the same as for the TIMESTAMP\ndata type: \'1970-01-01 00:00:01.000000\' UTC to \'2038-01-19\n03:14:07.999999\' UTC. If you pass an out-of-range date to\nUNIX_TIMESTAMP(), it returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UNIX_TIMESTAMP();\n        -> 1447431666\nmysql> SELECT UNIX_TIMESTAMP(\'2015-11-13 10:20:19\');\n        -> 1447431619\nmysql> SELECT UNIX_TIMESTAMP(\'2015-11-13 10:20:19.012\');\n        -> 1447431619.012\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(221,'UTC_DATE',15,'Syntax:\nUTC_DATE, UTC_DATE()\n\nReturns the current UTC date as a value in \'YYYY-MM-DD\' or YYYYMMDD\nformat, depending on whether the function is used in a string or\nnumeric context.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_DATE(), UTC_DATE() + 0;\n        -> \'2003-08-14\', 20030814\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(222,'UTC_TIME',15,'Syntax:\nUTC_TIME, UTC_TIME([fsp])\n\nReturns the current UTC time as a value in \'hh:mm:ss\' or hhmmss format,\ndepending on whether the function is used in a string or numeric\ncontext.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_TIME(), UTC_TIME() + 0;\n        -> \'18:07:53\', 180753.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(223,'UTC_TIMESTAMP',15,'Syntax:\nUTC_TIMESTAMP, UTC_TIMESTAMP([fsp])\n\nReturns the current UTC date and time as a value in \'YYYY-MM-DD\nhh:mm:ss\' or YYYYMMDDhhmmss format, depending on whether the function\nis used in a string or numeric context.\n\nIf the fsp argument is given to specify a fractional seconds precision\nfrom 0 to 6, the return value includes a fractional seconds part of\nthat many digits.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT UTC_TIMESTAMP(), UTC_TIMESTAMP() + 0;\n        -> \'2003-08-14 18:08:04\', 20030814180804.000000\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(224,'WEEK',15,'Syntax:\nWEEK(date[,mode])\n\nThis function returns the week number for date. The two-argument form\nof WEEK() enables you to specify whether the week starts on Sunday or\nMonday and whether the return value should be in the range from 0 to 53\nor from 1 to 53. If the mode argument is omitted, the value of the\ndefault_week_format system variable is used. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT WEEK(\'2008-02-20\');\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',0);\n        -> 7\nmysql> SELECT WEEK(\'2008-02-20\',1);\n        -> 8\nmysql> SELECT WEEK(\'2008-12-31\',1);\n        -> 53\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(225,'WEEKDAY',15,'Syntax:\nWEEKDAY(date)\n\nReturns the weekday index for date (0 = Monday, 1 = Tuesday, ... 6 =\nSunday).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT WEEKDAY(\'2008-02-03 22:23:00\');\n        -> 6\nmysql> SELECT WEEKDAY(\'2007-11-06\');\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(226,'WEEKOFYEAR',15,'Syntax:\nWEEKOFYEAR(date)\n\nReturns the calendar week of the date as a number in the range from 1\nto 53. WEEKOFYEAR() is a compatibility function that is equivalent to\nWEEK(date,3).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT WEEKOFYEAR(\'2008-02-20\');\n        -> 8\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(227,'YEAR',15,'Syntax:\nYEAR(date)\n\nReturns the year for date, in the range 1000 to 9999, or 0 for the\n\"zero\" date.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT YEAR(\'1987-01-01\');\n        -> 1987\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(228,'YEARWEEK',15,'Syntax:\nYEARWEEK(date), YEARWEEK(date,mode)\n\nReturns year and week for a date. The year in the result may be\ndifferent from the year in the date argument for the first and the last\nweek of the year.\n\nThe mode argument works exactly like the mode argument to WEEK(). For\nthe single-argument syntax, a mode value of 0 is used. Unlike WEEK(),\nthe value of default_week_format does not influence YEARWEEK().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html\n\n','mysql> SELECT YEARWEEK(\'1987-01-01\');\n        -> 198652\n','https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html'),(229,'MATCH AGAINST',13,'Syntax:\nMATCH (col1,col2,...) AGAINST (expr [search_modifier])\n\nMySQL has support for full-text indexing and searching:\n\no A full-text index in MySQL is an index of type FULLTEXT.\n\no Full-text indexes can be used only with InnoDB or MyISAM tables, and\n  can be created only for CHAR, VARCHAR, or TEXT columns.\n\no As of MySQL 5.7.6, MySQL provides a built-in full-text ngram parser\n  that supports Chinese, Japanese, and Korean (CJK), and an installable\n  MeCab full-text parser plugin for Japanese. Parsing differences are\n  outlined in\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-search-ngram.html,\n  and\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-search-mecab.html.\n\no A FULLTEXT index definition can be given in the CREATE TABLE\n  statement when a table is created, or added later using ALTER TABLE\n  or CREATE INDEX.\n\no For large data sets, it is much faster to load your data into a table\n  that has no FULLTEXT index and then create the index after that, than\n  to load data into a table that has an existing FULLTEXT index.\n\nFull-text searching is performed using MATCH() ... AGAINST syntax.\nMATCH() takes a comma-separated list that names the columns to be\nsearched. AGAINST takes a string to search for, and an optional\nmodifier that indicates what type of search to perform. The search\nstring must be a string value that is constant during query evaluation.\nThis rules out, for example, a table column because that can differ for\neach row.\n\nThere are three types of full-text searches:\n\no A natural language search interprets the search string as a phrase in\n  natural human language (a phrase in free text). There are no special\n  operators, with the exception of double quote (\") characters. The\n  stopword list applies. For more information about stopword lists, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-stopwords.html.\n\n  Full-text searches are natural language searches if the IN NATURAL\n  LANGUAGE MODE modifier is given or if no modifier is given. For more\n  information, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-natural-language.htm\n  l.\n\no A boolean search interprets the search string using the rules of a\n  special query language. The string contains the words to search for.\n  It can also contain operators that specify requirements such that a\n  word must be present or absent in matching rows, or that it should be\n  weighted higher or lower than usual. Certain common words (stopwords)\n  are omitted from the search index and do not match if present in the\n  search string. The IN BOOLEAN MODE modifier specifies a boolean\n  search. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-boolean.html.\n\no A query expansion search is a modification of a natural language\n  search. The search string is used to perform a natural language\n  search. Then words from the most relevant rows returned by the search\n  are added to the search string and the search is done again. The\n  query returns the rows from the second search. The IN NATURAL\n  LANGUAGE MODE WITH QUERY EXPANSION or WITH QUERY EXPANSION modifier\n  specifies a query expansion search. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/fulltext-query-expansion.html\n  .\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html\n\n','mysql> SELECT id, body, MATCH (title,body) AGAINST\n    (\'Security implications of running MySQL as root\'\n    IN NATURAL LANGUAGE MODE) AS score\n    FROM articles WHERE MATCH (title,body) AGAINST\n    (\'Security implications of running MySQL as root\'\n    IN NATURAL LANGUAGE MODE);\n+----+-------------------------------------+-----------------+\n| id | body                                | score           |\n+----+-------------------------------------+-----------------+\n|  4 | 1. Never run mysqld as root. 2. ... | 1.5219271183014 |\n|  6 | When configured properly, MySQL ... | 1.3114095926285 |\n+----+-------------------------------------+-----------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html'),(230,'BINARY OPERATOR',13,'Syntax:\nBINARY expr\n\nThe BINARY operator converts the expression to a binary string. A\ncommon use for BINARY is to force a character string comparison to be\ndone byte by byte rather than character by character, in effect\nbecoming case-sensitive. The BINARY operator also causes trailing\nspaces in comparisons to be significant.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html\n\n','mysql> SELECT \'a\' = \'A\';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'A\';\n        -> 0\nmysql> SELECT \'a\' = \'a \';\n        -> 1\nmysql> SELECT BINARY \'a\' = \'a \';\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html'),(231,'CAST',13,'Syntax:\nCAST(expr AS type)\n\nThe CAST() function takes an expression of any type and produces a\nresult value of the specified type, similar to CONVERT(). For more\ninformation, see the description of CONVERT().\n\nCAST() is standard SQL syntax.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html'),(232,'CONVERT',13,'Syntax:\nCONVERT(expr,type), CONVERT(expr USING transcoding_name)\n\nThe CONVERT() function takes an expression of any type and produces a\nresult value of the specified type.\n\nDiscussion of CONVERT(expr, type) syntax here also applies to CAST(expr\nAS type), which is equivalent.\n\nCONVERT(... USING ...) is standard SQL syntax. The non-USING form of\nCONVERT() is ODBC syntax.\n\nCONVERT() with USING converts data between different character sets. In\nMySQL, transcoding names are the same as the corresponding character\nset names. For example, this statement converts the string \'abc\' in the\ndefault character set to the corresponding string in the utf8 character\nset:\n\nSELECT CONVERT(\'abc\' USING utf8);\n\nCONVERT() without USING and CAST() take an expression and a type value\nspecifying the result type. These type values are permitted:\n\no BINARY[(N)]\n\n  Produces a string with the BINARY data type. See\n  https://dev.mysql.com/doc/refman/5.7/en/binary-varbinary.html for a\n  description of how this affects comparisons. If the optional length N\n  is given, BINARY(N) causes the cast to use no more than N bytes of\n  the argument. Values shorter than N bytes are padded with 0x00 bytes\n  to a length of N.\n\no CHAR[(N)] [charset_info]\n\n  Produces a string with the CHAR data type. If the optional length N\n  is given, CHAR(N) causes the cast to use no more than N characters of\n  the argument. No padding occurs for values shorter than N characters.\n\n  With no charset_info clause, CHAR produces a string with the default\n  character set. To specify the character set explicitly, these\n  charset_info values are permitted:\n\n  o CHARACTER SET charset_name: Produces a string with the given\n    character set.\n\n  o ASCII: Shorthand for CHARACTER SET latin1.\n\n  o UNICODE: Shorthand for CHARACTER SET ucs2.\n\n  In all cases, the string has the default collation for the character\n  set.\n\no DATE\n\n  Produces a DATE value.\n\no DATETIME\n\n  Produces a DATETIME value.\n\no DECIMAL[(M[,D])]\n\n  Produces a DECIMAL value. If the optional M and D values are given,\n  they specify the maximum number of digits (the precision) and the\n  number of digits following the decimal point (the scale).\n\no JSON (added in MySQL 5.7.8)\n\n  Produces a JSON value. For details on the rules for conversion of\n  values between JSON and other types, see\n  https://dev.mysql.com/doc/refman/5.7/en/json.html#json-comparison.\n\no NCHAR[(N)]\n\n  Like CHAR, but produces a string with the national character set. See\n  https://dev.mysql.com/doc/refman/5.7/en/charset-national.html.\n\n  Unlike CHAR, NCHAR does not permit trailing character set information\n  to be specified.\n\no SIGNED [INTEGER]\n\n  Produces a signed integer value.\n\no TIME\n\n  Produces a TIME value.\n\no UNSIGNED [INTEGER]\n\n  Produces an unsigned integer value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/cast-functions.html'),(233,'EXTRACTVALUE',13,'Syntax:\nExtractValue(xml_frag, xpath_expr)\n\nExtractValue() takes two string arguments, a fragment of XML markup\nxml_frag and an XPath expression xpath_expr (also known as a locator);\nit returns the text (CDATA) of the first text node which is a child of\nthe element or elements matched by the XPath expression.\n\nUsing this function is the equivalent of performing a match using the\nxpath_expr after appending /text(). In other words,\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b\') and\nExtractValue(\'<a><b>Sakila</b></a>\', \'/a/b/text()\') produce the same\nresult.\n\nIf multiple matches are found, the content of the first child text node\nof each matching element is returned (in the order matched) as a\nsingle, space-delimited string.\n\nIf no matching text node is found for the expression (including the\nimplicit /text())---for whatever reason, as long as xpath_expr is\nvalid, and xml_frag consists of elements which are properly nested and\nclosed---an empty string is returned. No distinction is made between a\nmatch on an empty element and no match at all. This is by design.\n\nIf you need to determine whether no matching element was found in\nxml_frag or such an element was found but contained no child text\nnodes, you should test the result of an expression that uses the XPath\ncount() function. For example, both of these statements return an empty\nstring, as shown here:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'/a/b\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'/a/b\') |\n+-------------------------------------+\n|                                     |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nHowever, you can determine whether there was actually a matching\nelement using the following:\n\nmysql> SELECT ExtractValue(\'<a><b/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><b/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 1                                   |\n+-------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> SELECT ExtractValue(\'<a><c/></a>\', \'count(/a/b)\');\n+-------------------------------------+\n| ExtractValue(\'<a><c/></a>\', \'count(/a/b)\') |\n+-------------------------------------+\n| 0                                   |\n+-------------------------------------+\n1 row in set (0.01 sec)\n\n*Important*:\n\nExtractValue() returns only CDATA, and does not return any tags that\nmight be contained within a matching tag, nor any of their content (see\nthe result returned as val1 in the following example).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html\n\n','mysql> SELECT\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a\') AS val1,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/a/b\') AS val2,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'//b\') AS val3,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b></a>\', \'/b\') AS val4,\n    ->   ExtractValue(\'<a>ccc<b>ddd</b><b>eee</b></a>\', \'//b\') AS val5;\n\n+------+------+------+------+---------+\n| val1 | val2 | val3 | val4 | val5    |\n+------+------+------+------+---------+\n| ccc  | ddd  | ddd  |      | ddd eee |\n+------+------+------+------+---------+\n','https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html'),(234,'UPDATEXML',13,'Syntax:\nUpdateXML(xml_target, xpath_expr, new_xml)\n\nThis function replaces a single portion of a given fragment of XML\nmarkup xml_target with a new XML fragment new_xml, and then returns the\nchanged XML. The portion of xml_target that is replaced matches an\nXPath expression xpath_expr supplied by the user.\n\nIf no expression matching xpath_expr is found, or if multiple matches\nare found, the function returns the original xml_target XML fragment.\nAll three arguments should be strings.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html\n\n','mysql> SELECT\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a\', \'<e>fff</e>\') AS val1,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/b\', \'<e>fff</e>\') AS val2,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'//b\', \'<e>fff</e>\') AS val3,\n    ->   UpdateXML(\'<a><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val4,\n    ->   UpdateXML(\'<a><d></d><b>ccc</b><d></d></a>\', \'/a/d\', \'<e>fff</e>\') AS val5\n    -> \\G\n\n*************************** 1. row ***************************\nval1: <e>fff</e>\nval2: <a><b>ccc</b><d></d></a>\nval3: <a><e>fff</e><d></d></a>\nval4: <a><b>ccc</b><e>fff</e></a>\nval5: <a><d></d><b>ccc</b><d></d></a>\n','https://dev.mysql.com/doc/refman/5.7/en/xml-functions.html'),(235,'|',16,'Syntax:\n|\n\nBitwise OR.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 29 | 15;\n        -> 31\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(236,'&',16,'Syntax:\n&\n\nBitwise AND.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 29 & 15;\n        -> 13\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(237,'^',16,'Syntax:\n^\n\nBitwise XOR.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 1 ^ 1;\n        -> 0\nmysql> SELECT 1 ^ 0;\n        -> 1\nmysql> SELECT 11 ^ 3;\n        -> 8\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(238,'<<',16,'Syntax:\n<<\n\nShifts a longlong (BIGINT) number to the left.\n\nThe result is an unsigned 64-bit integer. The value is truncated to 64\nbits. In particular, if the shift count is greater or equal to the\nwidth of an unsigned 64-bit number, the result is zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 1 << 2;\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(239,'>>',16,'Syntax:\n>>\n\nShifts a longlong (BIGINT) number to the right.\n\nThe result is an unsigned 64-bit integer. The value is truncated to 64\nbits. In particular, if the shift count is greater or equal to the\nwidth of an unsigned 64-bit number, the result is zero.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 4 >> 2;\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(240,'~',16,'Syntax:\n~\n\nInvert all bits.\n\nThe result is an unsigned 64-bit integer.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT 5 & ~1;\n        -> 4\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(241,'BIT_COUNT',16,'Syntax:\nBIT_COUNT(N)\n\nReturns the number of bits that are set in the argument N as an\nunsigned 64-bit integer, or NULL if the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html\n\n','mysql> SELECT BIT_COUNT(29), BIT_COUNT(b\'101010\');\n        -> 4, 3\n','https://dev.mysql.com/doc/refman/5.7/en/bit-functions.html'),(242,'AES_DECRYPT',17,'Syntax:\nAES_DECRYPT(crypt_str,key_str[,init_vector])\n\nThis function decrypts data using the official AES (Advanced Encryption\nStandard) algorithm. For more information, see the description of\nAES_ENCRYPT().\n\nThe optional initialization vector argument, init_vector, is available\nas of MySQL 5.7.4. As of that version, statements that use\nAES_DECRYPT() are unsafe for statement-based replication and cannot be\nstored in the query cache.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(243,'AES_ENCRYPT',17,'Syntax:\nAES_ENCRYPT(str,key_str[,init_vector])\n\nAES_ENCRYPT() and AES_DECRYPT() implement encryption and decryption of\ndata using the official AES (Advanced Encryption Standard) algorithm,\npreviously known as \"Rijndael.\" The AES standard permits various key\nlengths. By default these functions implement AES with a 128-bit key\nlength. As of MySQL 5.7.4, key lengths of 196 or 256 bits can be used,\nas described later. The key length is a trade off between performance\nand security.\n\nAES_ENCRYPT() encrypts the string str using the key string key_str and\nreturns a binary string containing the encrypted output. AES_DECRYPT()\ndecrypts the encrypted string crypt_str using the key string key_str\nand returns the original plaintext string. If either function argument\nis NULL, the function returns NULL.\n\nThe str and crypt_str arguments can be any length, and padding is\nautomatically added to str so it is a multiple of a block as required\nby block-based algorithms such as AES. This padding is automatically\nremoved by the AES_DECRYPT() function. The length of crypt_str can be\ncalculated using this formula:\n\n16 * (trunc(string_length / 16) + 1)\n\nFor a key length of 128 bits, the most secure way to pass a key to the\nkey_str argument is to create a truly random 128-bit value and pass it\nas a binary value. For example:\n\nINSERT INTO t\nVALUES (1,AES_ENCRYPT(\'text\',UNHEX(\'F3229A0B371ED2D9441B830D21A390C3\')));\n\nA passphrase can be used to generate an AES key by hashing the\npassphrase. For example:\n\nINSERT INTO t\nVALUES (1,AES_ENCRYPT(\'text\', UNHEX(SHA2(\'My secret passphrase\',512))));\n\nDo not pass a password or passphrase directly to crypt_str, hash it\nfirst. Previous versions of this documentation suggested the former\napproach, but it is no longer recommended as the examples shown here\nare more secure.\n\nIf AES_DECRYPT() detects invalid data or incorrect padding, it returns\nNULL. However, it is possible for AES_DECRYPT() to return a non-NULL\nvalue (possibly garbage) if the input data or the key is invalid.\n\nAs of MySQL 5.7.4, AES_ENCRYPT() and AES_DECRYPT() permit control of\nthe block encryption mode and take an optional init_vector\ninitialization vector argument:\n\no The block_encryption_mode system variable controls the mode for\n  block-based encryption algorithms. Its default value is aes-128-ecb,\n  which signifies encryption using a key length of 128 bits and ECB\n  mode. For a description of the permitted values of this variable, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\no The optional init_vector argument provides an initialization vector\n  for block encryption modes that require it.\n\nFor modes that require the optional init_vector argument, it must be 16\nbytes or longer (bytes in excess of 16 are ignored). An error occurs if\ninit_vector is missing.\n\nFor modes that do not require init_vector, it is ignored and a warning\nis generated if it is specified.\n\nA random string of bytes to use for the initialization vector can be\nproduced by calling RANDOM_BYTES(16). For encryption modes that require\nan initialization vector, the same vector must be used for encryption\nand decryption.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SET block_encryption_mode = \'aes-256-cbc\';\nmysql> SET @key_str = SHA2(\'My secret passphrase\',512);\nmysql> SET @init_vector = RANDOM_BYTES(16);\nmysql> SET @crypt_str = AES_ENCRYPT(\'text\',@key_str,@init_vector);\nmysql> SELECT AES_DECRYPT(@crypt_str,@key_str,@init_vector);\n+-----------------------------------------------+\n| AES_DECRYPT(@crypt_str,@key_str,@init_vector) |\n+-----------------------------------------------+\n| text                                          |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(244,'COMPRESS',17,'Syntax:\nCOMPRESS(string_to_compress)\n\nCompresses a string and returns the result as a binary string. This\nfunction requires MySQL to have been compiled with a compression\nlibrary such as zlib. Otherwise, the return value is always NULL. The\ncompressed string can be uncompressed with UNCOMPRESS().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',1000)));\n        -> 21\nmysql> SELECT LENGTH(COMPRESS(\'\'));\n        -> 0\nmysql> SELECT LENGTH(COMPRESS(\'a\'));\n        -> 13\nmysql> SELECT LENGTH(COMPRESS(REPEAT(\'a\',16)));\n        -> 15\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(245,'DECODE',17,'Syntax:\nDECODE(crypt_str,pass_str)\n\nDECODE() decrypts the encrypted string crypt_str using pass_str as the\npassword. crypt_str should be a string returned from ENCODE().\n\n*Note*:\n\nThe ENCODE() and DECODE() functions are deprecated in MySQL 5.7, will\nbe removed in a future MySQL release, and should no longer be used.\nConsider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(246,'DES_DECRYPT',17,'Syntax:\nDES_DECRYPT(crypt_str[,key_str])\n\nDecrypts a string encrypted with DES_ENCRYPT(). If an error occurs,\nthis function returns NULL.\n\nThis function works only if MySQL has been configured with SSL support.\nSee https://dev.mysql.com/doc/refman/5.7/en/encrypted-connections.html.\n\nIf no key_str argument is given, DES_DECRYPT() examines the first byte\nof the encrypted string to determine the DES key number that was used\nto encrypt the original string, and then reads the key from the DES key\nfile to decrypt the message. For this to work, the user must have the\nSUPER privilege. The key file can be specified with the --des-key-file\nserver option.\n\nIf you pass this function a key_str argument, that string is used as\nthe key for decrypting the message.\n\nIf the crypt_str argument does not appear to be an encrypted string,\nMySQL returns the given crypt_str.\n\n*Note*:\n\nThe DES_ENCRYPT() and DES_DECRYPT() functions are deprecated as of\nMySQL 5.7.6, will be removed in a future MySQL release, and should no\nlonger be used. Consider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(247,'DES_ENCRYPT',17,'Syntax:\nDES_ENCRYPT(str[,{key_num|key_str}])\n\nEncrypts the string with the given key using the Triple-DES algorithm.\n\nThis function works only if MySQL has been configured with SSL support.\nSee https://dev.mysql.com/doc/refman/5.7/en/encrypted-connections.html.\n\nThe encryption key to use is chosen based on the second argument to\nDES_ENCRYPT(), if one was given. With no argument, the first key from\nthe DES key file is used. With a key_num argument, the given key number\n(0 to 9) from the DES key file is used. With a key_str argument, the\ngiven key string is used to encrypt str.\n\nThe key file can be specified with the --des-key-file server option.\n\nThe return string is a binary string where the first character is\nCHAR(128 | key_num). If an error occurs, DES_ENCRYPT() returns NULL.\n\nThe 128 is added to make it easier to recognize an encrypted key. If\nyou use a string key, key_num is 127.\n\nThe string length for the result is given by this formula:\n\nnew_len = orig_len + (8 - (orig_len % 8)) + 1\n\nEach line in the DES key file has the following format:\n\nkey_num des_key_str\n\nEach key_num value must be a number in the range from 0 to 9. Lines in\nthe file may be in any order. des_key_str is the string that is used to\nencrypt the message. There should be at least one space between the\nnumber and the key. The first key is the default key that is used if\nyou do not specify any key argument to DES_ENCRYPT().\n\nYou can tell MySQL to read new key values from the key file with the\nFLUSH DES_KEY_FILE statement. This requires the RELOAD privilege.\n\nOne benefit of having a set of default keys is that it gives\napplications a way to check for the existence of encrypted column\nvalues, without giving the end user the right to decrypt those values.\n\n*Note*:\n\nThe DES_ENCRYPT() and DES_DECRYPT() functions are deprecated as of\nMySQL 5.7.6, will be removed in a future MySQL release, and should no\nlonger be used. Consider using AES_ENCRYPT() and AES_DECRYPT() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT customer_address FROM customer_table \n     > WHERE crypted_credit_card = DES_ENCRYPT(\'credit_card_number\');\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(248,'ENCODE',17,'Syntax:\nENCODE(str,pass_str)\n\nENCODE() encrypts str using pass_str as the password. The result is a\nbinary string of the same length as str. To decrypt the result, use\nDECODE().\n\n*Note*:\n\nThe ENCODE() and DECODE() functions are deprecated in MySQL 5.7, will\nbe removed in a future MySQL release, and should no longer be used.\n\nIf you still need to use ENCODE(), a salt value must be used with it to\nreduce risk. For example:\n\nENCODE(\'cleartext\', CONCAT(\'my_random_salt\',\'my_secret_password\'))\n\nA new random salt value must be used whenever a password is updated.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(249,'ENCRYPT',17,'Syntax:\nENCRYPT(str[,salt])\n\nEncrypts str using the Unix crypt() system call and returns a binary\nstring. The salt argument must be a string with at least two characters\nor the result will be NULL. If no salt argument is given, a random\nvalue is used.\n\n*Note*:\n\nThe ENCRYPT() function is deprecated as of MySQL 5.7.6, will be removed\nin a future MySQL release, and should no longer be used. For one-way\nhashing, consider using SHA2() instead.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT ENCRYPT(\'hello\');\n        -> \'VxuFAJXVARROc\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(250,'MD5',17,'Syntax:\nMD5(str)\n\nCalculates an MD5 128-bit checksum for the string. The value is\nreturned as a string of 32 hexadecimal digits, or NULL if the argument\nwas NULL. The return value can, for example, be used as a hash key. See\nthe notes at the beginning of this section about storing hash values\nefficiently.\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT MD5(\'testing\');\n        -> \'ae2b1fca515949e5d54fb22b8ed95575\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(251,'OLD_PASSWORD',17,'Syntax:\nOLD_PASSWORD(str)\n\nOLD_PASSWORD() was added when the implementation of PASSWORD() was\nchanged in MySQL 4.1 to improve security. OLD_PASSWORD() returned the\nvalue of the pre-4.1 implementation of PASSWORD() as a string, and was\nintended to permit you to reset passwords for any pre-4.1 clients that\nneed to connect to your MySQL server without locking them out. See\nhttps://dev.mysql.com/doc/refman/5.7/en/password-hashing.html.\n\nPasswords that use the pre-4.1 hashing method are less secure than\npasswords that use the native password hashing method. Support for\npre-4.1 passwords was removed in MySQL 5.7.5, as was OLD_PASSWORD().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(252,'PASSWORD',17,'Syntax:\nPASSWORD(str)\n\n*Note*:\n\nThis function is deprecated as of MySQL 5.7.6 and will be removed in a\nfuture MySQL release.\n\nReturns a hashed password string calculated from the cleartext password\nstr. The return value is a string in the connection character set, or\nNULL if the argument is NULL. This function is the SQL interface to the\nalgorithm used by the server to encrypt MySQL passwords for storage in\nthe mysql.user grant table.\n\nThe old_passwords system variable controls the password hashing method\nused by the PASSWORD() function. It also influences password hashing\nperformed by CREATE USER and GRANT statements that specify a password\nusing an IDENTIFIED BY clause.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(253,'RANDOM_BYTES',17,'Syntax:\nRANDOM_BYTES(len)\n\nThis function returns a binary string of len random bytes generated\nusing the random number generator of the SSL library. Permitted values\nof len range from 1 to 1024. For values outside that range,\nRANDOM_BYTES() generates a warning and returns NULL.\n\nRANDOM_BYTES() can be used to provide the initialization vector for the\nAES_DECRYPT() and AES_ENCRYPT() functions. For use in that context, len\nmust be at least 16. Larger values are permitted, but bytes in excess\nof 16 are ignored.\n\nRANDOM_BYTES() generates a random value, which makes its result\nnondeterministic. Consequently, statements that use this function are\nunsafe for statement-based replication and cannot be stored in the\nquery cache.\n\nThis function is available as of MySQL 5.7.4.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(254,'SHA1',17,'Syntax:\nSHA1(str), SHA(str)\n\nCalculates an SHA-1 160-bit checksum for the string, as described in\nRFC 3174 (Secure Hash Algorithm). The value is returned as a string of\n40 hexadecimal digits, or NULL if the argument was NULL. One of the\npossible uses for this function is as a hash key. See the notes at the\nbeginning of this section about storing hash values efficiently. SHA()\nis synonymous with SHA1().\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT SHA1(\'abc\');\n        -> \'a9993e364706816aba3e25717850c26c9cd0d89d\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(255,'SHA2',17,'Syntax:\nSHA2(str, hash_length)\n\nCalculates the SHA-2 family of hash functions (SHA-224, SHA-256,\nSHA-384, and SHA-512). The first argument is the plaintext string to be\nhashed. The second argument indicates the desired bit length of the\nresult, which must have a value of 224, 256, 384, 512, or 0 (which is\nequivalent to 256). If either argument is NULL or the hash length is\nnot one of the permitted values, the return value is NULL. Otherwise,\nthe function result is a hash value containing the desired number of\nbits. See the notes at the beginning of this section about storing hash\nvalues efficiently.\n\nThe return value is a string in the connection character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT SHA2(\'abc\', 224);\n        -> \'23097d223405d8228642a477bda255b32aadbce4bda0b3f7e36c9da7\'\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(256,'UNCOMPRESS',17,'Syntax:\nUNCOMPRESS(string_to_uncompress)\n\nUncompresses a string compressed by the COMPRESS() function. If the\nargument is not a compressed value, the result is NULL. This function\nrequires MySQL to have been compiled with a compression library such as\nzlib. Otherwise, the return value is always NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT UNCOMPRESS(COMPRESS(\'any string\'));\n        -> \'any string\'\nmysql> SELECT UNCOMPRESS(\'any string\');\n        -> NULL\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(257,'UNCOMPRESSED_LENGTH',17,'Syntax:\nUNCOMPRESSED_LENGTH(compressed_string)\n\nReturns the length that the compressed string had before being\ncompressed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','mysql> SELECT UNCOMPRESSED_LENGTH(COMPRESS(REPEAT(\'a\',30)));\n        -> 30\n','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(258,'VALIDATE_PASSWORD_STRENGTH',17,'Syntax:\nVALIDATE_PASSWORD_STRENGTH(str)\n\nGiven an argument representing a plaintext password, this function\nreturns an integer to indicate how strong the password is. The return\nvalue ranges from 0 (weak) to 100 (strong).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/encryption-functions.html'),(259,'GET_LOCK',18,'Syntax:\nGET_LOCK(str,timeout)\n\nTries to obtain a lock with a name given by the string str, using a\ntimeout of timeout seconds. A negative timeout value means infinite\ntimeout. The lock is exclusive. While held by one session, other\nsessions cannot obtain a lock of the same name.\n\nReturns 1 if the lock was obtained successfully, 0 if the attempt timed\nout (for example, because another client has previously locked the\nname), or NULL if an error occurred (such as running out of memory or\nthe thread was killed with mysqladmin kill).\n\nA lock obtained with GET_LOCK() is released explicitly by executing\nRELEASE_LOCK() or implicitly when your session terminates (either\nnormally or abnormally). Locks obtained with GET_LOCK() are not\nreleased when transactions commit or roll back.\n\nIn MySQL 5.7, GET_LOCK() was reimplemented using the metadata locking\n(MDL) subsystem and its capabilities were extended. Multiple\nsimultaneous locks can be acquired and GET_LOCK() does not release any\nexisting locks.\n\nIt is even possible for a given session to acquire multiple locks for\nthe same name. Other sessions cannot acquire a lock with that name\nuntil the acquiring session releases all its locks for the name.\n\nAs a result of the MDL reimplementation, uniquely named locks acquired\nwith GET_LOCK() appear in the Performance Schema metadata_locks table.\nThe OBJECT_TYPE column says USER LEVEL LOCK and the OBJECT_NAME column\nindicates the lock name. In the case that multiple locks are acquired\nfor the same name, only the first lock for the name registers a row in\nthe metadata_locks table. Subsequent locks for the name increment a\ncounter in the lock but do not acquire additional metadata locks. The\nmetadata_locks row for the lock is deleted when the last lock instance\non the name is released.\n\nThe capability of acquiring multiple locks means there is the\npossibility of deadlock among clients. When this happens, the server\nchooses a caller and terminates its lock-acquisition request with an\nER_USER_LOCK_DEADLOCK error. This error does not cause transactions to\nroll back.\n\nBefore MySQL 5.7, only a single simultaneous lock can be acquired and\nGET_LOCK() releases any existing lock. The difference in lock\nacquisition behavior as of MySQL 5.7 can be seen by the following\nexample. Suppose that you execute these statements:\n\nSELECT GET_LOCK(\'lock1\',10);\nSELECT GET_LOCK(\'lock2\',10);\nSELECT RELEASE_LOCK(\'lock2\');\nSELECT RELEASE_LOCK(\'lock1\');\n\nIn MySQL 5.7 or later, the second GET_LOCK() acquires a second lock and\nboth RELEASE_LOCK() calls return 1 (success). Before MySQL 5.7, the\nsecond GET_LOCK() releases the first lock (\'lock1\') and the second\nRELEASE_LOCK() returns NULL (failure) because there is no \'lock1\' to\nrelease.\n\nMySQL 5.7 and later enforces a maximum length on lock names of 64\ncharacters. Previously, no limit was enforced.\n\nGET_LOCK() can be used to implement application locks or to simulate\nrecord locks. Names are locked on a server-wide basis. If a name has\nbeen locked within one session, GET_LOCK() blocks any request by\nanother session for a lock with the same name. This enables clients\nthat agree on a given lock name to use the name to perform cooperative\nadvisory locking. But be aware that it also enables a client that is\nnot among the set of cooperating clients to lock a name, either\ninadvertently or deliberately, and thus prevent any of the cooperating\nclients from locking that name. One way to reduce the likelihood of\nthis is to use lock names that are database-specific or\napplication-specific. For example, use lock names of the form\ndb_name.str or app_name.str.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(260,'IS_FREE_LOCK',18,'Syntax:\nIS_FREE_LOCK(str)\n\nChecks whether the lock named str is free to use (that is, not locked).\nReturns 1 if the lock is free (no one is using the lock), 0 if the lock\nis in use, and NULL if an error occurs (such as an incorrect argument).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(261,'IS_USED_LOCK',18,'Syntax:\nIS_USED_LOCK(str)\n\nChecks whether the lock named str is in use (that is, locked). If so,\nit returns the connection identifier of the client session that holds\nthe lock. Otherwise, it returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(262,'RELEASE_ALL_LOCKS',18,'Syntax:\nRELEASE_ALL_LOCKS()\n\nReleases all named locks held by the current session and returns the\nnumber of locks released (0 if there were none)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(263,'RELEASE_LOCK',18,'Syntax:\nRELEASE_LOCK(str)\n\nReleases the lock named by the string str that was obtained with\nGET_LOCK(). Returns 1 if the lock was released, 0 if the lock was not\nestablished by this thread (in which case the lock is not released),\nand NULL if the named lock did not exist. The lock does not exist if it\nwas never obtained by a call to GET_LOCK() or if it has previously been\nreleased.\n\nThe DO statement is convenient to use with RELEASE_LOCK(). See [HELP\nDO].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/locking-functions.html'),(264,'BENCHMARK',19,'Syntax:\nBENCHMARK(count,expr)\n\nThe BENCHMARK() function executes the expression expr repeatedly count\ntimes. It may be used to time how quickly MySQL processes the\nexpression. The result value is always 0. The intended use is from\nwithin the mysql client, which reports query execution times:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT BENCHMARK(1000000,AES_ENCRYPT(\'hello\',\'goodbye\'));\n+---------------------------------------------------+\n| BENCHMARK(1000000,AES_ENCRYPT(\'hello\',\'goodbye\')) |\n+---------------------------------------------------+\n|                                                 0 |\n+---------------------------------------------------+\n1 row in set (4.74 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(265,'CHARSET',19,'Syntax:\nCHARSET(str)\n\nReturns the character set of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT CHARSET(\'abc\');\n        -> \'latin1\'\nmysql> SELECT CHARSET(CONVERT(\'abc\' USING utf8));\n        -> \'utf8\'\nmysql> SELECT CHARSET(USER());\n        -> \'utf8\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(266,'COERCIBILITY',19,'Syntax:\nCOERCIBILITY(str)\n\nReturns the collation coercibility value of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT COERCIBILITY(\'abc\' COLLATE latin1_swedish_ci);\n        -> 0\nmysql> SELECT COERCIBILITY(USER());\n        -> 3\nmysql> SELECT COERCIBILITY(\'abc\');\n        -> 4\nmysql> SELECT COERCIBILITY(1000);\n        -> 5\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(267,'COLLATION',19,'Syntax:\nCOLLATION(str)\n\nReturns the collation of the string argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT COLLATION(\'abc\');\n        -> \'latin1_swedish_ci\'\nmysql> SELECT COLLATION(_utf8\'abc\');\n        -> \'utf8_general_ci\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(268,'CONNECTION_ID',19,'Syntax:\nCONNECTION_ID()\n\nReturns the connection ID (thread ID) for the connection. Every\nconnection has an ID that is unique among the set of currently\nconnected clients.\n\nThe value returned by CONNECTION_ID() is the same type of value as\ndisplayed in the ID column of the INFORMATION_SCHEMA.PROCESSLIST table,\nthe Id column of SHOW PROCESSLIST output, and the PROCESSLIST_ID column\nof the Performance Schema threads table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT CONNECTION_ID();\n        -> 23786\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(269,'CURRENT_USER',19,'Syntax:\nCURRENT_USER, CURRENT_USER()\n\nReturns the user name and host name combination for the MySQL account\nthat the server used to authenticate the current client. This account\ndetermines your access privileges. The return value is a string in the\nutf8 character set.\n\nThe value of CURRENT_USER() can differ from the value of USER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT USER();\n        -> \'davida@localhost\'\nmysql> SELECT * FROM mysql.user;\nERROR 1044: Access denied for user \'\'@\'localhost\' to\ndatabase \'mysql\'\nmysql> SELECT CURRENT_USER();\n        -> \'@localhost\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(270,'DATABASE',19,'Syntax:\nDATABASE()\n\nReturns the default (current) database name as a string in the utf8\ncharacter set. If there is no default database, DATABASE() returns\nNULL. Within a stored routine, the default database is the database\nthat the routine is associated with, which is not necessarily the same\nas the database that is the default in the calling context.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT DATABASE();\n        -> \'test\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(271,'FOUND_ROWS',19,'Syntax:\nFOUND_ROWS()\n\nA SELECT statement may include a LIMIT clause to restrict the number of\nrows the server returns to the client. In some cases, it is desirable\nto know how many rows the statement would have returned without the\nLIMIT, but without running the statement again. To obtain this row\ncount, include an SQL_CALC_FOUND_ROWS option in the SELECT statement,\nand then invoke FOUND_ROWS() afterward:\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT SQL_CALC_FOUND_ROWS * FROM tbl_name\n    -> WHERE id > 100 LIMIT 10;\nmysql> SELECT FOUND_ROWS();\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(272,'LAST_INSERT_ID',19,'Syntax:\nLAST_INSERT_ID(), LAST_INSERT_ID(expr)\n\nWith no argument, LAST_INSERT_ID() returns a BIGINT UNSIGNED (64-bit)\nvalue representing the first automatically generated value successfully\ninserted for an AUTO_INCREMENT column as a result of the most recently\nexecuted INSERT statement. The value of LAST_INSERT_ID() remains\nunchanged if no rows are successfully inserted.\n\nWith an argument, LAST_INSERT_ID() returns an unsigned integer.\n\nFor example, after inserting a row that generates an AUTO_INCREMENT\nvalue, you can get the value like this:\n\nmysql> SELECT LAST_INSERT_ID();\n        -> 195\n\nThe currently executing statement does not affect the value of\nLAST_INSERT_ID(). Suppose that you generate an AUTO_INCREMENT value\nwith one statement, and then refer to LAST_INSERT_ID() in a\nmultiple-row INSERT statement that inserts rows into a table with its\nown AUTO_INCREMENT column. The value of LAST_INSERT_ID() will remain\nstable in the second statement; its value for the second and later rows\nis not affected by the earlier row insertions. (However, if you mix\nreferences to LAST_INSERT_ID() and LAST_INSERT_ID(expr), the effect is\nundefined.)\n\nIf the previous statement returned an error, the value of\nLAST_INSERT_ID() is undefined. For transactional tables, if the\nstatement is rolled back due to an error, the value of LAST_INSERT_ID()\nis left undefined. For manual ROLLBACK, the value of LAST_INSERT_ID()\nis not restored to that before the transaction; it remains as it was at\nthe point of the ROLLBACK.\n\nPrior to MySQL 5.7.3, this function was not replicated correctly if\nreplication filtering rules were in use. (Bug #17234370, Bug #69861)\n\nWithin the body of a stored routine (procedure or function) or a\ntrigger, the value of LAST_INSERT_ID() changes the same way as for\nstatements executed outside the body of these kinds of objects. The\neffect of a stored routine or trigger upon the value of\nLAST_INSERT_ID() that is seen by following statements depends on the\nkind of routine:\n\no If a stored procedure executes statements that change the value of\n  LAST_INSERT_ID(), the changed value is seen by statements that follow\n  the procedure call.\n\no For stored functions and triggers that change the value, the value is\n  restored when the function or trigger ends, so following statements\n  will not see a changed value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(273,'ROW_COUNT',19,'Syntax:\nROW_COUNT()\n\nROW_COUNT() returns a value as follows:\n\no DDL statements: 0. This applies to statements such as CREATE TABLE or\n  DROP TABLE.\n\no DML statements other than SELECT: The number of affected rows. This\n  applies to statements such as UPDATE, INSERT, or DELETE (as before),\n  but now also to statements such as ALTER TABLE and LOAD DATA.\n\no SELECT: -1 if the statement returns a result set, or the number of\n  rows \"affected\" if it does not. For example, for SELECT * FROM t1,\n  ROW_COUNT() returns -1. For SELECT * FROM t1 INTO OUTFILE\n  \'file_name\', ROW_COUNT() returns the number of rows written to the\n  file.\n\no SIGNAL statements: 0.\n\nFor UPDATE statements, the affected-rows value by default is the number\nof rows actually changed. If you specify the CLIENT_FOUND_ROWS flag to\nmysql_real_connect() when connecting to mysqld, the affected-rows value\nis the number of rows \"found\"; that is, matched by the WHERE clause.\n\nFor REPLACE statements, the affected-rows value is 2 if the new row\nreplaced an old row, because in this case, one row was inserted after\nthe duplicate was deleted.\n\nFor INSERT ... ON DUPLICATE KEY UPDATE statements, the affected-rows\nvalue per row is 1 if the row is inserted as a new row, 2 if an\nexisting row is updated, and 0 if an existing row is set to its current\nvalues. If you specify the CLIENT_FOUND_ROWS flag, the affected-rows\nvalue is 1 (not 0) if an existing row is set to its current values.\n\nThe ROW_COUNT() value is similar to the value from the\nmysql_affected_rows() C API function and the row count that the mysql\nclient displays following statement execution.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> INSERT INTO t VALUES(1),(2),(3);\nQuery OK, 3 rows affected (0.00 sec)\nRecords: 3  Duplicates: 0  Warnings: 0\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           3 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> DELETE FROM t WHERE i IN(1,2);\nQuery OK, 2 rows affected (0.00 sec)\n\nmysql> SELECT ROW_COUNT();\n+-------------+\n| ROW_COUNT() |\n+-------------+\n|           2 |\n+-------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(274,'SCHEMA',19,'Syntax:\nSCHEMA()\n\nThis function is a synonym for DATABASE().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(275,'SESSION_USER',19,'Syntax:\nSESSION_USER()\n\nSESSION_USER() is a synonym for USER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(276,'SYSTEM_USER',19,'Syntax:\nSYSTEM_USER()\n\nSYSTEM_USER() is a synonym for USER().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(277,'USER',19,'Syntax:\nUSER()\n\nReturns the current MySQL user name and host name as a string in the\nutf8 character set.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT USER();\n        -> \'davida@localhost\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(278,'VERSION',19,'Syntax:\nVERSION()\n\nReturns a string that indicates the MySQL server version. The string\nuses the utf8 character set. The value might have a suffix in addition\nto the version number. See the description of the version system\nvariable in\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/information-functions.html\n\n','mysql> SELECT VERSION();\n        -> \'5.7.28-standard\'\n','https://dev.mysql.com/doc/refman/5.7/en/information-functions.html'),(279,'GEOMCOLLFROMTEXT',21,'GeomCollFromText(wkt[, srid]), GeometryCollectionFromText(wkt[, srid])\n\nST_GeomCollFromText(), ST_GeometryCollectionFromText(),\nST_GeomCollFromTxt(), GeomCollFromText(), and\nGeometryCollectionFromText() are synonyms. For more information, see\nthe description of ST_GeomCollFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(280,'GEOMFROMTEXT',21,'GeomFromText(wkt[, srid]), GeometryFromText(wkt[, srid])\n\nST_GeomFromText(), ST_GeometryFromText(), GeomFromText(), and\nGeometryFromText() are synonyms. For more information, see the\ndescription of ST_GeomFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(281,'LINEFROMTEXT',21,'LineFromText(wkt[, srid]), LineStringFromText(wkt[, srid])\n\nST_LineFromText(), ST_LineStringFromText(), LineFromText(), and\nLineStringFromText() are synonyms. For more information, see the\ndescription of ST_LineFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(282,'MLINEFROMTEXT',21,'MLineFromText(wkt[, srid]), MultiLineStringFromText(wkt[, srid])\n\nST_MLineFromText(), ST_MultiLineStringFromText(), MLineFromText(), and\nMultiLineStringFromText() are synonyms. For more information, see the\ndescription of ST_MLineFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(283,'MPOINTFROMTEXT',21,'MPointFromText(wkt[, srid]), MultiPointFromText(wkt[, srid])\n\nST_MPointFromText(), ST_MultiPointFromText(), MPointFromText(), and\nMultiPointFromText() are synonyms. For more information, see the\ndescription of ST_MPointFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(284,'MPOLYFROMTEXT',21,'MPolyFromText(wkt[, srid]), MultiPolygonFromText(wkt[, srid])\n\nST_MPolyFromText(), ST_MultiPolygonFromText(), MPolyFromText(), and\nMultiPolygonFromText() are synonyms. For more information, see the\ndescription of ST_MPolyFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(285,'POINTFROMTEXT',21,'PointFromText(wkt[, srid])\n\nST_PointFromText() and PointFromText() are synonyms. For more\ninformation, see the description of ST_PointFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(286,'POLYFROMTEXT',21,'PolyFromText(wkt[, srid]), PolygonFromText(wkt[, srid])\n\nST_PolyFromText(), ST_PolygonFromText(), PolyFromText(), and\nPolygonFromText() are synonyms. For more information, see the\ndescription of ST_PolyFromText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(287,'ST_GEOMCOLLFROMTEXT',21,'ST_GeomCollFromText(wkt[, srid]), ST_GeometryCollectionFromText(wkt[,\nsrid]), ST_GeomCollFromTxt(wkt[, srid])\n\nConstructs a GeometryCollection value using its WKT representation and\nSRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','mysql> SET @g = \"MULTILINESTRING((10 10, 11 11), (9 9, 10 10))\";\nmysql> SELECT ST_AsText(ST_GeomCollFromText(@g));\n+--------------------------------------------+\n| ST_AsText(ST_GeomCollFromText(@g))         |\n+--------------------------------------------+\n| MULTILINESTRING((10 10,11 11),(9 9,10 10)) |\n+--------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(288,'ST_GEOMFROMTEXT',21,'ST_GeomFromText(wkt[, srid]), ST_GeometryFromText(wkt[, srid])\n\nConstructs a geometry value of any type using its WKT representation\nand SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(289,'ST_LINEFROMTEXT',21,'ST_LineFromText(wkt[, srid]), ST_LineStringFromText(wkt[, srid])\n\nConstructs a LineString value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(290,'ST_MLINEFROMTEXT',21,'ST_MLineFromText(wkt[, srid]), ST_MultiLineStringFromText(wkt[, srid])\n\nConstructs a MultiLineString value using its WKT representation and\nSRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(291,'ST_MPOINTFROMTEXT',21,'ST_MPointFromText(wkt[, srid]), ST_MultiPointFromText(wkt[, srid])\n\nConstructs a MultiPoint value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nAs of MySQL 5.7.9, spatial functions such as ST_MPointFromText() and\nST_GeomFromText() that accept WKT-format representations of MultiPoint\nvalues permit individual points within values to be surrounded by\nparentheses. For example, both of the following function calls are\nvalid, whereas before MySQL 5.7.9 the second one produces an error:\n\nST_MPointFromText(\'MULTIPOINT (1 1, 2 2, 3 3)\')\nST_MPointFromText(\'MULTIPOINT ((1 1), (2 2), (3 3))\')\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(292,'ST_MPOLYFROMTEXT',21,'ST_MPolyFromText(wkt[, srid]), ST_MultiPolygonFromText(wkt[, srid])\n\nConstructs a MultiPolygon value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(293,'ST_POINTFROMTEXT',21,'ST_PointFromText(wkt[, srid])\n\nConstructs a Point value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(294,'ST_POLYFROMTEXT',21,'ST_PolyFromText(wkt[, srid]), ST_PolygonFromText(wkt[, srid])\n\nConstructs a Polygon value using its WKT representation and SRID.\n\nIf the geometry argument is NULL or not a syntactically well-formed\ngeometry, or if the SRID argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkt-functions.html'),(295,'GEOMCOLLFROMWKB',22,'GeomCollFromWKB(wkb[, srid]), GeometryCollectionFromWKB(wkb[, srid])\n\nST_GeomCollFromWKB(), ST_GeometryCollectionFromWKB(),\nGeomCollFromWKB(), and GeometryCollectionFromWKB() are synonyms. For\nmore information, see the description of ST_GeomCollFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(296,'GEOMFROMWKB',22,'GeomFromWKB(wkb[, srid]), GeometryFromWKB(wkb[, srid])\n\nST_GeomFromWKB(), ST_GeometryFromWKB(), GeomFromWKB(), and\nGeometryFromWKB() are synonyms. For more information, see the\ndescription of ST_GeomFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(297,'LINEFROMWKB',22,'LineFromWKB(wkb[, srid]), LineStringFromWKB(wkb[, srid])\n\nST_LineFromWKB(), ST_LineStringFromWKB(), LineFromWKB(), and\nLineStringFromWKB() are synonyms. For more information, see the\ndescription of ST_LineFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(298,'MLINEFROMWKB',22,'MLineFromWKB(wkb[, srid]), MultiLineStringFromWKB(wkb[, srid])\n\nST_MLineFromWKB(), ST_MultiLineStringFromWKB(), MLineFromWKB(), and\nMultiLineStringFromWKB() are synonyms. For more information, see the\ndescription of ST_MLineFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(299,'MPOINTFROMWKB',22,'MPointFromWKB(wkb[, srid]), MultiPointFromWKB(wkb[, srid])\n\nST_MPointFromWKB(), ST_MultiPointFromWKB(), MPointFromWKB(), and\nMultiPointFromWKB() are synonyms. For more information, see the\ndescription of ST_MPointFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(300,'MPOLYFROMWKB',22,'MPolyFromWKB(wkb[, srid]), MultiPolygonFromWKB(wkb[, srid])\n\nST_MPolyFromWKB(), ST_MultiPolygonFromWKB(), MPolyFromWKB(), and\nMultiPolygonFromWKB() are synonyms. For more information, see the\ndescription of ST_MPolyFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(301,'POINTFROMWKB',22,'PointFromWKB(wkb[, srid])\n\nST_PointFromWKB() and PointFromWKB() are synonyms. For more\ninformation, see the description of ST_PointFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(302,'POLYFROMWKB',22,'PolyFromWKB(wkb[, srid]), PolygonFromWKB(wkb[, srid])\n\nST_PolyFromWKB(), ST_PolygonFromWKB(), PolyFromWKB(), and\nPolygonFromWKB() are synonyms. For more information, see the\ndescription of ST_PolyFromWKB().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(303,'ST_GEOMCOLLFROMWKB',22,'ST_GeomCollFromWKB(wkb[, srid]), ST_GeometryCollectionFromWKB(wkb[,\nsrid])\n\nConstructs a GeometryCollection value using its WKB representation and\nSRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(304,'ST_GEOMFROMWKB',22,'ST_GeomFromWKB(wkb[, srid]), ST_GeometryFromWKB(wkb[, srid])\n\nConstructs a geometry value of any type using its WKB representation\nand SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(305,'ST_LINEFROMWKB',22,'ST_LineFromWKB(wkb[, srid]), ST_LineStringFromWKB(wkb[, srid])\n\nConstructs a LineString value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(306,'ST_MLINEFROMWKB',22,'ST_MLineFromWKB(wkb[, srid]), ST_MultiLineStringFromWKB(wkb[, srid])\n\nConstructs a MultiLineString value using its WKB representation and\nSRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(307,'ST_MPOINTFROMWKB',22,'ST_MPointFromWKB(wkb[, srid]), ST_MultiPointFromWKB(wkb[, srid])\n\nConstructs a MultiPoint value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(308,'ST_MPOLYFROMWKB',22,'ST_MPolyFromWKB(wkb[, srid]), ST_MultiPolygonFromWKB(wkb[, srid])\n\nConstructs a MultiPolygon value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(309,'ST_POINTFROMWKB',22,'ST_PointFromWKB(wkb[, srid])\n\nConstructs a Point value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(310,'ST_POLYFROMWKB',22,'ST_PolyFromWKB(wkb[, srid]), ST_PolygonFromWKB(wkb[, srid])\n\nConstructs a Polygon value using its WKB representation and SRID.\n\nThe result is NULL if the WKB or SRID argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-wkb-functions.html'),(311,'GEOMETRYCOLLECTION',23,'GeometryCollection(g [, g] ...)\n\nConstructs a GeometryCollection value from the geometry arguments.\n\nGeometryCollection() returns all the proper geometries contained in the\narguments even if a nonsupported geometry is present.\n\nGeometryCollection() with no arguments is permitted as a way to create\nan empty geometry.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(312,'LINESTRING',23,'LineString(pt [, pt] ...)\n\nConstructs a LineString value from a number of Point or WKB Point\narguments. If the number of arguments is less than two, the return\nvalue is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(313,'MULTILINESTRING',23,'MultiLineString(ls [, ls] ...)\n\nConstructs a MultiLineString value using LineString or WKB LineString\narguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(314,'MULTIPOINT',23,'MultiPoint(pt [, pt2] ...)\n\nConstructs a MultiPoint value using Point or WKB Point arguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(315,'MULTIPOLYGON',23,'MultiPolygon(poly [, poly] ...)\n\nConstructs a MultiPolygon value from a set of Polygon or WKB Polygon\narguments.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(316,'POINT',23,'Point(x, y)\n\nConstructs a Point using its coordinates.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(317,'POLYGON',23,'Polygon(ls [, ls] ...)\n\nConstructs a Polygon value from a number of LineString or WKB\nLineString arguments. If any argument does not represent a LinearRing\n(that is, not a closed and simple LineString), the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-mysql-specific-functions.html'),(318,'ASBINARY',22,'AsBinary(g), AsWKB(g)\n\nST_AsBinary(), ST_AsWKB(), AsBinary(), and AsWKB() are synonyms. For\nmore information, see the description of ST_AsBinary().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(319,'ASTEXT',22,'AsText(g), AsWKT(g)\n\nST_AsText(), ST_AsWKT(), AsText(), and AsWKT() are synonyms. For more\ninformation, see the description of ST_AsText().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(320,'ST_ASBINARY',22,'ST_AsBinary(g), ST_AsWKB(g)\n\nConverts a value in internal geometry format to its WKB representation\nand returns the binary result.\n\nIf the argument is NULL, the return value is NULL. If the argument is\nnot a syntactically well-formed geometry, an ER_GIS_INVALID_DATA error\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','SELECT ST_AsBinary(g) FROM geom;\n','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(321,'ST_ASTEXT',22,'ST_AsText(g), ST_AsWKT(g)\n\nConverts a value in internal geometry format to its WKT representation\nand returns the string result.\n\nIf the argument is NULL, the return value is NULL. If the argument is\nnot a syntactically well-formed geometry, an ER_GIS_INVALID_DATA error\noccurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html\n\n','mysql> SET @g = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_GeomFromText(@g));\n+--------------------------------+\n| ST_AsText(ST_GeomFromText(@g)) |\n+--------------------------------+\n| LINESTRING(1 1,2 2,3 3)        |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-format-conversion-functions.html'),(322,'DIMENSION',24,'Dimension(g)\n\nST_Dimension() and Dimension() are synonyms. For more information, see\nthe description of ST_Dimension().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(323,'ENVELOPE',24,'Envelope(g)\n\nST_Envelope() and Envelope() are synonyms. For more information, see\nthe description of ST_Envelope().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(324,'GEOMETRYTYPE',24,'GeometryType(g)\n\nST_GeometryType() and GeometryType() are synonyms. For more\ninformation, see the description of ST_GeometryType().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(325,'ISEMPTY',24,'IsEmpty(g)\n\nST_IsEmpty() and IsEmpty() are synonyms. For more information, see the\ndescription of ST_IsEmpty().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(326,'ISSIMPLE',24,'IsSimple(g)\n\nST_IsSimple() and IsSimple() are synonyms. For more information, see\nthe description of ST_IsSimple().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(327,'SRID',24,'SRID(g)\n\nST_SRID() and SRID() are synonyms. For more information, see the\ndescription of ST_SRID().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(328,'ST_DIMENSION',24,'ST_Dimension(g)\n\nReturns the inherent dimension of the geometry value g, or NULL if the\nargument is NULL. The dimension can be −1, 0, 1, or 2. The meaning of\nthese values is given in\nhttps://dev.mysql.com/doc/refman/5.7/en/gis-class-geometry.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_Dimension(ST_GeomFromText(\'LineString(1 1,2 2)\'));\n+------------------------------------------------------+\n| ST_Dimension(ST_GeomFromText(\'LineString(1 1,2 2)\')) |\n+------------------------------------------------------+\n|                                                    1 |\n+------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(329,'ST_ENVELOPE',24,'ST_Envelope(g)\n\nReturns the minimum bounding rectangle (MBR) for the geometry value g,\nor NULL if the argument is NULL. The result is returned as a Polygon\nvalue that is defined by the corner points of the bounding box:\n\nPOLYGON((MINX MINY, MAXX MINY, MAXX MAXY, MINX MAXY, MINX MINY))\n\nmysql> SELECT ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,2 2)\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,2 2)\'))) |\n+----------------------------------------------------------------+\n| POLYGON((1 1,2 1,2 2,1 2,1 1))                                 |\n+----------------------------------------------------------------+\n\nAs of MySQL 5.7.6, if the argument is a point or a vertical or\nhorizontal line segment, ST_Envelope() returns the point or the line\nsegment as its MBR rather than returning an invalid polygon:\n\nmysql> SELECT ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,1 2)\')));\n+----------------------------------------------------------------+\n| ST_AsText(ST_Envelope(ST_GeomFromText(\'LineString(1 1,1 2)\'))) |\n+----------------------------------------------------------------+\n| LINESTRING(1 1,1 2)                                            |\n+----------------------------------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(330,'ST_GEOMETRYTYPE',24,'ST_GeometryType(g)\n\nReturns a binary string indicating the name of the geometry type of\nwhich the geometry instance g is a member, or NULL if the argument is\nNULL. The name corresponds to one of the instantiable Geometry\nsubclasses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_GeometryType(ST_GeomFromText(\'POINT(1 1)\'));\n+------------------------------------------------+\n| ST_GeometryType(ST_GeomFromText(\'POINT(1 1)\')) |\n+------------------------------------------------+\n| POINT                                          |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(331,'ST_ISEMPTY',24,'ST_IsEmpty(g)\n\nThis function is a placeholder that returns 0 for any valid geometry\nvalue, 1 for any invalid geometry value, or NULL if the argument is\nNULL.\n\nMySQL does not support GIS EMPTY values such as POINT EMPTY.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(332,'ST_ISSIMPLE',24,'ST_IsSimple(g)\n\nReturns 1 if the geometry value g has no anomalous geometric points,\nsuch as self-intersection or self-tangency. ST_IsSimple() returns 0 if\nthe argument is not simple, and NULL if the argument is NULL.\n\nThe descriptions of the instantiable geometric classes given under\nhttps://dev.mysql.com/doc/refman/5.7/en/opengis-geometry-model.html\nincludes the specific conditions that cause class instances to be\nclassified as not simple.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(333,'ST_SRID',24,'ST_SRID(g)\n\nReturns an integer indicating the spatial reference system ID\nassociated with the geometry value g, or NULL if the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html\n\n','mysql> SELECT ST_SRID(ST_GeomFromText(\'LineString(1 1,2 2)\',101));\n+-----------------------------------------------------+\n| ST_SRID(ST_GeomFromText(\'LineString(1 1,2 2)\',101)) |\n+-----------------------------------------------------+\n|                                                 101 |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-general-property-functions.html'),(334,'ST_X',25,'ST_X(p)\n\nReturns the X-coordinate value for the Point object p as a\ndouble-precision number.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','mysql> SELECT ST_X(Point(56.7, 53.34));\n+--------------------------+\n| ST_X(Point(56.7, 53.34)) |\n+--------------------------+\n|                     56.7 |\n+--------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(335,'ST_Y',25,'ST_Y(p)\n\nReturns the Y-coordinate value for the Point object p as a\ndouble-precision number.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','mysql> SELECT ST_Y(Point(56.7, 53.34));\n+--------------------------+\n| ST_Y(Point(56.7, 53.34)) |\n+--------------------------+\n|                    53.34 |\n+--------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(336,'X',25,'X(p)\n\nST_X() and X() are synonyms. For more information, see the description\nof ST_X().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(337,'Y',25,'Y(p)\n\nST_Y() and Y() are synonyms. For more information, see the description\nof ST_Y().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-point-property-functions.html'),(338,'ENDPOINT',26,'EndPoint(ls)\n\nST_EndPoint() and EndPoint() are synonyms. For more information, see\nthe description of ST_EndPoint().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(339,'GLENGTH',26,'GLength(ls)\n\nGLength() is a nonstandard name. It corresponds to the OpenGIS\nST_Length() function. (There is an existing SQL function Length() that\ncalculates the length of string values.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(340,'ISCLOSED',26,'IsClosed(ls)\n\nST_IsClosed() and IsClosed() are synonyms. For more information, see\nthe description of ST_IsClosed().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(341,'NUMPOINTS',26,'NumPoints(ls)\n\nST_NumPoints() and NumPoints() are synonyms. For more information, see\nthe description of ST_NumPoints().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(342,'POINTN',26,'PointN(ls, N)\n\nST_PointN() and PointN() are synonyms. For more information, see the\ndescription of ST_PointN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(343,'ST_ENDPOINT',26,'ST_EndPoint(ls)\n\nReturns the Point that is the endpoint of the LineString value ls. If\nthe argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_EndPoint(ST_GeomFromText(@ls)));\n+----------------------------------------------+\n| ST_AsText(ST_EndPoint(ST_GeomFromText(@ls))) |\n+----------------------------------------------+\n| POINT(3 3)                                   |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(344,'ST_ISCLOSED',26,'ST_IsClosed(ls)\n\nFor a LineString value ls, ST_IsClosed() returns 1 if ls is closed\n(that is, its ST_StartPoint() and ST_EndPoint() values are the same).\nIf the argument is NULL or an empty geometry, the return value is NULL.\n\nFor a MultiLineString value ls, ST_IsClosed() returns 1 if ls is closed\n(that is, the ST_StartPoint() and ST_EndPoint() values are the same for\neach LineString in ls).\n\nST_IsClosed() returns 0 if ls is not closed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls1 = \'LineString(1 1,2 2,3 3,2 2)\';\nmysql> SET @ls2 = \'LineString(1 1,2 2,3 3,1 1)\';\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls1));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls1)) |\n+------------------------------------+\n|                                  0 |\n+------------------------------------+\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls2));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls2)) |\n+------------------------------------+\n|                                  1 |\n+------------------------------------+\n\nmysql> SET @ls3 = \'MultiLineString((1 1,2 2,3 3),(4 4,5 5))\';\n\nmysql> SELECT ST_IsClosed(ST_GeomFromText(@ls3));\n+------------------------------------+\n| ST_IsClosed(ST_GeomFromText(@ls3)) |\n+------------------------------------+\n|                                  0 |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(345,'ST_LENGTH',26,'ST_Length(ls)\n\nReturns a double-precision number indicating the length of the\nLineString or MultiLineString value ls in its associated spatial\nreference system. The length of a MultiLineString value is equal to the\nsum of the lengths of its elements. If the argument is NULL or an empty\ngeometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_Length(ST_GeomFromText(@ls));\n+---------------------------------+\n| ST_Length(ST_GeomFromText(@ls)) |\n+---------------------------------+\n|              2.8284271247461903 |\n+---------------------------------+\n\nmysql> SET @mls = \'MultiLineString((1 1,2 2,3 3),(4 4,5 5))\';\nmysql> SELECT ST_Length(ST_GeomFromText(@mls));\n+----------------------------------+\n| ST_Length(ST_GeomFromText(@mls)) |\n+----------------------------------+\n|                4.242640687119286 |\n+----------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(346,'ST_NUMPOINTS',26,'ST_NumPoints(ls)\n\nReturns the number of Point objects in the LineString value ls. If the\nargument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_NumPoints(ST_GeomFromText(@ls));\n+------------------------------------+\n| ST_NumPoints(ST_GeomFromText(@ls)) |\n+------------------------------------+\n|                                  3 |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(347,'ST_POINTN',26,'ST_PointN(ls, N)\n\nReturns the N-th Point in the Linestring value ls. Points are numbered\nbeginning with 1. If any argument is NULL or the geometry argument is\nan empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_PointN(ST_GeomFromText(@ls),2));\n+----------------------------------------------+\n| ST_AsText(ST_PointN(ST_GeomFromText(@ls),2)) |\n+----------------------------------------------+\n| POINT(2 2)                                   |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(348,'ST_STARTPOINT',26,'ST_StartPoint(ls)\n\nReturns the Point that is the start point of the LineString value ls.\nIf the argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','mysql> SET @ls = \'LineString(1 1,2 2,3 3)\';\nmysql> SELECT ST_AsText(ST_StartPoint(ST_GeomFromText(@ls)));\n+------------------------------------------------+\n| ST_AsText(ST_StartPoint(ST_GeomFromText(@ls))) |\n+------------------------------------------------+\n| POINT(1 1)                                     |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(349,'STARTPOINT',26,'StartPoint(ls)\n\nST_StartPoint() and StartPoint() are synonyms. For more information,\nsee the description of ST_StartPoint().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-linestring-property-functions.html'),(350,'AREA',27,'Area({poly|mpoly})\n\nST_Area() and Area() are synonyms. For more information, see the\ndescription of ST_Area().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(351,'CENTROID',27,'Centroid({poly|mpoly})\n\nST_Centroid() and Centroid() are synonyms. For more information, see\nthe description of ST_Centroid().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(352,'EXTERIORRING',27,'ExteriorRing(poly)\n\nST_ExteriorRing() and ExteriorRing() are synonyms. For more\ninformation, see the description of ST_ExteriorRing().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(353,'INTERIORRINGN',27,'InteriorRingN(poly, N)\n\nST_InteriorRingN() and InteriorRingN() are synonyms. For more\ninformation, see the description of ST_InteriorRingN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(354,'NUMINTERIORRINGS',27,'NumInteriorRings(poly)\n\nST_NumInteriorRings() and NumInteriorRings() are synonyms. For more\ninformation, see the description of ST_NumInteriorRings().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(355,'ST_AREA',27,'ST_Area({poly|mpoly})\n\nReturns a double-precision number indicating the area of the Polygon or\nMultiPolygon argument, as measured in its spatial reference system. For\narguments of dimension 0 or 1, the result is 0. If the argument is an\nempty geometry the return value is 0. If the argument is NULL the\nreturn value is NULL.\n\nThe result is the sum of the area values of all components for a\ngeometry collection. If a geometry collection is empty, its area is\nreturned as 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 0,0 0),(1 1,1 2,2 1,1 1))\';\nmysql> SELECT ST_Area(ST_GeomFromText(@poly));\n+---------------------------------+\n| ST_Area(ST_GeomFromText(@poly)) |\n+---------------------------------+\n|                               4 |\n+---------------------------------+\n\nmysql> SET @mpoly =\n       \'MultiPolygon(((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1)))\';\nmysql> SELECT ST_Area(ST_GeomFromText(@mpoly));\n+----------------------------------+\n| ST_Area(ST_GeomFromText(@mpoly)) |\n+----------------------------------+\n|                                8 |\n+----------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(356,'ST_CENTROID',27,'ST_Centroid({poly|mpoly})\n\nReturns the mathematical centroid for the Polygon or MultiPolygon\nargument as a Point. The result is not guaranteed to be on the\nMultiPolygon. If the argument is NULL or an empty geometry, the return\nvalue is NULL.\n\nThis function processes geometry collections by computing the centroid\npoint for components of highest dimension in the collection. Such\ncomponents are extracted and made into a single MultiPolygon,\nMultiLineString, or MultiPoint for centroid computation. If the\nargument is an empty geometry collection, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       ST_GeomFromText(\'POLYGON((0 0,10 0,10 10,0 10,0 0),(5 5,7 5,7 7,5 7,5 5))\');\nmysql> SELECT ST_GeometryType(@poly),ST_AsText(ST_Centroid(@poly));\n+------------------------+--------------------------------------------+\n| ST_GeometryType(@poly) | ST_AsText(ST_Centroid(@poly))              |\n+------------------------+--------------------------------------------+\n| POLYGON                | POINT(4.958333333333333 4.958333333333333) |\n+------------------------+--------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(357,'ST_EXTERIORRING',27,'ST_ExteriorRing(poly)\n\nReturns the exterior ring of the Polygon value poly as a LineString. If\nthe argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_AsText(ST_ExteriorRing(ST_GeomFromText(@poly)));\n+----------------------------------------------------+\n| ST_AsText(ST_ExteriorRing(ST_GeomFromText(@poly))) |\n+----------------------------------------------------+\n| LINESTRING(0 0,0 3,3 3,3 0,0 0)                    |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(358,'ST_INTERIORRINGN',27,'ST_InteriorRingN(poly, N)\n\nReturns the N-th interior ring for the Polygon value poly as a\nLineString. Rings are numbered beginning with 1. If the argument is\nNULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_AsText(ST_InteriorRingN(ST_GeomFromText(@poly),1));\n+-------------------------------------------------------+\n| ST_AsText(ST_InteriorRingN(ST_GeomFromText(@poly),1)) |\n+-------------------------------------------------------+\n| LINESTRING(1 1,1 2,2 2,2 1,1 1)                       |\n+-------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(359,'ST_NUMINTERIORRINGS',27,'ST_NumInteriorRing(poly), ST_NumInteriorRings(poly)\n\nReturns the number of interior rings in the Polygon value poly. If the\nargument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html\n\n','mysql> SET @poly =\n       \'Polygon((0 0,0 3,3 3,3 0,0 0),(1 1,1 2,2 2,2 1,1 1))\';\nmysql> SELECT ST_NumInteriorRings(ST_GeomFromText(@poly));\n+---------------------------------------------+\n| ST_NumInteriorRings(ST_GeomFromText(@poly)) |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-polygon-property-functions.html'),(360,'GEOMETRYN',28,'GeometryN(gc, N)\n\nST_GeometryN() and GeometryN() are synonyms. For more information, see\nthe description of ST_GeometryN().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(361,'NUMGEOMETRIES',28,'NumGeometries(gc)\n\nST_NumGeometries() and NumGeometries() are synonyms. For more\ninformation, see the description of ST_NumGeometries().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(362,'ST_GEOMETRYN',28,'ST_GeometryN(gc, N)\n\nReturns the N-th geometry in the GeometryCollection value gc.\nGeometries are numbered beginning with 1. If any argument is NULL or\nthe geometry argument is an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT ST_AsText(ST_GeometryN(ST_GeomFromText(@gc),1));\n+-------------------------------------------------+\n| ST_AsText(ST_GeometryN(ST_GeomFromText(@gc),1)) |\n+-------------------------------------------------+\n| POINT(1 1)                                      |\n+-------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(363,'ST_NUMGEOMETRIES',28,'ST_NumGeometries(gc)\n\nReturns the number of geometries in the GeometryCollection value gc. If\nthe argument is NULL or an empty geometry, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html\n\n','mysql> SET @gc = \'GeometryCollection(Point(1 1),LineString(2 2, 3 3))\';\nmysql> SELECT ST_NumGeometries(ST_GeomFromText(@gc));\n+----------------------------------------+\n| ST_NumGeometries(ST_GeomFromText(@gc)) |\n+----------------------------------------+\n|                                      2 |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/gis-geometrycollection-property-functions.html'),(364,'BUFFER',28,'Buffer(g, d[, strategy1[, strategy2[, strategy3]]])\n\nST_Buffer() and Buffer() are synonyms. For more information, see the\ndescription of ST_Buffer().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(365,'CONVEXHULL',28,'ConvexHull(g)\n\nST_ConvexHull() and ConvexHull() are synonyms. For more information,\nsee the description of ST_ConvexHull().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(366,'ST_BUFFER',28,'ST_Buffer(g, d[, strategy1[, strategy2[, strategy3]]])\n\nReturns a geometry that represents all points whose distance from the\ngeometry value g is less than or equal to a distance of d, or NULL if\nany argument is NULL. The SRID of the geometry argument must be 0\nbecause ST_Buffer() supports only the Cartesian coordinate system. If\nany geometry argument is not a syntactically well-formed geometry, an\nER_GIS_INVALID_DATA error occurs.\n\nIf the geometry argument is empty, ST_Buffer() returns an empty\ngeometry.\n\nIf the distance is 0, ST_Buffer() returns the geometry argument\nunchanged:\n\nmysql> SET @pt = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SELECT ST_AsText(ST_Buffer(@pt, 0));\n+------------------------------+\n| ST_AsText(ST_Buffer(@pt, 0)) |\n+------------------------------+\n| POINT(0 0)                   |\n+------------------------------+\n\nST_Buffer() supports negative distances for Polygon and MultiPolygon\nvalues, and for geometry collections containing Polygon or MultiPolygon\nvalues. The result may be an empty geometry. An ER_WRONG_ARGUMENTS\nerror occurs for ST_Buffer() with a negative distance for Point,\nMultiPoint, LineString, and MultiLineString values, and for geometry\ncollections not containing any Polygon or MultiPolygon values.\n\nAs of MySQL 5.7.7, ST_Buffer() permits up to three optional strategy\narguments following the distance argument. Strategies influence buffer\ncomputation. These arguments are byte string values produced by the\nST_Buffer_Strategy() function, to be used for point, join, and end\nstrategies:\n\no Point strategies apply to Point and MultiPoint geometries. If no\n  point strategy is specified, the default is\n  ST_Buffer_Strategy(\'point_circle\', 32).\n\no Join strategies apply to LineString, MultiLineString, Polygon, and\n  MultiPolygon geometries. If no join strategy is specified, the\n  default is ST_Buffer_Strategy(\'join_round\', 32).\n\no End strategies apply to LineString and MultiLineString geometries. If\n  no end strategy is specified, the default is\n  ST_Buffer_Strategy(\'end_round\', 32).\n\nUp to one strategy of each type may be specified, and they may be given\nin any order. If multiple strategies of a given type are specified, an\nER_WRONG_ARGUMENTS error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @pt = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt_strategy = ST_Buffer_Strategy(\'point_square\');\nmysql> SELECT ST_AsText(ST_Buffer(@pt, 2, @pt_strategy));\n+--------------------------------------------+\n| ST_AsText(ST_Buffer(@pt, 2, @pt_strategy)) |\n+--------------------------------------------+\n| POLYGON((-2 -2,2 -2,2 2,-2 2,-2 -2))       |\n+--------------------------------------------+\n\nmysql> SET @ls = ST_GeomFromText(\'LINESTRING(0 0,0 5,5 5)\');\nmysql> SET @end_strategy = ST_Buffer_Strategy(\'end_flat\');\nmysql> SET @join_strategy = ST_Buffer_Strategy(\'join_round\', 10);\nmysql> SELECT ST_AsText(ST_Buffer(@ls, 5, @end_strategy, @join_strategy))\n+---------------------------------------------------------------+\n| ST_AsText(ST_Buffer(@ls, 5, @end_strategy, @join_strategy))   |\n+---------------------------------------------------------------+\n| POLYGON((5 5,5 10,0 10,-3.5355339059327373 8.535533905932738, |\n| -5 5,-5 0,0 0,5 0,5 5))                                       |\n+---------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(367,'ST_BUFFER_STRATEGY',28,'ST_Buffer_Strategy(strategy[, points_per_circle])\n\nThis function returns a strategy byte string for use with ST_Buffer()\nto influence buffer computation. If any argument is NULL, the return\nvalue is NULL. If any argument is invalid, an ER_WRONG_ARGUMENTS error\noccurs.\n\nInformation about strategies is available at Boost.org\n(http://www.boost.org).\n\nThe first argument must be a string indicating a strategy option:\n\no For point strategies, permitted values are \'point_circle\' and\n  \'point_square\'.\n\no For join strategies, permitted values are \'join_round\' and\n  \'join_miter\'.\n\no For end strategies, permitted values are \'end_round\' and \'end_flat\'.\n\nIf the first argument is \'point_circle\', \'join_round\', \'join_miter\', or\n\'end_round\', the points_per_circle argument must be given as a positive\nnumeric value. The maximum points_per_circle value is the value of the\nmax_points_in_geometry system variable as of MySQL 5.7.8, 65,536 before\nthat. If the first argument is \'point_square\' or \'end_flat\', the\npoints_per_circle argument must not be given or an ER_WRONG_ARGUMENTS\nerror occurs.\n\nFor examples, see the description of ST_Buffer().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(368,'ST_CONVEXHULL',28,'ST_ConvexHull(g)\n\nReturns a geometry that represents the convex hull of the geometry\nvalue g. If the argument is NULL, the return value is NULL.\n\nThis function computes a geometry\'s convex hull by first checking\nwhether its vertex points are colinear. The function returns a linear\nhull if so, a polygon hull otherwise. This function processes geometry\ncollections by extracting all vertex points of all components of the\ncollection, creating a MultiPoint value from them, and computing its\nconvex hull. If the argument is an empty geometry collection, the\nreturn value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g = \'MULTIPOINT(5 0,25 0,15 10,15 25)\';\nmysql> SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText(@g)));\n+-----------------------------------------------+\n| ST_AsText(ST_ConvexHull(ST_GeomFromText(@g))) |\n+-----------------------------------------------+\n| POLYGON((5 0,25 0,15 25,5 0))                 |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(369,'ST_DIFFERENCE',28,'ST_Difference(g1, g2)\n\nReturns a geometry that represents the point set difference of the\ngeometry values g1 and g2. If any argument is NULL, the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_AsText(ST_Difference(@g1, @g2));\n+------------------------------------+\n| ST_AsText(ST_Difference(@g1, @g2)) |\n+------------------------------------+\n| POINT(1 1)                         |\n+------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(370,'ST_INTERSECTION',28,'ST_Intersection(g1, g2)\n\nReturns a geometry that represents the point set intersection of the\ngeometry values g1 and g2. If any argument is NULL, the return value is\nNULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'LineString(1 1, 3 3)\');\nmysql> SET @g2 = ST_GeomFromText(\'LineString(1 3, 3 1)\');\nmysql> SELECT ST_AsText(ST_Intersection(@g1, @g2));\n+--------------------------------------+\n| ST_AsText(ST_Intersection(@g1, @g2)) |\n+--------------------------------------+\n| POINT(2 2)                           |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(371,'ST_SYMDIFFERENCE',28,'ST_SymDifference(g1, g2)\n\nReturns a geometry that represents the point set symmetric difference\nof the geometry values g1 and g2, which is defined as:\n\ng1 symdifference g2 := (g1 union g2) difference (g1 intersection g2)\n\nOr, in function call notation:\n\nST_SymDifference(g1, g2) = ST_Difference(ST_Union(g1, g2), ST_Intersection(g1, g2))\n\nIf any argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_AsText(ST_SymDifference(@g1, @g2));\n+---------------------------------------+\n| ST_AsText(ST_SymDifference(@g1, @g2)) |\n+---------------------------------------+\n| MULTIPOINT((1 1),(2 2))               |\n+---------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(372,'ST_UNION',28,'ST_Union(g1, g2)\n\nReturns a geometry that represents the point set union of the geometry\nvalues g1 and g2. If any argument is NULL, the return value is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'LineString(1 1, 3 3)\');\nmysql> SET @g2 = ST_GeomFromText(\'LineString(1 3, 3 1)\');\nmysql> SELECT ST_AsText(ST_Union(@g1, @g2));\n+--------------------------------------+\n| ST_AsText(ST_Union(@g1, @g2))        |\n+--------------------------------------+\n| MULTILINESTRING((1 1,3 3),(1 3,3 1)) |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-operator-functions.html'),(373,'CROSSES',29,'Crosses(g1, g2)\n\nST_Crosses() and Crosses() are synonyms. For more information, see the\ndescription of ST_Crosses().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(374,'DISTANCE',29,'Distance(g1, g2)\n\nST_Distance() and Distance() are synonyms. For more information, see\nthe description of ST_Distance().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(375,'ST_CONTAINS',29,'ST_Contains(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 completely contains g2. This\ntests the opposite relationship as ST_Within().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(376,'ST_CROSSES',29,'ST_Crosses(g1, g2)\n\nThe term spatially crosses denotes a spatial relation between two given\ngeometries that has the following properties:\n\no The two geometries intersect.\n\no Their intersection results in a geometry that has a dimension that is\n  one less than the maximum dimension of the two given geometries.\n\no Their intersection is not equal to either of the two given\n  geometries.\n\nThis function returns 1 or 0 to indicate whether g1 spatially crosses\ng2. If g1 is a Polygon or a MultiPolygon, or if g2 is a Point or a\nMultiPoint, the return value is NULL.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if the first\nargument is a Polygon or MultiPolygon and/or the second argument is a\nPoint or MultiPoint.\n\nReturns 1 if g1 spatially crosses g2. Returns NULL if g1 is a Polygon\nor a MultiPolygon, or if g2 is a Point or a MultiPoint. Otherwise,\nreturns 0.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if the first\nargument is a Polygon or MultiPolygon and/or the second argument is a\nPoint or MultiPoint.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(377,'ST_DISJOINT',29,'ST_Disjoint(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially disjoint from (does\nnot intersect) g2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(378,'ST_DISTANCE',29,'ST_Distance(g1, g2)\n\nReturns the distance between g1 and g2. If either argument is NULL or\nan empty geometry, the return value is NULL.\n\nThis function processes geometry collections by returning the shortest\ndistance among all combinations of the components of the two geometry\narguments.\n\nIf an intermediate or final result produces NaN or a negative number,\nan ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','mysql> SET @g1 = Point(1,1);\nmysql> SET @g2 = Point(2,2);\nmysql> SELECT ST_Distance(@g1, @g2);\n+-----------------------+\n| ST_Distance(@g1, @g2) |\n+-----------------------+\n|    1.4142135623730951 |\n+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(379,'ST_EQUALS',29,'ST_Equals(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially equal to g2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','mysql> SET @g1 = Point(1,1), @g2 = Point(2,2);\nmysql> SELECT ST_Equals(@g1, @g1), ST_Equals(@g1, @g2);\n+---------------------+---------------------+\n| ST_Equals(@g1, @g1) | ST_Equals(@g1, @g2) |\n+---------------------+---------------------+\n|                   1 |                   0 |\n+---------------------+---------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(380,'ST_INTERSECTS',29,'ST_Intersects(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 spatially intersects g2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(381,'ST_OVERLAPS',29,'ST_Overlaps(g1, g2)\n\nTwo geometries spatially overlap if they intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nThis function returns 1 or 0 to indicate whether g1 spatially overlaps\ng2.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if called with\ngeometries of different dimensions or any argument is a Point.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(382,'ST_TOUCHES',29,'ST_Touches(g1, g2)\n\nTwo geometries spatially touch if their interiors do not intersect, but\nthe boundary of one of the geometries intersects either the boundary or\nthe interior of the other.\n\nThis function returns 1 or 0 to indicate whether g1 spatially touches\ng2.\n\nThis function returns 0 if called with an inapplicable geometry\nargument type combination. For example, it returns 0 if either of the\narguments is a Point or MultiPoint.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(383,'ST_WITHIN',29,'ST_Within(g1, g2)\n\nReturns 1 or 0 to indicate whether g1 is spatially within g2. This\ntests the opposite relationship as ST_Contains().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(384,'TOUCHES',29,'Touches(g1, g2)\n\nST_Touches() and Touches() are synonyms. For more information, see the\ndescription of ST_Touches().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-object-shapes.html'),(385,'MBRCONTAINS',30,'MBRContains(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\ncontains the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRWithin().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRContains(@g1,@g2), MBRWithin(@g2,@g1);\n+----------------------+--------------------+\n| MBRContains(@g1,@g2) | MBRWithin(@g2,@g1) |\n+----------------------+--------------------+\n|                    1 |                  1 |\n+----------------------+--------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(386,'MBRCOVEREDBY',30,'MBRCoveredBy(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\nis covered by the minimum bounding rectangle of g2. This tests the\nopposite relationship as MBRCovers().\n\nMBRCoveredBy() handles its arguments as follows:\n\no If either argument is NULL or an empty geometry, the return value is\n  NULL.\n\no If either argument is not a syntactically well-formed geometry byte\n  string, an ER_GIS_INVALID_DATA error occurs.\n\no Otherwise, the return value is non-NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Point(1 1)\');\nmysql> SELECT MBRCovers(@g1,@g2), MBRCoveredby(@g1,@g2);\n+--------------------+-----------------------+\n| MBRCovers(@g1,@g2) | MBRCoveredby(@g1,@g2) |\n+--------------------+-----------------------+\n|                  1 |                     0 |\n+--------------------+-----------------------+\nmysql> SELECT MBRCovers(@g2,@g1), MBRCoveredby(@g2,@g1);\n+--------------------+-----------------------+\n| MBRCovers(@g2,@g1) | MBRCoveredby(@g2,@g1) |\n+--------------------+-----------------------+\n|                  0 |                     1 |\n+--------------------+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(387,'MBRCOVERS',30,'MBRCovers(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\ncovers the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRCoveredBy(). See the description of MBRCoveredBy()\nfor examples.\n\nMBRCovers() handles its arguments as follows:\n\no If either argument is NULL or an empty geometry, the return value is\n  NULL.\n\no If either argument is not a syntactically well-formed geometry byte\n  string, an ER_GIS_INVALID_DATA error occurs.\n\no Otherwise, the return value is non-NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(388,'MBRDISJOINT',30,'MBRDisjoint(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are disjoint (do not intersect).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(389,'MBREQUAL',30,'MBREqual(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are the same.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(390,'MBREQUALS',30,'MBREquals(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 are the same.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(391,'MBRINTERSECTS',30,'MBRIntersects(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangles of\nthe two geometries g1 and g2 intersect.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(392,'MBROVERLAPS',30,'MBROverlaps(g1, g2)\n\nTwo geometries spatially overlap if they intersect and their\nintersection results in a geometry of the same dimension but not equal\nto either of the given geometries.\n\nThis function returns 1 or 0 to indicate whether the minimum bounding\nrectangles of the two geometries g1 and g2 overlap.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(393,'MBRTOUCHES',30,'MBRTouches(g1, g2)\n\nTwo geometries spatially touch if their interiors do not intersect, but\nthe boundary of one of the geometries intersects either the boundary or\nthe interior of the other.\n\nThis function returns 1 or 0 to indicate whether the minimum bounding\nrectangles of the two geometries g1 and g2 touch.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(394,'MBRWITHIN',30,'MBRWithin(g1, g2)\n\nReturns 1 or 0 to indicate whether the minimum bounding rectangle of g1\nis within the minimum bounding rectangle of g2. This tests the opposite\nrelationship as MBRContains().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','mysql> SET @g1 = ST_GeomFromText(\'Polygon((0 0,0 3,3 3,3 0,0 0))\');\nmysql> SET @g2 = ST_GeomFromText(\'Polygon((0 0,0 5,5 5,5 0,0 0))\');\nmysql> SELECT MBRWithin(@g1,@g2), MBRWithin(@g2,@g1);\n+--------------------+--------------------+\n| MBRWithin(@g1,@g2) | MBRWithin(@g2,@g1) |\n+--------------------+--------------------+\n|                  1 |                  0 |\n+--------------------+--------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(395,'CONTAINS',30,'Contains(g1, g2)\n\nMBRContains() and Contains() are synonyms. For more information, see\nthe description of MBRContains().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(396,'DISJOINT',30,'Disjoint(g1, g2)\n\nMBRDisjoint() and Disjoint() are synonyms. For more information, see\nthe description of MBRDisjoint().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(397,'EQUALS',30,'Equals(g1, g2)\n\nMBREquals() and Equals() are synonyms. For more information, see the\ndescription of MBREquals().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(398,'INTERSECTS',30,'Intersects(g1, g2)\n\nMBRIntersects() and Intersects() are synonyms. For more information,\nsee the description of MBRIntersects().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(399,'OVERLAPS',30,'Overlaps(g1, g2)\n\nMBROverlaps() and Overlaps() are synonyms. For more information, see\nthe description of MBROverlaps().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(400,'WITHIN',30,'Within(g1, g2)\n\nMBRWithin() and Within() are synonyms. For more information, see the\ndescription of MBRWithin().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/spatial-relation-functions-mbr.html'),(401,'ST_GEOHASH',30,'ST_GeoHash(longitude, latitude, max_length), ST_GeoHash(point,\nmax_length)\n\nReturns a geohash string in the connection character set and collation.\n\nIf any argument is NULL, the return value is NULL. If any argument is\ninvalid, an error occurs.\n\nFor the first syntax, the longitude must be a number in the range\n[−180, 180], and the latitude must be a number in the range [−90,\n90]. For the second syntax, a POINT value is required, where the X and\nY coordinates are in the valid ranges for longitude and latitude,\nrespectively.\n\nThe resulting string is no longer than max_length characters, which has\nan upper limit of 100. The string might be shorter than max_length\ncharacters because the algorithm that creates the geohash value\ncontinues until it has created a string that is either an exact\nrepresentation of the location or max_length characters, whichever\ncomes first.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_GeoHash(180,0,10), ST_GeoHash(-180,-90,15);\n+----------------------+-------------------------+\n| ST_GeoHash(180,0,10) | ST_GeoHash(-180,-90,15) |\n+----------------------+-------------------------+\n| xbpbpbpbpb           | 000000000000000         |\n+----------------------+-------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(402,'ST_LATFROMGEOHASH',30,'ST_LatFromGeoHash(geohash_str)\n\nReturns the latitude from a geohash string value, as a DOUBLE value in\nthe range [−90, 90].\n\nIf the argument is NULL, the return value is NULL. If the argument is\ninvalid, an error occurs.\n\nThe ST_LatFromGeoHash() decoding function reads no more than 433\ncharacters from the geohash_str argument. That represents the upper\nlimit on information in the internal representation of coordinate\nvalues. Characters past the 433rd are ignored, even if they are\notherwise illegal and produce an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_LatFromGeoHash(ST_GeoHash(45,-20,10));\n+------------------------------------------+\n| ST_LatFromGeoHash(ST_GeoHash(45,-20,10)) |\n+------------------------------------------+\n|                                      -20 |\n+------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(403,'ST_LONGFROMGEOHASH',30,'ST_LongFromGeoHash(geohash_str)\n\nReturns the longitude from a geohash string value, as a DOUBLE value in\nthe range [−180, 180].\n\nIf the argument is NULL, the return value is NULL. If the argument is\ninvalid, an error occurs.\n\nThe remarks in the description of ST_LatFromGeoHash() regarding the\nmaximum number of characters processed from the geohash_str argument\nalso apply to ST_LongFromGeoHash().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SELECT ST_LongFromGeoHash(ST_GeoHash(45,-20,10));\n+-------------------------------------------+\n| ST_LongFromGeoHash(ST_GeoHash(45,-20,10)) |\n+-------------------------------------------+\n|                                        45 |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(404,'ST_POINTFROMGEOHASH',30,'ST_PointFromGeoHash(geohash_str, srid)\n\nReturns a POINT value containing the decoded geohash value, given a\ngeohash string value.\n\nThe X and Y coordinates of the point are the longitude in the range\n[−180, 180] and the latitude in the range [−90, 90], respectively.\n\nIf any argument is NULL, the return value is NULL. If any argument is\ninvalid, an error occurs.\n\nThe srid argument is an unsigned 32-bit integer.\n\nThe remarks in the description of ST_LatFromGeoHash() regarding the\nmaximum number of characters processed from the geohash_str argument\nalso apply to ST_PointFromGeoHash().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html\n\n','mysql> SET @gh = ST_GeoHash(45,-20,10);\nmysql> SELECT ST_AsText(ST_PointFromGeoHash(@gh,0));\n+---------------------------------------+\n| ST_AsText(ST_PointFromGeoHash(@gh,0)) |\n+---------------------------------------+\n| POINT(45 -20)                         |\n+---------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geohash-functions.html'),(405,'ST_ASGEOJSON',30,'ST_AsGeoJSON(g [, max_dec_digits [, options]])\n\nGenerates a GeoJSON object from the geometry g. The object string has\nthe connection character set and collation.\n\nIf any argument is NULL, the return value is NULL. If any non-NULL\nargument is invalid, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html\n\n','mysql> SELECT ST_AsGeoJSON(ST_GeomFromText(\'POINT(11.11111 12.22222)\'),2);\n+-------------------------------------------------------------+\n| ST_AsGeoJSON(ST_GeomFromText(\'POINT(11.11111 12.22222)\'),2) |\n+-------------------------------------------------------------+\n| {\"type\": \"Point\", \"coordinates\": [11.11, 12.22]}            |\n+-------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html'),(406,'ST_GEOMFROMGEOJSON',30,'ST_GeomFromGeoJSON(str [, options [, srid]])\n\nParses a string str representing a GeoJSON object and returns a\ngeometry.\n\nIf any argument is NULL, the return value is NULL. If any non-NULL\nargument is invalid, an error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html\n\n','mysql> SET @json = \'{ \"type\": \"Point\", \"coordinates\": [102.0, 0.0]}\';\nmysql> SELECT ST_AsText(ST_GeomFromGeoJSON(@json));\n+--------------------------------------+\n| ST_AsText(ST_GeomFromGeoJSON(@json)) |\n+--------------------------------------+\n| POINT(102 0)                         |\n+--------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-geojson-functions.html'),(407,'ST_DISTANCE_SPHERE',30,'ST_Distance_Sphere(g1, g2 [, radius])\n\nReturns the mimimum spherical distance between two points and/or\nmultipoints on a sphere, in meters, or NULL if any geometry argument is\nNULL or empty.\n\nCalculations use a spherical earth and a configurable radius. The\noptional radius argument should be given in meters. If omitted, the\ndefault radius is 6,370,986 meters. An ER_WRONG_ARGUMENTS error occurs\nif the radius argument is present but not positive.\n\nThe geometry arguments should consist of points that specify\n(longitude, latitude) coordinate values:\n\no Longitude and latitude are the first and second coordinates of the\n  point, respectively.\n\no Both coordinates are in degrees.\n\no Longitude values must be in the range (-180, 180]. Positive values\n  are east of the prime meridian.\n\no Latitude values must be in the range [-90, 90]. Positive values are\n  north of the equator.\n\nSupported argument combinations are (Point, Point), (Point,\nMultiPoint), and (MultiPoint, Point). An ER_GIS_UNSUPPORTED_ARGUMENT\nerror occurs for other combinations.\n\nIf any geometry argument is not a syntactically well-formed geometry\nbyte string, an ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @pt1 = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt2 = ST_GeomFromText(\'POINT(180 0)\');\nmysql> SELECT ST_Distance_Sphere(@pt1, @pt2);\n+--------------------------------+\n| ST_Distance_Sphere(@pt1, @pt2) |\n+--------------------------------+\n|             20015042.813723423 |\n+--------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(408,'ST_ISVALID',30,'ST_IsValid(g)\n\nReturns 1 if the argument is syntactically well-formed and is\ngeometrically valid, 0 if the argument is not syntactically well-formed\nor is not geometrically valid. If the argument is NULL, the return\nvalue is NULL. Geometry validity is defined by the OGC specification.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. ST_IsValid() returns 1 in this case.\n\nST_IsValid() works only for the Cartesian coordinate system and\nrequires a geometry argument with an SRID of 0. An ER_WRONG_ARGUMENTS\nerror occurs otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @ls1 = ST_GeomFromText(\'LINESTRING(0 0,-0.00 0,0.0 0)\');\nmysql> SET @ls2 = ST_GeomFromText(\'LINESTRING(0 0, 1 1)\');\nmysql> SELECT ST_IsValid(@ls1);\n+------------------+\n| ST_IsValid(@ls1) |\n+------------------+\n|                0 |\n+------------------+\nmysql> SELECT ST_IsValid(@ls2);\n+------------------+\n| ST_IsValid(@ls2) |\n+------------------+\n|                1 |\n+------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(409,'ST_MAKEENVELOPE',30,'ST_MakeEnvelope(pt1, pt2)\n\nReturns the rectangle that forms the envelope around two points, as a\nPoint, LineString, or Polygon. If any argument is NULL, the return\nvalue is NULL.\n\nCalculations are done using the Cartesian coordinate system rather than\non a sphere, spheroid, or on earth.\n\nGiven two points pt1 and pt2, ST_MakeEnvelope() creates the result\ngeometry on an abstract plane like this:\n\no If pt1 and pt2 are equal, the result is the point pt1.\n\no Otherwise, if (pt1, pt2) is a vertical or horizontal line segment,\n  the result is the line segment (pt1, pt2).\n\no Otherwise, the result is a polygon using pt1 and pt2 as diagonal\n  points.\n\nThe result geometry has an SRID of 0.\n\nST_MakeEnvelope() requires Point geometry arguments with an SRID of 0.\nAn ER_WRONG_ARGUMENTS error occurs otherwise.\n\nIf any argument is not a syntactically well-formed geometry byte\nstring, or if any coordinate value of the two points is infinite or\nNaN, an ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @pt1 = ST_GeomFromText(\'POINT(0 0)\');\nmysql> SET @pt2 = ST_GeomFromText(\'POINT(1 1)\');\nmysql> SELECT ST_AsText(ST_MakeEnvelope(@pt1, @pt2));\n+----------------------------------------+\n| ST_AsText(ST_MakeEnvelope(@pt1, @pt2)) |\n+----------------------------------------+\n| POLYGON((0 0,1 0,1 1,0 1,0 0))         |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(410,'ST_SIMPLIFY',30,'ST_Simplify(g, max_distance)\n\nSimplifies a geometry using the Douglas-Peucker algorithm and returns a\nsimplified value of the same type. If any argument is NULL, the return\nvalue is NULL.\n\nThe geometry may be any geometry type, although the Douglas-Peucker\nalgorithm may not actually process every type. A geometry collection is\nprocessed by giving its components one by one to the simplification\nalgorithm, and the returned geometries are put into a geometry\ncollection as result.\n\nThe max_distance argument is the distance (in units of the input\ncoordinates) of a vertex to other segments to be removed. Vertices\nwithin this distance of the simplified linestring are removed. If the\nmax_distance argument is not positive, or is NaN, an ER_WRONG_ARGUMENTS\nerror occurs.\n\nAccording to Boost.Geometry, geometries might become invalid as a\nresult of the simplification process, and the process might create\nself-intersections. To check the validity of the result, pass it to\nST_IsValid().\n\nIf the geometry argument is not a syntactically well-formed geometry\nbyte string, an ER_GIS_INVALID_DATA error occurs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @g = ST_GeomFromText(\'LINESTRING(0 0,0 1,1 1,1 2,2 2,2 3,3 3)\');\nmysql> SELECT ST_AsText(ST_Simplify(@g, 0.5));\n+---------------------------------+\n| ST_AsText(ST_Simplify(@g, 0.5)) |\n+---------------------------------+\n| LINESTRING(0 0,0 1,1 1,2 3,3 3) |\n+---------------------------------+\nmysql> SELECT ST_AsText(ST_Simplify(@g, 1.0));\n+---------------------------------+\n| ST_AsText(ST_Simplify(@g, 1.0)) |\n+---------------------------------+\n| LINESTRING(0 0,3 3)             |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(411,'ST_VALIDATE',30,'ST_Validate(g)\n\nValidates a geometry according to the OGC specification. A geometry can\nbe syntactically well-formed (WKB value plus SRID) but geometrically\ninvalid. For example, this polygon is geometrically invalid: POLYGON((0\n0, 0 0, 0 0, 0 0, 0 0))\n\nST_Validate() returns the geometry if it is syntactically well-formed\nand is geometrically valid, NULL if the argument is not syntactically\nwell-formed or is not geometrically valid or is NULL.\n\nST_Validate() can be used to filter out invalid geometry data, although\nat a cost. For applications that require more precise results not\ntainted by invalid data, this penalty may be worthwhile.\n\nIf the geometry argument is valid, it is returned as is, except that if\nan input Polygon or MultiPolygon has clockwise rings, those rings are\nreversed before checking for validity. If the geometry is valid, the\nvalue with the reversed rings is returned.\n\nThe only valid empty geometry is represented in the form of an empty\ngeometry collection value. ST_Validate() returns it directly without\nfurther checks in this case.\n\nST_Validate() works only for the Cartesian coordinate system and\nrequires a geometry argument with an SRID of 0. An ER_WRONG_ARGUMENTS\nerror occurs otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html\n\n','mysql> SET @ls1 = ST_GeomFromText(\'LINESTRING(0 0)\');\nmysql> SET @ls2 = ST_GeomFromText(\'LINESTRING(0 0, 1 1)\');\nmysql> SELECT ST_AsText(ST_Validate(@ls1));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls1)) |\n+------------------------------+\n| NULL                         |\n+------------------------------+\nmysql> SELECT ST_AsText(ST_Validate(@ls2));\n+------------------------------+\n| ST_AsText(ST_Validate(@ls2)) |\n+------------------------------+\n| LINESTRING(0 0,1 1)          |\n+------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/spatial-convenience-functions.html'),(412,'JSON_ARRAY',30,'Syntax:\nJSON_ARRAY([val[, val] ...])\n\nEvaluates a (possibly empty) list of values and returns a JSON array\ncontaining those values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html\n\n','mysql> SELECT JSON_ARRAY(1, \"abc\", NULL, TRUE, CURTIME());\n+---------------------------------------------+\n| JSON_ARRAY(1, \"abc\", NULL, TRUE, CURTIME()) |\n+---------------------------------------------+\n| [1, \"abc\", null, true, \"11:30:24.000000\"]   |\n+---------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html'),(413,'JSON_OBJECT',30,'Syntax:\nJSON_OBJECT([key, val[, key, val] ...])\n\nEvaluates a (possibly empty) list of key-value pairs and returns a JSON\nobject containing those pairs. An error occurs if any key name is NULL\nor the number of arguments is odd.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html\n\n','mysql> SELECT JSON_OBJECT(\'id\', 87, \'name\', \'carrot\');\n+-----------------------------------------+\n| JSON_OBJECT(\'id\', 87, \'name\', \'carrot\') |\n+-----------------------------------------+\n| {\"id\": 87, \"name\": \"carrot\"}            |\n+-----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html'),(414,'JSON_QUOTE',30,'Syntax:\nJSON_QUOTE(string)\n\nQuotes a string as a JSON value by wrapping it with double quote\ncharacters and escaping interior quote and other characters, then\nreturning the result as a utf8mb4 string. Returns NULL if the argument\nis NULL.\n\nThis function is typically used to produce a valid JSON string literal\nfor inclusion within a JSON document.\n\nCertain special characters are escaped with backslashes per the escape\nsequences shown in\nhttps://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.htm\nl#json-unquote-character-escape-sequences.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html\n\n','mysql> SELECT JSON_QUOTE(\'null\'), JSON_QUOTE(\'\"null\"\');\n+--------------------+----------------------+\n| JSON_QUOTE(\'null\') | JSON_QUOTE(\'\"null\"\') |\n+--------------------+----------------------+\n| \"null\"             | \"\\\"null\\\"\"           |\n+--------------------+----------------------+\nmysql> SELECT JSON_QUOTE(\'[1, 2, 3]\');\n+-------------------------+\n| JSON_QUOTE(\'[1, 2, 3]\') |\n+-------------------------+\n| \"[1, 2, 3]\"             |\n+-------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-creation-functions.html'),(415,'JSON_CONTAINS',30,'Syntax:\nJSON_CONTAINS(target, candidate[, path])\n\nIndicates by returning 1 or 0 whether a given candidate JSON document\nis contained within a target JSON document, or---if a path argument was\nsupplied---whether the candidate is found at a specific path within the\ntarget. Returns NULL if any argument is NULL, or if the path argument\ndoes not identify a section of the target document. An error occurs if\ntarget or candidate is not a valid JSON document, or if the path\nargument is not a valid path expression or contains a * or ** wildcard.\n\nTo check only whether any data exists at the path, use\nJSON_CONTAINS_PATH() instead.\n\nThe following rules define containment:\n\no A candidate scalar is contained in a target scalar if and only if\n  they are comparable and are equal. Two scalar values are comparable\n  if they have the same JSON_TYPE() types, with the exception that\n  values of types INTEGER and DECIMAL are also comparable to each\n  other.\n\no A candidate array is contained in a target array if and only if every\n  element in the candidate is contained in some element of the target.\n\no A candidate nonarray is contained in a target array if and only if\n  the candidate is contained in some element of the target.\n\no A candidate object is contained in a target object if and only if for\n  each key in the candidate there is a key with the same name in the\n  target and the value associated with the candidate key is contained\n  in the value associated with the target key.\n\nOtherwise, the candidate value is not contained in the target document.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SET @j = \'{\"a\": 1, \"b\": 2, \"c\": {\"d\": 4}}\';\nmysql> SET @j2 = \'1\';\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.a\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.a\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.b\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.b\') |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\n\nmysql> SET @j2 = \'{\"d\": 4}\';\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.a\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.a\') |\n+-------------------------------+\n|                             0 |\n+-------------------------------+\nmysql> SELECT JSON_CONTAINS(@j, @j2, \'$.c\');\n+-------------------------------+\n| JSON_CONTAINS(@j, @j2, \'$.c\') |\n+-------------------------------+\n|                             1 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(416,'JSON_CONTAINS_PATH',30,'Syntax:\nJSON_CONTAINS_PATH(json_doc, one_or_all, path[, path] ...)\n\nReturns 0 or 1 to indicate whether a JSON document contains data at a\ngiven path or paths. Returns NULL if any argument is NULL. An error\noccurs if the json_doc argument is not a valid JSON document, any path\nargument is not a valid path expression, or one_or_all is not \'one\' or\n\'all\'.\n\nTo check for a specific value at a path, use JSON_CONTAINS() instead.\n\nThe return value is 0 if no specified path exists within the document.\nOtherwise, the return value depends on the one_or_all argument:\n\no \'one\': 1 if at least one path exists within the document, 0\n  otherwise.\n\no \'all\': 1 if all paths exist within the document, 0 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SET @j = \'{\"a\": 1, \"b\": 2, \"c\": {\"d\": 4}}\';\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.a\', \'$.e\');\n+---------------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.a\', \'$.e\') |\n+---------------------------------------------+\n|                                           1 |\n+---------------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'all\', \'$.a\', \'$.e\');\n+---------------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'all\', \'$.a\', \'$.e\') |\n+---------------------------------------------+\n|                                           0 |\n+---------------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.c.d\');\n+----------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.c.d\') |\n+----------------------------------------+\n|                                      1 |\n+----------------------------------------+\nmysql> SELECT JSON_CONTAINS_PATH(@j, \'one\', \'$.a.d\');\n+----------------------------------------+\n| JSON_CONTAINS_PATH(@j, \'one\', \'$.a.d\') |\n+----------------------------------------+\n|                                      0 |\n+----------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(417,'JSON_EXTRACT',30,'Syntax:\nJSON_EXTRACT(json_doc, path[, path] ...)\n\nReturns data from a JSON document, selected from the parts of the\ndocument matched by the path arguments. Returns NULL if any argument is\nNULL or no paths locate a value in the document. An error occurs if the\njson_doc argument is not a valid JSON document or any path argument is\nnot a valid path expression.\n\nThe return value consists of all values matched by the path arguments.\nIf it is possible that those arguments could return multiple values,\nthe matched values are autowrapped as an array, in the order\ncorresponding to the paths that produced them. Otherwise, the return\nvalue is the single matched value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\');\n+--------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\') |\n+--------------------------------------------+\n| 20                                         |\n+--------------------------------------------+\nmysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\', \'$[0]\');\n+----------------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[1]\', \'$[0]\') |\n+----------------------------------------------------+\n| [20, 10]                                           |\n+----------------------------------------------------+\nmysql> SELECT JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[2][*]\');\n+-----------------------------------------------+\n| JSON_EXTRACT(\'[10, 20, [30, 40]]\', \'$[2][*]\') |\n+-----------------------------------------------+\n| [30, 40]                                      |\n+-----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(418,'->',30,'Syntax:\ncolumn->path\n\nIn MySQL 5.7.9 and later, the -> operator serves as an alias for the\nJSON_EXTRACT() function when used with two arguments, a column\nidentifier on the left and a JSON path on the right that is evaluated\nagainst the JSON document (the column value). You can use such\nexpressions in place of column identifiers wherever they occur in SQL\nstatements.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT c, JSON_EXTRACT(c, \"$.id\"), g\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY JSON_EXTRACT(c, \"$.name\");\n+-------------------------------+-----------+------+\n| c                             | c->\"$.id\" | g    |\n+-------------------------------+-----------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\nmysql> SELECT c, c->\"$.id\", g\n     > FROM jemp\n     > WHERE c->\"$.id\" > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+\n| c                             | c->\"$.id\" | g    |\n+-------------------------------+-----------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 |\n+-------------------------------+-----------+------+\n3 rows in set (0.00 sec)\n\nmysql> ALTER TABLE jemp ADD COLUMN n INT;\nQuery OK, 0 rows affected (0.68 sec)\nRecords: 0  Duplicates: 0  Warnings: 0\n\nmysql> UPDATE jemp SET n=1 WHERE c->\"$.id\" = \"4\";\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT c, c->\"$.id\", g, n\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+------+\n| c                             | c->\"$.id\" | g    | n    |\n+-------------------------------+-----------+------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 | NULL |\n| {\"id\": \"4\", \"name\": \"Betty\"}  | \"4\"       |    4 |    1 |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 | NULL |\n+-------------------------------+-----------+------+------+\n3 rows in set (0.00 sec)\n\nmysql> DELETE FROM jemp WHERE c->\"$.id\" = \"4\";\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT c, c->\"$.id\", g, n\n     > FROM jemp\n     > WHERE JSON_EXTRACT(c, \"$.id\") > 1\n     > ORDER BY c->\"$.name\";\n+-------------------------------+-----------+------+------+\n| c                             | c->\"$.id\" | g    | n    |\n+-------------------------------+-----------+------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} | \"3\"       |    3 | NULL |\n| {\"id\": \"2\", \"name\": \"Wilma\"}  | \"2\"       |    2 | NULL |\n+-------------------------------+-----------+------+------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(419,'->>',30,'Syntax:\ncolumn->>path\n\nThis is an improved, unquoting extraction operator available in MySQL\n5.7.13 and later. Whereas the -> operator simply extracts a value, the\n->> operator in addition unquotes the extracted result. In other words,\ngiven a JSON column value column and a path expression path, the\nfollowing three expressions return the same value:\n\no JSON_UNQUOTE( JSON_EXTRACT(column, path) )\n\no JSON_UNQUOTE(column -> path)\n\no column->>path\n\nThe ->> operator can be used wherever JSON_UNQUOTE(JSON_EXTRACT())\nwould be allowed. This includes (but is not limited to) SELECT lists,\nWHERE and HAVING clauses, and ORDER BY and GROUP BY clauses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT * FROM jemp WHERE g > 2;\n+-------------------------------+------+\n| c                             | g    |\n+-------------------------------+------+\n| {\"id\": \"3\", \"name\": \"Barney\"} |    3 |\n| {\"id\": \"4\", \"name\": \"Betty\"}  |    4 |\n+-------------------------------+------+\n2 rows in set (0.01 sec)\n\nmysql> SELECT c->\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2;\n+----------+\n| name     |\n+----------+\n| \"Barney\" |\n| \"Betty\"  |\n+----------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT JSON_UNQUOTE(c->\'$.name\') AS name\n    ->     FROM jemp WHERE g > 2;\n+--------+\n| name   |\n+--------+\n| Barney |\n| Betty  |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT c->>\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2;\n+--------+\n| name   |\n+--------+\n| Barney |\n| Betty  |\n+--------+\n2 rows in set (0.00 sec)\n\nmysql> CREATE TABLE tj10 (a JSON, b INT);\nQuery OK, 0 rows affected (0.26 sec)\n\nmysql> INSERT INTO tj10 VALUES\n    ->     (\'[3,10,5,\"x\",44]\', 33),\n    ->     (\'[3,10,5,17,[22,\"y\",66]]\', 0);\nQuery OK, 2 rows affected (0.04 sec)\nRecords: 2  Duplicates: 0  Warnings: 0\n\nmysql> SELECT a->\"$[3]\", a->\"$[4][1]\" FROM tj10;\n+-----------+--------------+\n| a->\"$[3]\" | a->\"$[4][1]\" |\n+-----------+--------------+\n| \"x\"       | NULL         |\n| 17        | \"y\"          |\n+-----------+--------------+\n2 rows in set (0.00 sec)\n\nmysql> SELECT a->>\"$[3]\", a->>\"$[4][1]\" FROM tj10;\n+------------+---------------+\n| a->>\"$[3]\" | a->>\"$[4][1]\" |\n+------------+---------------+\n| x          | NULL          |\n| 17         | y             |\n+------------+---------------+\n2 rows in set (0.00 sec)\n\nmysql> EXPLAIN SELECT c->>\'$.name\' AS name\n    ->     FROM jemp WHERE g > 2\\G\n*************************** 1. row ***************************\n           id: 1\n  select_type: SIMPLE\n        table: jemp\n   partitions: NULL\n         type: range\npossible_keys: i\n          key: i\n      key_len: 5\n          ref: NULL\n         rows: 2\n     filtered: 100.00\n        Extra: Using where\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Note\n   Code: 1003\nMessage: /* select#1 */ select\njson_unquote(json_extract(`jtest`.`jemp`.`c`,\'$.name\')) AS `name` from\n`jtest`.`jemp` where (`jtest`.`jemp`.`g` > 2)\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(420,'JSON_KEYS',30,'Syntax:\nJSON_KEYS(json_doc[, path])\n\nReturns the keys from the top-level value of a JSON object as a JSON\narray, or, if a path argument is given, the top-level keys from the\nselected path. Returns NULL if any argument is NULL, the json_doc\nargument is not an object, or path, if given, does not locate an\nobject. An error occurs if the json_doc argument is not a valid JSON\ndocument or the path argument is not a valid path expression or\ncontains a * or ** wildcard.\n\nThe result array is empty if the selected object is empty. If the\ntop-level value has nested subobjects, the return value does not\ninclude keys from those subobjects.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SELECT JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\');\n+---------------------------------------+\n| JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\') |\n+---------------------------------------+\n| [\"a\", \"b\"]                            |\n+---------------------------------------+\nmysql> SELECT JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\');\n+----------------------------------------------+\n| JSON_KEYS(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\') |\n+----------------------------------------------+\n| [\"c\"]                                        |\n+----------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(421,'JSON_SEARCH',30,'Syntax:\nJSON_SEARCH(json_doc, one_or_all, search_str[, escape_char[, path]\n...])\n\nReturns the path to the given string within a JSON document. Returns\nNULL if any of the json_doc, search_str, or path arguments are NULL; no\npath exists within the document; or search_str is not found. An error\noccurs if the json_doc argument is not a valid JSON document, any path\nargument is not a valid path expression, one_or_all is not \'one\' or\n\'all\', or escape_char is not a constant expression.\n\nThe one_or_all argument affects the search as follows:\n\no \'one\': The search terminates after the first match and returns one\n  path string. It is undefined which match is considered first.\n\no \'all\': The search returns all matching path strings such that no\n  duplicate paths are included. If there are multiple strings, they are\n  autowrapped as an array. The order of the array elements is\n  undefined.\n\nWithin the search_str search string argument, the % and _ characters\nwork as for the LIKE operator: % matches any number of characters\n(including zero characters), and _ matches exactly one character.\n\nTo specify a literal % or _ character in the search string, precede it\nby the escape character. The default is \\ if the escape_char argument\nis missing or NULL. Otherwise, escape_char must be a constant that is\nempty or one character.\n\nFor more information about matching and escape character behavior, see\nthe description of LIKE in\nhttps://dev.mysql.com/doc/refman/5.7/en/string-comparison-functions.htm\nl. For escape character handling, a difference from the LIKE behavior\nis that the escape character for JSON_SEARCH() must evaluate to a\nconstant at compile time, not just at execution time. For example, if\nJSON_SEARCH() is used in a prepared statement and the escape_char\nargument is supplied using a ? parameter, the parameter value might be\nconstant at execution time, but is not at compile time.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html\n\n','mysql> SET @j = \'[\"abc\", [{\"k\": \"10\"}, \"def\"], {\"x\":\"abc\"}, {\"y\":\"bcd\"}]\';\n\nmysql> SELECT JSON_SEARCH(@j, \'one\', \'abc\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'one\', \'abc\') |\n+-------------------------------+\n| \"$[0]\"                        |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'abc\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'abc\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\"]            |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'ghi\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'ghi\') |\n+-------------------------------+\n| NULL                          |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\');\n+------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\') |\n+------------------------------+\n| \"$[1][0].k\"                  |\n+------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$\');\n+-----------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$\') |\n+-----------------------------------------+\n| \"$[1][0].k\"                             |\n+-----------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*]\');\n+--------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*]\') |\n+--------------------------------------------+\n| \"$[1][0].k\"                                |\n+--------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$**.k\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$**.k\') |\n+---------------------------------------------+\n| \"$[1][0].k\"                                 |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*][0].k\');\n+-------------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[*][0].k\') |\n+-------------------------------------------------+\n| \"$[1][0].k\"                                     |\n+-------------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1]\');\n+--------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1]\') |\n+--------------------------------------------+\n| \"$[1][0].k\"                                |\n+--------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1][0]\');\n+-----------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'10\', NULL, \'$[1][0]\') |\n+-----------------------------------------------+\n| \"$[1][0].k\"                                   |\n+-----------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'abc\', NULL, \'$[2]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'abc\', NULL, \'$[2]\') |\n+---------------------------------------------+\n| \"$[2].x\"                                    |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%a%\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%a%\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\"]            |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\');\n+-------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\') |\n+-------------------------------+\n| [\"$[0]\", \"$[2].x\", \"$[3].y\"]  |\n+-------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[0]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[0]\') |\n+---------------------------------------------+\n| \"$[0]\"                                      |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[2]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[2]\') |\n+---------------------------------------------+\n| \"$[2].x\"                                    |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[1]\');\n+---------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', NULL, \'$[1]\') |\n+---------------------------------------------+\n| NULL                                        |\n+---------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[1]\');\n+-------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[1]\') |\n+-------------------------------------------+\n| NULL                                      |\n+-------------------------------------------+\n\nmysql> SELECT JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[3]\');\n+-------------------------------------------+\n| JSON_SEARCH(@j, \'all\', \'%b%\', \'\', \'$[3]\') |\n+-------------------------------------------+\n| \"$[3].y\"                                  |\n+-------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-search-functions.html'),(422,'JSON_APPEND',30,'Syntax:\nJSON_APPEND(json_doc, path, val[, path, val] ...)\n\nAppends values to the end of the indicated arrays within a JSON\ndocument and returns the result. This function was renamed to\nJSON_ARRAY_APPEND() in MySQL 5.7.9; the alias JSON_APPEND() is now\ndeprecated in MySQL 5.7, and is removed in MySQL 8.0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(423,'JSON_ARRAY_APPEND',30,'Syntax:\nJSON_ARRAY_APPEND(json_doc, path, val[, path, val] ...)\n\nAppends values to the end of the indicated arrays within a JSON\ndocument and returns the result. Returns NULL if any argument is NULL.\nAn error occurs if the json_doc argument is not a valid JSON document\nor any path argument is not a valid path expression or contains a * or\n** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nIf a path selects a scalar or object value, that value is autowrapped\nwithin an array and the new value is added to that array. Pairs for\nwhich the path does not identify any value in the JSON document are\nignored.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", [\"b\", \"c\"], \"d\"]\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[1]\', 1);\n+----------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[1]\', 1) |\n+----------------------------------+\n| [\"a\", [\"b\", \"c\", 1], \"d\"]        |\n+----------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[0]\', 2);\n+----------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[0]\', 2) |\n+----------------------------------+\n| [[\"a\", 2], [\"b\", \"c\"], \"d\"]      |\n+----------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$[1][0]\', 3);\n+-------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$[1][0]\', 3) |\n+-------------------------------------+\n| [\"a\", [[\"b\", 3], \"c\"], \"d\"]         |\n+-------------------------------------+\n\nmysql> SET @j = \'{\"a\": 1, \"b\": [2, 3], \"c\": 4}\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$.b\', \'x\');\n+------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$.b\', \'x\')  |\n+------------------------------------+\n| {\"a\": 1, \"b\": [2, 3, \"x\"], \"c\": 4} |\n+------------------------------------+\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$.c\', \'y\');\n+--------------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$.c\', \'y\')    |\n+--------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [4, \"y\"]} |\n+--------------------------------------+\n\nmysql> SET @j = \'{\"a\": 1}\';\nmysql> SELECT JSON_ARRAY_APPEND(@j, \'$\', \'z\');\n+---------------------------------+\n| JSON_ARRAY_APPEND(@j, \'$\', \'z\') |\n+---------------------------------+\n| [{\"a\": 1}, \"z\"]                 |\n+---------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(424,'JSON_ARRAY_INSERT',30,'Syntax:\nJSON_ARRAY_INSERT(json_doc, path, val[, path, val] ...)\n\nUpdates a JSON document, inserting into an array within the document\nand returning the modified document. Returns NULL if any argument is\nNULL. An error occurs if the json_doc argument is not a valid JSON\ndocument or any path argument is not a valid path expression or\ncontains a * or ** wildcard or does not end with an array element\nidentifier.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nPairs for which the path does not identify any array in the JSON\ndocument are ignored. If a path identifies an array element, the\ncorresponding value is inserted at that element position, shifting any\nfollowing values to the right. If a path identifies an array position\npast the end of an array, the value is inserted at the end of the\narray.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", {\"b\": [1, 2]}, [3, 4]]\';\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[1]\', \'x\');\n+------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[1]\', \'x\') |\n+------------------------------------+\n| [\"a\", \"x\", {\"b\": [1, 2]}, [3, 4]]  |\n+------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[100]\', \'x\');\n+--------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[100]\', \'x\') |\n+--------------------------------------+\n| [\"a\", {\"b\": [1, 2]}, [3, 4], \"x\"]    |\n+--------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[1].b[0]\', \'x\');\n+-----------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[1].b[0]\', \'x\') |\n+-----------------------------------------+\n| [\"a\", {\"b\": [\"x\", 1, 2]}, [3, 4]]       |\n+-----------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[2][1]\', \'y\');\n+---------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[2][1]\', \'y\') |\n+---------------------------------------+\n| [\"a\", {\"b\": [1, 2]}, [3, \"y\", 4]]     |\n+---------------------------------------+\nmysql> SELECT JSON_ARRAY_INSERT(@j, \'$[0]\', \'x\', \'$[2][1]\', \'y\');\n+----------------------------------------------------+\n| JSON_ARRAY_INSERT(@j, \'$[0]\', \'x\', \'$[2][1]\', \'y\') |\n+----------------------------------------------------+\n| [\"x\", \"a\", {\"b\": [1, 2]}, [3, 4]]                  |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(425,'JSON_INSERT',30,'Syntax:\nJSON_INSERT(json_doc, path, val[, path, val] ...)\n\nInserts data into a JSON document and returns the result. Returns NULL\nif any argument is NULL. An error occurs if the json_doc argument is\nnot a valid JSON document or any path argument is not a valid path\nexpression or contains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document is ignored and\ndoes not overwrite the existing document value. A path-value pair for a\nnonexisting path in the document adds the value to the document if the\npath identifies one of these types of values:\n\no A member not present in an existing object. The member is added to\n  the object and associated with the new value.\n\no A position past the end of an existing array. The array is extended\n  with the new value. If the existing value is not an array, it is\n  autowrapped as an array, then extended with the new value.\n\nOtherwise, a path-value pair for a nonexisting path in the document is\nignored and has no effect.\n\nFor a comparison of JSON_INSERT(), JSON_REPLACE(), and JSON_SET(), see\nthe discussion of JSON_SET().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+----------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+\n\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', CAST(\'[true, false]\' AS JSON));\n+------------------------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', CAST(\'[true, false]\' AS JSON)) |\n+------------------------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": [true, false]}                        |\n+------------------------------------------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(426,'JSON_MERGE',30,'Syntax:\nJSON_MERGE(json_doc, json_doc[, json_doc] ...)\n\nMerges two or more JSON documents. Synonym for JSON_MERGE_PRESERVE();\ndeprecated in MySQL 5.7.22 and subject to removal in a future release.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE(\'[1, 2]\', \'[true, false]\');\n+---------------------------------------+\n| JSON_MERGE(\'[1, 2]\', \'[true, false]\') |\n+---------------------------------------+\n| [1, 2, true, false]                   |\n+---------------------------------------+\n1 row in set, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS\\G\n*************************** 1. row ***************************\n  Level: Warning\n   Code: 1287\nMessage: \'JSON_MERGE\' is deprecated and will be removed in a future release. \\\n Please use JSON_MERGE_PRESERVE/JSON_MERGE_PATCH instead\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(427,'JSON_MERGE_PATCH()',30,'Syntax:\nJSON_MERGE_PATCH(json_doc, json_doc[, json_doc] ...)\n\nPerforms an RFC 7396 (https://tools.ietf.org/html/rfc7396) compliant\nmerge of two or more JSON documents and returns the merged result,\nwithout preserving members having duplicate keys. Raises an error if at\nleast one of the documents passed as arguments to this function is not\nvalid.\n\n*Note*:\n\nFor an explanation and example of the differences between this function\nand JSON_MERGE_PRESERVE(), see\nhttps://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.htm\nl#json-merge-patch-json-merge-preserve-compared.\n\nJSON_MERGE_PATCH() performs a merge as follows:\n\n1. If the first argument is not an object, the result of the merge is\n   the same as if an empty object had been merged with the second\n   argument.\n\n2. If the second argument is not an object, the result of the merge is\n   the second argument.\n\n3. If both arguments are objects, the result of the merge is an object\n   with the following members:\n\n  o All members of the first object which do not have a corresponding\n    member with the same key in the second object.\n\n  o All members of the second object which do not have a corresponding\n    key in the first object, and whose value is not the JSON null\n    literal.\n\n  o All members with a key that exists in both the first and the second\n    object, and whose value in the second object is not the JSON null\n    literal. The values of these members are the results of recursively\n    merging the value in the first object with the value in the second\n    object.\n\nFor additional information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/json.html#json-normalization.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE_PATCH(\'[1, 2]\', \'[true, false]\');\n+---------------------------------------------+\n| JSON_MERGE_PATCH(\'[1, 2]\', \'[true, false]\') |\n+---------------------------------------------+\n| [true, false]                               |\n+---------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"name\": \"x\"}\', \'{\"id\": 47}\');\n+-------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"name\": \"x\"}\', \'{\"id\": 47}\') |\n+-------------------------------------------------+\n| {\"id\": 47, \"name\": \"x\"}                         |\n+-------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'1\', \'true\');\n+-------------------------------+\n| JSON_MERGE_PATCH(\'1\', \'true\') |\n+-------------------------------+\n| true                          |\n+-------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'[1, 2]\', \'{\"id\": 47}\');\n+------------------------------------------+\n| JSON_MERGE_PATCH(\'[1, 2]\', \'{\"id\": 47}\') |\n+------------------------------------------+\n| {\"id\": 47}                               |\n+------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\n     >     \'{ \"a\": 3, \"c\":4 }\');\n+-----------------------------------------------------------+\n| JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\') |\n+-----------------------------------------------------------+\n| {\"a\": 3, \"b\": 2, \"c\": 4}                                  |\n+-----------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\',\n     >     \'{ \"a\": 5, \"d\":6 }\');\n+-------------------------------------------------------------------------------+\n| JSON_MERGE_PATCH(\'{ \"a\": 1, \"b\":2 }\',\'{ \"a\": 3, \"c\":4 }\',\'{ \"a\": 5, \"d\":6 }\') |\n+-------------------------------------------------------------------------------+\n| {\"a\": 5, \"b\": 2, \"c\": 4, \"d\": 6}                                              |\n+-------------------------------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"a\":1, \"b\":2}\', \'{\"b\":null}\');\n+--------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"a\":1, \"b\":2}\', \'{\"b\":null}\') |\n+--------------------------------------------------+\n| {\"a\": 1}                                         |\n+--------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PATCH(\'{\"a\":{\"x\":1}}\', \'{\"a\":{\"y\":2}}\');\n+----------------------------------------------------+\n| JSON_MERGE_PATCH(\'{\"a\":{\"x\":1}}\', \'{\"a\":{\"y\":2}}\') |\n+----------------------------------------------------+\n| {\"a\": {\"x\": 1, \"y\": 2}}                            |\n+----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(428,'JSON_MERGE_PRESERVE()',30,'Syntax:\nJSON_MERGE_PRESERVE(json_doc, json_doc[, json_doc] ...)\n\nMerges two or more JSON documents and returns the merged result.\nReturns NULL if any argument is NULL. An error occurs if any argument\nis not a valid JSON document.\n\nMerging takes place according to the following rules. For additional\ninformation, see\nhttps://dev.mysql.com/doc/refman/5.7/en/json.html#json-normalization.\n\no Adjacent arrays are merged to a single array.\n\no Adjacent objects are merged to a single object.\n\no A scalar value is autowrapped as an array and merged as an array.\n\no An adjacent array and object are merged by autowrapping the object as\n  an array and merging the two arrays.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SELECT JSON_MERGE_PRESERVE(\'[1, 2]\', \'[true, false]\');\n+------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'[1, 2]\', \'[true, false]\') |\n+------------------------------------------------+\n| [1, 2, true, false]                            |\n+------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{\"name\": \"x\"}\', \'{\"id\": 47}\');\n+----------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{\"name\": \"x\"}\', \'{\"id\": 47}\') |\n+----------------------------------------------------+\n| {\"id\": 47, \"name\": \"x\"}                            |\n+----------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'1\', \'true\');\n+----------------------------------+\n| JSON_MERGE_PRESERVE(\'1\', \'true\') |\n+----------------------------------+\n| [1, true]                        |\n+----------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'[1, 2]\', \'{\"id\": 47}\');\n+---------------------------------------------+\n| JSON_MERGE_PRESERVE(\'[1, 2]\', \'{\"id\": 47}\') |\n+---------------------------------------------+\n| [1, 2, {\"id\": 47}]                          |\n+---------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\n     >    \'{ \"a\": 3, \"c\": 4 }\');\n+--------------------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\":4 }\') |\n+--------------------------------------------------------------+\n| {\"a\": [1, 3], \"b\": 2, \"c\": 4}                                |\n+--------------------------------------------------------------+\n\nmysql> SELECT JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\": 4 }\',\n     >    \'{ \"a\": 5, \"d\": 6 }\');\n+----------------------------------------------------------------------------------+\n| JSON_MERGE_PRESERVE(\'{ \"a\": 1, \"b\": 2 }\',\'{ \"a\": 3, \"c\": 4 }\',\'{ \"a\": 5, \"d\": 6 }\') |\n+----------------------------------------------------------------------------------+\n| {\"a\": [1, 3, 5], \"b\": 2, \"c\": 4, \"d\": 6}                                         |\n+----------------------------------------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(429,'JSON_REMOVE',30,'Syntax:\nJSON_REMOVE(json_doc, path[, path] ...)\n\nRemoves data from a JSON document and returns the result. Returns NULL\nif any argument is NULL. An error occurs if the json_doc argument is\nnot a valid JSON document or any path argument is not a valid path\nexpression or is $ or contains a * or ** wildcard.\n\nThe path arguments are evaluated left to right. The document produced\nby evaluating one path becomes the new value against which the next\npath is evaluated.\n\nIt is not an error if the element to be removed does not exist in the\ndocument; in that case, the path does not affect the document.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'[\"a\", [\"b\", \"c\"], \"d\"]\';\nmysql> SELECT JSON_REMOVE(@j, \'$[1]\');\n+-------------------------+\n| JSON_REMOVE(@j, \'$[1]\') |\n+-------------------------+\n| [\"a\", \"d\"]              |\n+-------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(430,'JSON_REPLACE',30,'Syntax:\nJSON_REPLACE(json_doc, path, val[, path, val] ...)\n\nReplaces existing values in a JSON document and returns the result.\nReturns NULL if any argument is NULL. An error occurs if the json_doc\nargument is not a valid JSON document or any path argument is not a\nvalid path expression or contains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document overwrites the\nexisting document value with the new value. A path-value pair for a\nnonexisting path in the document is ignored and has no effect.\n\nFor a comparison of JSON_INSERT(), JSON_REPLACE(), and JSON_SET(), see\nthe discussion of JSON_SET().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-----------------------------------------------------+\n| JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-----------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3]}                              |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(431,'JSON_SET',30,'Syntax:\nJSON_SET(json_doc, path, val[, path, val] ...)\n\nInserts or updates data in a JSON document and returns the result.\nReturns NULL if any argument is NULL or path, if given, does not locate\nan object. An error occurs if the json_doc argument is not a valid JSON\ndocument or any path argument is not a valid path expression or\ncontains a * or ** wildcard.\n\nThe path-value pairs are evaluated left to right. The document produced\nby evaluating one pair becomes the new value against which the next\npair is evaluated.\n\nA path-value pair for an existing path in the document overwrites the\nexisting document value with the new value. A path-value pair for a\nnonexisting path in the document adds the value to the document if the\npath identifies one of these types of values:\n\no A member not present in an existing object. The member is added to\n  the object and associated with the new value.\n\no A position past the end of an existing array. The array is extended\n  with the new value. If the existing value is not an array, it is\n  autowrapped as an array, then extended with the new value.\n\nOtherwise, a path-value pair for a nonexisting path in the document is\nignored and has no effect.\n\nThe JSON_SET(), JSON_INSERT(), and JSON_REPLACE() functions are\nrelated:\n\no JSON_SET() replaces existing values and adds nonexisting values.\n\no JSON_INSERT() inserts values without replacing existing values.\n\no JSON_REPLACE() replaces only existing values.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'{ \"a\": 1, \"b\": [2, 3]}\';\nmysql> SELECT JSON_SET(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-------------------------------------------------+\n| JSON_SET(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3], \"c\": \"[true, false]\"}    |\n+-------------------------------------------------+\nmysql> SELECT JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+----------------------------------------------------+\n| JSON_INSERT(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+----------------------------------------------------+\n| {\"a\": 1, \"b\": [2, 3], \"c\": \"[true, false]\"}        |\n+----------------------------------------------------+\nmysql> SELECT JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\');\n+-----------------------------------------------------+\n| JSON_REPLACE(@j, \'$.a\', 10, \'$.c\', \'[true, false]\') |\n+-----------------------------------------------------+\n| {\"a\": 10, \"b\": [2, 3]}                              |\n+-----------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(432,'JSON_UNQUOTE',30,'Syntax:\nJSON_UNQUOTE(json_val)\n\nUnquotes JSON value and returns the result as a utf8mb4 string. Returns\nNULL if the argument is NULL. An error occurs if the value starts and\nends with double quotes but is not a valid JSON string literal.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html\n\n','mysql> SET @j = \'\"abc\"\';\nmysql> SELECT @j, JSON_UNQUOTE(@j);\n+-------+------------------+\n| @j    | JSON_UNQUOTE(@j) |\n+-------+------------------+\n| \"abc\" | abc              |\n+-------+------------------+\nmysql> SET @j = \'[1, 2, 3]\';\nmysql> SELECT @j, JSON_UNQUOTE(@j);\n+-----------+------------------+\n| @j        | JSON_UNQUOTE(@j) |\n+-----------+------------------+\n| [1, 2, 3] | [1, 2, 3]        |\n+-----------+------------------+\n\nmysql> SELECT @@sql_mode;\n+------------+\n| @@sql_mode |\n+------------+\n|            |\n+------------+\n\nmysql> SELECT JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\');\n+------------------------------+\n| JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\') |\n+------------------------------+\n|       2                           |\n+------------------------------+\n\nmysql> SET @@sql_mode = \'NO_BACKSLASH_ESCAPES\';\nmysql> SELECT JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\');\n+------------------------------+\n| JSON_UNQUOTE(\'\"\\\\t\\\\u0032\"\') |\n+------------------------------+\n| \\t\\u0032                     |\n+------------------------------+\n\nmysql> SELECT JSON_UNQUOTE(\'\"\\t\\u0032\"\');\n+----------------------------+\n| JSON_UNQUOTE(\'\"\\t\\u0032\"\') |\n+----------------------------+\n|       2                         |\n+----------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-modification-functions.html'),(433,'JSON_DEPTH',30,'Syntax:\nJSON_DEPTH(json_doc)\n\nReturns the maximum depth of a JSON document. Returns NULL if the\nargument is NULL. An error occurs if the argument is not a valid JSON\ndocument.\n\nAn empty array, empty object, or scalar value has depth 1. A nonempty\narray containing only elements of depth 1 or nonempty object containing\nonly member values of depth 1 has depth 2. Otherwise, a JSON document\nhas depth greater than 2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_DEPTH(\'{}\'), JSON_DEPTH(\'[]\'), JSON_DEPTH(\'true\');\n+------------------+------------------+--------------------+\n| JSON_DEPTH(\'{}\') | JSON_DEPTH(\'[]\') | JSON_DEPTH(\'true\') |\n+------------------+------------------+--------------------+\n|                1 |                1 |                  1 |\n+------------------+------------------+--------------------+\nmysql> SELECT JSON_DEPTH(\'[10, 20]\'), JSON_DEPTH(\'[[], {}]\');\n+------------------------+------------------------+\n| JSON_DEPTH(\'[10, 20]\') | JSON_DEPTH(\'[[], {}]\') |\n+------------------------+------------------------+\n|                      2 |                      2 |\n+------------------------+------------------------+\nmysql> SELECT JSON_DEPTH(\'[10, {\"a\": 20}]\');\n+-------------------------------+\n| JSON_DEPTH(\'[10, {\"a\": 20}]\') |\n+-------------------------------+\n|                             3 |\n+-------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(434,'JSON_LENGTH',30,'Syntax:\nJSON_LENGTH(json_doc[, path])\n\nReturns the length of a JSON document, or, if a path argument is given,\nthe length of the value within the document identified by the path.\nReturns NULL if any argument is NULL or the path argument does not\nidentify a value in the document. An error occurs if the json_doc\nargument is not a valid JSON document or the path argument is not a\nvalid path expression or contains a * or ** wildcard.\n\nThe length of a document is determined as follows:\n\no The length of a scalar is 1.\n\no The length of an array is the number of array elements.\n\no The length of an object is the number of object members.\n\no The length does not count the length of nested arrays or objects.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_LENGTH(\'[1, 2, {\"a\": 3}]\');\n+---------------------------------+\n| JSON_LENGTH(\'[1, 2, {\"a\": 3}]\') |\n+---------------------------------+\n|                               3 |\n+---------------------------------+\nmysql> SELECT JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\');\n+-----------------------------------------+\n| JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\') |\n+-----------------------------------------+\n|                                       2 |\n+-----------------------------------------+\nmysql> SELECT JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\');\n+------------------------------------------------+\n| JSON_LENGTH(\'{\"a\": 1, \"b\": {\"c\": 30}}\', \'$.b\') |\n+------------------------------------------------+\n|                                              1 |\n+------------------------------------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(435,'JSON_TYPE',30,'Syntax:\nJSON_TYPE(json_val)\n\nReturns a utf8mb4 string indicating the type of a JSON value. This can\nbe an object, an array, or a scalar type, as shown here:\n\nmysql> SET @j = \'{\"a\": [10, true]}\';\nmysql> SELECT JSON_TYPE(@j);\n+---------------+\n| JSON_TYPE(@j) |\n+---------------+\n| OBJECT        |\n+---------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a\'));\n+------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a\')) |\n+------------------------------------+\n| ARRAY                              |\n+------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a[0]\'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a[0]\')) |\n+---------------------------------------+\n| INTEGER                               |\n+---------------------------------------+\nmysql> SELECT JSON_TYPE(JSON_EXTRACT(@j, \'$.a[1]\'));\n+---------------------------------------+\n| JSON_TYPE(JSON_EXTRACT(@j, \'$.a[1]\')) |\n+---------------------------------------+\n| BOOLEAN                               |\n+---------------------------------------+\n\nJSON_TYPE() returns NULL if the argument is NULL:\n\nmysql> SELECT JSON_TYPE(NULL);\n+-----------------+\n| JSON_TYPE(NULL) |\n+-----------------+\n| NULL            |\n+-----------------+\n\nAn error occurs if the argument is not a valid JSON value:\n\nmysql> SELECT JSON_TYPE(1);\nERROR 3146 (22032): Invalid data type for JSON data in argument 1\nto function json_type; a JSON string or JSON type is required.\n\nFor a non-NULL, non-error result, the following list describes the\npossible JSON_TYPE() return values:\n\no Purely JSON types:\n\n  o OBJECT: JSON objects\n\n  o ARRAY: JSON arrays\n\n  o BOOLEAN: The JSON true and false literals\n\n  o NULL: The JSON null literal\n\no Numeric types:\n\n  o INTEGER: MySQL TINYINT, SMALLINT, MEDIUMINT and INT and BIGINT\n    scalars\n\n  o DOUBLE: MySQL DOUBLE FLOAT scalars\n\n  o DECIMAL: MySQL DECIMAL and NUMERIC scalars\n\no Temporal types:\n\n  o DATETIME: MySQL DATETIME and TIMESTAMP scalars\n\n  o DATE: MySQL DATE scalars\n\n  o TIME: MySQL TIME scalars\n\no String types:\n\n  o STRING: MySQL utf8 character type scalars: CHAR, VARCHAR, TEXT,\n    ENUM, and SET\n\no Binary types:\n\n  o BLOB: MySQL binary type scalars: BINARY, VARBINARY, BLOB\n\n  o BIT: MySQL BIT scalars\n\no All other types:\n\n  o OPAQUE (raw bits)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(436,'JSON_VALID',30,'Syntax:\nJSON_VALID(val)\n\nReturns 0 or 1 to indicate whether a value is valid JSON. Returns NULL\nif the argument is NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html\n\n','mysql> SELECT JSON_VALID(\'{\"a\": 1}\');\n+------------------------+\n| JSON_VALID(\'{\"a\": 1}\') |\n+------------------------+\n|                      1 |\n+------------------------+\nmysql> SELECT JSON_VALID(\'hello\'), JSON_VALID(\'\"hello\"\');\n+---------------------+-----------------------+\n| JSON_VALID(\'hello\') | JSON_VALID(\'\"hello\"\') |\n+---------------------+-----------------------+\n|                   0 |                     1 |\n+---------------------+-----------------------+\n','https://dev.mysql.com/doc/refman/5.7/en/json-attribute-functions.html'),(437,'JSON_PRETTY',30,'JSON_PRETTY(json_val)\n\nProvides pretty-printing of JSON values similar to that implemented in\nPHP and by other languages and database systems. The value supplied\nmust be a JSON value or a valid string representation of a JSON value.\nExtraneous whitespaces and newlines present in this value have no\neffect on the output. For a NULL value, the function returns NULL. If\nthe value is not a JSON document, or if it cannot be parsed as one, the\nfunction fails with an error.\n\nFormatting of the output from this function adheres to the following\nrules:\n\no Each array element or object member appears on a separate line,\n  indented by one additional level as compared to its parent.\n\no Each level of indentation adds two leading spaces.\n\no A comma separating individual array elements or object members is\n  printed before the newline that separates the two elements or\n  members.\n\no The key and the value of an object member are separated by a colon\n  followed by a space (\': \').\n\no An empty object or array is printed on a single line. No space is\n  printed between the opening and closing brace.\n\no Special characters in string scalars and key names are escaped\n  employing the same rules used by the JSON_QUOTE() function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html\n\n','mysql> SELECT JSON_PRETTY(\'123\'); # scalar\n+--------------------+\n| JSON_PRETTY(\'123\') |\n+--------------------+\n| 123                |\n+--------------------+\n\nmysql> SELECT JSON_PRETTY(\"[1,3,5]\"); # array\n+------------------------+\n| JSON_PRETTY(\"[1,3,5]\") |\n+------------------------+\n| [\n  1,\n  3,\n  5\n]      |\n+------------------------+\n\nmysql> SELECT JSON_PRETTY(\'{\"a\":\"10\",\"b\":\"15\",\"x\":\"25\"}\'); # object\n+---------------------------------------------+\n| JSON_PRETTY(\'{\"a\":\"10\",\"b\":\"15\",\"x\":\"25\"}\') |\n+---------------------------------------------+\n| {\n  \"a\": \"10\",\n  \"b\": \"15\",\n  \"x\": \"25\"\n}   |\n+---------------------------------------------+\n\nmysql> SELECT JSON_PRETTY(\'[\"a\",1,{\"key1\":\n     >    \"value1\"},\"5\",     \"77\" ,\n     >       {\"key2\":[\"value3\",\"valueX\",\n     > \"valueY\"]},\"j\", \"2\"   ]\')\\G  # nested arrays and objects\n*************************** 1. row ***************************\nJSON_PRETTY(\'[\"a\",1,{\"key1\":\n             \"value1\"},\"5\",     \"77\" ,\n                {\"key2\":[\"value3\",\"valuex\",\n          \"valuey\"]},\"j\", \"2\"   ]\'): [\n  \"a\",\n  1,\n  {\n    \"key1\": \"value1\"\n  },\n  \"5\",\n  \"77\",\n  {\n    \"key2\": [\n      \"value3\",\n      \"valuex\",\n      \"valuey\"\n    ]\n  },\n  \"j\",\n  \"2\"\n]\n','https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html'),(438,'JSON_STORAGE_SIZE',30,'JSON_STORAGE_SIZE(json_val)\n\nThis function returns the number of bytes used to store the binary\nrepresentation of a JSON document. When the argument is a JSON column,\nthis is the space used to store the JSON document. json_val must be a\nvalid JSON document or a string which can be parsed as one. In the case\nwhere it is string, the function returns the amount of storage space in\nthe JSON binary representation that is created by parsing the string as\nJSON and converting it to binary. It returns NULL if the argument is\nNULL.\n\nAn error results when json_val is not NULL, and is not---or cannot be\nsuccessfully parsed as---a JSON document.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html\n\n','mysql> CREATE TABLE jtable (jcol JSON);\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql> INSERT INTO jtable VALUES\n    ->     (\'{\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"}\');\nQuery OK, 1 row affected (0.04 sec)\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size\n    -> FROM jtable;\n+-----------------------------------------------+------+\n| jcol                                          | Size |\n+-----------------------------------------------+------+\n| {\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"} |   47 |\n+-----------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> UPDATE jtable\nmysql>     SET jcol = \'{\"a\": 4.55, \"b\": \"wxyz\", \"c\": \"[true, false]\"}\';\nQuery OK, 1 row affected (0.04 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> SELECT\n    ->     jcol,\n    ->     JSON_STORAGE_SIZE(jcol) AS Size\n    -> FROM jtable;\n+------------------------------------------------+------+\n| jcol                                           | Size |\n+------------------------------------------------+------+\n| {\"a\": 4.55, \"b\": \"wxyz\", \"c\": \"[true, false]\"} |   56 |\n+------------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = \'[100, \"sakila\", [1, 3, 5], 425.05]\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+------------------------------------+------+\n| @j                                 | Size |\n+------------------------------------+------+\n| [100, \"sakila\", [1, 3, 5], 425.05] |   45 |\n+------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$[1]\', \"json\");\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+----------------------------------+------+\n| @j                               | Size |\n+----------------------------------+------+\n| [100, \"json\", [1, 3, 5], 425.05] |   43 |\n+----------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SET @j = JSON_SET(@j, \'$[2][0]\', JSON_ARRAY(10, 20, 30));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @j, JSON_STORAGE_SIZE(@j) AS Size;\n+---------------------------------------------+------+\n| @j                                          | Size |\n+---------------------------------------------+------+\n| [100, \"json\", [[10, 20, 30], 3, 5], 425.05] |   56 |\n+---------------------------------------------+------+\n1 row in set (0.00 sec)\n\nmysql> SELECT\n    ->     JSON_STORAGE_SIZE(\'[100, \"sakila\", [1, 3, 5], 425.05]\') AS A,\n    ->     JSON_STORAGE_SIZE(\'{\"a\": 1000, \"b\": \"a\", \"c\": \"[1, 3, 5, 7]\"}\') AS B,\n    ->     JSON_STORAGE_SIZE(\'{\"a\": 1000, \"b\": \"wxyz\", \"c\": \"[1, 3, 5, 7]\"}\') AS C,\n    ->     JSON_STORAGE_SIZE(\'[100, \"json\", [[10, 20, 30], 3, 5], 425.05]\') AS D;\n+----+----+----+----+\n| A  | B  | C  | D  |\n+----+----+----+----+\n| 45 | 44 | 47 | 56 |\n+----+----+----+----+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/json-utility-functions.html'),(439,'GTID_SUBSET',30,'Syntax:\nGTID_SUBSET(set1,set2)\n\nGiven two sets of global transaction IDs set1 and set2, returns true if\nall GTIDs in set1 are also in set2. Returns false otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','mysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 1\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-25\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-25\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 1\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\')\\G\n*************************** 1. row ***************************\nGTID_SUBSET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\'): 0\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(440,'GTID_SUBTRACT',30,'Syntax:\nGTID_SUBTRACT(set1,set2)\n\nGiven two sets of global transaction IDs set1 and set2, returns only\nthose GTIDs from set1 that are not in set2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','mysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:21\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:22-57\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:20-25\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:26-57\n1 row in set (0.00 sec)\n\nmysql> SELECT GTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    ->     \'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-24\')\\G\n*************************** 1. row ***************************\nGTID_SUBTRACT(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:21-57\',\n    \'3E11FA47-71CA-11E1-9E33-C80AA9429562:23-24\'): 3e11fa47-71ca-11e1-9e33-c80aa9429562:21-22:25-57\n1 row in set (0.01 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(441,'WAIT_FOR_EXECUTED_GTID_SET',30,'Syntax:\nWAIT_FOR_EXECUTED_GTID_SET(gtid_set[, timeout])\n\nWait until the server has applied all of the transactions whose global\ntransaction identifiers are contained in gtid_set; that is, until the\ncondition GTID_SUBSET(gtid_subset, @@GLOBAL.gtid_executed) holds. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html\nfor a definition of GTID sets.\n\nIf a timeout is specified, and timeout seconds elapse before all of the\ntransactions in the GTID set have been applied, the function stops\nwaiting. timeout is optional, and the default timeout is 0 seconds, in\nwhich case the function always waits until all of the transactions in\nthe GTID set have been applied.\n\nWAIT_FOR_EXECUTED_GTID_SET() monitors all the GTIDs that are applied on\nthe server, including transactions that arrive from all replication\nchannels and user clients. It does not take into account whether\nreplication channels have been started or stopped.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','mysql> SELECT WAIT_FOR_EXECUTED_GTID_SET(\'3E11FA47-71CA-11E1-9E33-C80AA9429562:1-5\');\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(442,'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS',30,'Syntax:\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(gtid_set[, timeout][,channel])\n\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() is similar to\nWAIT_FOR_EXECUTED_GTID_SET() in that it waits until all of the\ntransactions whose global transaction identifiers are contained in\ngtid_set have been applied, or until timeout seconds have elapsed,\nwhichever occurs first. However, WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()\napplies to a specific replication channel, and stops only after the\ntransactions have been applied on the specified channel, for which the\napplier must be running. In contrast, WAIT_FOR_EXECUTED_GTID_SET()\nstops after the transactions have been applied, regardless of where\nthey were applied (on any replication channel or any user client), and\nwhether or not any replication channels are running.\n\nThe channel option names which replication channel the function applies\nto. If no channel is named and no channels other than the default\nreplication channel exist, the function applies to the default\nreplication channel. If multiple replication channels exist, you must\nspecify a channel as otherwise it is not known which replication\nchannel the function applies to. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information on replication channels.\n\n*Note*:\n\nBecause WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() applies to a specific\nreplication channel, if an expected transaction arrives on a different\nreplication channel or from a user client, for example in a failover or\nmanual recovery situation, the function can hang indefinitely if no\ntimeout is set. Use WAIT_FOR_EXECUTED_GTID_SET() instead to ensure\ncorrect handling of transactions in these situations.\n\nGTID sets used with WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() are represented\nas strings and must be quoted in the same way as for\nWAIT_FOR_EXECUTED_GTID_SET(). For WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(),\nthe return value for the function is an arbitrary positive number. If\nGTID-based replication is not active (that is, if the value of the\ngtid_mode variable is OFF), then this value is undefined and\nWAIT_UNTIL_SQL_THREAD_AFTER_GTIDS() returns NULL. If the slave is not\nrunning then the function also returns NULL.\n\ngtid_mode cannot be changed to OFF while any client is using this\nfunction to wait for GTIDs to be applied.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/gtid-functions.html'),(443,'ASYMMETRIC_DECRYPT',30,'Syntax:\nASYMMETRIC_DECRYPT(algorithm, crypt_str, key_str)\n\nDecrypts an encrypted string using the given algorithm and key string,\nand returns the resulting plaintext as a binary string. If decryption\nfails, the result is NULL.\n\nkey_str must be a valid key string in PEM format. For successful\ndecryption, it must be the public or private key string corresponding\nto the private or public key string used with ASYMMETRIC_ENCRYPT() to\nproduce the encrypted string. algorithm indicates the encryption\nalgorithm used to create the key.\n\nSupported algorithm values: \'RSA\'\n\nFor a usage example, see the description of ASYMMETRIC_ENCRYPT().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(444,'ASYMMETRIC_DERIVE',30,'Syntax:\nASYMMETRIC_DERIVE(pub_key_str, priv_key_str)\n\nDerives a symmetric key using the private key of one party and the\npublic key of another, and returns the resulting key as a binary\nstring. If key derivation fails, the result is NULL.\n\npub_key_str and priv_key_str must be valid key strings in PEM format.\nThey must be created using the DH algorithm.\n\nSuppose that you have two pairs of public and private keys:\n\nSET @dhp = CREATE_DH_PARAMETERS(1024);\nSET @priv1 = CREATE_ASYMMETRIC_PRIV_KEY(\'DH\', @dhp);\nSET @pub1 = CREATE_ASYMMETRIC_PUB_KEY(\'DH\', @priv1);\nSET @priv2 = CREATE_ASYMMETRIC_PRIV_KEY(\'DH\', @dhp);\nSET @pub2 = CREATE_ASYMMETRIC_PUB_KEY(\'DH\', @priv2);\n\nSuppose further that you use the private key from one pair and the\npublic key from the other pair to create a symmetric key string. Then\nthis symmetric key identity relationship holds:\n\nASYMMETRIC_DERIVE(@pub1, @priv2) = ASYMMETRIC_DERIVE(@pub2, @priv1)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(445,'ASYMMETRIC_ENCRYPT',30,'Syntax:\nASYMMETRIC_ENCRYPT(algorithm, str, key_str)\n\nEncrypts a string using the given algorithm and key string, and returns\nthe resulting ciphertext as a binary string. If encryption fails, the\nresult is NULL.\n\nThe str length cannot be greater than the key_str length − 11, in\nbytes\n\nkey_str must be a valid key string in PEM format. algorithm indicates\nthe encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\'\n\nTo encrypt a string, pass a private or public key string to\nASYMMETRIC_ENCRYPT(). To recover the original unencrypted string, pass\nthe encrypted string to ASYMMETRIC_DECRYPT(), along with the public or\nprivate key string correponding to the private or public key string\nused for encryption.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','-- Generate private/public key pair\nSET @priv = CREATE_ASYMMETRIC_PRIV_KEY(\'RSA\', 1024);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(\'RSA\', @priv);\n\n-- Encrypt using private key, decrypt using public key\nSET @ciphertext = ASYMMETRIC_ENCRYPT(\'RSA\', \'The quick brown fox\', @priv);\nSET @plaintext = ASYMMETRIC_DECRYPT(\'RSA\', @ciphertext, @pub);\n\n-- Encrypt using public key, decrypt using private key\nSET @ciphertext = ASYMMETRIC_ENCRYPT(\'RSA\', \'The quick brown fox\', @pub);\nSET @plaintext = ASYMMETRIC_DECRYPT(\'RSA\', @ciphertext, @priv);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(446,'ASYMMETRIC_SIGN',30,'Syntax:\nASYMMETRIC_SIGN(algorithm, digest_str, priv_key_str, digest_type)\n\nSigns a digest string using a private key string, and returns the\nsignature as a binary string. If signing fails, the result is NULL.\n\ndigest_str is the digest string. It can be generated by calling\nCREATE_DIGEST(). digest_type indicates the digest algorithm used to\ngenerate the digest string.\n\npriv_key_str is the private key string to use for signing the digest\nstring. It must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\'\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nFor a usage example, see the description of ASYMMETRIC_VERIFY().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(447,'ASYMMETRIC_VERIFY',30,'Syntax:\nASYMMETRIC_VERIFY(algorithm, digest_str, sig_str, pub_key_str,\ndigest_type)\n\nVerifies whether the signature string matches the digest string, and\nreturns 1 or 0 to indicate whether verification succeeded or failed.\n\ndigest_str is the digest string. It can be generated by calling\nCREATE_DIGEST(). digest_type indicates the digest algorithm used to\ngenerate the digest string.\n\nsig_str is the signature string. It can be generated by calling\nASYMMETRIC_SIGN().\n\npub_key_str is the public key string of the signer. It corresponds to\nthe private key passed to ASYMMETRIC_SIGN() to generate the signature\nstring and must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\'\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','-- Set the encryption algorithm and digest type\nSET @algo = \'RSA\';\nSET @dig_type = \'SHA224\';\n\n-- Create private/public key pair\nSET @priv = CREATE_ASYMMETRIC_PRIV_KEY(@algo, 1024);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(@algo, @priv);\n\n-- Generate digest from string\nSET @dig = CREATE_DIGEST(@dig_type, \'The quick brown fox\');\n\n-- Generate signature for digest and verify signature against digest\nSET @sig = ASYMMETRIC_SIGN(@algo, @dig, @priv, @dig_type);\nSET @verf = ASYMMETRIC_VERIFY(@algo, @dig, @sig, @pub, @dig_type);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(448,'CREATE_ASYMMETRIC_PRIV_KEY',30,'Syntax:\nCREATE_ASYMMETRIC_PRIV_KEY(algorithm, {key_len|dh_secret})\n\nCreates a private key using the given algorithm and key length or DH\nsecret, and returns the key as a binary string in PEM format. If key\ngeneration fails, the result is NULL.\n\nSupported algorithm values: \'RSA\', \'DSA\', \'DH\'\n\nSupported key_len values: The minimum key length in bits is 1,024. The\nmaximum key length depends on the algorithm: 16,384 for RSA and 10,000\nfor DSA. These key-length limits are constraints imposed by OpenSSL.\nServer administrators can impose additional limits on maximum key\nlength by setting environment variables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-usage.htm\nl.\n\nFor DH keys, pass a shared DH secret instead of a key length. To create\nthe secret, pass the key length to CREATE_DH_PARAMETERS().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','SET @priv = CREATE_ASYMMETRIC_PRIV_KEY(\'DSA\', 2048);\nSET @pub = CREATE_ASYMMETRIC_PUB_KEY(\'DSA\', @priv);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(449,'CREATE_ASYMMETRIC_PUB_KEY',30,'Syntax:\nCREATE_ASYMMETRIC_PUB_KEY(algorithm, priv_key_str)\n\nDerives a public key from the given private key using the given\nalgorithm, and returns the key as a binary string in PEM format. If key\nderivation fails, the result is NULL.\n\npriv_key_str must be a valid key string in PEM format. algorithm\nindicates the encryption algorithm used to create the key.\n\nSupported algorithm values: \'RSA\', \'DSA\', \'DH\'\n\nFor a usage example, see the description of\nCREATE_ASYMMETRIC_PRIV_KEY().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(450,'CREATE_DH_PARAMETERS',30,'CREATE_DH_PARAMETERS(key_len)\n\nCreates a shared secret for generating a DH private/public key pair and\nreturns a binary string that can be passed to\nCREATE_ASYMMETRIC_PRIV_KEY(). If secret generation fails, the result is\nnull.\n\nSupported key_len values: The minimum and maximum key lengths in bits\nare 1,024 and 10,000. These key-length limits are constraints imposed\nby OpenSSL. Server administrators can impose additional limits on\nmaximum key length by setting environment variables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-usage.htm\nl.\n\nFor an example showing how to use the return value for generating\nsymmetric keys, see the description of ASYMMETRIC_DERIVE().\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','SET @dhp = CREATE_DH_PARAMETERS(1024);\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(451,'CREATE_DIGEST',30,'Syntax:\nCREATE_DIGEST(digest_type, str)\n\nCreates a digest from the given string using the given digest type, and\nreturns the digest as a binary string. If digest generation fails, the\nresult is NULL.\n\nSupported digest_type values: \'SHA224\', \'SHA256\', \'SHA384\', \'SHA512\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html\n\n','SET @dig = CREATE_DIGEST(\'SHA512\', The quick brown fox\');\n','https://dev.mysql.com/doc/refman/5.7/en/enterprise-encryption-functions.html'),(452,'AVG',31,'Syntax:\nAVG([DISTINCT] expr)\n\nReturns the average value of expr. The DISTINCT option can be used to\nreturn the average of the distinct values of expr.\n\nIf there are no matching rows, AVG() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name, AVG(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(453,'BIT_AND',31,'Syntax:\nBIT_AND(expr)\n\nReturns the bitwise AND of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nIf there are no matching rows, BIT_AND() returns a neutral value (all\nbits set to 1).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(454,'BIT_OR',31,'Syntax:\nBIT_OR(expr)\n\nReturns the bitwise OR of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nIf there are no matching rows, BIT_OR() returns a neutral value (all\nbits set to 0).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(455,'BIT_XOR',31,'Syntax:\nBIT_XOR(expr)\n\nReturns the bitwise XOR of all bits in expr. The calculation is\nperformed with 64-bit (BIGINT) precision.\n\nIf there are no matching rows, BIT_XOR() returns a neutral value (all\nbits set to 0).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(456,'COUNT',31,'Syntax:\nCOUNT(expr)\n\nReturns a count of the number of non-NULL values of expr in the rows\nretrieved by a SELECT statement. The result is a BIGINT value.\n\nIf there are no matching rows, COUNT() returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student.student_name,COUNT(*)\n       FROM student,course\n       WHERE student.student_id=course.student_id\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(457,'COUNT DISTINCT',31,'Syntax:\nCOUNT(DISTINCT expr,[expr...])\n\nReturns a count of the number of rows with different non-NULL expr\nvalues.\n\nIf there are no matching rows, COUNT(DISTINCT) returns 0.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT COUNT(DISTINCT results) FROM student;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(458,'GROUP_CONCAT',31,'Syntax:\nGROUP_CONCAT(expr)\n\nThis function returns a string result with the concatenated non-NULL\nvalues from a group. It returns NULL if there are no non-NULL values.\nThe full syntax is as follows:\n\nGROUP_CONCAT([DISTINCT] expr [,expr ...]\n             [ORDER BY {unsigned_integer | col_name | expr}\n                 [ASC | DESC] [,col_name ...]]\n             [SEPARATOR str_val])\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name,\n         GROUP_CONCAT(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(459,'JSON_ARRAYAGG',31,'Syntax:\nJSON_ARRAYAGG(col_or_expr)\n\nAggregates a result set as a single JSON array whose elements consist\nof the rows. The order of elements in this array is undefined. The\nfunction acts on a column or an expression that evaluates to a single\nvalue. Returns NULL if the result contains no rows, or in the event of\nan error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT o_id, attribute, value FROM t3;\n+------+-----------+-------+\n| o_id | attribute | value |\n+------+-----------+-------+\n|    2 | color     | red   |\n|    2 | fabric    | silk  |\n|    3 | color     | green |\n|    3 | shape     | square|\n+------+-----------+-------+\n4 rows in set (0.00 sec)\n\nmysql> SELECT o_id, JSON_ARRAYAGG(attribute) AS attributes \n     > FROM t3 GROUP BY o_id;\n+------+---------------------+\n| o_id | attributes          |\n+------+---------------------+\n|    2 | [\"color\", \"fabric\"] |\n|    3 | [\"color\", \"shape\"]  |\n+------+---------------------+\n2 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(460,'JSON_OBJECTAGG',31,'Syntax:\nJSON_OBJECTAGG(key, value)\n\nTakes two column names or expressions as arguments, the first of these\nbeing used as a key and the second as a value, and returns a JSON\nobject containing key-value pairs. Returns NULL if the result contains\nno rows, or in the event of an error. An error occurs if any key name\nis NULL or the number of arguments is not equal to 2.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT o_id, attribute, value FROM t3;\n+------+-----------+-------+\n| o_id | attribute | value |\n+------+-----------+-------+\n|    2 | color     | red   |\n|    2 | fabric    | silk  |\n|    3 | color     | green |\n|    3 | shape     | square|\n+------+-----------+-------+\n4 rows in set (0.00 sec)\n\nmysql> SELECT o_id, JSON_OBJECTAGG(attribute, value) FROM t3 GROUP BY o_id;\n+------+----------------------------------------+\n| o_id | JSON_OBJECTAGG(attribute, name)        |\n+------+----------------------------------------+\n|    2 | {\"color\": \"red\", \"fabric\": \"silk\"}     |\n|    3 | {\"color\": \"green\", \"shape\": \"square\"}  |\n+------+----------------------------------------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(461,'MAX',31,'Syntax:\nMAX([DISTINCT] expr)\n\nReturns the maximum value of expr. MAX() may take a string argument; in\nsuch cases, it returns the maximum string value. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html. The\nDISTINCT keyword can be used to find the maximum of the distinct values\nof expr, however, this produces the same result as omitting DISTINCT.\n\nIf there are no matching rows, MAX() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(462,'MIN',31,'Syntax:\nMIN([DISTINCT] expr)\n\nReturns the minimum value of expr. MIN() may take a string argument; in\nsuch cases, it returns the minimum string value. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html. The\nDISTINCT keyword can be used to find the minimum of the distinct values\nof expr, however, this produces the same result as omitting DISTINCT.\n\nIf there are no matching rows, MIN() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','mysql> SELECT student_name, MIN(test_score), MAX(test_score)\n       FROM student\n       GROUP BY student_name;\n','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(463,'STD',31,'Syntax:\nSTD(expr)\n\nReturns the population standard deviation of expr. STD() is a synonym\nfor the standard SQL function STDDEV_POP(), provided as a MySQL\nextension.\n\nIf there are no matching rows, STD() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(464,'STDDEV',31,'Syntax:\nSTDDEV(expr)\n\nReturns the population standard deviation of expr. STDDEV() is a\nsynonym for the standard SQL function STDDEV_POP(), provided for\ncompatibility with Oracle.\n\nIf there are no matching rows, STDDEV() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(465,'STDDEV_POP',31,'Syntax:\nSTDDEV_POP(expr)\n\nReturns the population standard deviation of expr (the square root of\nVAR_POP()). You can also use STD() or STDDEV(), which are equivalent\nbut not standard SQL.\n\nIf there are no matching rows, STDDEV_POP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(466,'STDDEV_SAMP',31,'Syntax:\nSTDDEV_SAMP(expr)\n\nReturns the sample standard deviation of expr (the square root of\nVAR_SAMP().\n\nIf there are no matching rows, STDDEV_SAMP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(467,'SUM',31,'Syntax:\nSUM([DISTINCT] expr)\n\nReturns the sum of expr. If the return set has no rows, SUM() returns\nNULL. The DISTINCT keyword can be used to sum only the distinct values\nof expr.\n\nIf there are no matching rows, SUM() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(468,'VAR_POP',31,'Syntax:\nVAR_POP(expr)\n\nReturns the population standard variance of expr. It considers rows as\nthe whole population, not as a sample, so it has the number of rows as\nthe denominator. You can also use VARIANCE(), which is equivalent but\nis not standard SQL.\n\nIf there are no matching rows, VAR_POP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(469,'VAR_SAMP',31,'Syntax:\nVAR_SAMP(expr)\n\nReturns the sample variance of expr. That is, the denominator is the\nnumber of rows minus one.\n\nIf there are no matching rows, VAR_SAMP() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(470,'VARIANCE',31,'Syntax:\nVARIANCE(expr)\n\nReturns the population standard variance of expr. VARIANCE() is a\nsynonym for the standard SQL function VAR_POP(), provided as a MySQL\nextension.\n\nIf there are no matching rows, VARIANCE() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html'),(471,'ANY_VALUE',32,'ANY_VALUE(arg)\n\nThis function is useful for GROUP BY queries when the\nONLY_FULL_GROUP_BY SQL mode is enabled, for cases when MySQL rejects a\nquery that you know is valid for reasons that MySQL cannot determine.\nThe function return value and type are the same as the return value and\ntype of its argument, but the function result is not checked for the\nONLY_FULL_GROUP_BY SQL mode.\n\nFor example, if name is a nonindexed column, the following query fails\nwith ONLY_FULL_GROUP_BY enabled:\n\nmysql> SELECT name, address, MAX(age) FROM t GROUP BY name;\nERROR 1055 (42000): Expression #2 of SELECT list is not in GROUP\nBY clause and contains nonaggregated column \'mydb.t.address\' which\nis not functionally dependent on columns in GROUP BY clause; this\nis incompatible with sql_mode=only_full_group_by\n\nThe failure occurs because address is a nonaggregated column that is\nneither named among GROUP BY columns nor functionally dependent on\nthem. As a result, the address value for rows within each name group is\nnondeterministic. There are multiple ways to cause MySQL to accept the\nquery:\n\no Alter the table to make name a primary key or a unique NOT NULL\n  column. This enables MySQL to determine that address is functionally\n  dependent on name; that is, address is uniquely determined by name.\n  (This technique is inapplicable if NULL must be permitted as a valid\n  name value.)\n\no Use ANY_VALUE() to refer to address:\n\nSELECT name, ANY_VALUE(address), MAX(age) FROM t GROUP BY name;\n\n  In this case, MySQL ignores the nondeterminism of address values\n  within each name group and accepts the query. This may be useful if\n  you simply do not care which value of a nonaggregated column is\n  chosen for each group. ANY_VALUE() is not an aggregate function,\n  unlike functions such as SUM() or COUNT(). It simply acts to suppress\n  the test for nondeterminism.\n\no Disable ONLY_FULL_GROUP_BY. This is equivalent to using ANY_VALUE()\n  with ONLY_FULL_GROUP_BY enabled, as described in the previous item.\n\nANY_VALUE() is also useful if functional dependence exists between\ncolumns but MySQL cannot determine it. The following query is valid\nbecause age is functionally dependent on the grouping column age-1, but\nMySQL cannot tell that and rejects the query with ONLY_FULL_GROUP_BY\nenabled:\n\nSELECT age FROM t GROUP BY age-1;\n\nTo cause MySQL to accept the query, use ANY_VALUE():\n\nSELECT ANY_VALUE(age) FROM t GROUP BY age-1;\n\nANY_VALUE() can be used for queries that refer to aggregate functions\nin the absence of a GROUP BY clause:\n\nmysql> SELECT name, MAX(age) FROM t;\nERROR 1140 (42000): In aggregated query without GROUP BY, expression\n#1 of SELECT list contains nonaggregated column \'mydb.t.name\'; this\nis incompatible with sql_mode=only_full_group_by\n\nWithout GROUP BY, there is a single group and it is nondeterministic\nwhich name value to choose for the group. ANY_VALUE() tells MySQL to\naccept the query:\n\nSELECT ANY_VALUE(name), MAX(age) FROM t;\n\nIt may be that, due to some property of a given data set, you know that\na selected nonaggregated column is effectively functionally dependent\non a GROUP BY column. For example, an application may enforce\nuniqueness of one column with respect to another. In this case, using\nANY_VALUE() for the effectively functionally dependent column may make\nsense.\n\nFor additional discussion, see\nhttps://dev.mysql.com/doc/refman/5.7/en/group-by-handling.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(472,'DEFAULT',32,'Syntax:\nDEFAULT(col_name)\n\nReturns the default value for a table column. An error results if the\ncolumn has no default value.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> UPDATE t SET i = DEFAULT(i)+1 WHERE id < 100;\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(473,'INET_ATON',32,'Syntax:\nINET_ATON(expr)\n\nGiven the dotted-quad representation of an IPv4 network address as a\nstring, returns an integer that represents the numeric value of the\naddress in network byte order (big endian). INET_ATON() returns NULL if\nit does not understand its argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT INET_ATON(\'10.0.5.9\');\n        -> 167773449\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(474,'INET_NTOA',32,'Syntax:\nINET_NTOA(expr)\n\nGiven a numeric IPv4 network address in network byte order, returns the\ndotted-quad string representation of the address as a string in the\nconnection character set. INET_NTOA() returns NULL if it does not\nunderstand its argument.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT INET_NTOA(167773449);\n        -> \'10.0.5.9\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(475,'INET6_ATON',32,'Syntax:\nINET6_ATON(expr)\n\nGiven an IPv6 or IPv4 network address as a string, returns a binary\nstring that represents the numeric value of the address in network byte\norder (big endian). Because numeric-format IPv6 addresses require more\nbytes than the largest integer type, the representation returned by\nthis function has the VARBINARY data type: VARBINARY(16) for IPv6\naddresses and VARBINARY(4) for IPv4 addresses. If the argument is not a\nvalid address, INET6_ATON() returns NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT HEX(INET6_ATON(\'fdfe::5a55:caff:fefa:9089\'));\n        -> \'FDFE0000000000005A55CAFFFEFA9089\'\nmysql> SELECT HEX(INET6_ATON(\'10.0.5.9\'));\n        -> \'0A000509\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(476,'INET6_NTOA',32,'Syntax:\nINET6_NTOA(expr)\n\nGiven an IPv6 or IPv4 network address represented in numeric form as a\nbinary string, returns the string representation of the address as a\nstring in the connection character set. If the argument is not a valid\naddress, INET6_NTOA() returns NULL.\n\nINET6_NTOA() has these properties:\n\no It does not use operating system functions to perform conversions,\n  thus the output string is platform independent.\n\no The return string has a maximum length of 39 (4 x 8 + 7). Given this\n  statement:\n\nCREATE TABLE t AS SELECT INET6_NTOA(expr) AS c1;\n\n  The resulting table would have this definition:\n\nCREATE TABLE t (c1 VARCHAR(39) CHARACTER SET utf8 DEFAULT NULL);\n\no The return string uses lowercase letters for IPv6 addresses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT INET6_NTOA(INET6_ATON(\'fdfe::5a55:caff:fefa:9089\'));\n        -> \'fdfe::5a55:caff:fefa:9089\'\nmysql> SELECT INET6_NTOA(INET6_ATON(\'10.0.5.9\'));\n        -> \'10.0.5.9\'\n\nmysql> SELECT INET6_NTOA(UNHEX(\'FDFE0000000000005A55CAFFFEFA9089\'));\n        -> \'fdfe::5a55:caff:fefa:9089\'\nmysql> SELECT INET6_NTOA(UNHEX(\'0A000509\'));\n        -> \'10.0.5.9\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(477,'IS_IPV4',32,'Syntax:\nIS_IPV4(expr)\n\nReturns 1 if the argument is a valid IPv4 address specified as a\nstring, 0 otherwise.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4(\'10.0.5.9\'), IS_IPV4(\'10.0.5.256\');\n        -> 1, 0\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(478,'IS_IPV4_COMPAT',32,'Syntax:\nIS_IPV4_COMPAT(expr)\n\nThis function takes an IPv6 address represented in numeric form as a\nbinary string, as returned by INET6_ATON(). It returns 1 if the\nargument is a valid IPv4-compatible IPv6 address, 0 otherwise.\nIPv4-compatible addresses have the form ::ipv4_address.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4_COMPAT(INET6_ATON(\'::10.0.5.9\'));\n        -> 1\nmysql> SELECT IS_IPV4_COMPAT(INET6_ATON(\'::ffff:10.0.5.9\'));\n        -> 0\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(479,'IS_IPV4_MAPPED',32,'Syntax:\nIS_IPV4_MAPPED(expr)\n\nThis function takes an IPv6 address represented in numeric form as a\nbinary string, as returned by INET6_ATON(). It returns 1 if the\nargument is a valid IPv4-mapped IPv6 address, 0 otherwise. IPv4-mapped\naddresses have the form ::ffff:ipv4_address.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV4_MAPPED(INET6_ATON(\'::10.0.5.9\'));\n        -> 0\nmysql> SELECT IS_IPV4_MAPPED(INET6_ATON(\'::ffff:10.0.5.9\'));\n        -> 1\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(480,'IS_IPV6',32,'Syntax:\nIS_IPV6(expr)\n\nReturns 1 if the argument is a valid IPv6 address specified as a\nstring, 0 otherwise. This function does not consider IPv4 addresses to\nbe valid IPv6 addresses.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT IS_IPV6(\'10.0.5.9\'), IS_IPV6(\'::1\');\n        -> 0, 1\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(481,'MASTER_POS_WAIT',32,'Syntax:\nMASTER_POS_WAIT(log_name,log_pos[,timeout][,channel])\n\nThis function is useful for control of master/slave synchronization. It\nblocks until the slave has read and applied all updates up to the\nspecified position in the master log. The return value is the number of\nlog events the slave had to wait for to advance to the specified\nposition. The function returns NULL if the slave SQL thread is not\nstarted, the slave\'s master information is not initialized, the\narguments are incorrect, or an error occurs. It returns -1 if the\ntimeout has been exceeded. If the slave SQL thread stops while\nMASTER_POS_WAIT() is waiting, the function returns NULL. If the slave\nis past the specified position, the function returns immediately.\n\nOn a multithreaded slave, the function waits until expiry of the limit\nset by the slave_checkpoint_group or slave_checkpoint_period system\nvariable, when the checkpoint operation is called to update the status\nof the slave. Depending on the setting for the system variables, the\nfunction might therefore return some time after the specified position\nwas reached.\n\nIf a timeout value is specified, MASTER_POS_WAIT() stops waiting when\ntimeout seconds have elapsed. timeout must be greater than 0; a zero or\nnegative timeout means no timeout.\n\nThe optional channel value enables you to name which replication\nchannel the function applies to. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(482,'NAME_CONST',32,'Syntax:\nNAME_CONST(name,value)\n\nReturns the given value. When used to produce a result set column,\nNAME_CONST() causes the column to have the given name. The arguments\nshould be constants.\n\nmysql> SELECT NAME_CONST(\'myname\', 14);\n+--------+\n| myname |\n+--------+\n|     14 |\n+--------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(483,'SLEEP',32,'Syntax:\nSLEEP(duration)\n\nSleeps (pauses) for the number of seconds given by the duration\nargument, then returns 0. The duration may have a fractional part. If\nthe argument is NULL or negative, SLEEP() produces a warning, or an\nerror in strict SQL mode.\n\nWhen sleep returns normally (without interruption), it returns 0:\n\nmysql> SELECT SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           0 |\n+-------------+\n\nWhen SLEEP() is the only thing invoked by a query that is interrupted,\nit returns 1 and the query itself returns no error. This is true\nwhether the query is killed or times out:\n\no This statement is interrupted using KILL QUERY from another session:\n\nmysql> SELECT SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           1 |\n+-------------+\n\no This statement is interrupted by timing out:\n\nmysql> SELECT /*+ MAX_EXECUTION_TIME(1) */ SLEEP(1000);\n+-------------+\n| SLEEP(1000) |\n+-------------+\n|           1 |\n+-------------+\n\nWhen SLEEP() is only part of a query that is interrupted, the query\nreturns an error:\n\no This statement is interrupted using KILL QUERY from another session:\n\nmysql> SELECT 1 FROM t1 WHERE SLEEP(1000);\nERROR 1317 (70100): Query execution was interrupted\n\no This statement is interrupted by timing out:\n\nmysql> SELECT /*+ MAX_EXECUTION_TIME(1000) */ 1 FROM t1 WHERE SLEEP(1000);\nERROR 3024 (HY000): Query execution was interrupted, maximum statement\nexecution time exceeded\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(484,'UUID',32,'Syntax:\nUUID()\n\nReturns a Universal Unique Identifier (UUID) generated according to RFC\n4122, \"A Universally Unique IDentifier (UUID) URN Namespace\"\n(http://www.ietf.org/rfc/rfc4122.txt).\n\nA UUID is designed as a number that is globally unique in space and\ntime. Two calls to UUID() are expected to generate two different\nvalues, even if these calls are performed on two separate devices not\nconnected to each other.\n\n*Warning*:\n\nAlthough UUID() values are intended to be unique, they are not\nnecessarily unguessable or unpredictable. If unpredictability is\nrequired, UUID values should be generated some other way.\n\nUUID() returns a value that conforms to UUID version 1 as described in\nRFC 4122. The value is a 128-bit number represented as a utf8 string of\nfive hexadecimal numbers in aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\nformat:\n\no The first three numbers are generated from the low, middle, and high\n  parts of a timestamp. The high part also includes the UUID version\n  number.\n\no The fourth number preserves temporal uniqueness in case the timestamp\n  value loses monotonicity (for example, due to daylight saving time).\n\no The fifth number is an IEEE 802 node number that provides spatial\n  uniqueness. A random number is substituted if the latter is not\n  available (for example, because the host device has no Ethernet card,\n  or it is unknown how to find the hardware address of an interface on\n  the host operating system). In this case, spatial uniqueness cannot\n  be guaranteed. Nevertheless, a collision should have very low\n  probability.\n\n  The MAC address of an interface is taken into account only on\n  FreeBSD, Linux, and Windows. On other operating systems, MySQL uses a\n  randomly generated 48-bit number.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT UUID();\n        -> \'6ccd780c-baba-1026-9564-5b8c656024db\'\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(485,'UUID_SHORT',32,'Syntax:\nUUID_SHORT()\n\nReturns a \"short\" universal identifier as a 64-bit unsigned integer.\nValues returned by UUID_SHORT() differ from the string-format 128-bit\nidentifiers returned by the UUID() function and have different\nuniqueness properties. The value of UUID_SHORT() is guaranteed to be\nunique if the following conditions hold:\n\no The server_id value of the current server is between 0 and 255 and is\n  unique among your set of master and slave servers\n\no You do not set back the system time for your server host between\n  mysqld restarts\n\no You invoke UUID_SHORT() on average fewer than 16 million times per\n  second between mysqld restarts\n\nThe UUID_SHORT() return value is constructed this way:\n\n  (server_id & 255) << 56\n+ (server_startup_time_in_seconds << 24)\n+ incremented_variable++;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> SELECT UUID_SHORT();\n        -> 92395783831158784\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(486,'VALUES',32,'Syntax:\nVALUES(col_name)\n\nIn an INSERT ... ON DUPLICATE KEY UPDATE statement, you can use the\nVALUES(col_name) function in the UPDATE clause to refer to column\nvalues from the INSERT portion of the statement. In other words,\nVALUES(col_name) in the UPDATE clause refers to the value of col_name\nthat would be inserted, had no duplicate-key conflict occurred. This\nfunction is especially useful in multiple-row inserts. The VALUES()\nfunction is meaningful only in the ON DUPLICATE KEY UPDATE clause of\nINSERT statements and returns NULL otherwise. See\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html\n\n','mysql> INSERT INTO table (a,b,c) VALUES (1,2,3),(4,5,6)\n    -> ON DUPLICATE KEY UPDATE c=VALUES(a)+VALUES(b);\n','https://dev.mysql.com/doc/refman/5.7/en/miscellaneous-functions.html'),(487,'ALTER DATABASE',33,'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\nALTER {DATABASE | SCHEMA} db_name\n    UPGRADE DATA DIRECTORY NAME\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the db.opt file in the\ndatabase directory. To use ALTER DATABASE, you need the ALTER privilege\non the database. ALTER SCHEMA is a synonym for ALTER DATABASE.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nNational Language Characteristics\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttps://dev.mysql.com/doc/refman/5.7/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nIf you change the default character set or collation for a database,\nstored routines that use the database defaults must be dropped and\nrecreated so that they use the new defaults. (In a stored routine,\nvariables with character data types use the database defaults if the\ncharacter set or collation are not specified explicitly. See [HELP\nCREATE PROCEDURE].)\n\nUpgrading from Versions Older than MySQL 5.1\n\nThe syntax that includes the UPGRADE DATA DIRECTORY NAME clause updates\nthe name of the directory associated with the database to use the\nencoding implemented in MySQL 5.1 for mapping database names to\ndatabase directory names (see\nhttps://dev.mysql.com/doc/refman/5.7/en/identifier-mapping.html). This\nclause is for use under these conditions:\n\no It is intended when upgrading MySQL to 5.1 or later from older\n  versions.\n\no It is intended to update a database directory name to the current\n  encoding format if the name contains special characters that need\n  encoding.\n\no The statement is used by mysqlcheck (as invoked by mysql_upgrade).\n\nFor example, if a database in MySQL 5.0 has the name a-b-c, the name\ncontains instances of the - (dash) character. In MySQL 5.0, the\ndatabase directory is also named a-b-c, which is not necessarily safe\nfor all file systems. In MySQL 5.1 and later, the same database name is\nencoded as a@002db@002dc to produce a file system-neutral directory\nname.\n\nWhen a MySQL installation is upgraded to MySQL 5.1 or later from an\nolder version,the server displays a name such as a-b-c (which is in the\nold format) as #mysql50#a-b-c, and you must refer to the name using the\n#mysql50# prefix. Use UPGRADE DATA DIRECTORY NAME in this case to\nexplicitly tell the server to re-encode the database directory name to\nthe current encoding format:\n\nALTER DATABASE `#mysql50#a-b-c` UPGRADE DATA DIRECTORY NAME;\n\nAfter executing this statement, you can refer to the database as a-b-c\nwithout the special #mysql50# prefix.\n\n*Note*:\n\nThe UPGRADE DATA DIRECTORY NAME clause is deprecated in MySQL 5.7.6 and\nwill be removed in a future version of MySQL. If it is necessary to\nconvert MySQL 5.0 database or table names, a workaround is to upgrade a\nMySQL 5.0 installation to MySQL 5.1 before upgrading to a more recent\nrelease.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-database.html'),(488,'ALTER SCHEMA',33,'Syntax:\nALTER {DATABASE | SCHEMA} [db_name]\n    alter_specification ...\nALTER {DATABASE | SCHEMA} db_name\n    UPGRADE DATA DIRECTORY NAME\n\nalter_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nALTER DATABASE enables you to change the overall characteristics of a\ndatabase. These characteristics are stored in the db.opt file in the\ndatabase directory. To use ALTER DATABASE, you need the ALTER privilege\non the database. ALTER SCHEMA is a synonym for ALTER DATABASE.\n\nThe database name can be omitted from the first syntax, in which case\nthe statement applies to the default database.\n\nNational Language Characteristics\n\nThe CHARACTER SET clause changes the default database character set.\nThe COLLATE clause changes the default database collation.\nhttps://dev.mysql.com/doc/refman/5.7/en/charset.html, discusses\ncharacter set and collation names.\n\nYou can see what character sets and collations are available using,\nrespectively, the SHOW CHARACTER SET and SHOW COLLATION statements. See\n[HELP SHOW CHARACTER SET], and [HELP SHOW COLLATION], for more\ninformation.\n\nIf you change the default character set or collation for a database,\nstored routines that use the database defaults must be dropped and\nrecreated so that they use the new defaults. (In a stored routine,\nvariables with character data types use the database defaults if the\ncharacter set or collation are not specified explicitly. See [HELP\nCREATE PROCEDURE].)\n\nUpgrading from Versions Older than MySQL 5.1\n\nThe syntax that includes the UPGRADE DATA DIRECTORY NAME clause updates\nthe name of the directory associated with the database to use the\nencoding implemented in MySQL 5.1 for mapping database names to\ndatabase directory names (see\nhttps://dev.mysql.com/doc/refman/5.7/en/identifier-mapping.html). This\nclause is for use under these conditions:\n\no It is intended when upgrading MySQL to 5.1 or later from older\n  versions.\n\no It is intended to update a database directory name to the current\n  encoding format if the name contains special characters that need\n  encoding.\n\no The statement is used by mysqlcheck (as invoked by mysql_upgrade).\n\nFor example, if a database in MySQL 5.0 has the name a-b-c, the name\ncontains instances of the - (dash) character. In MySQL 5.0, the\ndatabase directory is also named a-b-c, which is not necessarily safe\nfor all file systems. In MySQL 5.1 and later, the same database name is\nencoded as a@002db@002dc to produce a file system-neutral directory\nname.\n\nWhen a MySQL installation is upgraded to MySQL 5.1 or later from an\nolder version,the server displays a name such as a-b-c (which is in the\nold format) as #mysql50#a-b-c, and you must refer to the name using the\n#mysql50# prefix. Use UPGRADE DATA DIRECTORY NAME in this case to\nexplicitly tell the server to re-encode the database directory name to\nthe current encoding format:\n\nALTER DATABASE `#mysql50#a-b-c` UPGRADE DATA DIRECTORY NAME;\n\nAfter executing this statement, you can refer to the database as a-b-c\nwithout the special #mysql50# prefix.\n\n*Note*:\n\nThe UPGRADE DATA DIRECTORY NAME clause is deprecated in MySQL 5.7.6 and\nwill be removed in a future version of MySQL. If it is necessary to\nconvert MySQL 5.0 database or table names, a workaround is to upgrade a\nMySQL 5.0 installation to MySQL 5.1 before upgrading to a more recent\nrelease.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-database.html'),(489,'ALTER EVENT',33,'Syntax:\nALTER\n    [DEFINER = user]\n    EVENT event_name\n    [ON SCHEDULE schedule]\n    [ON COMPLETION [NOT] PRESERVE]\n    [RENAME TO new_event_name]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'string\']\n    [DO event_body]\n\nThe ALTER EVENT statement changes one or more of the characteristics of\nan existing event without the need to drop and recreate it. The syntax\nfor each of the DEFINER, ON SCHEDULE, ON COMPLETION, COMMENT, ENABLE /\nDISABLE, and DO clauses is exactly the same as when used with CREATE\nEVENT. (See [HELP CREATE EVENT].)\n\nAny user can alter an event defined on a database for which that user\nhas the EVENT privilege. When a user executes a successful ALTER EVENT\nstatement, that user becomes the definer for the affected event.\n\nALTER EVENT works only with an existing event:\n\nmysql> ALTER EVENT no_such_event \n     >     ON SCHEDULE \n     >       EVERY \'2:3\' DAY_HOUR;\nERROR 1517 (HY000): Unknown event \'no_such_event\'\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-event.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-event.html'),(490,'ALTER FUNCTION',33,'Syntax:\nALTER FUNCTION func_name [characteristic ...]\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nThis statement can be used to change the characteristics of a stored\nfunction. More than one change may be specified in an ALTER FUNCTION\nstatement. However, you cannot change the parameters or body of a\nstored function using this statement; to make such changes, you must\ndrop and re-create the function using DROP FUNCTION and CREATE\nFUNCTION.\n\nYou must have the ALTER ROUTINE privilege for the function. (That\nprivilege is granted automatically to the function creator.) If binary\nlogging is enabled, the ALTER FUNCTION statement might also require the\nSUPER privilege, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-function.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-function.html'),(491,'ALTER INSTANCE',33,'Syntax:\nALTER INSTANCE ROTATE INNODB MASTER KEY\n\nALTER INSTANCE, introduced in MySQL 5.7.11, defines actions applicable\nto a MySQL server instance.\n\nThe ALTER INSTANCE ROTATE INNODB MASTER KEY statement is used to rotate\nthe master encryption key used for InnoDB tablespace encryption. A\nkeyring plugin must be installed and configured to use this statement.\nFor information about keyring plugins, see\nhttps://dev.mysql.com/doc/refman/5.7/en/keyring.html. Key rotation\nrequires the SUPER privilege.\n\nALTER INSTANCE ROTATE INNODB MASTER KEY supports concurrent DML.\nHowever, it cannot be run concurrently with CREATE TABLE ... ENCRYPTION\nor ALTER TABLE ... ENCRYPTION operations, and locks are taken to\nprevent conflicts that could arise from concurrent execution of these\nstatements. If one of the conflicting statements is running, it must\ncomplete before another can proceed.\n\nALTER INSTANCE actions are written to the binary log so that they can\nbe executed on replicated servers.\n\nFor additional ALTER INSTANCE ROTATE INNODB MASTER KEY usage\ninformation, see\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-tablespace-encryption.ht\nml. For information about keyring plugins, see\nhttps://dev.mysql.com/doc/refman/5.7/en/keyring.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-instance.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-instance.html'),(492,'ALTER LOGFILE GROUP',33,'Syntax:\nALTER LOGFILE GROUP logfile_group\n    ADD UNDOFILE \'file_name\'\n    [INITIAL_SIZE [=] size]\n    [WAIT]\n    ENGINE [=] engine_name\n\nThis statement adds an UNDO file named \'file_name\' to an existing log\nfile group logfile_group. An ALTER LOGFILE GROUP statement has one and\nonly one ADD UNDOFILE clause. No DROP UNDOFILE clause is currently\nsupported.\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and an undo log file with the same name, or an undo log file\nand a data file with the same name.\n\nThe optional INITIAL_SIZE parameter sets the UNDO file\'s initial size\nin bytes; if not specified, the initial size defaults to 134217728 (128\nMB). You may optionally follow size with a one-letter abbreviation for\nan order of magnitude, similar to those used in my.cnf. Generally, this\nis one of the letters M (megabytes) or G (gigabytes). (Bug #13116514,\nBug #16104705, Bug #62858)\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nThe minimum allowed value for INITIAL_SIZE is 1048576 (1 MB). (Bug\n#29574)\n\n*Note*:\n\nWAIT is parsed but otherwise ignored. This keyword currently has no\neffect, and is intended for future expansion.\n\nThe ENGINE parameter (required) determines the storage engine which is\nused by this log file group, with engine_name being the name of the\nstorage engine. Currently, the only accepted values for engine_name are\n\"NDBCLUSTER\" and \"NDB\". The two values are equivalent.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-logfile-group.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-logfile-group.html'),(493,'ALTER PROCEDURE',33,'Syntax:\nALTER PROCEDURE proc_name [characteristic ...]\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nThis statement can be used to change the characteristics of a stored\nprocedure. More than one change may be specified in an ALTER PROCEDURE\nstatement. However, you cannot change the parameters or body of a\nstored procedure using this statement; to make such changes, you must\ndrop and re-create the procedure using DROP PROCEDURE and CREATE\nPROCEDURE.\n\nYou must have the ALTER ROUTINE privilege for the procedure. By\ndefault, that privilege is granted automatically to the procedure\ncreator. This behavior can be changed by disabling the\nautomatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-procedure.html'),(494,'ALTER SERVER',33,'Syntax:\nALTER SERVER  server_name\n    OPTIONS (option [, option] ...)\n\nAlters the server information for server_name, adjusting any of the\noptions permitted in the CREATE SERVER statement. The corresponding\nfields in the mysql.servers table are updated accordingly. This\nstatement requires the SUPER privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-server.html\n\n','ALTER SERVER s OPTIONS (USER \'sally\');\n','https://dev.mysql.com/doc/refman/5.7/en/alter-server.html'),(495,'ALTER TABLE',33,'Syntax:\nALTER TABLE tbl_name\n    [alter_specification [, alter_specification] ...]\n    [partition_options]\n\nalter_specification:\n    table_options\n  | ADD [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ADD [COLUMN] (col_name column_definition,...)\n  | ADD {INDEX|KEY} [index_name]\n        [index_type] (key_part,...) [index_option] ...\n  | ADD {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name]\n        (key_part,...) [index_option] ...\n  | ADD [CONSTRAINT [symbol]] PRIMARY KEY\n        [index_type] (key_part,...)\n        [index_option] ...\n  | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n        [index_name] [index_type] (key_part,...)\n        [index_option] ...\n  | ADD [CONSTRAINT [symbol]] FOREIGN KEY\n        [index_name] (col_name,...)\n        reference_definition\n  | ADD CHECK (expr)\n  | ALGORITHM [=] {DEFAULT|INPLACE|COPY}\n  | ALTER [COLUMN] col_name {SET DEFAULT literal | DROP DEFAULT}\n  | CHANGE [COLUMN] old_col_name new_col_name column_definition\n        [FIRST|AFTER col_name]\n  | [DEFAULT] CHARACTER SET [=] charset_name [COLLATE [=] collation_name]\n  | CONVERT TO CHARACTER SET charset_name [COLLATE collation_name]\n  | {DISABLE|ENABLE} KEYS\n  | {DISCARD|IMPORT} TABLESPACE\n  | DROP [COLUMN] col_name\n  | DROP {INDEX|KEY} index_name\n  | DROP PRIMARY KEY\n  | DROP FOREIGN KEY fk_symbol\n  | FORCE\n  | LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n  | MODIFY [COLUMN] col_name column_definition\n        [FIRST | AFTER col_name]\n  | ORDER BY col_name [, col_name] ...\n  | RENAME {INDEX|KEY} old_index_name TO new_index_name\n  | RENAME [TO|AS] new_tbl_name\n  | {WITHOUT|WITH} VALIDATION\n  | ADD PARTITION (partition_definition)\n  | DROP PARTITION partition_names\n  | DISCARD PARTITION {partition_names | ALL} TABLESPACE\n  | IMPORT PARTITION {partition_names | ALL} TABLESPACE\n  | TRUNCATE PARTITION {partition_names | ALL}\n  | COALESCE PARTITION number\n  | REORGANIZE PARTITION partition_names INTO (partition_definitions)\n  | EXCHANGE PARTITION partition_name WITH TABLE tbl_name [{WITH|WITHOUT} VALIDATION]\n  | ANALYZE PARTITION {partition_names | ALL}\n  | CHECK PARTITION {partition_names | ALL}\n  | OPTIMIZE PARTITION {partition_names | ALL}\n  | REBUILD PARTITION {partition_names | ALL}\n  | REPAIR PARTITION {partition_names | ALL}\n  | REMOVE PARTITIONING\n  | UPGRADE PARTITIONING\n\nkey_part:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option:\n    AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | COMPRESSION [=] {\'ZLIB\'|\'LZ4\'|\'NONE\'}\n  | CONNECTION [=] \'connect_string\'\n  | {DATA|INDEX} DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | ENCRYPTION [=] {\'Y\' | \'N\'}\n  | ENGINE [=] engine_name\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | STATS_AUTO_RECALC [=] {DEFAULT|0|1}\n  | STATS_PERSISTENT [=] {DEFAULT|0|1}\n  | STATS_SAMPLE_PAGES [=] value\n  | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY}]\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    (see CREATE TABLE options)\n\nALTER TABLE changes the structure of a table. For example, you can add\nor delete columns, create or destroy indexes, change the type of\nexisting columns, or rename columns or the table itself. You can also\nchange characteristics such as the storage engine used for the table or\nthe table comment.\n\no To use ALTER TABLE, you need ALTER, CREATE, and INSERT privileges for\n  the table. Renaming a table requires ALTER and DROP on the old table,\n  ALTER, CREATE, and INSERT on the new table.\n\no Following the table name, specify the alterations to be made. If none\n  are given, ALTER TABLE does nothing.\n\no The syntax for many of the permissible alterations is similar to\n  clauses of the CREATE TABLE statement. column_definition clauses use\n  the same syntax for ADD and CHANGE as for CREATE TABLE. For more\n  information, see [HELP CREATE TABLE].\n\no The word COLUMN is optional and can be omitted.\n\no Multiple ADD, ALTER, DROP, and CHANGE clauses are permitted in a\n  single ALTER TABLE statement, separated by commas. This is a MySQL\n  extension to standard SQL, which permits only one of each clause per\n  ALTER TABLE statement. For example, to drop multiple columns in a\n  single statement, do this:\n\nALTER TABLE t2 DROP COLUMN c, DROP COLUMN d;\n\no If a storage engine does not support an attempted ALTER TABLE\n  operation, a warning may result. Such warnings can be displayed with\n  SHOW WARNINGS. See [HELP SHOW WARNINGS]. For information on\n  troubleshooting ALTER TABLE, see\n  https://dev.mysql.com/doc/refman/5.7/en/alter-table-problems.html.\n\no For information about generated columns, see\n  https://dev.mysql.com/doc/refman/5.7/en/alter-table-generated-columns\n  .html.\n\no For usage examples, see\n  https://dev.mysql.com/doc/refman/5.7/en/alter-table-examples.html.\n\no With the mysql_info() C API function, you can find out how many rows\n  were copied by ALTER TABLE. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysql-info.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-table.html'),(496,'ALTER TABLESPACE',33,'Syntax:\nALTER TABLESPACE tablespace_name\n    {ADD|DROP} DATAFILE \'file_name\'\n    [INITIAL_SIZE [=] size]\n    [WAIT]\n    ENGINE [=] engine_name\n\nThis statement is used either to add a new data file, or to drop a data\nfile from a tablespace.\n\nThe ADD DATAFILE variant enables you to specify an initial size using\nan INITIAL_SIZE clause, where size is measured in bytes; the default\nvalue is 134217728 (128 MB). You may optionally follow size with a\none-letter abbreviation for an order of magnitude, similar to those\nused in my.cnf. Generally, this is one of the letters M (megabytes) or\nG (gigabytes).\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a data file with the same name, or an undo log file and\na tablespace with the same name.\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nINITIAL_SIZE is rounded, explicitly, as for CREATE TABLESPACE.\n\nOnce a data file has been created, its size cannot be changed; however,\nyou can add more data files to the tablespace using additional ALTER\nTABLESPACE ... ADD DATAFILE statements.\n\nUsing DROP DATAFILE with ALTER TABLESPACE drops the data file\n\'file_name\' from the tablespace. You cannot drop a data file from a\ntablespace which is in use by any table; in other words, the data file\nmust be empty (no extents used). See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data-objects\n.html. In addition, any data file to be dropped must previously have\nbeen added to the tablespace with CREATE TABLESPACE or ALTER\nTABLESPACE.\n\nBoth ALTER TABLESPACE ... ADD DATAFILE and ALTER TABLESPACE ... DROP\nDATAFILE require an ENGINE clause which specifies the storage engine\nused by the tablespace. Currently, the only accepted values for\nengine_name are NDB and NDBCLUSTER.\n\nWAIT is parsed but otherwise ignored, and so has no effect in MySQL\n5.7. It is intended for future expansion.\n\nWhen ALTER TABLESPACE ... ADD DATAFILE is used with ENGINE = NDB, a\ndata file is created on each Cluster data node. You can verify that the\ndata files were created and obtain information about them by querying\nthe INFORMATION_SCHEMA.FILES table. For example, the following query\nshows all data files belonging to the tablespace named newts:\n\nmysql> SELECT LOGFILE_GROUP_NAME, FILE_NAME, EXTRA\n    -> FROM INFORMATION_SCHEMA.FILES\n    -> WHERE TABLESPACE_NAME = \'newts\' AND FILE_TYPE = \'DATAFILE\';\n+--------------------+--------------+----------------+\n| LOGFILE_GROUP_NAME | FILE_NAME    | EXTRA          |\n+--------------------+--------------+----------------+\n| lg_3               | newdata.dat  | CLUSTER_NODE=3 |\n| lg_3               | newdata.dat  | CLUSTER_NODE=4 |\n| lg_3               | newdata2.dat | CLUSTER_NODE=3 |\n| lg_3               | newdata2.dat | CLUSTER_NODE=4 |\n+--------------------+--------------+----------------+\n2 rows in set (0.03 sec)\n\nSee https://dev.mysql.com/doc/refman/5.7/en/files-table.html.\n\nALTER TABLESPACE is useful only with Disk Data storage for NDB Cluster.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-tablespace.html'),(497,'ALTER VIEW',33,'Syntax:\nALTER\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = user]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThis statement changes the definition of a view, which must exist. The\nsyntax is similar to that for CREATE VIEW see [HELP CREATE VIEW]). This\nstatement requires the CREATE VIEW and DROP privileges for the view,\nand some privilege for each column referred to in the SELECT statement.\nALTER VIEW is permitted only to the definer or users with the SUPER\nprivilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-view.html'),(498,'CREATE DATABASE',33,'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-database.html'),(499,'CREATE SCHEMA',33,'Syntax:\nCREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n    [create_specification] ...\n\ncreate_specification:\n    [DEFAULT] CHARACTER SET [=] charset_name\n  | [DEFAULT] COLLATE [=] collation_name\n\nCREATE DATABASE creates a database with the given name. To use this\nstatement, you need the CREATE privilege for the database. CREATE\nSCHEMA is a synonym for CREATE DATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-database.html'),(500,'CREATE EVENT',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    EVENT\n    [IF NOT EXISTS]\n    event_name\n    ON SCHEDULE schedule\n    [ON COMPLETION [NOT] PRESERVE]\n    [ENABLE | DISABLE | DISABLE ON SLAVE]\n    [COMMENT \'string\']\n    DO event_body;\n\nschedule:\n    AT timestamp [+ INTERVAL interval] ...\n  | EVERY interval\n    [STARTS timestamp [+ INTERVAL interval] ...]\n    [ENDS timestamp [+ INTERVAL interval] ...]\n\ninterval:\n    quantity {YEAR | QUARTER | MONTH | DAY | HOUR | MINUTE |\n              WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE |\n              DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND}\n\nThis statement creates and schedules a new event. The event will not\nrun unless the Event Scheduler is enabled. For information about\nchecking Event Scheduler status and enabling it if necessary, see\nhttps://dev.mysql.com/doc/refman/5.7/en/events-configuration.html.\n\nCREATE EVENT requires the EVENT privilege for the schema in which the\nevent is to be created. If the DEFINER clause is present, the\nprivileges required depend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\n\nThe minimum requirements for a valid CREATE EVENT statement are as\nfollows:\n\no The keywords CREATE EVENT plus an event name, which uniquely\n  identifies the event in a database schema.\n\no An ON SCHEDULE clause, which determines when and how often the event\n  executes.\n\no A DO clause, which contains the SQL statement to be executed by an\n  event.\n\nThis is an example of a minimal CREATE EVENT statement:\n\nCREATE EVENT myevent\n    ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 HOUR\n    DO\n      UPDATE myschema.mytable SET mycol = mycol + 1;\n\nThe previous statement creates an event named myevent. This event\nexecutes once---one hour following its creation---by running an SQL\nstatement that increments the value of the myschema.mytable table\'s\nmycol column by 1.\n\nThe event_name must be a valid MySQL identifier with a maximum length\nof 64 characters. Event names are not case-sensitive, so you cannot\nhave two events named myevent and MyEvent in the same schema. In\ngeneral, the rules governing event names are the same as those for\nnames of stored routines. See\nhttps://dev.mysql.com/doc/refman/5.7/en/identifiers.html.\n\nAn event is associated with a schema. If no schema is indicated as part\nof event_name, the default (current) schema is assumed. To create an\nevent in a specific schema, qualify the event name with a schema using\nschema_name.event_name syntax.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-event.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-event.html'),(501,'CREATE INDEX',33,'Syntax:\nCREATE [UNIQUE | FULLTEXT | SPATIAL] INDEX index_name\n    [index_type]\n    ON tbl_name (key_part,...)\n    [index_option]\n    [algorithm_option | lock_option] ...\n\nkey_part:\n    col_name [(length)] [ASC | DESC]\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nindex_type:\n    USING {BTREE | HASH}\n\nalgorithm_option:\n    ALGORITHM [=] {DEFAULT | INPLACE | COPY}\n\nlock_option:\n    LOCK [=] {DEFAULT | NONE | SHARED | EXCLUSIVE}\n\nNormally, you create all indexes on a table at the time the table\nitself is created with CREATE TABLE. See [HELP CREATE TABLE]. This\nguideline is especially important for InnoDB tables, where the primary\nkey determines the physical layout of rows in the data file. CREATE\nINDEX enables you to add indexes to existing tables.\n\nCREATE INDEX is mapped to an ALTER TABLE statement to create indexes.\nSee [HELP ALTER TABLE]. CREATE INDEX cannot be used to create a PRIMARY\nKEY; use ALTER TABLE instead. For more information about indexes, see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-index.html'),(502,'CREATE LOGFILE GROUP',33,'Syntax:\nCREATE LOGFILE GROUP logfile_group\n    ADD UNDOFILE \'undo_file\'\n    [INITIAL_SIZE [=] initial_size]\n    [UNDO_BUFFER_SIZE [=] undo_buffer_size]\n    [REDO_BUFFER_SIZE [=] redo_buffer_size]\n    [NODEGROUP [=] nodegroup_id]\n    [WAIT]\n    [COMMENT [=] \'string\']\n    ENGINE [=] engine_name\n\nThis statement creates a new log file group named logfile_group having\na single UNDO file named \'undo_file\'. A CREATE LOGFILE GROUP statement\nhas one and only one ADD UNDOFILE clause. For rules covering the naming\nof log file groups, see\nhttps://dev.mysql.com/doc/refman/5.7/en/identifiers.html.\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a log file group with the same name, or a tablespace and\na data file with the same name.\n\nThere can be only one log file group per NDB Cluster instance at any\ngiven time.\n\nThe optional INITIAL_SIZE parameter sets the UNDO file\'s initial size;\nif not specified, it defaults to 128M (128 megabytes). The optional\nUNDO_BUFFER_SIZE parameter sets the size used by the UNDO buffer for\nthe log file group; The default value for UNDO_BUFFER_SIZE is 8M (eight\nmegabytes); this value cannot exceed the amount of system memory\navailable. Both of these parameters are specified in bytes. You may\noptionally follow either or both of these with a one-letter\nabbreviation for an order of magnitude, similar to those used in\nmy.cnf. Generally, this is one of the letters M (for megabytes) or G\n(for gigabytes).\n\nMemory used for UNDO_BUFFER_SIZE comes from the global pool whose size\nis determined by the value of the SharedGlobalMemory data node\nconfiguration parameter. This includes any default value implied for\nthis option by the setting of the InitialLogFileGroup data node\nconfiguration parameter.\n\nThe maximum permitted for UNDO_BUFFER_SIZE is 629145600 (600 MB).\n\nOn 32-bit systems, the maximum supported value for INITIAL_SIZE is\n4294967296 (4 GB). (Bug #29186)\n\nThe minimum allowed value for INITIAL_SIZE is 1048576 (1 MB).\n\nThe ENGINE option determines the storage engine to be used by this log\nfile group, with engine_name being the name of the storage engine. In\nMySQL 5.7, this must be NDB (or NDBCLUSTER). If ENGINE is not set,\nMySQL tries to use the engine specified by the default_storage_engine\nserver system variable (formerly storage_engine). In any case, if the\nengine is not specified as NDB or NDBCLUSTER, the CREATE LOGFILE GROUP\nstatement appears to succeed but actually fails to create the log file\ngroup, as shown here:\n\nmysql> CREATE LOGFILE GROUP lg1\n    ->     ADD UNDOFILE \'undo.dat\' INITIAL_SIZE = 10M;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> SHOW WARNINGS;\n+-------+------+------------------------------------------------------------------------------------------------+\n| Level | Code | Message                                                                                        |\n+-------+------+------------------------------------------------------------------------------------------------+\n| Error | 1478 | Table storage engine \'InnoDB\' does not support the create option \'TABLESPACE or LOGFILE GROUP\' |\n+-------+------+------------------------------------------------------------------------------------------------+\n1 row in set (0.00 sec)\n\nmysql> DROP LOGFILE GROUP lg1 ENGINE = NDB;            \nERROR 1529 (HY000): Failed to drop LOGFILE GROUP\n\nmysql> CREATE LOGFILE GROUP lg1\n    ->     ADD UNDOFILE \'undo.dat\' INITIAL_SIZE = 10M\n    ->     ENGINE = NDB;\nQuery OK, 0 rows affected (2.97 sec)\n\nThe fact that the CREATE LOGFILE GROUP statement does not actually\nreturn an error when a non-NDB storage engine is named, but rather\nappears to succeed, is a known issue which we hope to address in a\nfuture release of NDB Cluster.\n\nREDO_BUFFER_SIZE, NODEGROUP, WAIT, and COMMENT are parsed but ignored,\nand so have no effect in MySQL 5.7. These options are intended for\nfuture expansion.\n\nWhen used with ENGINE [=] NDB, a log file group and associated UNDO log\nfile are created on each Cluster data node. You can verify that the\nUNDO files were created and obtain information about them by querying\nthe INFORMATION_SCHEMA.FILES table. For example:\n\nmysql> SELECT LOGFILE_GROUP_NAME, LOGFILE_GROUP_NUMBER, EXTRA\n    -> FROM INFORMATION_SCHEMA.FILES\n    -> WHERE FILE_NAME = \'undo_10.dat\';\n+--------------------+----------------------+----------------+\n| LOGFILE_GROUP_NAME | LOGFILE_GROUP_NUMBER | EXTRA          |\n+--------------------+----------------------+----------------+\n| lg_3               |                   11 | CLUSTER_NODE=3 |\n| lg_3               |                   11 | CLUSTER_NODE=4 |\n+--------------------+----------------------+----------------+\n2 rows in set (0.06 sec)\n\nCREATE LOGFILE GROUP is useful only with Disk Data storage for NDB\nCluster. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-logfile-group.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-logfile-group.html'),(503,'CREATE PROCEDURE',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = user]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n\nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n\nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nroutine_body:\n    Valid SQL routine statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttps://dev.mysql.com/doc/refman/5.7/en/adding-functions.html. A UDF\ncan be regarded as an external stored function. Stored functions share\ntheir namespace with UDFs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nTo invoke a stored procedure, use the CALL statement (see [HELP CALL]).\nTo invoke a stored function, refer to it in an expression. The function\nreturns a value during expression evaluation.\n\nCREATE PROCEDURE and CREATE FUNCTION require the CREATE ROUTINE\nprivilege. If the DEFINER clause is present, the privileges required\ndepend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE FUNCTION might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nBy default, MySQL automatically grants the ALTER ROUTINE and EXECUTE\nprivileges to the routine creator. This behavior can be changed by\ndisabling the automatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later in this section.\n\nIf the routine name is the same as the name of a built-in SQL function,\na syntax error occurs unless you use a space between the name and the\nfollowing parenthesis when defining the routine or invoking it later.\nFor this reason, avoid using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always permissible to have spaces after a stored\nroutine name, regardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*:\n\nSpecifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. For a FUNCTION, parameters are always regarded as IN\nparameters.\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an OUT or INOUT\nparameter. If you are calling the procedure from within a trigger, you\ncan also pass NEW.col_name as an OUT or INOUT parameter.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/5.7/en/conditions-and-parameters.html.\n\nRoutine parameters cannot be referenced in statements prepared within\nthe routine; see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis enables the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-defining.html.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nParameter types and function return types can be declared to use any\nvalid data type. The COLLATE attribute can be used if preceded by a\nCHARACTER SET specification.\n\nThe routine_body consists of a valid SQL routine statement. This can be\na simple statement such as SELECT or INSERT, or a compound statement\nwritten using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttps://dev.mysql.com/doc/refman/5.7/en/sql-syntax-compound-statements.\nhtml. In practice, stored functions tend to use compound statements,\nunless the body consists of a single RETURN statement.\n\nMySQL permits routines to contain DDL statements, such as CREATE and\nDROP. MySQL also permits stored procedures (but not stored functions)\nto contain SQL transaction statements such as COMMIT. Stored functions\nmay not contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\npermit them.\n\nStatements that return a result set can be used within a stored\nprocedure but not within a stored function. This prohibition includes\nSELECT statements that do not have an INTO var_list clause and other\nstatements such as SHOW, EXPLAIN, and CHECK TABLE. For statements that\ncan be determined at function definition time to return a result set, a\nNot allowed to return a result set from a function error occurs\n(ER_SP_NO_RETSET). For statements that can be determined only at\nruntime to return a result set, a PROCEDURE %s can\'t return a result\nset in the given context error occurs (ER_SP_BADSELECT).\n\nUSE statements within stored routines are not permitted. When a routine\nis invoked, an implicit USE db_name is performed (and undone when the\nroutine terminates). The causes the routine to have the given default\ndatabase while it executes. References to objects in databases other\nthan the routine default database should be qualified with the\nappropriate database name.\n\nFor additional information about statements that are not permitted in\nstored routines, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nMySQL stores the sql_mode system variable setting in effect when a\nroutine is created or altered, and always executes the routine with\nthis setting in force, regardless of the current server SQL mode when\nthe routine begins executing.\n\nThe switch from the SQL mode of the invoker to that of the routine\noccurs after evaluation of arguments and assignment of the resulting\nvalues to routine parameters. If you define a routine in strict SQL\nmode but invoke it in nonstrict mode, assignment of arguments to\nroutine parameters does not take place in strict mode. If you require\nthat expressions passed to a routine be assigned in strict SQL mode,\nyou should invoke the routine with strict mode in effect.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html'),(504,'CREATE FUNCTION',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    PROCEDURE sp_name ([proc_parameter[,...]])\n    [characteristic ...] routine_body\n\nCREATE\n    [DEFINER = user]\n    FUNCTION sp_name ([func_parameter[,...]])\n    RETURNS type\n    [characteristic ...] routine_body\n\nproc_parameter:\n    [ IN | OUT | INOUT ] param_name type\n\nfunc_parameter:\n    param_name type\n\ntype:\n    Any valid MySQL data type\n\ncharacteristic:\n    COMMENT \'string\'\n  | LANGUAGE SQL\n  | [NOT] DETERMINISTIC\n  | { CONTAINS SQL | NO SQL | READS SQL DATA | MODIFIES SQL DATA }\n  | SQL SECURITY { DEFINER | INVOKER }\n\nroutine_body:\n    Valid SQL routine statement\n\nThese statements create stored routines. By default, a routine is\nassociated with the default database. To associate the routine\nexplicitly with a given database, specify the name as db_name.sp_name\nwhen you create it.\n\nThe CREATE FUNCTION statement is also used in MySQL to support UDFs\n(user-defined functions). See\nhttps://dev.mysql.com/doc/refman/5.7/en/adding-functions.html. A UDF\ncan be regarded as an external stored function. Stored functions share\ntheir namespace with UDFs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/function-resolution.html, for\nthe rules describing how the server interprets references to different\nkinds of functions.\n\nTo invoke a stored procedure, use the CALL statement (see [HELP CALL]).\nTo invoke a stored function, refer to it in an expression. The function\nreturns a value during expression evaluation.\n\nCREATE PROCEDURE and CREATE FUNCTION require the CREATE ROUTINE\nprivilege. If the DEFINER clause is present, the privileges required\ndepend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE FUNCTION might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nBy default, MySQL automatically grants the ALTER ROUTINE and EXECUTE\nprivileges to the routine creator. This behavior can be changed by\ndisabling the automatic_sp_privileges system variable. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.\n\nThe DEFINER and SQL SECURITY clauses specify the security context to be\nused when checking access privileges at routine execution time, as\ndescribed later in this section.\n\nIf the routine name is the same as the name of a built-in SQL function,\na syntax error occurs unless you use a space between the name and the\nfollowing parenthesis when defining the routine or invoking it later.\nFor this reason, avoid using the names of existing SQL functions for\nyour own stored routines.\n\nThe IGNORE_SPACE SQL mode applies to built-in functions, not to stored\nroutines. It is always permissible to have spaces after a stored\nroutine name, regardless of whether IGNORE_SPACE is enabled.\n\nThe parameter list enclosed within parentheses must always be present.\nIf there are no parameters, an empty parameter list of () should be\nused. Parameter names are not case sensitive.\n\nEach parameter is an IN parameter by default. To specify otherwise for\na parameter, use the keyword OUT or INOUT before the parameter name.\n\n*Note*:\n\nSpecifying a parameter as IN, OUT, or INOUT is valid only for a\nPROCEDURE. For a FUNCTION, parameters are always regarded as IN\nparameters.\n\nAn IN parameter passes a value into a procedure. The procedure might\nmodify the value, but the modification is not visible to the caller\nwhen the procedure returns. An OUT parameter passes a value from the\nprocedure back to the caller. Its initial value is NULL within the\nprocedure, and its value is visible to the caller when the procedure\nreturns. An INOUT parameter is initialized by the caller, can be\nmodified by the procedure, and any change made by the procedure is\nvisible to the caller when the procedure returns.\n\nFor each OUT or INOUT parameter, pass a user-defined variable in the\nCALL statement that invokes the procedure so that you can obtain its\nvalue when the procedure returns. If you are calling the procedure from\nwithin another stored procedure or function, you can also pass a\nroutine parameter or local routine variable as an OUT or INOUT\nparameter. If you are calling the procedure from within a trigger, you\ncan also pass NEW.col_name as an OUT or INOUT parameter.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/5.7/en/conditions-and-parameters.html.\n\nRoutine parameters cannot be referenced in statements prepared within\nthe routine; see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nThe following example shows a simple stored procedure that uses an OUT\nparameter:\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE simpleproc (OUT param1 INT)\n    -> BEGIN\n    ->   SELECT COUNT(*) INTO param1 FROM t;\n    -> END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter ;\n\nmysql> CALL simpleproc(@a);\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @a;\n+------+\n| @a   |\n+------+\n| 3    |\n+------+\n1 row in set (0.00 sec)\n\nThe example uses the mysql client delimiter command to change the\nstatement delimiter from ; to // while the procedure is being defined.\nThis enables the ; delimiter used in the procedure body to be passed\nthrough to the server rather than being interpreted by mysql itself.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-defining.html.\n\nThe RETURNS clause may be specified only for a FUNCTION, for which it\nis mandatory. It indicates the return type of the function, and the\nfunction body must contain a RETURN value statement. If the RETURN\nstatement returns a value of a different type, the value is coerced to\nthe proper type. For example, if a function specifies an ENUM or SET\nvalue in the RETURNS clause, but the RETURN statement returns an\ninteger, the value returned from the function is the string for the\ncorresponding ENUM member of set of SET members.\n\nThe following example function takes a parameter, performs an operation\nusing an SQL function, and returns the result. In this case, it is\nunnecessary to use delimiter because the function definition contains\nno internal ; statement delimiters:\n\nmysql> CREATE FUNCTION hello (s CHAR(20))\nmysql> RETURNS CHAR(50) DETERMINISTIC\n    -> RETURN CONCAT(\'Hello, \',s,\'!\');\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT hello(\'world\');\n+----------------+\n| hello(\'world\') |\n+----------------+\n| Hello, world!  |\n+----------------+\n1 row in set (0.00 sec)\n\nParameter types and function return types can be declared to use any\nvalid data type. The COLLATE attribute can be used if preceded by a\nCHARACTER SET specification.\n\nThe routine_body consists of a valid SQL routine statement. This can be\na simple statement such as SELECT or INSERT, or a compound statement\nwritten using BEGIN and END. Compound statements can contain\ndeclarations, loops, and other control structure statements. The syntax\nfor these statements is described in\nhttps://dev.mysql.com/doc/refman/5.7/en/sql-syntax-compound-statements.\nhtml. In practice, stored functions tend to use compound statements,\nunless the body consists of a single RETURN statement.\n\nMySQL permits routines to contain DDL statements, such as CREATE and\nDROP. MySQL also permits stored procedures (but not stored functions)\nto contain SQL transaction statements such as COMMIT. Stored functions\nmay not contain statements that perform explicit or implicit commit or\nrollback. Support for these statements is not required by the SQL\nstandard, which states that each DBMS vendor may decide whether to\npermit them.\n\nStatements that return a result set can be used within a stored\nprocedure but not within a stored function. This prohibition includes\nSELECT statements that do not have an INTO var_list clause and other\nstatements such as SHOW, EXPLAIN, and CHECK TABLE. For statements that\ncan be determined at function definition time to return a result set, a\nNot allowed to return a result set from a function error occurs\n(ER_SP_NO_RETSET). For statements that can be determined only at\nruntime to return a result set, a PROCEDURE %s can\'t return a result\nset in the given context error occurs (ER_SP_BADSELECT).\n\nUSE statements within stored routines are not permitted. When a routine\nis invoked, an implicit USE db_name is performed (and undone when the\nroutine terminates). The causes the routine to have the given default\ndatabase while it executes. References to objects in databases other\nthan the routine default database should be qualified with the\nappropriate database name.\n\nFor additional information about statements that are not permitted in\nstored routines, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nFor information about invoking stored procedures from within programs\nwritten in a language that has a MySQL interface, see [HELP CALL].\n\nMySQL stores the sql_mode system variable setting in effect when a\nroutine is created or altered, and always executes the routine with\nthis setting in force, regardless of the current server SQL mode when\nthe routine begins executing.\n\nThe switch from the SQL mode of the invoker to that of the routine\noccurs after evaluation of arguments and assignment of the resulting\nvalues to routine parameters. If you define a routine in strict SQL\nmode but invoke it in nonstrict mode, assignment of arguments to\nroutine parameters does not take place in strict mode. If you require\nthat expressions passed to a routine be assigned in strict SQL mode,\nyou should invoke the routine with strict mode in effect.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-procedure.html'),(505,'CREATE SERVER',33,'Syntax:\nCREATE SERVER server_name\n    FOREIGN DATA WRAPPER wrapper_name\n    OPTIONS (option [, option] ...)\n\noption:\n  { HOST character-literal\n  | DATABASE character-literal\n  | USER character-literal\n  | PASSWORD character-literal\n  | SOCKET character-literal\n  | OWNER character-literal\n  | PORT numeric-literal }\n\nThis statement creates the definition of a server for use with the\nFEDERATED storage engine. The CREATE SERVER statement creates a new row\nin the servers table in the mysql database. This statement requires the\nSUPER privilege.\n\nThe server_name should be a unique reference to the server. Server\ndefinitions are global within the scope of the server, it is not\npossible to qualify the server definition to a specific database.\nserver_name has a maximum length of 64 characters (names longer than 64\ncharacters are silently truncated), and is case insensitive. You may\nspecify the name as a quoted string.\n\nThe wrapper_name is an identifier and may be quoted with single\nquotation marks.\n\nFor each option you must specify either a character literal or numeric\nliteral. Character literals are UTF-8, support a maximum length of 64\ncharacters and default to a blank (empty) string. String literals are\nsilently truncated to 64 characters. Numeric literals must be a number\nbetween 0 and 9999, default value is 0.\n\n*Note*:\n\nThe OWNER option is currently not applied, and has no effect on the\nownership or operation of the server connection that is created.\n\nThe CREATE SERVER statement creates an entry in the mysql.servers table\nthat can later be used with the CREATE TABLE statement when creating a\nFEDERATED table. The options that you specify will be used to populate\nthe columns in the mysql.servers table. The table columns are\nServer_name, Host, Db, Username, Password, Port and Socket.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-server.html\n\n','CREATE SERVER s\nFOREIGN DATA WRAPPER mysql\nOPTIONS (USER \'Remote\', HOST \'198.51.100.106\', DATABASE \'test\');\n','https://dev.mysql.com/doc/refman/5.7/en/create-server.html'),(506,'CREATE TABLE',33,'Syntax:\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    (create_definition,...)\n    [table_options]\n    [partition_options]\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    [(create_definition,...)]\n    [table_options]\n    [partition_options]\n    [IGNORE | REPLACE]\n    [AS] query_expression\n\nCREATE [TEMPORARY] TABLE [IF NOT EXISTS] tbl_name\n    { LIKE old_tbl_name | (LIKE old_tbl_name) }\n\ncreate_definition:\n    col_name column_definition\n  | {INDEX|KEY} [index_name] [index_type] (key_part,...)\n      [index_option] ...\n  | {FULLTEXT|SPATIAL} [INDEX|KEY] [index_name] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] PRIMARY KEY\n      [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY]\n      [index_name] [index_type] (key_part,...)\n      [index_option] ...\n  | [CONSTRAINT [symbol]] FOREIGN KEY\n      [index_name] (col_name,...)\n      reference_definition\n  | CHECK (expr)\n\ncolumn_definition:\n    data_type [NOT NULL | NULL] [DEFAULT default_value]\n      [AUTO_INCREMENT] [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT \'string\']\n      [COLLATE collation_name]\n      [COLUMN_FORMAT {FIXED|DYNAMIC|DEFAULT}]\n      [STORAGE {DISK|MEMORY}]\n      [reference_definition]\n  | data_type\n      [COLLATE collation_name]\n      [GENERATED ALWAYS] AS (expr)\n      [VIRTUAL | STORED] [NOT NULL | NULL]\n      [UNIQUE [KEY]] [[PRIMARY] KEY]\n      [COMMENT \'string\']\n      [reference_definition]\n\ndata_type:\n    (see https://dev.mysql.com/doc/refman/5.7/en/data-types.html)\n\nkey_part:\n    col_name [(length)] [ASC | DESC]\n\nindex_type:\n    USING {BTREE | HASH}\n\nindex_option:\n    KEY_BLOCK_SIZE [=] value\n  | index_type\n  | WITH PARSER parser_name\n  | COMMENT \'string\'\n\nreference_definition:\n    REFERENCES tbl_name (key_part,...)\n      [MATCH FULL | MATCH PARTIAL | MATCH SIMPLE]\n      [ON DELETE reference_option]\n      [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT\n\ntable_options:\n    table_option [[,] table_option] ...\n\ntable_option:\n    AUTO_INCREMENT [=] value\n  | AVG_ROW_LENGTH [=] value\n  | [DEFAULT] CHARACTER SET [=] charset_name\n  | CHECKSUM [=] {0 | 1}\n  | [DEFAULT] COLLATE [=] collation_name\n  | COMMENT [=] \'string\'\n  | COMPRESSION [=] {\'ZLIB\'|\'LZ4\'|\'NONE\'}\n  | CONNECTION [=] \'connect_string\'\n  | {DATA|INDEX} DIRECTORY [=] \'absolute path to directory\'\n  | DELAY_KEY_WRITE [=] {0 | 1}\n  | ENCRYPTION [=] {\'Y\' | \'N\'}\n  | ENGINE [=] engine_name\n  | INSERT_METHOD [=] { NO | FIRST | LAST }\n  | KEY_BLOCK_SIZE [=] value\n  | MAX_ROWS [=] value\n  | MIN_ROWS [=] value\n  | PACK_KEYS [=] {0 | 1 | DEFAULT}\n  | PASSWORD [=] \'string\'\n  | ROW_FORMAT [=] {DEFAULT|DYNAMIC|FIXED|COMPRESSED|REDUNDANT|COMPACT}\n  | STATS_AUTO_RECALC [=] {DEFAULT|0|1}\n  | STATS_PERSISTENT [=] {DEFAULT|0|1}\n  | STATS_SAMPLE_PAGES [=] value\n  | TABLESPACE tablespace_name [STORAGE {DISK|MEMORY}]\n  | UNION [=] (tbl_name[,tbl_name]...)\n\npartition_options:\n    PARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1|2}] (column_list)\n        | RANGE{(expr) | COLUMNS(column_list)}\n        | LIST{(expr) | COLUMNS(column_list)} }\n    [PARTITIONS num]\n    [SUBPARTITION BY\n        { [LINEAR] HASH(expr)\n        | [LINEAR] KEY [ALGORITHM={1|2}] (column_list) }\n      [SUBPARTITIONS num]\n    ]\n    [(partition_definition [, partition_definition] ...)]\n\npartition_definition:\n    PARTITION partition_name\n        [VALUES\n            {LESS THAN {(expr | value_list) | MAXVALUE}\n            |\n            IN (value_list)}]\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'string\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n        [(subpartition_definition [, subpartition_definition] ...)]\n\nsubpartition_definition:\n    SUBPARTITION logical_name\n        [[STORAGE] ENGINE [=] engine_name]\n        [COMMENT [=] \'string\' ]\n        [DATA DIRECTORY [=] \'data_dir\']\n        [INDEX DIRECTORY [=] \'index_dir\']\n        [MAX_ROWS [=] max_number_of_rows]\n        [MIN_ROWS [=] min_number_of_rows]\n        [TABLESPACE [=] tablespace_name]\n\nquery_expression:\n    SELECT ...   (Some valid select or union statement)\n\nCREATE TABLE creates a table with the given name. You must have the\nCREATE privilege for the table.\n\nBy default, tables are created in the default database, using the\nInnoDB storage engine. An error occurs if the table exists, if there is\nno default database, or if the database does not exist.\n\nFor information about the physical representation of a table, see\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-files.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-table.html'),(507,'FOREIGN KEY',33,'MySQL supports foreign keys, which let you cross-reference related data\nacross tables, and foreign key constraints, which help keep this\nspread-out data consistent. The essential syntax for a foreign key\nconstraint definition in a CREATE TABLE or ALTER TABLE statement looks\nlike this:\n\n[CONSTRAINT [symbol]] FOREIGN KEY\n    [index_name] (col_name, ...)\n    REFERENCES tbl_name (col_name,...)\n    [ON DELETE reference_option]\n    [ON UPDATE reference_option]\n\nreference_option:\n    RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-table-foreign-keys.html\n\n','CREATE TABLE product (\n    category INT NOT NULL, id INT NOT NULL,\n    price DECIMAL,\n    PRIMARY KEY(category, id)\n)   ENGINE=INNODB;\n\nCREATE TABLE customer (\n    id INT NOT NULL,\n    PRIMARY KEY (id)\n)   ENGINE=INNODB;\n\nCREATE TABLE product_order (\n    no INT NOT NULL AUTO_INCREMENT,\n    product_category INT NOT NULL,\n    product_id INT NOT NULL,\n    customer_id INT NOT NULL,\n\n    PRIMARY KEY(no),\n    INDEX (product_category, product_id),\n    INDEX (customer_id),\n\n    FOREIGN KEY (product_category, product_id)\n      REFERENCES product(category, id)\n      ON UPDATE CASCADE ON DELETE RESTRICT,\n\n    FOREIGN KEY (customer_id)\n      REFERENCES customer(id)\n)   ENGINE=INNODB;\n','https://dev.mysql.com/doc/refman/5.7/en/create-table-foreign-keys.html'),(508,'CREATE TABLESPACE',33,'Syntax:\nCREATE TABLESPACE tablespace_name\n\n  InnoDB and NDB:\n    ADD DATAFILE \'file_name\'\n\n  InnoDB only:\n    [FILE_BLOCK_SIZE = value]\n\n  NDB only:\n    USE LOGFILE GROUP logfile_group\n    [EXTENT_SIZE [=] extent_size]\n    [INITIAL_SIZE [=] initial_size]\n    [AUTOEXTEND_SIZE [=] autoextend_size]\n    [MAX_SIZE [=] max_size]\n    [NODEGROUP [=] nodegroup_id]\n    [WAIT]\n    [COMMENT [=] \'string\']\n\n  InnoDB and NDB:\n    [ENGINE [=] engine_name]\n\nThis statement is used to create a tablespace. The precise syntax and\nsemantics depend on the storage engine used. In standard MySQL 5.7\nreleases, this is always an InnoDB tablespace. MySQL NDB Cluster 7.5\nalso supports tablespaces using the NDB storage engine in addition to\nthose using InnoDB.\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-innodb\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-ndb\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-options\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-notes\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-innodb-examples\n\no https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html#create\n  -tablespace-ndb-examples\n\nConsiderations for InnoDB\n\nCREATE TABLESPACE syntax is used to create general tablespaces. A\ngeneral tablespace is a shared tablespace. It can hold multiple tables,\nand supports all table row formats. General tablespaces can be created\nin a location relative to or independent of the data directory.\n\nAfter creating an InnoDB general tablespace, you can use CREATE TABLE\ntbl_name ... TABLESPACE [=] tablespace_name or ALTER TABLE tbl_name\nTABLESPACE [=] tablespace_name to add tables to the tablespace. For\nmore information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/general-tablespaces.html.\n\nConsiderations for NDB Cluster\n\nThis statement is used to create a tablespace, which can contain one or\nmore data files, providing storage space for NDB Cluster Disk Data\ntables (see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data.html).\nOne data file is created and added to the tablespace using this\nstatement. Additional data files may be added to the tablespace by\nusing the ALTER TABLESPACE statement (see [HELP ALTER TABLESPACE]).\n\n*Note*:\n\nAll NDB Cluster Disk Data objects share the same namespace. This means\nthat each Disk Data object must be uniquely named (and not merely each\nDisk Data object of a given type). For example, you cannot have a\ntablespace and a log file group with the same name, or a tablespace and\na data file with the same name.\n\nA log file group of one or more UNDO log files must be assigned to the\ntablespace to be created with the USE LOGFILE GROUP clause.\nlogfile_group must be an existing log file group created with CREATE\nLOGFILE GROUP (see [HELP CREATE LOGFILE GROUP]). Multiple tablespaces\nmay use the same log file group for UNDO logging.\n\nWhen setting EXTENT_SIZE or INITIAL_SIZE, you may optionally follow the\nnumber with a one-letter abbreviation for an order of magnitude,\nsimilar to those used in my.cnf. Generally, this is one of the letters\nM (for megabytes) or G (for gigabytes).\n\nINITIAL_SIZE and EXTENT_SIZE are subject to rounding as follows:\n\no EXTENT_SIZE is rounded up to the nearest whole multiple of 32K.\n\no INITIAL_SIZE is rounded down to the nearest whole multiple of 32K;\n  this result is rounded up to the nearest whole multiple of\n  EXTENT_SIZE (after any rounding).\n\nThe rounding just described is done explicitly, and a warning is issued\nby the MySQL Server when any such rounding is performed. The rounded\nvalues are also used by the NDB kernel for calculating\nINFORMATION_SCHEMA.FILES column values and other purposes. However, to\navoid an unexpected result, we suggest that you always use whole\nmultiples of 32K in specifying these options.\n\nWhen CREATE TABLESPACE is used with ENGINE [=] NDB, a tablespace and\nassociated data file are created on each Cluster data node. You can\nverify that the data files were created and obtain information about\nthem by querying the INFORMATION_SCHEMA.FILES table. (See the example\nlater in this section.)\n\n(See https://dev.mysql.com/doc/refman/5.7/en/files-table.html.)\n\nOptions\n\no ADD DATAFILE: Defines the name of a tablespace data file; this option\n  is always required. An InnoDB tablespace supports only a single data\n  file, whose name must include a .ibd extension. An NDB Cluster\n  tablespace supports multiple data files which can have any legal file\n  names; more data files can be added to an NDB Cluster tablespace\n  following its creation by using an ALTER TABLESPACE statement.\n\n  *Note*:\n\n  ALTER TABLESPACE is not supported by InnoDB.\n\n  To place the data file in a location outside of the data directory\n  (datadir), include an absolute directory path or a path relative to\n  the data directory. If you do not specify a path, the tablespace is\n  created in the data directory. An isl file is created in the data\n  directory when an InnoDB tablespace is created outside of the data\n  directory.\n\n  To avoid conflicts with implicitly created file-per-table\n  tablespaces, creating a general tablespace in a subdirectory under\n  the data directory is not supported. When creating a general\n  tablespace outside of the data directory, the directory must exist\n  prior to creating the tablespace.\n\n  The file_name, including any specified path, must be quoted with\n  single or double quotations marks. File names (not counting the file\n  extension) and directory names must be at least one byte in length.\n  Zero length file names and directory names are not supported.\n\no FILE_BLOCK_SIZE: This option---which is specific to InnoDB, and is\n  ignored by NDB---defines the block size for the tablespace data file.\n  Values can be specified in bytes or kilobytes. For example, an 8\n  kilobyte file block size can be specified as 8192 or 8K. If you do\n  not specify this option, FILE_BLOCK_SIZE defaults to the\n  innodb_page_size value. FILE_BLOCK_SIZE is required when you intend\n  to use the tablespace for storing compressed InnoDB tables\n  (ROW_FORMAT=COMPRESSED). In this case, you must define the tablespace\n  FILE_BLOCK_SIZE when creating the tablespace.\n\n  If FILE_BLOCK_SIZE is equal the innodb_page_size value, the\n  tablespace can contain only tables having an uncompressed row format\n  (COMPACT, REDUNDANT, and DYNAMIC). Tables with a COMPRESSED row\n  format have a different physical page size than uncompressed tables.\n  Therefore, compressed tables cannot coexist in the same tablespace as\n  uncompressed tables.\n\n  For a general tablespace to contain compressed tables,\n  FILE_BLOCK_SIZE must be specified, and the FILE_BLOCK_SIZE value must\n  be a valid compressed page size in relation to the innodb_page_size\n  value. Also, the physical page size of the compressed table\n  (KEY_BLOCK_SIZE) must be equal to FILE_BLOCK_SIZE/1024. For example,\n  if innodb_page_size=16K, and FILE_BLOCK_SIZE=8K, the KEY_BLOCK_SIZE\n  of the table must be 8. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/general-tablespaces.html.\n\no USE LOGFILE GROUP: Required for NDB, this is the name of a log file\n  group previously created using CREATE LOGFILE GROUP. Not supported\n  for InnoDB, where it fails with an error.\n\no EXTENT_SIZE: This option is specific to NDB, and is not supported by\n  InnoDB, where it fails with an error. EXTENT_SIZE sets the size, in\n  bytes, of the extents used by any files belonging to the tablespace.\n  The default value is 1M. The minimum size is 32K, and theoretical\n  maximum is 2G, although the practical maximum size depends on a\n  number of factors. In most cases, changing the extent size does not\n  have any measurable effect on performance, and the default value is\n  recommended for all but the most unusual situations.\n\n  An extent is a unit of disk space allocation. One extent is filled\n  with as much data as that extent can contain before another extent is\n  used. In theory, up to 65,535 (64K) extents may used per data file;\n  however, the recommended maximum is 32,768 (32K). The recommended\n  maximum size for a single data file is 32G---that is, 32K extents x 1\n  MB per extent. In addition, once an extent is allocated to a given\n  partition, it cannot be used to store data from a different\n  partition; an extent cannot store data from more than one partition.\n  This means, for example that a tablespace having a single datafile\n  whose INITIAL_SIZE (described in the following item) is 256 MB and\n  whose EXTENT_SIZE is 128M has just two extents, and so can be used to\n  store data from at most two different disk data table partitions.\n\n  You can see how many extents remain free in a given data file by\n  querying the INFORMATION_SCHEMA.FILES table, and so derive an\n  estimate for how much space remains free in the file. For further\n  discussion and examples, see\n  https://dev.mysql.com/doc/refman/5.7/en/files-table.html.\n\no INITIAL_SIZE: This option is specific to NDB, and is not supported by\n  InnoDB, where it fails with an error.\n\n  The INITIAL_SIZE parameter sets the total size in bytes of the data\n  file that was specific using ADD DATATFILE. Once this file has been\n  created, its size cannot be changed; however, you can add more data\n  files to the tablespace using ALTER TABLESPACE ... ADD DATAFILE.\n\n  INITIAL_SIZE is optional; its default value is 134217728 (128 MB).\n\n  On 32-bit systems, the maximum supported value for INITIAL_SIZE is\n  4294967296 (4 GB).\n\no AUTOEXTEND_SIZE: Currently ignored by MySQL; reserved for possible\n  future use. Has no effect in any release of MySQL 5.7 or MySQL NDB\n  Cluster 7.5, regardless of the storage engine used.\n\no MAX_SIZE: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster\n  7.5, regardless of the storage engine used.\n\no NODEGROUP: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster\n  7.5, regardless of the storage engine used.\n\no WAIT: Currently ignored by MySQL; reserved for possible future use.\n  Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster 7.5,\n  regardless of the storage engine used.\n\no COMMENT: Currently ignored by MySQL; reserved for possible future\n  use. Has no effect in any release of MySQL 5.7 or MySQL NDB Cluster\n  7.5, regardless of the storage engine used.\n\no ENGINE: Defines the storage engine which uses the tablespace, where\n  engine_name is the name of the storage engine. Currently, only the\n  InnoDB storage engine is supported by standard MySQL 5.7 releases.\n  MySQL NDB Cluster 7.5 supports both NDB and InnoDB tablespaces. The\n  value of the default_storage_engine system variable is used for\n  ENGINE if the option is not specified.\n\nNotes\n\no For the rules covering the naming of MySQL tablespaces, see\n  https://dev.mysql.com/doc/refman/5.7/en/identifiers.html. In addition\n  to these rules, the slash character (\"/\") is not permitted, nor can\n  you use names beginning with innodb_, as this prefix is reserved for\n  system use.\n\no Tablespaces do not support temporary tables.\n\no innodb_file_per_table, innodb_file_format, and innodb_file_format_max\n  settings have no influence on CREATE TABLESPACE operations.\n  innodb_file_per_table does not need to be enabled. General\n  tablespaces support all table row formats regardless of file format\n  settings. Likewise, general tablespaces support the addition of\n  tables of any row format using CREATE TABLE ... TABLESPACE,\n  regardless of file format settings.\n\no innodb_strict_mode is not applicable to general tablespaces.\n  Tablespace management rules are strictly enforced independently of\n  innodb_strict_mode. If CREATE TABLESPACE parameters are incorrect or\n  incompatible, the operation fails regardless of the\n  innodb_strict_mode setting. When a table is added to a general\n  tablespace using CREATE TABLE ... TABLESPACE or ALTER TABLE ...\n  TABLESPACE, innodb_strict_mode is ignored but the statement is\n  evaluated as if innodb_strict_mode is enabled.\n\no Use DROP TABLESPACE to remove a tablespace. All tables must be\n  dropped from a tablespace using DROP TABLE prior to dropping the\n  tablespace. Before dropping an NDB Cluster tablespace you must also\n  remove all its data files using one or more ALTER TABLESPACE ... DROP\n  DATATFILE statements. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data-objec\n  ts.html.\n\no All parts of an InnoDB table added to an InnoDB general tablespace\n  reside in the general tablespace, including indexes and BLOB pages.\n\n  For an NDB table assigned to a tablespace, only those columns which\n  are not indexed are stored on disk, and actually use the tablespace\n  data files. Indexes and indexed columns for all NDB tables are always\n  kept in memory.\n\no Similar to the system tablespace, truncating or dropping tables\n  stored in a general tablespace creates free space internally in the\n  general tablespace .ibd data file which can only be used for new\n  InnoDB data. Space is not released back to the operating system as it\n  is for file-per-table tablespaces.\n\no A general tablespace is not associated with any database or schema.\n\no ALTER TABLE ... DISCARD TABLESPACE and ALTER TABLE ...IMPORT\n  TABLESPACE are not supported for tables that belong to a general\n  tablespace.\n\no The server uses tablespace-level metadata locking for DDL that\n  references general tablespaces. By comparison, the server uses\n  table-level metadata locking for DDL that references file-per-table\n  tablespaces.\n\no A generated or existing tablespace cannot be changed to a general\n  tablespace.\n\no Tables stored in a general tablespace can only be opened in MySQL\n  5.7.6 or later due to the addition of new table flags.\n\no There is no conflict between general tablespace names and\n  file-per-table tablespace names. The \"/\" character, which is present\n  in file-per-table tablespace names, is not permitted in general\n  tablespace names.\n\no mysqldump and mysqlpump do not dump InnoDB CREATE TABLESPACE\n  statements.\n\nInnoDB Examples\n\nThis example demonstrates creating a general tablespace and adding\nthree uncompressed tables of different row formats.\n\nmysql> CREATE TABLESPACE `ts1` ADD DATAFILE \'ts1.ibd\' ENGINE=INNODB;\n\nmysql> CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=REDUNDANT;\n\nmysql> CREATE TABLE t2 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=COMPACT;\n\nmysql> CREATE TABLE t3 (c1 INT PRIMARY KEY) TABLESPACE ts1 ROW_FORMAT=DYNAMIC;\n\nThis example demonstrates creating a general tablespace and adding a\ncompressed table. The example assumes a default innodb_page_size value\nof 16K. The FILE_BLOCK_SIZE of 8192 requires that the compressed table\nhave a KEY_BLOCK_SIZE of 8.\n\nmysql> CREATE TABLESPACE `ts2` ADD DATAFILE \'ts2.ibd\' FILE_BLOCK_SIZE = 8192 Engine=InnoDB;\n\nmysql> CREATE TABLE t4 (c1 INT PRIMARY KEY) TABLESPACE ts2 ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;\n\nNDB Example\n\nSuppose that you wish to create an NDB Cluster Disk Data tablespace\nnamed myts using a datafile named mydata-1.dat. An NDB tablespace\nalways requires the use of a log file group consisting of one or more\nundo log files. For this example, we first create a log file group\nnamed mylg that contains one undo long file named myundo-1.dat, using\nthe CREATE LOGFILE GROUP statement shown here:\n\nmysql> CREATE LOGFILE GROUP myg1\n    ->     ADD UNDOFILE \'myundo-1.dat\'\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (3.29 sec)\n\nNow you can create the tablespace previously described using the\nfollowing statement:\n\nmysql> CREATE TABLESPACE myts\n    ->     ADD DATAFILE \'mydata-1.dat\'\n    ->     USE LOGFILE GROUP mylg\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (2.98 sec)\n\nYou can now create a Disk Data table using a CREATE TABLE statement\nwith the TABLESPACE and STORAGE DISK options, similar to what is shown\nhere:\n\nmysql> CREATE TABLE mytable (\n    ->     id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->     lname VARCHAR(50) NOT NULL,\n    ->     fname VARCHAR(50) NOT NULL,\n    ->     dob DATE NOT NULL,\n    ->     joined DATE NOT NULL,\n    ->     INDEX(last_name, first_name)\n    -> )\n    ->     TABLESPACE myts STORAGE DISK\n    ->     ENGINE=NDB;\nQuery OK, 0 rows affected (1.41 sec)\n\nIt is important to note that only the dob and joined columns from\nmytable are actually stored on disk, due to the fact that the id,\nlname, and fname columns are all indexed.\n\nAs mentioned previously, when CREATE TABLESPACE is used with ENGINE [=]\nNDB, a tablespace and associated data file are created on each NDB\nCluster data node. You can verify that the data files were created and\nobtain information about them by querying the INFORMATION_SCHEMA.FILES\ntable, as shown here:\n\nmysql> SELECT FILE_NAME, FILE_TYPE, LOGFILE_GROUP_NAME, STATUS, EXTRA\n    ->     FROM INFORMATION_SCHEMA.FILES\n    ->     WHERE TABLESPACE_NAME = \'myts\';\n\n+--------------+------------+--------------------+--------+----------------+\n| file_name    | file_type  | logfile_group_name | status | extra          |\n+--------------+------------+--------------------+--------+----------------+\n| mydata-1.dat | DATAFILE   | mylg               | NORMAL | CLUSTER_NODE=5 |\n| mydata-1.dat | DATAFILE   | mylg               | NORMAL | CLUSTER_NODE=6 |\n| NULL         | TABLESPACE | mylg               | NORMAL | NULL           |\n+--------------+------------+--------------------+--------+----------------+\n3 rows in set (0.01 sec)\n\nFor additional information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-cluster-disk-data-objects\n.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-tablespace.html'),(509,'CREATE TRIGGER',33,'Syntax:\nCREATE\n    [DEFINER = user]\n    TRIGGER trigger_name\n    trigger_time trigger_event\n    ON tbl_name FOR EACH ROW\n    [trigger_order]\n    trigger_body\n\ntrigger_time: { BEFORE | AFTER }\n\ntrigger_event: { INSERT | UPDATE | DELETE }\n\ntrigger_order: { FOLLOWS | PRECEDES } other_trigger_name\n\nThis statement creates a new trigger. A trigger is a named database\nobject that is associated with a table, and that activates when a\nparticular event occurs for the table. The trigger becomes associated\nwith the table named tbl_name, which must refer to a permanent table.\nYou cannot associate a trigger with a TEMPORARY table or a view.\n\nTrigger names exist in the schema namespace, meaning that all triggers\nmust have unique names within a schema. Triggers in different schemas\ncan have the same name.\n\nThis section describes CREATE TRIGGER syntax. For additional\ndiscussion, see\nhttps://dev.mysql.com/doc/refman/5.7/en/trigger-syntax.html.\n\nCREATE TRIGGER requires the TRIGGER privilege for the table associated\nwith the trigger. If the DEFINER clause is present, the privileges\nrequired depend on the user value, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nIf binary logging is enabled, CREATE TRIGGER might require the SUPER\nprivilege, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-logging.html.\n\nThe DEFINER clause determines the security context to be used when\nchecking access privileges at trigger activation time, as described\nlater in this section.\n\ntrigger_time is the trigger action time. It can be BEFORE or AFTER to\nindicate that the trigger activates before or after each row to be\nmodified.\n\nBasic column value checks occur prior to trigger activation, so you\ncannot use BEFORE triggers to convert values inappropriate for the\ncolumn type to valid values.\n\ntrigger_event indicates the kind of operation that activates the\ntrigger. These trigger_event values are permitted:\n\no INSERT: The trigger activates whenever a new row is inserted into the\n  table (for example, through INSERT, LOAD DATA, and REPLACE\n  statements).\n\no UPDATE: The trigger activates whenever a row is modified (for\n  example, through UPDATE statements).\n\no DELETE: The trigger activates whenever a row is deleted from the\n  table (for example, through DELETE and REPLACE statements). DROP\n  TABLE and TRUNCATE TABLE statements on the table do not activate this\n  trigger, because they do not use DELETE. Dropping a partition does\n  not activate DELETE triggers, either.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-trigger.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-trigger.html'),(510,'CREATE VIEW',33,'Syntax:\nCREATE\n    [OR REPLACE]\n    [ALGORITHM = {UNDEFINED | MERGE | TEMPTABLE}]\n    [DEFINER = user]\n    [SQL SECURITY { DEFINER | INVOKER }]\n    VIEW view_name [(column_list)]\n    AS select_statement\n    [WITH [CASCADED | LOCAL] CHECK OPTION]\n\nThe CREATE VIEW statement creates a new view, or replaces an existing\nview if the OR REPLACE clause is given. If the view does not exist,\nCREATE OR REPLACE VIEW is the same as CREATE VIEW. If the view does\nexist, CREATE OR REPLACE VIEW replaces it.\n\nFor information about restrictions on view use, see\nhttps://dev.mysql.com/doc/refman/5.7/en/view-restrictions.html.\n\nThe select_statement is a SELECT statement that provides the definition\nof the view. (Selecting from the view selects, in effect, using the\nSELECT statement.) The select_statement can select from base tables or\nother views.\n\nThe view definition is \"frozen\" at creation time and is not affected by\nsubsequent changes to the definitions of the underlying tables. For\nexample, if a view is defined as SELECT * on a table, new columns added\nto the table later do not become part of the view, and columns dropped\nfrom the table will result in an error when selecting from the view.\n\nThe ALGORITHM clause affects how MySQL processes the view. The DEFINER\nand SQL SECURITY clauses specify the security context to be used when\nchecking access privileges at view invocation time. The WITH CHECK\nOPTION clause can be given to constrain inserts or updates to rows in\ntables referenced by the view. These clauses are described later in\nthis section.\n\nThe CREATE VIEW statement requires the CREATE VIEW privilege for the\nview, and some privilege for each column selected by the SELECT\nstatement. For columns used elsewhere in the SELECT statement, you must\nhave the SELECT privilege. If the OR REPLACE clause is present, you\nmust also have the DROP privilege for the view. If the DEFINER clause\nis present, the privileges required depend on the user value, as\ndiscussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\n\nWhen a view is referenced, privilege checking occurs as described later\nin this section.\n\nA view belongs to a database. By default, a new view is created in the\ndefault database. To create the view explicitly in a given database,\nuse db_name.view_name syntax to qualify the view name with the database\nname:\n\nCREATE VIEW test.v AS SELECT * FROM t;\n\nUnqualified table or view names in the SELECT statement are also\ninterpreted with respect to the default database. A view can refer to\ntables or views in other databases by qualifying the table or view name\nwith the appropriate database name.\n\nWithin a database, base tables and views share the same namespace, so a\nbase table and a view cannot have the same name.\n\nColumns retrieved by the SELECT statement can be simple references to\ntable columns, or expressions that use functions, constant values,\noperators, and so forth.\n\nA view must have unique column names with no duplicates, just like a\nbase table. By default, the names of the columns retrieved by the\nSELECT statement are used for the view column names. To define explicit\nnames for the view columns, specify the optional column_list clause as\na list of comma-separated identifiers. The number of names in\ncolumn_list must be the same as the number of columns retrieved by the\nSELECT statement.\n\nA view can be created from many kinds of SELECT statements. It can\nrefer to base tables or other views. It can use joins, UNION, and\nsubqueries. The SELECT need not even refer to any tables:\n\nCREATE VIEW v_today (today) AS SELECT CURRENT_DATE;\n\nThe following example defines a view that selects two columns from\nanother table as well as an expression calculated from those columns:\n\nmysql> CREATE TABLE t (qty INT, price INT);\nmysql> INSERT INTO t VALUES(3, 50);\nmysql> CREATE VIEW v AS SELECT qty, price, qty*price AS value FROM t;\nmysql> SELECT * FROM v;\n+------+-------+-------+\n| qty  | price | value |\n+------+-------+-------+\n|    3 |    50 |   150 |\n+------+-------+-------+\n\nA view definition is subject to the following restrictions:\n\no The SELECT statement cannot refer to system variables or user-defined\n  variables.\n\no Within a stored program, the SELECT statement cannot refer to program\n  parameters or local variables.\n\no The SELECT statement cannot refer to prepared statement parameters.\n\no Any table or view referred to in the definition must exist. If, after\n  the view has been created, a table or view that the definition refers\n  to is dropped, use of the view results in an error. To check a view\n  definition for problems of this kind, use the CHECK TABLE statement.\n\no The definition cannot refer to a TEMPORARY table, and you cannot\n  create a TEMPORARY view.\n\no You cannot associate a trigger with a view.\n\no Aliases for column names in the SELECT statement are checked against\n  the maximum column length of 64 characters (not the maximum alias\n  length of 256 characters).\n\nORDER BY is permitted in a view definition, but it is ignored if you\nselect from a view using a statement that has its own ORDER BY.\n\nFor other options or clauses in the definition, they are added to the\noptions or clauses of the statement that references the view, but the\neffect is undefined. For example, if a view definition includes a LIMIT\nclause, and you select from the view using a statement that has its own\nLIMIT clause, it is undefined which limit applies. This same principle\napplies to options such as ALL, DISTINCT, or SQL_SMALL_RESULT that\nfollow the SELECT keyword, and to clauses such as INTO, FOR UPDATE,\nLOCK IN SHARE MODE, and PROCEDURE.\n\nThe results obtained from a view may be affected if you change the\nquery processing environment by changing system variables:\n\nmysql> CREATE VIEW v (mycol) AS SELECT \'abc\';\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SET sql_mode = \'\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT \"mycol\" FROM v;\n+-------+\n| mycol |\n+-------+\n| mycol |\n+-------+\n1 row in set (0.01 sec)\n\nmysql> SET sql_mode = \'ANSI_QUOTES\';\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT \"mycol\" FROM v;\n+-------+\n| mycol |\n+-------+\n| abc   |\n+-------+\n1 row in set (0.00 sec)\n\nThe DEFINER and SQL SECURITY clauses determine which MySQL account to\nuse when checking access privileges for the view when a statement is\nexecuted that references the view. The valid SQL SECURITY\ncharacteristic values are DEFINER (the default) and INVOKER. These\nindicate that the required privileges must be held by the user who\ndefined or invoked the view, respectively.\n\nIf the DEFINER clause is present, the user value should be a MySQL\naccount specified as \'user_name\'@\'host_name\', CURRENT_USER, or\nCURRENT_USER(). The permitted user values depend on the privileges you\nhold, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.\nAlso see that section for additional information about view security.\n\nIf the DEFINER clause is omitted, the default definer is the user who\nexecutes the CREATE VIEW statement. This is the same as specifying\nDEFINER = CURRENT_USER explicitly.\n\nWithin a view definition, the CURRENT_USER function returns the view\'s\nDEFINER value by default. For views defined with the SQL SECURITY\nINVOKER characteristic, CURRENT_USER returns the account for the view\'s\ninvoker. For information about user auditing within views, see\nhttps://dev.mysql.com/doc/refman/5.7/en/account-activity-auditing.html.\n\nWithin a stored routine that is defined with the SQL SECURITY DEFINER\ncharacteristic, CURRENT_USER returns the routine\'s DEFINER value. This\nalso affects a view defined within such a routine, if the view\ndefinition contains a DEFINER value of CURRENT_USER.\n\nMySQL checks view privileges like this:\n\no At view definition time, the view creator must have the privileges\n  needed to use the top-level objects accessed by the view. For\n  example, if the view definition refers to table columns, the creator\n  must have some privilege for each column in the select list of the\n  definition, and the SELECT privilege for each column used elsewhere\n  in the definition. If the definition refers to a stored function,\n  only the privileges needed to invoke the function can be checked. The\n  privileges required at function invocation time can be checked only\n  as it executes: For different invocations, different execution paths\n  within the function might be taken.\n\no The user who references a view must have appropriate privileges to\n  access it (SELECT to select from it, INSERT to insert into it, and so\n  forth.)\n\no When a view has been referenced, privileges for objects accessed by\n  the view are checked against the privileges held by the view DEFINER\n  account or invoker, depending on whether the SQL SECURITY\n  characteristic is DEFINER or INVOKER, respectively.\n\no If reference to a view causes execution of a stored function,\n  privilege checking for statements executed within the function depend\n  on whether the function SQL SECURITY characteristic is DEFINER or\n  INVOKER. If the security characteristic is DEFINER, the function runs\n  with the privileges of the DEFINER account. If the characteristic is\n  INVOKER, the function runs with the privileges determined by the\n  view\'s SQL SECURITY characteristic.\n\nExample: A view might depend on a stored function, and that function\nmight invoke other stored routines. For example, the following view\ninvokes a stored function f():\n\nCREATE VIEW v AS SELECT * FROM t WHERE t.id = f(t.name);\n\nSuppose that f() contains a statement such as this:\n\nIF name IS NULL then\n  CALL p1();\nELSE\n  CALL p2();\nEND IF;\n\nThe privileges required for executing statements within f() need to be\nchecked when f() executes. This might mean that privileges are needed\nfor p1() or p2(), depending on the execution path within f(). Those\nprivileges must be checked at runtime, and the user who must possess\nthe privileges is determined by the SQL SECURITY values of the view v\nand the function f().\n\nThe DEFINER and SQL SECURITY clauses for views are extensions to\nstandard SQL. In standard SQL, views are handled using the rules for\nSQL SECURITY DEFINER. The standard says that the definer of the view,\nwhich is the same as the owner of the view\'s schema, gets applicable\nprivileges on the view (for example, SELECT) and may grant them. MySQL\nhas no concept of a schema \"owner\", so MySQL adds a clause to identify\nthe definer. The DEFINER clause is an extension where the intent is to\nhave what the standard has; that is, a permanent record of who defined\nthe view. This is why the default DEFINER value is the account of the\nview creator.\n\nThe optional ALGORITHM clause is a MySQL extension to standard SQL. It\naffects how MySQL processes the view. ALGORITHM takes three values:\nMERGE, TEMPTABLE, or UNDEFINED. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/view-algorithms.html, as well\nas\nhttps://dev.mysql.com/doc/refman/5.7/en/derived-table-optimization.html\n.\n\nSome views are updatable. That is, you can use them in statements such\nas UPDATE, DELETE, or INSERT to update the contents of the underlying\ntable. For a view to be updatable, there must be a one-to-one\nrelationship between the rows in the view and the rows in the\nunderlying table. There are also certain other constructs that make a\nview nonupdatable.\n\nA generated column in a view is considered updatable because it is\npossible to assign to it. However, if such a column is updated\nexplicitly, the only permitted value is DEFAULT. For information about\ngenerated columns, see\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-generated-columns.\nhtml.\n\nThe WITH CHECK OPTION clause can be given for an updatable view to\nprevent inserts or updates to rows except those for which the WHERE\nclause in the select_statement is true.\n\nIn a WITH CHECK OPTION clause for an updatable view, the LOCAL and\nCASCADED keywords determine the scope of check testing when the view is\ndefined in terms of another view. The LOCAL keyword restricts the CHECK\nOPTION only to the view being defined. CASCADED causes the checks for\nunderlying views to be evaluated as well. When neither keyword is\ngiven, the default is CASCADED.\n\nFor more information about updatable views and the WITH CHECK OPTION\nclause, see\nhttps://dev.mysql.com/doc/refman/5.7/en/view-updatability.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/view-check-option.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-view.html'),(511,'DROP DATABASE',33,'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*:\n\nWhen a database is dropped, privileges granted specifically for the\ndatabase are not automatically dropped. They must be dropped manually.\nSee [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-database.html'),(512,'DROP SCHEMA',33,'Syntax:\nDROP {DATABASE | SCHEMA} [IF EXISTS] db_name\n\nDROP DATABASE drops all tables in the database and deletes the\ndatabase. Be very careful with this statement! To use DROP DATABASE,\nyou need the DROP privilege on the database. DROP SCHEMA is a synonym\nfor DROP DATABASE.\n\n*Important*:\n\nWhen a database is dropped, privileges granted specifically for the\ndatabase are not automatically dropped. They must be dropped manually.\nSee [HELP GRANT].\n\nIF EXISTS is used to prevent an error from occurring if the database\ndoes not exist.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-database.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-database.html'),(513,'DROP EVENT',33,'Syntax:\nDROP EVENT [IF EXISTS] event_name\n\nThis statement drops the event named event_name. The event immediately\nceases being active, and is deleted completely from the server.\n\nIf the event does not exist, the error ERROR 1517 (HY000): Unknown\nevent \'event_name\' results. You can override this and cause the\nstatement to generate a warning for nonexistent events instead using IF\nEXISTS.\n\nThis statement requires the EVENT privilege for the schema to which the\nevent to be dropped belongs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-event.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-event.html'),(514,'DROP INDEX',33,'Syntax:\nDROP INDEX index_name ON tbl_name\n    [algorithm_option | lock_option] ...\n\nalgorithm_option:\n    ALGORITHM [=] {DEFAULT|INPLACE|COPY}\n\nlock_option:\n    LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}\n\nDROP INDEX drops the index named index_name from the table tbl_name.\nThis statement is mapped to an ALTER TABLE statement to drop the index.\nSee [HELP ALTER TABLE].\n\nTo drop a primary key, the index name is always PRIMARY, which must be\nspecified as a quoted identifier because PRIMARY is a reserved word:\n\nDROP INDEX `PRIMARY` ON t;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-index.html'),(515,'DROP PROCEDURE',33,'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (If the\nautomatic_sp_privileges system variable is enabled, that privilege and\nEXECUTE are granted automatically to the routine creator when the\nroutine is created and dropped from the creator when the routine is\ndropped. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html'),(516,'DROP FUNCTION',33,'Syntax:\nDROP {PROCEDURE | FUNCTION} [IF EXISTS] sp_name\n\nThis statement is used to drop a stored procedure or function. That is,\nthe specified routine is removed from the server. You must have the\nALTER ROUTINE privilege for the routine. (If the\nautomatic_sp_privileges system variable is enabled, that privilege and\nEXECUTE are granted automatically to the routine creator when the\nroutine is created and dropped from the creator when the routine is\ndropped. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-routines-privileges.html\n.)\n\nThe IF EXISTS clause is a MySQL extension. It prevents an error from\noccurring if the procedure or function does not exist. A warning is\nproduced that can be viewed with SHOW WARNINGS.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-procedure.html'),(517,'DROP SERVER',33,'Syntax:\nDROP SERVER [ IF EXISTS ] server_name\n\nDrops the server definition for the server named server_name. The\ncorresponding row in the mysql.servers table is deleted. This statement\nrequires the SUPER privilege.\n\nDropping a server for a table does not affect any FEDERATED tables that\nused this connection information when they were created. See [HELP\nCREATE SERVER].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-server.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-server.html'),(518,'DROP TABLE',33,'Syntax:\nDROP [TEMPORARY] TABLE [IF EXISTS]\n    tbl_name [, tbl_name] ...\n    [RESTRICT | CASCADE]\n\nDROP TABLE removes one or more tables. You must have the DROP privilege\nfor each table.\n\nBe careful with this statement! For each table, it removes the table\ndefinition and all table data. If the table is partitioned, the\nstatement removes the table definition, all its partitions, all data\nstored in those partitions, and all partition definitions associated\nwith the dropped table.\n\nDropping a table also drops any triggers for the table.\n\nDROP TABLE causes an implicit commit, except when used with the\nTEMPORARY keyword. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\n*Important*:\n\nWhen a table is dropped, privileges granted specifically for the table\nare not automatically dropped. They must be dropped manually. See [HELP\nGRANT].\n\nIf any tables named in the argument list do not exist, DROP TABLE\nbehavior depends on whether the IF EXISTS clause is given:\n\no Without IF EXISTS, the statement drops all named tables that do\n  exist, and returns an error indicating which nonexisting tables it\n  was unable to drop.\n\no With IF EXISTS, no error occurs for nonexisting tables. The statement\n  drops all named tables that do exist, and generates a NOTE diagnostic\n  for each nonexistent table. These notes can be displayed with SHOW\n  WARNINGS. See [HELP SHOW WARNINGS].\n\nIF EXISTS can also be useful for dropping tables in unusual\ncircumstances under which there is an .frm file but no table managed by\nthe storage engine. (For example, if an abnormal server exit occurs\nafter removal of the table from the storage engine but before .frm file\nremoval.)\n\nThe TEMPORARY keyword has the following effects:\n\no The statement drops only TEMPORARY tables.\n\no The statement does not cause an implicit commit.\n\no No access rights are checked. A TEMPORARY table is visible only with\n  the session that created it, so no check is necessary.\n\nIncluding the TEMPORARY keyword is a good way to prevent accidentally\ndropping non-TEMPORARY tables.\n\nThe RESTRICT and CASCADE keywords do nothing. They are permitted to\nmake porting easier from other database systems.\n\nDROP TABLE is not supported with all innodb_force_recovery settings.\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/forcing-innodb-recovery.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-table.html'),(519,'DROP TABLESPACE',33,'Syntax:\nDROP TABLESPACE tablespace_name\n    [ENGINE [=] engine_name]\n\nThis statement drops a tablespace that was previously created using\nCREATE TABLESPACE. It is supported with all MySQL NDB Cluster 7.5\nreleases, and with InnoDB in the standard MySQL Server as well.\n\nENGINE sets the storage engine that uses the tablespace, where\nengine_name is the name of the storage engine. Currently, the values\nInnoDB and NDB are supported. If not set, the value of\ndefault_storage_engine is used. If it is not the same as the storage\nengine used to create the tablespace, the DROP TABLESPACE statement\nfails.\n\nFor an InnoDB tablespace, all tables must be dropped from the\ntablespace prior to a DROP TABLESPACE operation. If the tablespace is\nnot empty, DROP TABLESPACE returns an error.\n\nAs with the InnoDB system tablespace, truncating or dropping InnoDB\ntables stored in a general tablespace creates free space in the\ntablespace .ibd data file, which can only be used for new InnoDB data.\nSpace is not released back to the operating system by such operations\nas it is for file-per-table tablespaces.\n\nAn NDB tablespace to be dropped must not contain any data files; in\nother words, before you can drop an NDB tablespace, you must first drop\neach of its data files using ALTER TABLESPACE ... DROP DATAFILE.\n\nNotes\n\no Tablespaces are not deleted automatically. A tablespace must be\n  dropped explicitly using DROP TABLESPACE. DROP DATABASE has no effect\n  in this regard, even if the operation drops all tables belonging to\n  the tablespace.\n\no A DROP DATABASE operation can drop tables that belong to a general\n  tablespace but it cannot drop the tablespace, even if the operation\n  drops all tables that belong to the tablespace. The tablespace must\n  be dropped explicitly using DROP TABLESPACE tablespace_name.\n\no Similar to the system tablespace, truncating or dropping tables\n  stored in a general tablespace creates free space internally in the\n  general tablespace .ibd data file which can only be used for new\n  InnoDB data. Space is not released back to the operating system as it\n  is for file-per-table tablespaces.\n\nInnoDB Example\n\nThis example demonstrates how to drop an InnoDB general tablespace. The\ngeneral tablespace ts1 is created with a single table. Before dropping\nthe tablespace, the table must be dropped.\n\nmysql> CREATE TABLESPACE `ts1` ADD DATAFILE \'ts1.ibd\' Engine=InnoDB; \n\nmysql> CREATE TABLE t1 (c1 INT PRIMARY KEY) TABLESPACE ts10 Engine=InnoDB; \n      \nmysql> DROP TABLE t1;\n\nmysql> DROP TABLESPACE ts1;\n\nNDB Example\n\nThis example shows how to drop an NDB tablespace myts having a data\nfile named mydata-1.dat after first creating the tablespace, and\nassumes the existence of a log file group named mylg (see [HELP CREATE\nLOGFILE GROUP]).\n\nmysql> CREATE TABLESPACE myts\n    ->     ADD DATAFILE \'mydata-1.dat\'\n    ->     USE LOGFILE GROUP mylg\n    ->     ENGINE=NDB;\n\nYou must remove all data files from the tablespace using ALTER\nTABLESPACE, as shown here, before it can be dropped:\n\nmysql> ALTER TABLESPACE myts\n    ->     DROP DATAFILE \'mydata-1.dat\'\n    ->     ENGINE=NDB;\n\nmysql> DROP TABLESPACE myts;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-tablespace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-tablespace.html'),(520,'DROP TRIGGER',33,'Syntax:\nDROP TRIGGER [IF EXISTS] [schema_name.]trigger_name\n\nThis statement drops a trigger. The schema (database) name is optional.\nIf the schema is omitted, the trigger is dropped from the default\nschema. DROP TRIGGER requires the TRIGGER privilege for the table\nassociated with the trigger.\n\nUse IF EXISTS to prevent an error from occurring for a trigger that\ndoes not exist. A NOTE is generated for a nonexistent trigger when\nusing IF EXISTS. See [HELP SHOW WARNINGS].\n\nTriggers for a table are also dropped if you drop the table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-trigger.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-trigger.html'),(521,'DROP VIEW',33,'Syntax:\nDROP VIEW [IF EXISTS]\n    view_name [, view_name] ...\n    [RESTRICT | CASCADE]\n\nDROP VIEW removes one or more views. You must have the DROP privilege\nfor each view.\n\nIf any views named in the argument list do not exist, the statement\nreturns an error indicating by name which nonexisting views it was\nunable to drop, but also drops all views in the list that do exist.\n\n*Note*:\n\nIn MySQL 8.0, DROP VIEW fails if any views named in the argument list\ndo not exist. Due to the change in behavior, a partially completed DROP\nVIEW operation on a MySQL 5.7 master fails when replicated to a MySQL\n8.0 slave. To avoid this failure scenario, use IF EXISTS syntax in DROP\nVIEW statements to prevent an error from occurring for views that do\nnot exist. For more information, see Atomic Data Definition Statement\nSupport (https://dev.mysql.com/doc/refman/8.0/en/atomic-ddl.html).\n\nThe IF EXISTS clause prevents an error from occurring for views that\ndon\'t exist. When this clause is given, a NOTE is generated for each\nnonexistent view. See [HELP SHOW WARNINGS].\n\nRESTRICT and CASCADE, if given, are parsed and ignored.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-view.html'),(522,'RENAME TABLE',33,'Syntax:\nRENAME TABLE\n    tbl_name TO new_tbl_name\n    [, tbl_name2 TO new_tbl_name2] ...\n\nRENAME TABLE renames one or more tables. You must have ALTER and DROP\nprivileges for the original table, and CREATE and INSERT privileges for\nthe new table.\n\nFor example, to rename a table named old_table to new_table, use this\nstatement:\n\nRENAME TABLE old_table TO new_table;\n\nThat statement is equivalent to the following ALTER TABLE statement:\n\nALTER TABLE old_table RENAME new_table;\n\nRENAME TABLE, unlike ALTER TABLE, can rename multiple tables within a\nsingle statement:\n\nRENAME TABLE old_table1 TO new_table1,\n             old_table2 TO new_table2,\n             old_table3 TO new_table3;\n\nRenaming operations are performed left to right. Thus, to swap two\ntable names, do this (assuming that a table with the intermediary name\ntmp_table does not already exist):\n\nRENAME TABLE old_table TO tmp_table,\n             new_table TO old_table,\n             tmp_table TO new_table;\n\nMetadata locks on tables are acquired in name order, which in some\ncases can make a difference in operation outcome when multiple\ntransactions execute concurrently. See\nhttps://dev.mysql.com/doc/refman/5.7/en/metadata-locking.html.\n\nTo execute RENAME TABLE, there must be no active transactions or tables\nlocked with LOCK TABLES. With the transaction table locking conditions\nsatisfied, the rename operation is done atomically; no other session\ncan access any of the tables while the rename is in progress.\n\nIf any errors occur during a RENAME TABLE, the statement fails and no\nchanges are made.\n\nYou can use RENAME TABLE to move a table from one database to another:\n\nRENAME TABLE current_db.tbl_name TO other_db.tbl_name;\n\nUsing this method to move all tables from one database to a different\none in effect renames the database (an operation for which MySQL has no\nsingle statement), except that the original database continues to\nexist, albeit with no tables.\n\nLike RENAME TABLE, ALTER TABLE ... RENAME can also be used to move a\ntable to a different database. Regardless of the statement used, if the\nrename operation would move the table to a database located on a\ndifferent file system, the success of the outcome is platform specific\nand depends on the underlying operating system calls used to move table\nfiles.\n\nIf a table has triggers, attempts to rename the table into a different\ndatabase fail with a Trigger in wrong schema (ER_TRG_IN_WRONG_SCHEMA)\nerror.\n\nTo rename TEMPORARY tables, RENAME TABLE does not work. Use ALTER TABLE\ninstead.\n\nRENAME TABLE works for views, except that views cannot be renamed into\na different database.\n\nAny privileges granted specifically for a renamed table or view are not\nmigrated to the new name. They must be changed manually.\n\nRENAME TABLE tbl_name TO new_tbl_name changes internally generated\nforeign key constraint names and user-defined foreign key constraint\nnames that begin with the string \"tbl_name_ibfk_\" to reflect the new\ntable name. InnoDB interprets foreign key constraint names that begin\nwith the string \"tbl_name_ibfk_\" as internally generated names.\n\nForeign key constraint names that point to the renamed table are\nautomatically updated unless there is a conflict, in which case the\nstatement fails with an error. A conflict occurs if the renamed\nconstraint name already exists. In such cases, you must drop and\nre-create the foreign keys for them to function properly.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/rename-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/rename-table.html'),(523,'TRUNCATE TABLE',33,'Syntax:\nTRUNCATE [TABLE] tbl_name\n\nTRUNCATE TABLE empties a table completely. It requires the DROP\nprivilege.\n\nLogically, TRUNCATE TABLE is similar to a DELETE statement that deletes\nall rows, or a sequence of DROP TABLE and CREATE TABLE statements. To\nachieve high performance, it bypasses the DML method of deleting data.\nThus, it cannot be rolled back, it does not cause ON DELETE triggers to\nfire, and it cannot be performed for InnoDB tables with parent-child\nforeign key relationships.\n\nAlthough TRUNCATE TABLE is similar to DELETE, it is classified as a DDL\nstatement rather than a DML statement. It differs from DELETE in the\nfollowing ways:\n\no Truncate operations drop and re-create the table, which is much\n  faster than deleting rows one by one, particularly for large tables.\n\no Truncate operations cause an implicit commit, and so cannot be rolled\n  back. See\n  https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\no Truncation operations cannot be performed if the session holds an\n  active table lock.\n\no TRUNCATE TABLE fails for an InnoDB table or NDB table if there are\n  any FOREIGN KEY constraints from other tables that reference the\n  table. Foreign key constraints between columns of the same table are\n  permitted.\n\no Truncation operations do not return a meaningful value for the number\n  of deleted rows. The usual result is \"0 rows affected,\" which should\n  be interpreted as \"no information.\"\n\no As long as the table format file tbl_name.frm is valid, the table can\n  be re-created as an empty table with TRUNCATE TABLE, even if the data\n  or index files have become corrupted.\n\no Any AUTO_INCREMENT value is reset to its start value. This is true\n  even for MyISAM and InnoDB, which normally do not reuse sequence\n  values.\n\no When used with partitioned tables, TRUNCATE TABLE preserves the\n  partitioning; that is, the data and index files are dropped and\n  re-created, while the partition definitions (.par) file is\n  unaffected.\n\no The TRUNCATE TABLE statement does not invoke ON DELETE triggers.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/truncate-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/truncate-table.html'),(524,'CALL',34,'Syntax:\nCALL sp_name([parameter[,...]])\nCALL sp_name[()]\n\nThe CALL statement invokes a stored procedure that was defined\npreviously with CREATE PROCEDURE.\n\nStored procedures that take no arguments can be invoked without\nparentheses. That is, CALL p() and CALL p are equivalent.\n\nCALL can pass back values to its caller using parameters that are\ndeclared as OUT or INOUT parameters. When the procedure returns, a\nclient program can also obtain the number of rows affected for the\nfinal statement executed within the routine: At the SQL level, call the\nROW_COUNT() function; from the C API, call the mysql_affected_rows()\nfunction.\n\nFor information about the effect of unhandled conditions on procedure\nparameters, see\nhttps://dev.mysql.com/doc/refman/5.7/en/conditions-and-parameters.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/call.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/call.html'),(525,'DELETE',34,'Syntax:\nDELETE is a DML statement that removes rows from a table.\n\nSingle-Table Syntax\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nThe DELETE statement deletes rows from tbl_name and returns the number\nof deleted rows. To check the number of deleted rows, call the\nROW_COUNT() function described in\nhttps://dev.mysql.com/doc/refman/5.7/en/information-functions.html.\n\nMain Clauses\n\nThe conditions in the optional WHERE clause identify which rows to\ndelete. With no WHERE clause, all rows are deleted.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe deleted. It is specified as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nIf the ORDER BY clause is specified, the rows are deleted in the order\nthat is specified. The LIMIT clause places a limit on the number of\nrows that can be deleted. These clauses apply to single-table deletes,\nbut not multi-table deletes.\n\nMultiple-Table Syntax\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    tbl_name[.*] [, tbl_name[.*]] ...\n    FROM table_references\n    [WHERE where_condition]\n\nDELETE [LOW_PRIORITY] [QUICK] [IGNORE]\n    FROM tbl_name[.*] [, tbl_name[.*]] ...\n    USING table_references\n    [WHERE where_condition]\n\nPrivileges\n\nYou need the DELETE privilege on a table to delete rows from it. You\nneed only the SELECT privilege for any columns that are only read, such\nas those named in the WHERE clause.\n\nPerformance\n\nWhen you do not need to know the number of deleted rows, the TRUNCATE\nTABLE statement is a faster way to empty a table than a DELETE\nstatement with no WHERE clause. Unlike DELETE, TRUNCATE TABLE cannot be\nused within a transaction or if you have a lock on the table. See [HELP\nTRUNCATE TABLE] and [HELP LOCK TABLES].\n\nThe speed of delete operations may also be affected by factors\ndiscussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/delete-optimization.html.\n\nTo ensure that a given DELETE statement does not take too much time,\nthe MySQL-specific LIMIT row_count clause for DELETE specifies the\nmaximum number of rows to be deleted. If the number of rows to delete\nis larger than the limit, repeat the DELETE statement until the number\nof affected rows is less than the LIMIT value.\n\nSubqueries\n\nYou cannot delete from a table and select from the same table in a\nsubquery.\n\nPartitioned Table Support\n\nDELETE supports explicit partition selection using the PARTITION\noption, which takes a list of the comma-separated names of one or more\npartitions or subpartitions (or both) from which to select rows to be\ndropped. Partitions not included in the list are ignored. Given a\npartitioned table t with a partition named p0, executing the statement\nDELETE FROM t PARTITION (p0) has the same effect on the table as\nexecuting ALTER TABLE t TRUNCATE PARTITION (p0); in both cases, all\nrows in partition p0 are dropped.\n\nPARTITION can be used along with a WHERE condition, in which case the\ncondition is tested only on rows in the listed partitions. For example,\nDELETE FROM t PARTITION (p0) WHERE c < 5 deletes rows only from\npartition p0 for which the condition c < 5 is true; rows in any other\npartitions are not checked and thus not affected by the DELETE.\n\nThe PARTITION option can also be used in multiple-table DELETE\nstatements. You can use up to one such option per table named in the\nFROM option.\n\nFor more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/delete.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/delete.html'),(526,'DO',34,'Syntax:\nDO expr [, expr] ...\n\nDO executes the expressions but does not return any results. In most\nrespects, DO is shorthand for SELECT expr, ..., but has the advantage\nthat it is slightly faster when you do not care about the result.\n\nDO is useful primarily with functions that have side effects, such as\nRELEASE_LOCK().\n\nExample: This SELECT statement pauses, but also produces a result set:\n\nmysql> SELECT SLEEP(5);\n+----------+\n| SLEEP(5) |\n+----------+\n|        0 |\n+----------+\n1 row in set (5.02 sec)\n\nDO, on the other hand, pauses without producing a result set.:\n\nmysql> DO SLEEP(5);\nQuery OK, 0 rows affected (4.99 sec)\n\nThis could be useful, for example in a stored function or trigger,\nwhich prohibit statements that produce result sets.\n\nDO only executes expressions. It cannot be used in all cases where\nSELECT can be used. For example, DO id FROM t1 is invalid because it\nreferences a table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/do.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/do.html'),(527,'HANDLER',34,'Syntax:\nHANDLER tbl_name OPEN [ [AS] alias]\n\nHANDLER tbl_name READ index_name { = | <= | >= | < | > } (value1,value2,...)\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ index_name { FIRST | NEXT | PREV | LAST }\n    [ WHERE where_condition ] [LIMIT ... ]\nHANDLER tbl_name READ { FIRST | NEXT }\n    [ WHERE where_condition ] [LIMIT ... ]\n\nHANDLER tbl_name CLOSE\n\nThe HANDLER statement provides direct access to table storage engine\ninterfaces. It is available for InnoDB and MyISAM tables.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/handler.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/handler.html'),(528,'INSERT',34,'Syntax:\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    {VALUES | VALUE} (value_list) [, (value_list)] ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nINSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    SET assignment_list\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nINSERT inserts new rows into an existing table. The INSERT ... VALUES\nand INSERT ... SET forms of the statement insert rows based on\nexplicitly specified values. The INSERT ... SELECT form inserts rows\nselected from another table or tables. INSERT with an ON DUPLICATE KEY\nUPDATE clause enables existing rows to be updated if a row to be\ninserted would cause a duplicate value in a UNIQUE index or PRIMARY\nKEY.\n\nFor additional information about INSERT ... SELECT and INSERT ... ON\nDUPLICATE KEY UPDATE, see [HELP INSERT SELECT], and\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html.\n\nIn MySQL 5.7, the DELAYED keyword is accepted but ignored by the\nserver. For the reasons for this, see [HELP INSERT DELAYED],\n\nInserting into a table requires the INSERT privilege for the table. If\nthe ON DUPLICATE KEY UPDATE clause is used and a duplicate key causes\nan UPDATE to be performed instead, the statement requires the UPDATE\nprivilege for the columns to be updated. For columns that are read but\nnot modified you need only the SELECT privilege (such as for a column\nreferenced only on the right hand side of an col_name=expr assignment\nin an ON DUPLICATE KEY UPDATE clause).\n\nWhen inserting into a partitioned table, you can control which\npartitions and subpartitions accept new rows. The PARTITION option\ntakes a list of the comma-separated names of one or more partitions or\nsubpartitions (or both) of the table. If any of the rows to be inserted\nby a given INSERT statement do not match one of the partitions listed,\nthe INSERT statement fails with the error Found a row not matching the\ngiven partition set. For more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/insert.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/insert.html'),(529,'INSERT SELECT',34,'Syntax:\nINSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n    [ON DUPLICATE KEY UPDATE assignment_list]\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nWith INSERT ... SELECT, you can quickly insert many rows into a table\nfrom the result of a SELECT statement, which can select from one or\nmany tables. For example:\n\nINSERT INTO tbl_temp2 (fld_id)\n  SELECT tbl_temp1.fld_order_id\n  FROM tbl_temp1 WHERE tbl_temp1.fld_order_id > 100;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/insert-select.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/insert-select.html'),(530,'INSERT DELAYED',34,'Syntax:\nINSERT DELAYED ...\n\nThe DELAYED option for the INSERT statement is a MySQL extension to\nstandard SQL. In previous versions of MySQL, it can be used for certain\nkinds of tables (such as MyISAM), such that when a client uses INSERT\nDELAYED, it gets an okay from the server at once, and the row is queued\nto be inserted when the table is not in use by any other thread.\n\nDELAYED inserts and replaces were deprecated in MySQL 5.6. In MySQL\n5.7, DELAYED is not supported. The server recognizes but ignores the\nDELAYED keyword, handles the insert as a nondelayed insert, and\ngenerates an ER_WARN_LEGACY_SYNTAX_CONVERTED warning (\"INSERT DELAYED\nis no longer supported. The statement was converted to INSERT\"). The\nDELAYED keyword is scheduled for removal in a future release.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/insert-delayed.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/insert-delayed.html'),(531,'LOAD DATA',34,'Syntax:\nLOAD DATA\n    [LOW_PRIORITY | CONCURRENT] [LOCAL]\n    INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [CHARACTER SET charset_name]\n    [{FIELDS | COLUMNS}\n        [TERMINATED BY \'string\']\n        [[OPTIONALLY] ENCLOSED BY \'char\']\n        [ESCAPED BY \'char\']\n    ]\n    [LINES\n        [STARTING BY \'string\']\n        [TERMINATED BY \'string\']\n    ]\n    [IGNORE number {LINES | ROWS}]\n    [(col_name_or_user_var\n        [, col_name_or_user_var] ...)]\n    [SET col_name={expr | DEFAULT},\n        [, col_name={expr | DEFAULT}] ...]\n\nThe LOAD DATA statement reads rows from a text file into a table at a\nvery high speed. LOAD DATA is the complement of SELECT ... INTO\nOUTFILE. (See\nhttps://dev.mysql.com/doc/refman/5.7/en/select-into.html.) To write\ndata from a table to a file, use SELECT ... INTO OUTFILE. To read the\nfile back into a table, use LOAD DATA. The syntax of the FIELDS and\nLINES clauses is the same for both statements.\n\nYou can also load data files by using the mysqlimport utility; see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysqlimport.html. mysqlimport\noperates by sending a LOAD DATA statement to the server.\n\nFor more information about the efficiency of INSERT versus LOAD DATA\nand speeding up LOAD DATA, see\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-optimization.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/load-data.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/load-data.html'),(532,'LOAD XML',34,'Syntax:\nLOAD XML\n    [LOW_PRIORITY | CONCURRENT] [LOCAL]\n    INFILE \'file_name\'\n    [REPLACE | IGNORE]\n    INTO TABLE [db_name.]tbl_name\n    [CHARACTER SET charset_name]\n    [ROWS IDENTIFIED BY \'<tagname>\']\n    [IGNORE number {LINES | ROWS}]\n    [(field_name_or_user_var\n        [, field_name_or_user_var] ...)]\n    [SET col_name={expr | DEFAULT},\n        [, col_name={expr | DEFAULT}] ...]\n\nThe LOAD XML statement reads data from an XML file into a table. The\nfile_name must be given as a literal string. The tagname in the\noptional ROWS IDENTIFIED BY clause must also be given as a literal\nstring, and must be surrounded by angle brackets (< and >).\n\nLOAD XML acts as the complement of running the mysql client in XML\noutput mode (that is, starting the client with the --xml option). To\nwrite data from a table to an XML file, you can invoke the mysql client\nwith the --xml and -e options from the system shell, as shown here:\n\nshell> mysql --xml -e \'SELECT * FROM mydb.mytable\' > file.xml\n\nTo read the file back into a table, use LOAD XML. By default, the <row>\nelement is considered to be the equivalent of a database table row;\nthis can be changed using the ROWS IDENTIFIED BY clause.\n\nThis statement supports three different XML formats:\n\no Column names as attributes and column values as attribute values:\n\n<row column1=\"value1\" column2=\"value2\" .../>\n\no Column names as tags and column values as the content of these tags:\n\n<row>\n  <column1>value1</column1>\n  <column2>value2</column2>\n</row>\n\no Column names are the name attributes of <field> tags, and values are\n  the contents of these tags:\n\n<row>\n  <field name=\'column1\'>value1</field>\n  <field name=\'column2\'>value2</field>\n</row>\n\n  This is the format used by other MySQL tools, such as mysqldump.\n\nAll three formats can be used in the same XML file; the import routine\nautomatically detects the format for each row and interprets it\ncorrectly. Tags are matched based on the tag or attribute name and the\ncolumn name.\n\nThe following clauses work essentially the same way for LOAD XML as\nthey do for LOAD DATA:\n\no LOW_PRIORITY or CONCURRENT\n\no LOCAL\n\no REPLACE or IGNORE\n\no CHARACTER SET\n\no SET\n\nSee [HELP LOAD DATA], for more information about these clauses.\n\n(field_name_or_user_var, ...) is a list of one or more comma-separated\nXML fields or user variables. The name of a user variable used for this\npurpose must match the name of a field from the XML file, prefixed with\n@. You can use field names to select only desired fields. User\nvariables can be employed to store the corresponding field values for\nsubsequent re-use.\n\nThe IGNORE number LINES or IGNORE number ROWS clause causes the first\nnumber rows in the XML file to be skipped. It is analogous to the LOAD\nDATA statement\'s IGNORE ... LINES clause.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/load-xml.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/load-xml.html'),(533,'REPLACE',34,'Syntax:\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    {VALUES | VALUE} (value_list) [, (value_list)] ...\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    SET assignment_list\n\nREPLACE [LOW_PRIORITY | DELAYED]\n    [INTO] tbl_name\n    [PARTITION (partition_name [, partition_name] ...)]\n    [(col_name [, col_name] ...)]\n    SELECT ...\n\nvalue:\n    {expr | DEFAULT}\n\nvalue_list:\n    value [, value] ...\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nREPLACE works exactly like INSERT, except that if an old row in the\ntable has the same value as a new row for a PRIMARY KEY or a UNIQUE\nindex, the old row is deleted before the new row is inserted. See [HELP\nINSERT].\n\nREPLACE is a MySQL extension to the SQL standard. It either inserts, or\ndeletes and inserts. For another MySQL extension to standard SQL---that\neither inserts or updates---see\nhttps://dev.mysql.com/doc/refman/5.7/en/insert-on-duplicate.html.\n\nDELAYED inserts and replaces were deprecated in MySQL 5.6. In MySQL\n5.7, DELAYED is not supported. The server recognizes but ignores the\nDELAYED keyword, handles the replace as a nondelayed replace, and\ngenerates an ER_WARN_LEGACY_SYNTAX_CONVERTED warning. (\"REPLACE DELAYED\nis no longer supported. The statement was converted to REPLACE.\") The\nDELAYED keyword will be removed in a future release.\n\n*Note*:\n\nREPLACE makes sense only if a table has a PRIMARY KEY or UNIQUE index.\nOtherwise, it becomes equivalent to INSERT, because there is no index\nto be used to determine whether a new row duplicates another.\n\nValues for all columns are taken from the values specified in the\nREPLACE statement. Any missing columns are set to their default values,\njust as happens for INSERT. You cannot refer to values from the current\nrow and use them in the new row. If you use an assignment such as SET\ncol_name = col_name + 1, the reference to the column name on the right\nhand side is treated as DEFAULT(col_name), so the assignment is\nequivalent to SET col_name = DEFAULT(col_name) + 1.\n\nTo use REPLACE, you must have both the INSERT and DELETE privileges for\nthe table.\n\nIf a generated column is replaced explicitly, the only permitted value\nis DEFAULT. For information about generated columns, see\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-generated-columns.\nhtml.\n\nREPLACE supports explicit partition selection using the PARTITION\nkeyword with a list of comma-separated names of partitions,\nsubpartitions, or both. As with INSERT, if it is not possible to insert\nthe new row into any of these partitions or subpartitions, the REPLACE\nstatement fails with the error Found a row not matching the given\npartition set. For more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/replace.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/replace.html'),(534,'SELECT',34,'Syntax:\nSELECT\n    [ALL | DISTINCT | DISTINCTROW ]\n      [HIGH_PRIORITY]\n      [STRAIGHT_JOIN]\n      [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]\n      [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS]\n    select_expr [, select_expr ...]\n    [FROM table_references\n      [PARTITION partition_list]\n    [WHERE where_condition]\n    [GROUP BY {col_name | expr | position}\n      [ASC | DESC], ... [WITH ROLLUP]]\n    [HAVING where_condition]\n    [ORDER BY {col_name | expr | position}\n      [ASC | DESC], ...]\n    [LIMIT {[offset,] row_count | row_count OFFSET offset}]\n    [PROCEDURE procedure_name(argument_list)]\n    [INTO OUTFILE \'file_name\'\n        [CHARACTER SET charset_name]\n        export_options\n      | INTO DUMPFILE \'file_name\'\n      | INTO var_name [, var_name]]\n    [FOR UPDATE | LOCK IN SHARE MODE]]\n\nSELECT is used to retrieve rows selected from one or more tables, and\ncan include UNION statements and subqueries. See [HELP UNION], and\nhttps://dev.mysql.com/doc/refman/5.7/en/subqueries.html.\n\nThe most commonly used clauses of SELECT statements are these:\n\no Each select_expr indicates a column that you want to retrieve. There\n  must be at least one select_expr.\n\no table_references indicates the table or tables from which to retrieve\n  rows. Its syntax is described in [HELP JOIN].\n\no SELECT supports explicit partition selection using the PARTITION with\n  a list of partitions or subpartitions (or both) following the name of\n  the table in a table_reference (see [HELP JOIN]). In this case, rows\n  are selected only from the partitions listed, and any other\n  partitions of the table are ignored. For more information and\n  examples, see\n  https://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\n  SELECT ... PARTITION from tables using storage engines such as MyISAM\n  that perform table-level locks (and thus partition locks) lock only\n  the partitions or subpartitions named by the PARTITION option.\n\n  For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/partitioning-limitations-lock\n  ing.html.\n\no The WHERE clause, if given, indicates the condition or conditions\n  that rows must satisfy to be selected. where_condition is an\n  expression that evaluates to true for each row to be selected. The\n  statement selects all rows if there is no WHERE clause.\n\n  In the WHERE expression, you can use any of the functions and\n  operators that MySQL supports, except for aggregate (summary)\n  functions. See\n  https://dev.mysql.com/doc/refman/5.7/en/expressions.html, and\n  https://dev.mysql.com/doc/refman/5.7/en/functions.html.\n\nSELECT can also be used to retrieve rows computed without reference to\nany table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/select.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/select.html'),(535,'DUAL',34,'You are permitted to specify DUAL as a dummy table name in situations\nwhere no tables are referenced:\n\nmysql> SELECT 1 + 1 FROM DUAL;\n        -> 2\n\nDUAL is purely for the convenience of people who require that all\nSELECT statements should have FROM and possibly other clauses. MySQL\nmay ignore the clauses. MySQL does not require FROM DUAL if no tables\nare referenced.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/select.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/select.html'),(536,'JOIN',34,'MySQL supports the following JOIN syntax for the table_references part\nof SELECT statements and multiple-table DELETE and UPDATE statements:\n\ntable_references:\n    escaped_table_reference [, escaped_table_reference] ...\n\nescaped_table_reference:\n    table_reference\n  | { OJ table_reference }\n\ntable_reference:\n    table_factor\n  | joined_table\n\ntable_factor:\n    tbl_name [PARTITION (partition_names)]\n        [[AS] alias] [index_hint_list]\n  | table_subquery [AS] alias\n  | ( table_references )\n\njoined_table:\n    table_reference [INNER | CROSS] JOIN table_factor [join_specification]\n  | table_reference STRAIGHT_JOIN table_factor\n  | table_reference STRAIGHT_JOIN table_factor ON search_condition\n  | table_reference {LEFT|RIGHT} [OUTER] JOIN table_reference join_specification\n  | table_reference NATURAL [{LEFT|RIGHT} [OUTER]] JOIN table_factor\n\njoin_specification:\n    ON search_condition\n  | USING (join_column_list)\n\njoin_column_list:\n    column_name [, column_name] ...\n\nindex_hint_list:\n    index_hint [, index_hint] ...\n\nindex_hint:\n    USE {INDEX|KEY}\n      [FOR {JOIN|ORDER BY|GROUP BY}] ([index_list])\n  | {IGNORE|FORCE} {INDEX|KEY}\n      [FOR {JOIN|ORDER BY|GROUP BY}] (index_list)\n\nindex_list:\n    index_name [, index_name] ...\n\nA table reference is also known as a join expression.\n\nA table reference (when it refers to a partitioned table) may contain a\nPARTITION option, including a list of comma-separated partitions,\nsubpartitions, or both. This option follows the name of the table and\nprecedes any alias declaration. The effect of this option is that rows\nare selected only from the listed partitions or subpartitions. Any\npartitions or subpartitions not named in the list are ignored. For more\ninformation and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nThe syntax of table_factor is extended in MySQL in comparison with\nstandard SQL. The standard accepts only table_reference, not a list of\nthem inside a pair of parentheses.\n\nThis is a conservative extension if each comma in a list of\ntable_reference items is considered as equivalent to an inner join. For\nexample:\n\nSELECT * FROM t1 LEFT JOIN (t2, t3, t4)\n                 ON (t2.a = t1.a AND t3.b = t1.b AND t4.c = t1.c)\n\nis equivalent to:\n\nSELECT * FROM t1 LEFT JOIN (t2 CROSS JOIN t3 CROSS JOIN t4)\n                 ON (t2.a = t1.a AND t3.b = t1.b AND t4.c = t1.c)\n\nIn MySQL, JOIN, CROSS JOIN, and INNER JOIN are syntactic equivalents\n(they can replace each other). In standard SQL, they are not\nequivalent. INNER JOIN is used with an ON clause, CROSS JOIN is used\notherwise.\n\nIn general, parentheses can be ignored in join expressions containing\nonly inner join operations. MySQL also supports nested joins. See\nhttps://dev.mysql.com/doc/refman/5.7/en/nested-join-optimization.html.\n\nIndex hints can be specified to affect how the MySQL optimizer makes\nuse of indexes. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/index-hints.html. Optimizer\nhints and the optimizer_switch system variable are other ways to\ninfluence optimizer use of indexes. See\nhttps://dev.mysql.com/doc/refman/5.7/en/optimizer-hints.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/switchable-optimizations.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/join.html\n\n','SELECT left_tbl.*\n  FROM left_tbl LEFT JOIN right_tbl ON left_tbl.id = right_tbl.id\n  WHERE right_tbl.id IS NULL;\n','https://dev.mysql.com/doc/refman/5.7/en/join.html'),(537,'UNION',34,'Syntax:\nSELECT ...\nUNION [ALL | DISTINCT] SELECT ...\n[UNION [ALL | DISTINCT] SELECT ...]\n\nUNION is used to combine the result from multiple SELECT statements\ninto a single result set.\n\nThe column names from the first SELECT statement are used as the column\nnames for the results returned. Selected columns listed in\ncorresponding positions of each SELECT statement should have the same\ndata type. (For example, the first column selected by the first\nstatement should have the same type as the first column selected by the\nother statements.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/union.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/union.html'),(538,'UPDATE',34,'Syntax:\nUPDATE is a DML statement that modifies rows in a table.\n\nSingle-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_reference\n    SET assignment_list\n    [WHERE where_condition]\n    [ORDER BY ...]\n    [LIMIT row_count]\n\nvalue:\n    {expr | DEFAULT}\n\nassignment:\n    col_name = value\n\nassignment_list:\n    assignment [, assignment] ...\n\nMultiple-table syntax:\n\nUPDATE [LOW_PRIORITY] [IGNORE] table_references\n    SET assignment_list\n    [WHERE where_condition]\n\nFor the single-table syntax, the UPDATE statement updates columns of\nexisting rows in the named table with new values. The SET clause\nindicates which columns to modify and the values they should be given.\nEach value can be given as an expression, or the keyword DEFAULT to set\na column explicitly to its default value. The WHERE clause, if given,\nspecifies the conditions that identify which rows to update. With no\nWHERE clause, all rows are updated. If the ORDER BY clause is\nspecified, the rows are updated in the order that is specified. The\nLIMIT clause places a limit on the number of rows that can be updated.\n\nFor the multiple-table syntax, UPDATE updates rows in each table named\nin table_references that satisfy the conditions. Each matching row is\nupdated once, even if it matches the conditions multiple times. For\nmultiple-table syntax, ORDER BY and LIMIT cannot be used.\n\nFor partitioned tables, both the single-single and multiple-table forms\nof this statement support the use of a PARTITION option as part of a\ntable reference. This option takes a list of one or more partitions or\nsubpartitions (or both). Only the partitions (or subpartitions) listed\nare checked for matches, and a row that is not in any of these\npartitions or subpartitions is not updated, whether it satisfies the\nwhere_condition or not.\n\n*Note*:\n\nUnlike the case when using PARTITION with an INSERT or REPLACE\nstatement, an otherwise valid UPDATE ... PARTITION statement is\nconsidered successful even if no rows in the listed partitions (or\nsubpartitions) match the where_condition.\n\nFor more information and examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-selection.html.\n\nwhere_condition is an expression that evaluates to true for each row to\nbe updated. For expression syntax, see\nhttps://dev.mysql.com/doc/refman/5.7/en/expressions.html.\n\ntable_references and where_condition are specified as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nYou need the UPDATE privilege only for columns referenced in an UPDATE\nthat are actually updated. You need only the SELECT privilege for any\ncolumns that are read but not modified.\n\nThe UPDATE statement supports the following modifiers:\n\no With the LOW_PRIORITY modifier, execution of the UPDATE is delayed\n  until no other clients are reading from the table. This affects only\n  storage engines that use only table-level locking (such as MyISAM,\n  MEMORY, and MERGE).\n\no With the IGNORE modifier, the update statement does not abort even if\n  errors occur during the update. Rows for which duplicate-key\n  conflicts occur on a unique key value are not updated. Rows updated\n  to values that would cause data conversion errors are updated to the\n  closest valid values instead. For more information, see\n  https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#ignore-strict-c\n  omparison.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/update.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/update.html'),(539,'START TRANSACTION',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(540,'BEGIN',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(541,'COMMIT',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(542,'ROLLBACK',35,'Syntax:\nSTART TRANSACTION\n    [transaction_characteristic [, transaction_characteristic] ...]\n\ntransaction_characteristic: {\n    WITH CONSISTENT SNAPSHOT\n  | READ WRITE\n  | READ ONLY\n}\n\nBEGIN [WORK]\nCOMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]\nSET autocommit = {0 | 1}\n\nThese statements provide control over use of transactions:\n\no START TRANSACTION or BEGIN start a new transaction.\n\no COMMIT commits the current transaction, making its changes permanent.\n\no ROLLBACK rolls back the current transaction, canceling its changes.\n\no SET autocommit disables or enables the default autocommit mode for\n  the current session.\n\nBy default, MySQL runs with autocommit mode enabled. This means that as\nsoon as you execute a statement that updates (modifies) a table, MySQL\nstores the update on disk to make it permanent. The change cannot be\nrolled back.\n\nTo disable autocommit mode implicitly for a single series of\nstatements, use the START TRANSACTION statement:\n\nSTART TRANSACTION;\nSELECT @A:=SUM(salary) FROM table1 WHERE type=1;\nUPDATE table2 SET summary=@A WHERE type=1;\nCOMMIT;\n\nWith START TRANSACTION, autocommit remains disabled until you end the\ntransaction with COMMIT or ROLLBACK. The autocommit mode then reverts\nto its previous state.\n\nSTART TRANSACTION permits several modifiers that control transaction\ncharacteristics. To specify multiple modifiers, separate them by\ncommas.\n\no The WITH CONSISTENT SNAPSHOT modifier starts a consistent read for\n  storage engines that are capable of it. This applies only to InnoDB.\n  The effect is the same as issuing a START TRANSACTION followed by a\n  SELECT from any InnoDB table. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html.\n  The WITH CONSISTENT SNAPSHOT modifier does not change the current\n  transaction isolation level, so it provides a consistent snapshot\n  only if the current isolation level is one that permits a consistent\n  read. The only isolation level that permits a consistent read is\n  REPEATABLE READ. For all other isolation levels, the WITH CONSISTENT\n  SNAPSHOT clause is ignored. As of MySQL 5.7.2, a warning is generated\n  when the WITH CONSISTENT SNAPSHOT clause is ignored.\n\no The READ WRITE and READ ONLY modifiers set the transaction access\n  mode. They permit or prohibit changes to tables used in the\n  transaction. The READ ONLY restriction prevents the transaction from\n  modifying or locking both transactional and nontransactional tables\n  that are visible to other transactions; the transaction can still\n  modify or lock temporary tables.\n\n  MySQL enables extra optimizations for queries on InnoDB tables when\n  the transaction is known to be read-only. Specifying READ ONLY\n  ensures these optimizations are applied in cases where the read-only\n  status cannot be determined automatically. See\n  https://dev.mysql.com/doc/refman/5.7/en/innodb-performance-ro-txn.htm\n  l for more information.\n\n  If no access mode is specified, the default mode applies. Unless the\n  default has been changed, it is read/write. It is not permitted to\n  specify both READ WRITE and READ ONLY in the same statement.\n\n  In read-only mode, it remains possible to change tables created with\n  the TEMPORARY keyword using DML statements. Changes made with DDL\n  statements are not permitted, just as with permanent tables.\n\n  For additional information about transaction access mode, including\n  ways to change the default mode, see [HELP SET TRANSACTION].\n\n  If the read_only system variable is enabled, explicitly starting a\n  transaction with START TRANSACTION READ WRITE requires the SUPER\n  privilege.\n\n*Important*:\n\nMany APIs used for writing MySQL client applications (such as JDBC)\nprovide their own methods for starting transactions that can (and\nsometimes should) be used instead of sending a START TRANSACTION\nstatement from the client. See\nhttps://dev.mysql.com/doc/refman/5.7/en/connectors-apis.html, or the\ndocumentation for your API, for more information.\n\nTo disable autocommit mode explicitly, use the following statement:\n\nSET autocommit=0;\n\nAfter disabling autocommit mode by setting the autocommit variable to\nzero, changes to transaction-safe tables (such as those for InnoDB or\nNDB) are not made permanent immediately. You must use COMMIT to store\nyour changes to disk or ROLLBACK to ignore the changes.\n\nautocommit is a session variable and must be set for each session. To\ndisable autocommit mode for each new connection, see the description of\nthe autocommit system variable at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nBEGIN and BEGIN WORK are supported as aliases of START TRANSACTION for\ninitiating a transaction. START TRANSACTION is standard SQL syntax, is\nthe recommended way to start an ad-hoc transaction, and permits\nmodifiers that BEGIN does not.\n\nThe BEGIN statement differs from the use of the BEGIN keyword that\nstarts a BEGIN ... END compound statement. The latter does not begin a\ntransaction. See [HELP BEGIN END].\n\n*Note*:\n\nWithin all stored programs (stored procedures and functions, triggers,\nand events), the parser treats BEGIN [WORK] as the beginning of a BEGIN\n... END block. Begin a transaction in this context with START\nTRANSACTION instead.\n\nThe optional WORK keyword is supported for COMMIT and ROLLBACK, as are\nthe CHAIN and RELEASE clauses. CHAIN and RELEASE can be used for\nadditional control over transaction completion. The value of the\ncompletion_type system variable determines the default completion\nbehavior. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nThe AND CHAIN clause causes a new transaction to begin as soon as the\ncurrent one ends, and the new transaction has the same isolation level\nas the just-terminated transaction. The new transaction also uses the\nsame access mode (READ WRITE or READ ONLY) as the just-terminated\ntransaction. The RELEASE clause causes the server to disconnect the\ncurrent client session after terminating the current transaction.\nIncluding the NO keyword suppresses CHAIN or RELEASE completion, which\ncan be useful if the completion_type system variable is set to cause\nchaining or release completion by default.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/commit.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/commit.html'),(543,'SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/savepoint.html'),(544,'ROLLBACK TO SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/savepoint.html'),(545,'RELEASE SAVEPOINT',35,'Syntax:\nSAVEPOINT identifier\nROLLBACK [WORK] TO [SAVEPOINT] identifier\nRELEASE SAVEPOINT identifier\n\nInnoDB supports the SQL statements SAVEPOINT, ROLLBACK TO SAVEPOINT,\nRELEASE SAVEPOINT and the optional WORK keyword for ROLLBACK.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/savepoint.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/savepoint.html'),(546,'LOCK TABLES',35,'Syntax:\nLOCK TABLES\n    tbl_name [[AS] alias] lock_type\n    [, tbl_name [[AS] alias] lock_type] ...\n\nlock_type: {\n    READ [LOCAL]\n  | [LOW_PRIORITY] WRITE\n}\n\nUNLOCK TABLES\n\nMySQL enables client sessions to acquire table locks explicitly for the\npurpose of cooperating with other sessions for access to tables, or to\nprevent other sessions from modifying tables during periods when a\nsession requires exclusive access to them. A session can acquire or\nrelease locks only for itself. One session cannot acquire locks for\nanother session or release locks held by another session.\n\nLocks may be used to emulate transactions or to get more speed when\nupdating tables. This is explained in more detail in\nhttps://dev.mysql.com/doc/refman/5.7/en/lock-tables.html#lock-tables-re\nstrictions.\n\nLOCK TABLES explicitly acquires table locks for the current client\nsession. Table locks can be acquired for base tables or views. You must\nhave the LOCK TABLES privilege, and the SELECT privilege for each\nobject to be locked.\n\nFor view locking, LOCK TABLES adds all base tables used in the view to\nthe set of tables to be locked and locks them automatically. If you\nlock a table explicitly with LOCK TABLES, any tables used in triggers\nare also locked implicitly, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/lock-tables.html#lock-tables-an\nd-triggers.\n\nUNLOCK TABLES explicitly releases any table locks held by the current\nsession. LOCK TABLES implicitly releases any table locks held by the\ncurrent session before acquiring new locks.\n\nAnother use for UNLOCK TABLES is to release the global read lock\nacquired with the FLUSH TABLES WITH READ LOCK statement, which enables\nyou to lock all tables in all databases. See [HELP FLUSH]. (This is a\nvery convenient way to get backups if you have a file system such as\nVeritas that can take snapshots in time.)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/lock-tables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/lock-tables.html'),(547,'SET TRANSACTION',35,'Syntax:\nSET [GLOBAL | SESSION] TRANSACTION\n    transaction_characteristic [, transaction_characteristic] ...\n\ntransaction_characteristic: {\n    ISOLATION LEVEL level\n  | access_mode\n}\n\nlevel: {\n     REPEATABLE READ\n   | READ COMMITTED\n   | READ UNCOMMITTED\n   | SERIALIZABLE\n}\n\naccess_mode: {\n     READ WRITE\n   | READ ONLY\n}\n\nThis statement specifies transaction characteristics. It takes a list\nof one or more characteristic values separated by commas. Each\ncharacteristic value sets the transaction isolation level or access\nmode. The isolation level is used for operations on InnoDB tables. The\naccess mode specifies whether transactions operate in read/write or\nread-only mode.\n\nIn addition, SET TRANSACTION can include an optional GLOBAL or SESSION\nkeyword to indicate the scope of the statement.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-transaction.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-transaction.html'),(548,'XA',35,'Syntax:\nXA {START|BEGIN} xid [JOIN|RESUME]\n\nXA END xid [SUSPEND [FOR MIGRATE]]\n\nXA PREPARE xid\n\nXA COMMIT xid [ONE PHASE]\n\nXA ROLLBACK xid\n\nXA RECOVER [CONVERT XID]\n\nFor XA START, the JOIN and RESUME clauses are not supported.\n\nFor XA END the SUSPEND [FOR MIGRATE] clause is not supported.\n\nEach XA statement begins with the XA keyword, and most of them require\nan xid value. An xid is an XA transaction identifier. It indicates\nwhich transaction the statement applies to. xid values are supplied by\nthe client, or generated by the MySQL server. An xid value has from one\nto three parts:\n\nxid: gtrid [, bqual [, formatID ]]\n\ngtrid is a global transaction identifier, bqual is a branch qualifier,\nand formatID is a number that identifies the format used by the gtrid\nand bqual values. As indicated by the syntax, bqual and formatID are\noptional. The default bqual value is \'\' if not given. The default\nformatID value is 1 if not given.\n\ngtrid and bqual must be string literals, each up to 64 bytes (not\ncharacters) long. gtrid and bqual can be specified in several ways. You\ncan use a quoted string (\'ab\'), hex string (X\'6162\', 0x6162), or bit\nvalue (b\'nnnn\').\n\nformatID is an unsigned integer.\n\nThe gtrid and bqual values are interpreted in bytes by the MySQL\nserver\'s underlying XA support routines. However, while an SQL\nstatement containing an XA statement is being parsed, the server works\nwith some specific character set. To be safe, write gtrid and bqual as\nhex strings.\n\nxid values typically are generated by the Transaction Manager. Values\ngenerated by one TM must be different from values generated by other\nTMs. A given TM must be able to recognize its own xid values in a list\nof values returned by the XA RECOVER statement.\n\nXA START xid starts an XA transaction with the given xid value. Each XA\ntransaction must have a unique xid value, so the value must not\ncurrently be used by another XA transaction. Uniqueness is assessed\nusing the gtrid and bqual values. All following XA statements for the\nXA transaction must be specified using the same xid value as that given\nin the XA START statement. If you use any of those statements but\nspecify an xid value that does not correspond to some existing XA\ntransaction, an error occurs.\n\nOne or more XA transactions can be part of the same global transaction.\nAll XA transactions within a given global transaction must use the same\ngtrid value in the xid value. For this reason, gtrid values must be\nglobally unique so that there is no ambiguity about which global\ntransaction a given XA transaction is part of. The bqual part of the\nxid value must be different for each XA transaction within a global\ntransaction. (The requirement that bqual values be different is a\nlimitation of the current MySQL XA implementation. It is not part of\nthe XA specification.)\n\nThe XA RECOVER statement returns information for those XA transactions\non the MySQL server that are in the PREPARED state. (See\nhttps://dev.mysql.com/doc/refman/5.7/en/xa-states.html.) The output\nincludes a row for each such XA transaction on the server, regardless\nof which client started it.\n\nXA RECOVER output rows look like this (for an example xid value\nconsisting of the parts \'abc\', \'def\', and 7):\n\nmysql> XA RECOVER;\n+----------+--------------+--------------+--------+\n| formatID | gtrid_length | bqual_length | data   |\n+----------+--------------+--------------+--------+\n|        7 |            3 |            3 | abcdef |\n+----------+--------------+--------------+--------+\n\nThe output columns have the following meanings:\n\no formatID is the formatID part of the transaction xid\n\no gtrid_length is the length in bytes of the gtrid part of the xid\n\no bqual_length is the length in bytes of the bqual part of the xid\n\no data is the concatenation of the gtrid and bqual parts of the xid\n\nXID values may contain nonprintable characters. As of MySQL 5.7.5, XA\nRECOVER permits an optional CONVERT XID clause so that clients can\nrequest XID values in hexadecimal.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/xa-statements.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/xa-statements.html'),(549,'PURGE BINARY LOGS',35,'Syntax:\nPURGE { BINARY | MASTER } LOGS {\n    TO \'log_name\'\n  | BEFORE datetime_expr\n}\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file (see\nhttps://dev.mysql.com/doc/refman/5.7/en/binary-log.html).\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date.\nBINARY and MASTER are synonyms. Deleted log files also are removed from\nthe list recorded in the index file, so that the given log file becomes\nthe first in the list.\n\nPURGE BINARY LOGS requires the BINLOG_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nbinlog-admin) privilege. This statement has no effect if the server was\nnot started with the --log-bin option to enable binary logging.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html\n\n','PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2019-04-02 22:46:26\';\n','https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html'),(550,'PURGE MASTER LOGS',35,'Syntax:\nPURGE { BINARY | MASTER } LOGS {\n    TO \'log_name\'\n  | BEFORE datetime_expr\n}\n\nThe binary log is a set of files that contain information about data\nmodifications made by the MySQL server. The log consists of a set of\nbinary log files, plus an index file (see\nhttps://dev.mysql.com/doc/refman/5.7/en/binary-log.html).\n\nThe PURGE BINARY LOGS statement deletes all the binary log files listed\nin the log index file prior to the specified log file name or date.\nBINARY and MASTER are synonyms. Deleted log files also are removed from\nthe list recorded in the index file, so that the given log file becomes\nthe first in the list.\n\nPURGE BINARY LOGS requires the BINLOG_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nbinlog-admin) privilege. This statement has no effect if the server was\nnot started with the --log-bin option to enable binary logging.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html\n\n','PURGE BINARY LOGS TO \'mysql-bin.010\';\nPURGE BINARY LOGS BEFORE \'2019-04-02 22:46:26\';\n','https://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html'),(551,'RESET MASTER',35,'Syntax:\nRESET MASTER\n\nDeletes all binary log files listed in the index file, resets the\nbinary log index file to be empty, and creates a new binary log file.\nRESET MASTER requires the RELOAD privilege.\n\n*Warning*:\n\nUse this statement with caution to ensure you do not lose binary log\nfile data.\n\nRESET MASTER also clears the values of the gtid_purged system variable\nas well as the global value of the gtid_executed system variable (but\nnot its session value); that is, executing this statement sets each of\nthese values to an empty string (\'\'). In MySQL 5.7.5 and later, this\nstatement also clears the mysql.gtid_executed table (see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html\n#replication-gtids-gtid-executed-table).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/reset-master.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/reset-master.html'),(552,'SET SQL_LOG_BIN',35,'Syntax:\nSET sql_log_bin = {OFF|ON}\n\nThe sql_log_bin variable controls whether logging to the binary log is\nenabled for the current session (assuming that the binary log itself is\nenabled). The default value is ON. To disable or enable binary logging\nfor the current session, set the session sql_log_bin variable to OFF or\nON.\n\nSet this variable to OFF for a session to temporarily disable binary\nlogging while making changes to the master you do not want replicated\nto the slave.\n\nSetting the session value of this system variable is a restricted\noperation. The session user must have privileges sufficient to set\nrestricted session variables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/system-variable-privileges.html\n.\n\nIt is not possible to set the session value of sql_log_bin within a\ntransaction or subquery.\n\nSetting this variable to OFF prevents GTIDs from being assigned to\ntransactions in the binary log. If you are using GTIDs for replication,\nthis means that even when binary logging is later enabled again, the\nGTIDs written into the log from this point do not account for any\ntransactions that occurred in the meantime, so in effect those\ntransactions are lost.\n\nThe global sql_log_bin variable is read only and cannot be modified.\nThe global scope is deprecated and will be removed in a future MySQL\nrelease.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-sql-log-bin.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-sql-log-bin.html'),(553,'CHANGE MASTER TO',35,'Syntax:\nCHANGE MASTER TO option [, option] ... [ channel_option ]\n\noption:\n    MASTER_BIND = \'interface_name\'\n  | MASTER_HOST = \'host_name\'\n  | MASTER_USER = \'user_name\'\n  | MASTER_PASSWORD = \'password\'\n  | MASTER_PORT = port_num\n  | MASTER_CONNECT_RETRY = interval\n  | MASTER_RETRY_COUNT = count\n  | MASTER_DELAY = interval\n  | MASTER_HEARTBEAT_PERIOD = interval\n  | MASTER_LOG_FILE = \'master_log_name\'\n  | MASTER_LOG_POS = master_log_pos\n  | MASTER_AUTO_POSITION = {0|1}\n  | RELAY_LOG_FILE = \'relay_log_name\'\n  | RELAY_LOG_POS = relay_log_pos\n  | MASTER_SSL = {0|1}\n  | MASTER_SSL_CA = \'ca_file_name\'\n  | MASTER_SSL_CAPATH = \'ca_directory_name\'\n  | MASTER_SSL_CERT = \'cert_file_name\'\n  | MASTER_SSL_CRL = \'crl_file_name\'\n  | MASTER_SSL_CRLPATH = \'crl_directory_name\'\n  | MASTER_SSL_KEY = \'key_file_name\'\n  | MASTER_SSL_CIPHER = \'cipher_list\'\n  | MASTER_SSL_VERIFY_SERVER_CERT = {0|1}\n  | MASTER_TLS_VERSION = \'protocol_list\'\n  | IGNORE_SERVER_IDS = (server_id_list)\n\nchannel_option:\n    FOR CHANNEL channel\n\nserver_id_list:\n    [server_id [, server_id] ... ]\n\nCHANGE MASTER TO changes the parameters that the slave server uses for\nconnecting to the master server, for reading the master binary log, and\nreading the slave relay log. It also updates the contents of the master\ninfo and relay log info repositories (see\nhttps://dev.mysql.com/doc/refman/5.7/en/slave-logs.html). CHANGE MASTER\nTO requires the SUPER privilege.\n\nPrior to MySQL 5.7.4, the slave replication threads must be stopped,\nusing STOP SLAVE if necessary, before issuing this statement. In MySQL\n5.7.4 and later, you can issue CHANGE MASTER TO statements on a running\nslave without doing this, depending on the states of the slave SQL\nthread and slave I/O thread. The rules governing such use are provided\nlater in this section.\n\nWhen using a multithreaded slave (in other words slave_parallel_workers\nis greater than 0), stopping the slave can cause \"gaps\" in the sequence\nof transactions that have been executed from the relay log, regardless\nof whether the slave was stopped intentionally or otherwise. When such\ngaps exist, issuing CHANGE MASTER TO fails. The solution in this\nsituation is to issue START SLAVE UNTIL SQL_AFTER_MTS_GAPS which\nensures that the gaps are closed.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the CHANGE MASTER TO statement to a specific\nreplication channel, and is used to add a new channel or modify an\nexisting channel. For example, to add a new channel called channel2:\n\nCHANGE MASTER TO MASTER_HOST=host1, MASTER_PORT=3002 FOR CHANNEL \'channel2\'\n\nIf no clause is named and no extra channels exist, the statement\napplies to the default channel.\n\nWhen using multiple replication channels, if a CHANGE MASTER TO\nstatement does not name a channel using a FOR CHANNEL channel clause,\nan error occurs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nOptions not specified retain their value, except as indicated in the\nfollowing discussion. Thus, in most cases, there is no need to specify\noptions that do not change. For example, if the password to connect to\nyour MySQL master has changed, issue this statement to tell the slave\nabout the new password:\n\nCHANGE MASTER TO MASTER_PASSWORD=\'new3cret\';\n\nMASTER_HOST, MASTER_USER, MASTER_PASSWORD, and MASTER_PORT provide\ninformation to the slave about how to connect to its master:\n\no MASTER_HOST and MASTER_PORT are the host name (or IP address) of the\n  master host and its TCP/IP port.\n\n  *Note*:\n\n  Replication cannot use Unix socket files. You must be able to connect\n  to the master MySQL server using TCP/IP.\n\n  If you specify the MASTER_HOST or MASTER_PORT option, the slave\n  assumes that the master server is different from before (even if the\n  option value is the same as its current value.) In this case, the old\n  values for the master binary log file name and position are\n  considered no longer applicable, so if you do not specify\n  MASTER_LOG_FILE and MASTER_LOG_POS in the statement,\n  MASTER_LOG_FILE=\'\' and MASTER_LOG_POS=4 are silently appended to it.\n\n  Setting MASTER_HOST=\'\' (that is, setting its value explicitly to an\n  empty string) is not the same as not setting MASTER_HOST at all.\n  Beginning with MySQL 5.5, trying to set MASTER_HOST to an empty\n  string fails with an error. Previously, setting MASTER_HOST to an\n  empty string caused START SLAVE subsequently to fail. (Bug #28796)\n\n  Values used for MASTER_HOST and other CHANGE MASTER TO options are\n  checked for linefeed (\\n or 0x0A) characters; the presence of such\n  characters in these values causes the statement to fail with\n  ER_MASTER_INFO. (Bug #11758581, Bug #50801)\n\no MASTER_USER and MASTER_PASSWORD are the user name and password of the\n  account to use for connecting to the master.\n\n  MASTER_USER cannot be made empty; setting MASTER_USER = \'\' or leaving\n  it unset when setting a value for MASTER_PASSWORD causes an error\n  (Bug #13427949).\n\n  The password used for a MySQL Replication slave account in a CHANGE\n  MASTER TO statement is limited to 32 characters in length; prior to\n  MySQL 5.7.5, if the password was longer, the statement succeeded, but\n  any excess characters were silently truncated. In MySQL 5.7.5 and\n  later, trying to use a password of more than 32 characters causes\n  CHANGE MASTER TO to fail. (Bug #11752299, Bug #43439)\n\n  The text of a running CHANGE MASTER TO statement, including values\n  for MASTER_USER and MASTER_PASSWORD, can be seen in the output of a\n  concurrent SHOW PROCESSLIST statement. (The complete text of a START\n  SLAVE statement is also visible to SHOW PROCESSLIST.)\n\nThe MASTER_SSL_xxx options and the MASTER_TLS_VERSION option specify\nhow the slave uses encryption and ciphers to secure the replication\nconnection. These options can be changed even on slaves that are\ncompiled without SSL support. They are saved to the master info\nrepository, but are ignored if the slave does not have SSL support\nenabled. The MASTER_SSL_xxx and MASTER_TLS_VERSION options perform the\nsame functions as the --ssl-xxx and --tls-version client options\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/connection-options.html#encrypt\ned-connection-options. The correspondence between the two sets of\noptions, and the use of the MASTER_SSL_xxx and MASTER_TLS_VERSION\noptions to set up a secure connection, is explained in\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions-encrypted\n-connections.html.\n\nAs of MySQL 5.7.3, setting MASTER_SSL=1 means that the slave connection\nto the master must use SSL, or the connection attempt fails. Before\n5.7.3, the use of an SSL connection by the slave was not enforced with\nMASTER_SSL=1. This is analogous to the client-side meaning of the --ssl\ncommand-line option; see\nhttps://dev.mysql.com/doc/refman/5.7/en/connection-options.html#encrypt\ned-connection-options.\n\nThe MASTER_HEARTBEAT_PERIOD, MASTER_CONNECT_RETRY, and\nMASTER_RETRY_COUNT options control how the slave recognizes that the\nconnection to the master has been lost and makes attempts to reconnect.\n\no The slave_net_timeout system variable specifies the number of seconds\n  that the slave waits for either more data or a heartbeat signal from\n  the master, before the slave considers the connection broken, aborts\n  the read, and tries to reconnect. The default value is 60 seconds\n  (one minute). Prior to MySQL 5.7.7, the default was 3600 seconds (one\n  hour).\n\no The heartbeat interval, which stops the connection timeout occurring\n  in the absence of data if the connection is still good, is controlled\n  by the MASTER_HEARTBEAT_PERIOD option. A heartbeat signal is sent to\n  the slave after that number of seconds, and the waiting period is\n  reset whenever the master\'s binary log is updated with an event.\n  Heartbeats are therefore sent by the master only if there are no\n  unsent events in the binary log file for a period longer than this.\n  The heartbeat interval interval is a decimal value having the range 0\n  to 4294967 seconds and a resolution in milliseconds; the smallest\n  nonzero value is 0.001. Setting interval to 0 disables heartbeats\n  altogether. The heartbeat interval defaults to half the value of the\n  slave_net_timeout system variable. It is recorded in the master info\n  log and shown in the replication_connection_configuration Performance\n  Schema table. Issuing RESET SLAVE resets the heartbeat interval to\n  the default value.\n\no Prior to MySQL 5.7.4, not including MASTER_HEARTBEAT_PERIOD caused\n  CHANGE MASTER TO to reset the heartbeat interval to the default (half\n  the value of the slave_net_timeout system variable), and\n  Slave_received_heartbeats to 0. The heartbeat interval is now not\n  reset except by RESET SLAVE. (Bug #18185490)\n\no Note that a change to the value or default setting of\n  slave_net_timeout does not automatically change the heartbeat\n  interval, whether that has been set explicitly or is using a\n  previously calculated default. A warning is issued if you set\n  @@GLOBAL.slave_net_timeout to a value less than that of the current\n  heartbeat interval. If slave_net_timeout is changed, you must also\n  issue CHANGE MASTER TO to adjust the heartbeat interval to an\n  appropriate value so that the heartbeat signal occurs before the\n  connection timeout. If you do not do this, the heartbeat signal has\n  no effect, and if no data is received from the master, the slave can\n  make repeated reconnection attempts, creating zombie dump threads.\n\no If the slave does need to reconnect, the first retry occurs\n  immediately after the timeout. MASTER_CONNECT_RETRY specifies the\n  interval between reconnection attempts, and MASTER_RETRY_COUNT limits\n  the number of reconnection attempts. If both the default settings are\n  used, the slave waits 60 seconds between reconnection attempts\n  (MASTER_CONNECT_RETRY=60), and keeps attempting to reconnect at this\n  rate for 60 days (MASTER_RETRY_COUNT=86400). These values are\n  recorded in the master info log and shown in the\n  replication_connection_configuration Performance Schema table.\n  MASTER_RETRY_COUNT supersedes the --master-retry-count server startup\n  option.\n\nMASTER_DELAY specifies how many seconds behind the master the slave\nmust lag. An event received from the master is not executed until at\nleast interval seconds later than its execution on the master. The\ndefault is 0. An error occurs if interval is not a nonnegative integer\nin the range from 0 to 231−1. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html.\n\nFrom MySQL 5.7, a CHANGE MASTER TO statement employing the MASTER_DELAY\noption can be executed on a running slave when the slave SQL thread is\nstopped.\n\nMASTER_BIND is for use on replication slaves having multiple network\ninterfaces, and determines which of the slave\'s network interfaces is\nchosen for connecting to the master.\n\nThe address configured with this option, if any, can be seen in the\nMaster_Bind column of the output from SHOW SLAVE STATUS. If you are\nusing slave status log tables (server started with\n--master-info-repository=TABLE), the value can also be seen as the\nMaster_bind column of the mysql.slave_master_info table.\n\nThe ability to bind a replication slave to a specific network interface\nis also supported by NDB Cluster.\n\nMASTER_LOG_FILE and MASTER_LOG_POS are the coordinates at which the\nslave I/O thread should begin reading from the master the next time the\nthread starts. RELAY_LOG_FILE and RELAY_LOG_POS are the coordinates at\nwhich the slave SQL thread should begin reading from the relay log the\nnext time the thread starts. If you specify either of MASTER_LOG_FILE\nor MASTER_LOG_POS, you cannot specify RELAY_LOG_FILE or RELAY_LOG_POS.\nIf you specify either of MASTER_LOG_FILE or MASTER_LOG_POS, you also\ncannot specify MASTER_AUTO_POSITION = 1 (described later in this\nsection). If neither of MASTER_LOG_FILE or MASTER_LOG_POS is specified,\nthe slave uses the last coordinates of the slave SQL thread before\nCHANGE MASTER TO was issued. This ensures that there is no\ndiscontinuity in replication, even if the slave SQL thread was late\ncompared to the slave I/O thread, when you merely want to change, say,\nthe password to use.\n\nFrom MySQL 5.7, a CHANGE MASTER TO statement employing RELAY_LOG_FILE,\nRELAY_LOG_POS, or both options can be executed on a running slave when\nthe slave SQL thread is stopped. Prior to MySQL 5.7.4, CHANGE MASTER TO\ndeletes all relay log files and starts a new one, unless you specify\nRELAY_LOG_FILE or RELAY_LOG_POS. In that case, relay log files are\nkept; the relay_log_purge global variable is set silently to 0. In\nMySQL 5.7.4 and later, relay logs are preserved if at least one of the\nslave SQL thread and the slave I/O thread is running; if both threads\nare stopped, all relay log files are deleted unless at least one of\nRELAY_LOG_FILE or RELAY_LOG_POS is specified.\n\nRELAY_LOG_FILE can use either an absolute or relative path, and uses\nthe same base name as MASTER_LOG_FILE. (Bug #12190)\n\nWhen MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave\nattempts to connect to the master using the GTID-based replication\nprotocol. From MySQL 5.7, this option can be employed by CHANGE MASTER\nTO only if both the slave SQL and slave I/O threads are stopped. Both\nthe slave and the master must have GTIDs enabled (GTID_MODE=ON,\nON_PERMISSIVE, or OFF_PERMISSIVE on the slave, and GTID_MODE=ON on the\nmaster). Auto-positioning is used for the connection, so the\ncoordinates represented by MASTER_LOG_FILE and MASTER_LOG_POS are not\nused, and the use of either or both of these options together with\nMASTER_AUTO_POSITION = 1 causes an error. If multi-source replication\nis enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1\noption for each applicable replication channel.\n\nWith MASTER_AUTO_POSITION = 1 set, in the initial connection handshake,\nthe slave sends a GTID set containing the transactions that it has\nalready received, committed, or both. The master responds by sending\nall transactions recorded in its binary log whose GTID is not included\nin the GTID set sent by the slave. This exchange ensures that the\nmaster only sends the transactions with a GTID that the slave has not\nalready recorded or committed. If the slave receives transactions from\nmore than one master, as in the case of a diamond topology, the\nauto-skip function ensures that the transactions are not applied twice.\nFor details of how the GTID set sent by the slave is computed, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-position\ning.html.\n\nIf any of the transactions that should be sent by the master have been\npurged from the master\'s binary log, or added to the set of GTIDs in\nthe gtid_purged system variable by another method, the master sends the\nerror ER_MASTER_HAS_PURGED_REQUIRED_GTIDS to the slave, and replication\ndoes not start. Also, if during the exchange of transactions it is\nfound that the slave has recorded or committed transactions with the\nmaster\'s UUID in the GTID, but the master itself has not committed\nthem, the master sends the error ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER to\nthe slave and replication does not start. For information on how to\nhandle these situations, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-position\ning.html.\n\nYou can see whether replication is running with auto-positioning\nenabled by checking the Performance Schema\nreplication_connection_status table or the output of SHOW SLAVE STATUS.\nDisabling the MASTER_AUTO_POSITION option again makes the slave revert\nto file-based replication, in which case you must also specify one or\nboth of the MASTER_LOG_FILE or MASTER_LOG_POS options.\n\nIGNORE_SERVER_IDS takes a comma-separated list of 0 or more server IDs.\nEvents originating from the corresponding servers are ignored, with the\nexception of log rotation and deletion events, which are still recorded\nin the relay log.\n\nIn circular replication, the originating server normally acts as the\nterminator of its own events, so that they are not applied more than\nonce. Thus, this option is useful in circular replication when one of\nthe servers in the circle is removed. Suppose that you have a circular\nreplication setup with 4 servers, having server IDs 1, 2, 3, and 4, and\nserver 3 fails. When bridging the gap by starting replication from\nserver 2 to server 4, you can include IGNORE_SERVER_IDS = (3) in the\nCHANGE MASTER TO statement that you issue on server 4 to tell it to use\nserver 2 as its master instead of server 3. Doing so causes it to\nignore and not to propagate any statements that originated with the\nserver that is no longer in use.\n\nIf a CHANGE MASTER TO statement is issued without any IGNORE_SERVER_IDS\noption, any existing list is preserved. To clear the list of ignored\nservers, it is necessary to use the option with an empty list:\n\nCHANGE MASTER TO IGNORE_SERVER_IDS = ();\n\nPrior to MySQL 5.7.5, RESET SLAVE ALL has no effect on the server ID\nlist. In MySQL 5.7.5 and later, RESET SLAVE ALL clears\nIGNORE_SERVER_IDS. (Bug #18816897)\n\nIf IGNORE_SERVER_IDS contains the server\'s own ID and the server was\nstarted with the --replicate-same-server-id option enabled, an error\nresults.\n\nThe master info repository and the output of SHOW SLAVE STATUS provide\nthe list of servers that are currently ignored. For more information,\nsee https://dev.mysql.com/doc/refman/5.7/en/slave-logs-status.html, and\n[HELP SHOW SLAVE STATUS].\n\nInvoking CHANGE MASTER TO causes the previous values for MASTER_HOST,\nMASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS to be written to the\nerror log, along with other information about the slave\'s state prior\nto execution.\n\nCHANGE MASTER TO causes an implicit commit of an ongoing transaction.\nSee https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nIn MySQL 5.7.4 and later, the strict requirement to execute STOP SLAVE\nprior to issuing any CHANGE MASTER TO statement (and START SLAVE\nafterward) is removed. Instead of depending on whether the slave is\nstopped, the behavior of CHANGE MASTER TO depends (in MySQL 5.7.4 and\nlater) on the states of the slave SQL thread and slave I/O threads;\nwhich of these threads is stopped or running now determines the options\nthat can or cannot be used with a CHANGE MASTER TO statement at a given\npoint in time. The rules for making this determination are listed here:\n\no If the SQL thread is stopped, you can execute CHANGE MASTER TO using\n  any combination that is otherwise allowed of RELAY_LOG_FILE,\n  RELAY_LOG_POS, and MASTER_DELAY options, even if the slave I/O thread\n  is running. No other options may be used with this statement when the\n  I/O thread is running.\n\no If the I/O thread is stopped, you can execute CHANGE MASTER TO using\n  any of the options for this statement (in any allowed combination)\n  except RELAY_LOG_FILE, RELAY_LOG_POS, MASTER_DELAY, or\n  MASTER_AUTO_POSITION = 1 even when the SQL thread is running.\n\no Both the SQL thread and the I/O thread must be stopped before issuing\n  a CHANGE MASTER TO statement that employs MASTER_AUTO_POSITION = 1.\n\nYou can check the current state of the slave SQL and I/O threads using\nSHOW SLAVE STATUS.\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions-switch.ht\nml.\n\nIf you are using statement-based replication and temporary tables, it\nis possible for a CHANGE MASTER TO statement following a STOP SLAVE\nstatement to leave behind temporary tables on the slave. From MySQL\n5.7, a warning (ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO) is issued\nwhenever this occurs. You can avoid this in such cases by making sure\nthat the value of the Slave_open_temp_tables system status variable is\nequal to 0 prior to executing such a CHANGE MASTER TO statement.\n\nCHANGE MASTER TO is useful for setting up a slave when you have the\nsnapshot of the master and have recorded the master binary log\ncoordinates corresponding to the time of the snapshot. After loading\nthe snapshot into the slave to synchronize it with the master, you can\nrun CHANGE MASTER TO MASTER_LOG_FILE=\'log_name\', MASTER_LOG_POS=log_pos\non the slave to specify the coordinates at which the slave should begin\nreading the master binary log.\n\nThe following example changes the master server the slave uses and\nestablishes the master binary log coordinates from which the slave\nbegins reading. This is used when you want to set up the slave to\nreplicate the master:\n\nCHANGE MASTER TO\n  MASTER_HOST=\'master2.example.com\',\n  MASTER_USER=\'replication\',\n  MASTER_PASSWORD=\'password\',\n  MASTER_PORT=3306,\n  MASTER_LOG_FILE=\'master2-bin.001\',\n  MASTER_LOG_POS=4,\n  MASTER_CONNECT_RETRY=10;\n\nThe next example shows an operation that is less frequently employed.\nIt is used when the slave has relay log files that you want it to\nexecute again for some reason. To do this, the master need not be\nreachable. You need only use CHANGE MASTER TO and start the SQL thread\n(START SLAVE SQL_THREAD):\n\nCHANGE MASTER TO\n  RELAY_LOG_FILE=\'slave-relay-bin.006\',\n  RELAY_LOG_POS=4025;\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html'),(554,'CHANGE REPLICATION FILTER',35,'Syntax:\nCHANGE REPLICATION FILTER filter[, filter][, ...]\n\nfilter:\n    REPLICATE_DO_DB = (db_list)\n  | REPLICATE_IGNORE_DB = (db_list)\n  | REPLICATE_DO_TABLE = (tbl_list)\n  | REPLICATE_IGNORE_TABLE = (tbl_list)\n  | REPLICATE_WILD_DO_TABLE = (wild_tbl_list)\n  | REPLICATE_WILD_IGNORE_TABLE = (wild_tbl_list)\n  | REPLICATE_REWRITE_DB = (db_pair_list)\n\ndb_list:\n    db_name[, db_name][, ...]\n\ntbl_list:\n    db_name.table_name[, db_table_name][, ...]\nwild_tbl_list:\n    \'db_pattern.table_pattern\'[, \'db_pattern.table_pattern\'][, ...]\n\ndb_pair_list:\n    (db_pair)[, (db_pair)][, ...]\n\ndb_pair:\n    from_db, to_db\n\nCHANGE REPLICATION FILTER sets one or more replication filtering rules\non the slave in the same way as starting the slave mysqld with\nreplication filtering options such as --replicate-do-db or\n--replicate-wild-ignore-table. Unlike the case with the server options,\nthis statement does not require restarting the server to take effect,\nonly that the slave SQL thread be stopped using STOP SLAVE SQL_THREAD\nfirst (and restarted with START SLAVE SQL_THREAD afterwards). CHANGE\nREPLICATION FILTER requires the SUPER privilege.\n\nReplication filters cannot be set on a MySQL server instance that is\nconfigured for Group Replication, because filtering transactions on\nsome servers would make the group unable to reach agreement on a\nconsistent state.\n\nThe following list shows the CHANGE REPLICATION FILTER options and how\nthey relate to --replicate-* server options:\n\no REPLICATE_DO_DB: Include updates based on database name. Equivalent\n  to --replicate-do-db.\n\no REPLICATE_IGNORE_DB: Exclude updates based on database name.\n  Equivalent to --replicate-ignore-db.\n\no REPLICATE_DO_TABLE: Include updates based on table name. Equivalent\n  to --replicate-do-table.\n\no REPLICATE_IGNORE_TABLE: Exclude updates based on table name.\n  Equivalent to --replicate-ignore-table.\n\no REPLICATE_WILD_DO_TABLE: Include updates based on wildcard pattern\n  matching table name. Equivalent to --replicate-wild-do-table.\n\no REPLICATE_WILD_IGNORE_TABLE: Exclude updates based on wildcard\n  pattern matching table name. Equivalent to\n  --replicate-wild-ignore-table.\n\no REPLICATE_REWRITE_DB: Perform updates on slave after substituting new\n  name on slave for specified database on master. Equivalent to\n  --replicate-rewrite-db.\n\nThe precise effects of REPLICATE_DO_DB and REPLICATE_IGNORE_DB filters\nare dependent on whether statement-based or row-based replication is in\neffect. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-rules.html, for\nmore information.\n\nMultiple replication filtering rules can be created in a single CHANGE\nREPLICATION FILTER statement by separating the rules with commas, as\nshown here:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (d1), REPLICATE_IGNORE_DB = (d2);\n\nIssuing the statement just shown is equivalent to starting the slave\nmysqld with the options --replicate-do-db=d1 --replicate-ignore-db=d2.\n\nIf the same filtering rule is specified multiple times, only the last\nsuch rule is actually used. For example, the two statements shown here\nhave exactly the same effect, because the first REPLICATE_DO_DB rule in\nthe first statement is ignored:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (db1, db2), REPLICATE_DO_DB = (db3, db4);\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (db3,db4);\n\n*Caution*:\n\nThis behavior differs from that of the --replicate-* filter options\nwhere specifying the same option multiple times causes the creation of\nmultiple filter rules.\n\nNames of tables and database not containing any special characters need\nnot be quoted. Values used with REPLICATION_WILD_TABLE and\nREPLICATION_WILD_IGNORE_TABLE are string expressions, possibly\ncontaining (special) wildcard characters, and so must be quoted. This\nis shown in the following example statements:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_WILD_DO_TABLE = (\'db1.old%\');\n\nCHANGE REPLICATION FILTER\n    REPLICATE_WILD_IGNORE_TABLE = (\'db1.new%\', \'db2.new%\');\n\nValues used with REPLICATE_REWRITE_DB represent pairs of database\nnames; each such value must be enclosed in parentheses. The following\nstatement rewrites statements occurring on database db1 on the master\nto database db2 on the slave:\n\nCHANGE REPLICATION FILTER REPLICATE_REWRITE_DB = ((db1, db2));\n\nThe statement just shown contains two sets of parentheses, one\nenclosing the pair of database names, and the other enclosing the\nentire list. This is perhap more easily seen in the following example,\nwhich creates two rewrite-db rules, one rewriting database dbA to dbB,\nand one rewriting database dbC to dbD:\n\nCHANGE REPLICATION FILTER\n  REPLICATE_REWRITE_DB = ((dbA, dbB), (dbC, dbD));\n\nThis statement leaves any existing replication filtering rules\nunchanged; to unset all filters of a given type, set the filter\'s value\nto an explicitly empty list, as shown in this example, which removes\nall existing REPLICATE_DO_DB and REPLICATE_IGNORE_DB rules:\n\nCHANGE REPLICATION FILTER\n    REPLICATE_DO_DB = (), REPLICATE_IGNORE_DB = ();\n\nSetting a filter to empty in this way removes all existing rules, does\nnot create any new ones, and does not restore any rules set at mysqld\nstartup using --replicate-* options on the command line or in the\nconfiguration file.\n\nValues employed with REPLICATE_WILD_DO_TABLE and\nREPLICATE_WILD_IGNORE_TABLE must be in the format db_name.tbl_name.\nPrior to MySQL 5.7.5, this was not strictly enforced, although using\nnonconforming values with these options could lead to erroneous results\n(Bug #18095449).\n\nFor more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-rules.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/change-replication-filter.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/change-replication-filter.html'),(555,'RESET SLAVE',35,'Syntax:\nRESET SLAVE [ALL] [channel_option]\n\nchannel_option:\n    FOR CHANNEL channel\n\nRESET SLAVE makes the slave forget its replication position in the\nmaster\'s binary log. This statement is meant to be used for a clean\nstart: It clears the master info and relay log info repositories,\ndeletes all the relay log files, and starts a new relay log file. It\nalso resets to 0 the replication delay specified with the MASTER_DELAY\noption to CHANGE MASTER TO. RESET SLAVE does not change the values of\ngtid_executed or gtid_purged.\n\n*Note*:\n\nAll relay log files are deleted, even if they have not been completely\nexecuted by the slave SQL thread. (This is a condition likely to exist\non a replication slave if you have issued a STOP SLAVE statement or if\nthe slave is highly loaded.)\n\nRESET SLAVE requires the RELOAD privilege.\n\nTo use RESET SLAVE, the slave replication threads must be stopped, so\non a running slave use STOP SLAVE before issuing RESET SLAVE. To use\nRESET SLAVE on a Group Replication group member, the member status must\nbe OFFLINE, meaning that the plugin is loaded but the member does not\ncurrently belong to any group. A group member can be taken offline by\nusing a STOP GROUP REPLICATION statement.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the RESET SLAVE statement to a specific\nreplication channel. Combining a FOR CHANNEL channel clause with the\nALL option deletes the specified channel. If no channel is named and no\nextra channels exist, the statement applies to the default channel.\nIssuing a RESET SLAVE ALL statement without a FOR CHANNEL channel\nclause when multiple replication channels exist deletes all replication\nchannels and recreates only the default channel. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nRESET SLAVE does not change any replication connection parameters such\nas master host, master port, master user, or master password.\n\no From MySQL 5.7.24, when master_info_repository=TABLE is set on the\n  server, replication connection parameters are preserved in the\n  crash-safe InnoDB table mysql.slave_master_info as part of the RESET\n  SLAVE operation. They are also retained in memory. In the event of a\n  server crash or deliberate restart after issuing RESET SLAVE but\n  before issuing START SLAVE, the replication connection parameters are\n  retrieved from the table and reused for the new connection.\n\no When master_info_repository=FILE is set on the server (which is the\n  default in MySQL 5.7), replication connection parameters are only\n  retained in memory. If the slave mysqld is restarted immediately\n  after issuing RESET SLAVE due to a server crash or deliberate\n  restart, the connection parameters are lost. In that case, you must\n  issue a CHANGE MASTER TO statement after the server start to\n  respecify the connection parameters before issuing START SLAVE.\n\nIf you want to reset the connection parameters intentionally, you need\nto use RESET SLAVE ALL, which clears the connection parameters. In that\ncase, you must issue a CHANGE MASTER TO statement after the server\nstart to specify the new connection parameters.\n\nRESET SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nIf the slave SQL thread was in the middle of replicating temporary\ntables when it was stopped, and RESET SLAVE is issued, these replicated\ntemporary tables are deleted on the slave.\n\nPrior to MySQL 5.7.5, RESET SLAVE also had the effect of resetting both\nthe heartbeat period (Slave_heartbeat_period) and\nSSL_VERIFY_SERVER_CERT. This issue is fixed in MySQL 5.7.5 and later.\n(Bug #18777899, Bug #18778485)\n\nPrior to MySQL 5.7.5, RESET SLAVE ALL did not clear the\nIGNORE_SERVER_IDS list set by CHANGE MASTER TO. In MySQL 5.7.5 and\nlater, the statement clears the list. (Bug #18816897)\n\n*Note*:\n\nWhen used on an NDB Cluster replication slave SQL node, RESET SLAVE\nclears the mysql.ndb_apply_status table. You should keep in mind when\nusing this statement that ndb_apply_status uses the NDB storage engine\nand so is shared by all SQL nodes attached to the slave cluster.\n\nYou can override this behavior by issuing SET GLOBAL\n@@ndb_clear_apply_status=OFF prior to executing RESET SLAVE, which\nkeeps the slave from purging the ndb_apply_status table in such cases.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/reset-slave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/reset-slave.html'),(556,'SET GLOBAL SQL_SLAVE_SKIP_COUNTER',35,'Syntax:\nSET GLOBAL sql_slave_skip_counter = N\n\nThis statement skips the next N events from the master. This is useful\nfor recovering from replication stops caused by a statement.\n\nThis statement is valid only when the slave threads are not running.\nOtherwise, it produces an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-global-sql-slave-skip-counter.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-global-sql-slave-skip-counter.html'),(557,'START SLAVE',35,'Syntax:\nSTART SLAVE [thread_types] [until_option] [connection_options] [channel_option]\n\nthread_types:\n    [thread_type [, thread_type] ... ]\n\nthread_type:\n    IO_THREAD | SQL_THREAD\n\nuntil_option:\n    UNTIL {   {SQL_BEFORE_GTIDS | SQL_AFTER_GTIDS} = gtid_set\n          |   MASTER_LOG_FILE = \'log_name\', MASTER_LOG_POS = log_pos\n          |   RELAY_LOG_FILE = \'log_name\', RELAY_LOG_POS = log_pos\n          |   SQL_AFTER_MTS_GAPS  }\n\nconnection_options:\n    [USER=\'user_name\'] [PASSWORD=\'user_pass\'] [DEFAULT_AUTH=\'plugin_name\'] [PLUGIN_DIR=\'plugin_dir\']\n\n\nchannel_option:\n    FOR CHANNEL channel\n\ngtid_set:\n    uuid_set [, uuid_set] ...\n    | \'\'\n\nuuid_set:\n    uuid:interval[:interval]...\n\nuuid:\n    hhhhhhhh-hhhh-hhhh-hhhh-hhhhhhhhhhhh\n\nh:\n    [0-9,A-F]\n\ninterval:\n    n[-n]\n\n    (n >= 1)\n\nSTART SLAVE with no thread_type options starts both of the slave\nthreads. The I/O thread reads events from the master server and stores\nthem in the relay log. The SQL thread reads events from the relay log\nand executes them. START SLAVE requires the REPLICATION_SLAVE_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nreplication-slave-admin) or SUPER privilege.\n\nIf START SLAVE succeeds in starting the slave threads, it returns\nwithout any error. However, even in that case, it might be that the\nslave threads start and then later stop (for example, because they do\nnot manage to connect to the master or read its binary log, or some\nother problem). START SLAVE does not warn you about this. You must\ncheck the slave\'s error log for error messages generated by the slave\nthreads, or check that they are running satisfactorily with SHOW SLAVE\nSTATUS.\n\nIn MySQL 5.7, START SLAVE causes an implicit commit of an ongoing\ntransaction. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\ngtid_next must be set to AUTOMATIC before issuing this statement.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the START SLAVE statement to a specific\nreplication channel. If no clause is named and no extra channels exist,\nthe statement applies to the default channel. If a START SLAVE\nstatement does not have a channel defined when using multiple channels,\nthis statement starts the specified threads for all channels. This\nstatement is disallowed for the group_replication_recovery channel. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nMySQL supports pluggable user-password authentication with START SLAVE\nwith the USER, PASSWORD, DEFAULT_AUTH and PLUGIN_DIR options, as\ndescribed in the following list:\n\no USER: User name. Cannot be set to an empty or null string, or left\n  unset if PASSWORD is used.\n\no PASSWORD: Password.\n\no DEFAULT_AUTH: Name of plugin; default is MySQL native authentication.\n\no PLUGIN_DIR: Location of plugin.\n\nYou cannot use the SQL_THREAD option when specifying any of USER,\nPASSWORD, DEFAULT_AUTH, or PLUGIN_DIR, unless the IO_THREAD option is\nalso provided.\n\nSee\nhttps://dev.mysql.com/doc/refman/5.7/en/pluggable-authentication.html,\nfor more information.\n\nIf an insecure connection is used with any these options, the server\nissues the warning Sending passwords in plain text without SSL/TLS is\nextremely insecure.\n\nSTART SLAVE ... UNTIL supports two additional options for use with\nglobal transaction identifiers (GTIDs) (see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html). Each\nof these takes a set of one or more global transaction identifiers\ngtid_set as an argument (see\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-gtids-concepts.html\n#replication-gtids-concepts-gtid-sets, for more information).\n\nWhen no thread_type is specified, START SLAVE UNTIL SQL_BEFORE_GTIDS\ncauses the slave SQL thread to process transactions until it has\nreached the first transaction whose GTID is listed in the gtid_set.\nSTART SLAVE UNTIL SQL_AFTER_GTIDS causes the slave threads to process\nall transactions until the last transaction in the gtid_set has been\nprocessed by both threads. In other words, START SLAVE UNTIL\nSQL_BEFORE_GTIDS causes the slave SQL thread to process all\ntransactions occurring before the first GTID in the gtid_set is\nreached, and START SLAVE UNTIL SQL_AFTER_GTIDS causes the slave threads\nto handle all transactions, including those whose GTIDs are found in\ngtid_set, until each has encountered a transaction whose GTID is not\npart of the set. SQL_BEFORE_GTIDS and SQL_AFTER_GTIDS each support the\nSQL_THREAD and IO_THREAD options, although using IO_THREAD with them\ncurrently has no effect.\n\nFor example, START SLAVE SQL_THREAD UNTIL SQL_BEFORE_GTIDS =\n3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56 causes the slave SQL thread\nto process all transactions originating from the master whose\nserver_uuid is 3E11FA47-71CA-11E1-9E33-C80AA9429562 until it encounters\nthe transaction having sequence number 11; it then stops without\nprocessing this transaction. In other words, all transactions up to and\nincluding the transaction with sequence number 10 are processed.\nExecuting START SLAVE SQL_THREAD UNTIL SQL_AFTER_GTIDS =\n3E11FA47-71CA-11E1-9E33-C80AA9429562:11-56, on the other hand, would\ncause the slave SQL thread to obtain all transactions just mentioned\nfrom the master, including all of the transactions having the sequence\nnumbers 11 through 56, and then to stop without processing any\nadditional transactions; that is, the transaction having sequence\nnumber 56 would be the last transaction fetched by the slave SQL\nthread.\n\nPrior to MySQL 5.7.3, SQL_AFTER_GTIDS did not stop the slave once the\nindicated transaction was completed, but waited until another GTID\nevent was received (Bug #14767986).\n\nWhen using a multithreaded slave, there is a chance of gaps in the\nsequence of transactions that have been executed from the relay log in\nthe following cases:\n\no killing the coordinator thread\n\no after an error occurs in the worker threads\n\no mysqld shuts down unexpectedly\n\nUse the START SLAVE UNTIL SQL_AFTER_MTS_GAPS statement to cause a\nmultithreaded slave\'s worker threads to only run until no more gaps are\nfound in the relay log, and then to stop. This statement can take an\nSQL_THREAD option, but the effects of the statement remain unchanged.\nIt has no effect on the slave I/O thread (and cannot be used with the\nIO_THREAD option).\n\nIssuing START SLAVE on a multithreaded slave with gaps in the sequence\nof transactions executed from the relay log generates a warning. In\nsuch a situation, the solution is to use START SLAVE UNTIL\nSQL_AFTER_MTS_GAPS, then issue RESET SLAVE to remove any remaining\nrelay logs. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-features-transactio\nn-inconsistencies.html for more information.\n\nTo change a failed multithreaded slave to single-threaded mode, you can\nissue the following series of statements, in the order shown:\n\nSTART SLAVE UNTIL SQL_AFTER_MTS_GAPS;\n\nSET @@GLOBAL.slave_parallel_workers = 0;\n\nSTART SLAVE SQL_THREAD;\n\n*Note*:\n\nIt is possible to view the entire text of a running START SLAVE ...\nstatement, including any USER or PASSWORD values used, in the output of\nSHOW PROCESSLIST. This is also true for the text of a running CHANGE\nMASTER TO statement, including any values it employs for MASTER_USER or\nMASTER_PASSWORD.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/start-slave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/start-slave.html'),(558,'STOP SLAVE',35,'Syntax:\nSTOP SLAVE [thread_types] [channel_option]\n\nthread_types:\n    [thread_type [, thread_type] ... ]\n\nthread_type: IO_THREAD | SQL_THREAD\n\nchannel_option:\n    FOR CHANNEL channel\n\nStops the slave threads. STOP SLAVE requires the\nREPLICATION_SLAVE_ADMIN\n(https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_\nreplication-slave-admin) or SUPER privilege. Recommended best practice\nis to execute STOP SLAVE on the slave before stopping the slave server\n(see https://dev.mysql.com/doc/refman/5.7/en/server-shutdown.html, for\nmore information).\n\nWhen using the row-based logging format: You should execute STOP SLAVE\nor STOP SLAVE SQL_THREAD on the slave prior to shutting down the slave\nserver if you are replicating any tables that use a nontransactional\nstorage engine (see the Note later in this section).\n\nLike START SLAVE, this statement may be used with the IO_THREAD and\nSQL_THREAD options to name the thread or threads to be stopped.\n\nSTOP SLAVE causes an implicit commit of an ongoing transaction. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nFrom MySQL 5.7, gtid_next must be set to AUTOMATIC before issuing this\nstatement (Bug #16062608).\n\nFrom MySQL 5.7, you can control how long STOP SLAVE waits before timing\nout by setting the rpl_stop_slave_timeout system variable. This can be\nused to avoid deadlocks between STOP SLAVE and other slave SQL\nstatements using different client connections to the slave. When the\ntimeout value is reached, the issuing client returns an error message\nand stops waiting, but the STOP SLAVE instruction remains in effect.\nOnce the slave threads are no longer busy, the STOP SLAVE statement is\nexecuted and the slave stops. (Bug #16856735)\n\nSome CHANGE MASTER TO statements are allowed while the slave is\nrunning, depending on the states of the slave SQL and I/O threads.\nHowever, using STOP SLAVE prior to executing CHANGE MASTER TO in such\ncases is still supported. See [HELP CHANGE MASTER TO], and\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions-switch.ht\nml, for more information.\n\nThe optional FOR CHANNEL channel clause enables you to name which\nreplication channel the statement applies to. Providing a FOR CHANNEL\nchannel clause applies the STOP SLAVE statement to a specific\nreplication channel. If no channel is named and no extra channels\nexist, the statement applies to the default channel. If a STOP SLAVE\nstatement does not name a channel when using multiple channels, this\nstatement stops the specified threads for all channels. This statement\ncannot be used with the group_replication_recovery channel. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-channels.html for\nmore information.\n\nWhen using statement-based replication: changing the master while it\nhas open temporary tables is potentially unsafe. This is one of the\nreasons why statement-based replication of temporary tables is not\nrecommended. You can find out whether there are any temporary tables on\nthe slave by checking the value of Slave_open_temp_tables; when using\nstatement-based replication, this value should be 0 before executing\nCHANGE MASTER TO. If there are any temporary tables open on the slave,\nissuing a CHANGE MASTER TO statement after issuing a STOP SLAVE causes\nan ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO warning.\n\nWhen using a multithreaded slave (slave_parallel_workers is a nonzero\nvalue), any gaps in the sequence of transactions executed from the\nrelay log are closed as part of stopping the worker threads. If the\nslave is stopped unexpectedly (for example due to an error in a worker\nthread, or another thread issuing KILL) while a STOP SLAVE statement is\nexecuting, the sequence of executed transactions from the relay log may\nbecome inconsistent. See\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-features-transactio\nn-inconsistencies.html, for more information.\n\nIf the current replication event group has modified one or more\nnontransactional tables, STOP SLAVE waits for up to 60 seconds for the\nevent group to complete, unless you issue a KILL QUERY or KILL\nCONNECTION statement for the slave SQL thread. If the event group\nremains incomplete after the timeout, an error message is logged.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/stop-slave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/stop-slave.html'),(559,'PREPARE',35,'Syntax:\nPREPARE stmt_name FROM preparable_stmt\n\nThe PREPARE statement prepares a SQL statement and assigns it a name,\nstmt_name, by which to refer to the statement later. The prepared\nstatement is executed with EXECUTE and released with DEALLOCATE\nPREPARE. For examples, see\nhttps://dev.mysql.com/doc/refman/5.7/en/sql-syntax-prepared-statements.\nhtml.\n\nStatement names are not case-sensitive. preparable_stmt is either a\nstring literal or a user variable that contains the text of the SQL\nstatement. The text must represent a single statement, not multiple\nstatements. Within the statement, ? characters can be used as parameter\nmarkers to indicate where data values are to be bound to the query\nlater when you execute it. The ? characters should not be enclosed\nwithin quotation marks, even if you intend to bind them to string\nvalues. Parameter markers can be used only where data values should\nappear, not for SQL keywords, identifiers, and so forth.\n\nIf a prepared statement with the given name already exists, it is\ndeallocated implicitly before the new statement is prepared. This means\nthat if the new statement contains an error and cannot be prepared, an\nerror is returned and no statement with the given name exists.\n\nThe scope of a prepared statement is the session within which it is\ncreated, which as several implications:\n\no A prepared statement created in one session is not available to other\n  sessions.\n\no When a session ends, whether normally or abnormally, its prepared\n  statements no longer exist. If auto-reconnect is enabled, the client\n  is not notified that the connection was lost. For this reason,\n  clients may wish to disable auto-reconnect. See\n  https://dev.mysql.com/doc/refman/5.7/en/c-api-auto-reconnect.html.\n\no A prepared statement created within a stored program continues to\n  exist after the program finishes executing and can be executed\n  outside the program later.\n\no A statement prepared in stored program context cannot refer to stored\n  procedure or function parameters or local variables because they go\n  out of scope when the program ends and would be unavailable were the\n  statement to be executed later outside the program. As a workaround,\n  refer instead to user-defined variables, which also have session\n  scope; see\n  https://dev.mysql.com/doc/refman/5.7/en/user-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/prepare.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/prepare.html'),(560,'EXECUTE STATEMENT',35,'Syntax:\nEXECUTE stmt_name\n    [USING @var_name [, @var_name] ...]\n\nAfter preparing a statement with PREPARE, you execute it with an\nEXECUTE statement that refers to the prepared statement name. If the\nprepared statement contains any parameter markers, you must supply a\nUSING clause that lists user variables containing the values to be\nbound to the parameters. Parameter values can be supplied only by user\nvariables, and the USING clause must name exactly as many variables as\nthe number of parameter markers in the statement.\n\nYou can execute a given prepared statement multiple times, passing\ndifferent variables to it or setting the variables to different values\nbefore each execution.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/execute.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/execute.html'),(561,'DEALLOCATE PREPARE',35,'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error. If too many prepared statements are created and\nnot deallocated by either the DEALLOCATE PREPARE statement or the end\nof the session, you might encounter the upper limit enforced by the\nmax_prepared_stmt_count system variable.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html'),(562,'DROP PREPARE',35,'Syntax:\n{DEALLOCATE | DROP} PREPARE stmt_name\n\nTo deallocate a prepared statement produced with PREPARE, use a\nDEALLOCATE PREPARE statement that refers to the prepared statement\nname. Attempting to execute a prepared statement after deallocating it\nresults in an error. If too many prepared statements are created and\nnot deallocated by either the DEALLOCATE PREPARE statement or the end\nof the session, you might encounter the upper limit enforced by the\nmax_prepared_stmt_count system variable.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/deallocate-prepare.html'),(563,'BEGIN END',36,'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\nBEGIN ... END syntax is used for writing compound statements, which can\nappear within stored programs (stored procedures and functions,\ntriggers, and events). A compound statement can contain multiple\nstatements, enclosed by the BEGIN and END keywords. statement_list\nrepresents a list of one or more statements, each terminated by a\nsemicolon (;) statement delimiter. The statement_list itself is\noptional, so the empty compound statement (BEGIN END) is legal.\n\nBEGIN ... END blocks can be nested.\n\nUse of multiple statements requires that a client is able to send\nstatement strings containing the ; statement delimiter. In the mysql\ncommand-line client, this is handled with the delimiter command.\nChanging the ; end-of-statement delimiter (for example, to //) permit ;\nto be used in a program body. For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-programs-defining.html.\n\nA BEGIN ... END block can be labeled. See [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/begin-end.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/begin-end.html'),(564,'LABELS',36,'Syntax:\n[begin_label:] BEGIN\n    [statement_list]\nEND [end_label]\n\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nLabels are permitted for BEGIN ... END blocks and for the LOOP, REPEAT,\nand WHILE statements. Label use for those statements follows these\nrules:\n\no begin_label must be followed by a colon.\n\no begin_label can be given without end_label. If end_label is present,\n  it must be the same as begin_label.\n\no end_label cannot be given without begin_label.\n\no Labels at the same nesting level must be distinct.\n\no Labels can be up to 16 characters long.\n\nTo refer to a label within the labeled construct, use an ITERATE or\nLEAVE statement. The following example uses those statements to\ncontinue iterating or terminate the loop:\n\nCREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN ITERATE label1; END IF;\n    LEAVE label1;\n  END LOOP label1;\nEND;\n\nThe scope of a block label does not include the code for handlers\ndeclared within the block. For details, see [HELP DECLARE HANDLER].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/statement-labels.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/statement-labels.html'),(565,'DECLARE VARIABLE',36,'Syntax:\nDECLARE var_name [, var_name] ... type [DEFAULT value]\n\nThis statement declares local variables within stored programs. To\nprovide a default value for a variable, include a DEFAULT clause. The\nvalue can be specified as an expression; it need not be a constant. If\nthe DEFAULT clause is missing, the initial value is NULL.\n\nLocal variables are treated like stored routine parameters with respect\nto data type and overflow checking. See [HELP CREATE PROCEDURE].\n\nVariable declarations must appear before cursor or handler\ndeclarations.\n\nLocal variable names are not case-sensitive. Permissible characters and\nquoting rules are the same as for other identifiers, as described in\nhttps://dev.mysql.com/doc/refman/5.7/en/identifiers.html.\n\nThe scope of a local variable is the BEGIN ... END block within which\nit is declared. The variable can be referred to in blocks nested within\nthe declaring block, except those blocks that declare a variable with\nthe same name.\n\nFor examples of variable declarations, see\nhttps://dev.mysql.com/doc/refman/5.7/en/local-variable-scope.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-local-variable.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/declare-local-variable.html'),(566,'CASE STATEMENT',36,'Syntax:\nCASE case_value\n    WHEN when_value THEN statement_list\n    [WHEN when_value THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nOr:\n\nCASE\n    WHEN search_condition THEN statement_list\n    [WHEN search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND CASE\n\nThe CASE statement for stored programs implements a complex conditional\nconstruct.\n\n*Note*:\n\nThere is also a CASE expr, which differs from the CASE statement\ndescribed here. See\nhttps://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html.\nThe CASE statement cannot have an ELSE NULL clause, and it is\nterminated with END CASE instead of END.\n\nFor the first syntax, case_value is an expression. This value is\ncompared to the when_value expression in each WHEN clause until one of\nthem is equal. When an equal when_value is found, the corresponding\nTHEN clause statement_list executes. If no when_value is equal, the\nELSE clause statement_list executes, if there is one.\n\nThis syntax cannot be used to test for equality with NULL because NULL\n= NULL is false. See\nhttps://dev.mysql.com/doc/refman/5.7/en/working-with-null.html.\n\nFor the second syntax, each WHEN clause search_condition expression is\nevaluated until one is true, at which point its corresponding THEN\nclause statement_list executes. If no search_condition is equal, the\nELSE clause statement_list executes, if there is one.\n\nIf no when_value or search_condition matches the value tested and the\nCASE statement contains no ELSE clause, a Case not found for CASE\nstatement error results.\n\nEach statement_list consists of one or more SQL statements; an empty\nstatement_list is not permitted.\n\nTo handle situations where no value is matched by any WHEN clause, use\nan ELSE containing an empty BEGIN ... END block, as shown in this\nexample. (The indentation used here in the ELSE clause is for purposes\nof clarity only, and is not otherwise significant.)\n\nDELIMITER |\n\nCREATE PROCEDURE p()\n  BEGIN\n    DECLARE v INT DEFAULT 1;\n\n    CASE v\n      WHEN 2 THEN SELECT v;\n      WHEN 3 THEN SELECT 0;\n      ELSE\n        BEGIN\n        END;\n    END CASE;\n  END;\n  |\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/case.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/case.html'),(567,'IF STATEMENT',36,'Syntax:\nIF search_condition THEN statement_list\n    [ELSEIF search_condition THEN statement_list] ...\n    [ELSE statement_list]\nEND IF\n\nThe IF statement for stored programs implements a basic conditional\nconstruct.\n\n*Note*:\n\nThere is also an IF() function, which differs from the IF statement\ndescribed here. See\nhttps://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html.\nThe IF statement can have THEN, ELSE, and ELSEIF clauses, and it is\nterminated with END IF.\n\nIf a given search_condition evaluates to true, the corresponding THEN\nor ELSEIF clause statement_list executes. If no search_condition\nmatches, the ELSE clause statement_list executes.\n\nEach statement_list consists of one or more SQL statements; an empty\nstatement_list is not permitted.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/if.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/if.html'),(568,'ITERATE',36,'Syntax:\nITERATE label\n\nITERATE can appear only within LOOP, REPEAT, and WHILE statements.\nITERATE means \"start the loop again.\"\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/iterate.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/iterate.html'),(569,'LEAVE',36,'Syntax:\nLEAVE label\n\nThis statement is used to exit the flow control construct that has the\ngiven label. If the label is for the outermost stored program block,\nLEAVE exits the program.\n\nLEAVE can be used within BEGIN ... END or loop constructs (LOOP,\nREPEAT, WHILE).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/leave.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/leave.html'),(570,'LOOP',36,'Syntax:\n[begin_label:] LOOP\n    statement_list\nEND LOOP [end_label]\n\nLOOP implements a simple loop construct, enabling repeated execution of\nthe statement list, which consists of one or more statements, each\nterminated by a semicolon (;) statement delimiter. The statements\nwithin the loop are repeated until the loop is terminated. Usually,\nthis is accomplished with a LEAVE statement. Within a stored function,\nRETURN can also be used, which exits the function entirely.\n\nNeglecting to include a loop-termination statement results in an\ninfinite loop.\n\nA LOOP statement can be labeled. For the rules regarding label use, see\n[HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/loop.html\n\n','CREATE PROCEDURE doiterate(p1 INT)\nBEGIN\n  label1: LOOP\n    SET p1 = p1 + 1;\n    IF p1 < 10 THEN\n      ITERATE label1;\n    END IF;\n    LEAVE label1;\n  END LOOP label1;\n  SET @x = p1;\nEND;\n','https://dev.mysql.com/doc/refman/5.7/en/loop.html'),(571,'REPEAT LOOP',36,'Syntax:\n[begin_label:] REPEAT\n    statement_list\nUNTIL search_condition\nEND REPEAT [end_label]\n\nThe statement list within a REPEAT statement is repeated until the\nsearch_condition expression is true. Thus, a REPEAT always enters the\nloop at least once. statement_list consists of one or more statements,\neach terminated by a semicolon (;) statement delimiter.\n\nA REPEAT statement can be labeled. For the rules regarding label use,\nsee [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/repeat.html\n\n','mysql> delimiter //\n\nmysql> CREATE PROCEDURE dorepeat(p1 INT)\n       BEGIN\n         SET @x = 0;\n         REPEAT\n           SET @x = @x + 1;\n         UNTIL @x > p1 END REPEAT;\n       END\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL dorepeat(1000)//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n+------+\n| @x   |\n+------+\n| 1001 |\n+------+\n1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/repeat.html'),(572,'RETURN',36,'Syntax:\nRETURN expr\n\nThe RETURN statement terminates execution of a stored function and\nreturns the value expr to the function caller. There must be at least\none RETURN statement in a stored function. There may be more than one\nif the function has multiple exit points.\n\nThis statement is not used in stored procedures, triggers, or events.\nThe LEAVE statement can be used to exit a stored program of those\ntypes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/return.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/return.html'),(573,'WHILE',36,'Syntax:\n[begin_label:] WHILE search_condition DO\n    statement_list\nEND WHILE [end_label]\n\nThe statement list within a WHILE statement is repeated as long as the\nsearch_condition expression is true. statement_list consists of one or\nmore SQL statements, each terminated by a semicolon (;) statement\ndelimiter.\n\nA WHILE statement can be labeled. For the rules regarding label use,\nsee [HELP labels].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/while.html\n\n','CREATE PROCEDURE dowhile()\nBEGIN\n  DECLARE v1 INT DEFAULT 5;\n\n  WHILE v1 > 0 DO\n    ...\n    SET v1 = v1 - 1;\n  END WHILE;\nEND;\n','https://dev.mysql.com/doc/refman/5.7/en/while.html'),(574,'CLOSE',36,'Syntax:\nCLOSE cursor_name\n\nThis statement closes a previously opened cursor. For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nAn error occurs if the cursor is not open.\n\nIf not closed explicitly, a cursor is closed at the end of the BEGIN\n... END block in which it was declared.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/close.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/close.html'),(575,'DECLARE CURSOR',36,'Syntax:\nDECLARE cursor_name CURSOR FOR select_statement\n\nThis statement declares a cursor and associates it with a SELECT\nstatement that retrieves the rows to be traversed by the cursor. To\nfetch the rows later, use a FETCH statement. The number of columns\nretrieved by the SELECT statement must match the number of output\nvariables specified in the FETCH statement.\n\nThe SELECT statement cannot have an INTO clause.\n\nCursor declarations must appear before handler declarations and after\nvariable and condition declarations.\n\nA stored program may contain multiple cursor declarations, but each\ncursor declared in a given block must have a unique name. For an\nexample, see https://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nFor information available through SHOW statements, it is possible in\nmany cases to obtain equivalent information by using a cursor with an\nINFORMATION_SCHEMA table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-cursor.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/declare-cursor.html'),(576,'FETCH',36,'Syntax:\nFETCH [[NEXT] FROM] cursor_name INTO var_name [, var_name] ...\n\nThis statement fetches the next row for the SELECT statement associated\nwith the specified cursor (which must be open), and advances the cursor\npointer. If a row exists, the fetched columns are stored in the named\nvariables. The number of columns retrieved by the SELECT statement must\nmatch the number of output variables specified in the FETCH statement.\n\nIf no more rows are available, a No Data condition occurs with SQLSTATE\nvalue \'02000\'. To detect this condition, you can set up a handler for\nit (or for a NOT FOUND condition). For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nBe aware that another operation, such as a SELECT or another FETCH, may\nalso cause the handler to execute by raising the same condition. If it\nis necessary to distinguish which operation raised the condition, place\nthe operation within its own BEGIN ... END block so that it can be\nassociated with its own handler.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/fetch.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/fetch.html'),(577,'OPEN',36,'Syntax:\nOPEN cursor_name\n\nThis statement opens a previously declared cursor. For an example, see\nhttps://dev.mysql.com/doc/refman/5.7/en/cursors.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/open.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/open.html'),(578,'DECLARE CONDITION',36,'Syntax:\nDECLARE condition_name CONDITION FOR condition_value\n\ncondition_value: {\n    mysql_error_code\n  | SQLSTATE [VALUE] sqlstate_value\n}\n\nThe DECLARE ... CONDITION statement declares a named error condition,\nassociating a name with a condition that needs specific handling. The\nname can be referred to in a subsequent DECLARE ... HANDLER statement\n(see [HELP DECLARE HANDLER]).\n\nCondition declarations must appear before cursor or handler\ndeclarations.\n\nThe condition_value for DECLARE ... CONDITION indicates the specific\ncondition or class of conditions to associate with the condition name.\nIt can take the following forms:\n\no mysql_error_code: An integer literal indicating a MySQL error code.\n\n  Do not use MySQL error code 0 because that indicates success rather\n  than an error condition. For a list of MySQL error codes, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\no SQLSTATE [VALUE] sqlstate_value: A 5-character string literal\n  indicating an SQLSTATE value.\n\n  Do not use SQLSTATE values that begin with \'00\' because those\n  indicate success rather than an error condition. For a list of\n  SQLSTATE values, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\nCondition names referred to in SIGNAL or use RESIGNAL statements must\nbe associated with SQLSTATE values, not MySQL error codes.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-condition.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/declare-condition.html'),(579,'DECLARE HANDLER',36,'Syntax:\nDECLARE handler_action HANDLER\n    FOR condition_value [, condition_value] ...\n    statement\n\nhandler_action: {\n    CONTINUE\n  | EXIT\n  | UNDO\n}\n\ncondition_value: {\n    mysql_error_code\n  | SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n  | SQLWARNING\n  | NOT FOUND\n  | SQLEXCEPTION\n}\n\nThe DECLARE ... HANDLER statement specifies a handler that deals with\none or more conditions. If one of these conditions occurs, the\nspecified statement executes. statement can be a simple statement such\nas SET var_name = value, or a compound statement written using BEGIN\nand END (see [HELP BEGIN END]).\n\nHandler declarations must appear after variable or condition\ndeclarations.\n\nThe handler_action value indicates what action the handler takes after\nexecution of the handler statement:\n\no CONTINUE: Execution of the current program continues.\n\no EXIT: Execution terminates for the BEGIN ... END compound statement\n  in which the handler is declared. This is true even if the condition\n  occurs in an inner block.\n\no UNDO: Not supported.\n\nThe condition_value for DECLARE ... HANDLER indicates the specific\ncondition or class of conditions that activates the handler. It can\ntake the following forms:\n\no mysql_error_code: An integer literal indicating a MySQL error code,\n  such as 1051 to specify \"unknown table\":\n\nDECLARE CONTINUE HANDLER FOR 1051\n  BEGIN\n    -- body of handler\n  END;\n\n  Do not use MySQL error code 0 because that indicates success rather\n  than an error condition. For a list of MySQL error codes, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\no SQLSTATE [VALUE] sqlstate_value: A 5-character string literal\n  indicating an SQLSTATE value, such as \'42S01\' to specify \"unknown\n  table\":\n\nDECLARE CONTINUE HANDLER FOR SQLSTATE \'42S02\'\n  BEGIN\n    -- body of handler\n  END;\n\n  Do not use SQLSTATE values that begin with \'00\' because those\n  indicate success rather than an error condition. For a list of\n  SQLSTATE values, see\n  https://dev.mysql.com/doc/refman/5.7/en/server-error-reference.html.\n\no condition_name: A condition name previously specified with DECLARE\n  ... CONDITION. A condition name can be associated with a MySQL error\n  code or SQLSTATE value. See [HELP DECLARE CONDITION].\n\no SQLWARNING: Shorthand for the class of SQLSTATE values that begin\n  with \'01\'.\n\nDECLARE CONTINUE HANDLER FOR SQLWARNING\n  BEGIN\n    -- body of handler\n  END;\n\no NOT FOUND: Shorthand for the class of SQLSTATE values that begin with\n  \'02\'. This is relevant within the context of cursors and is used to\n  control what happens when a cursor reaches the end of a data set. If\n  no more rows are available, a No Data condition occurs with SQLSTATE\n  value \'02000\'. To detect this condition, you can set up a handler for\n  it or for a NOT FOUND condition.\n\nDECLARE CONTINUE HANDLER FOR NOT FOUND\n  BEGIN\n    -- body of handler\n  END;\n\n  For another example, see\n  https://dev.mysql.com/doc/refman/5.7/en/cursors.html. The NOT FOUND\n  condition also occurs for SELECT ... INTO var_list statements that\n  retrieve no rows.\n\no SQLEXCEPTION: Shorthand for the class of SQLSTATE values that do not\n  begin with \'00\', \'01\', or \'02\'.\n\nDECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n  BEGIN\n    -- body of handler\n  END;\n\nFor information about how the server chooses handlers when a condition\noccurs, see https://dev.mysql.com/doc/refman/5.7/en/handler-scope.html.\n\nIf a condition occurs for which no handler has been declared, the\naction taken depends on the condition class:\n\no For SQLEXCEPTION conditions, the stored program terminates at the\n  statement that raised the condition, as if there were an EXIT\n  handler. If the program was called by another stored program, the\n  calling program handles the condition using the handler selection\n  rules applied to its own handlers.\n\no For SQLWARNING conditions, the program continues executing, as if\n  there were a CONTINUE handler.\n\no For NOT FOUND conditions, if the condition was raised normally, the\n  action is CONTINUE. If it was raised by SIGNAL or RESIGNAL, the\n  action is EXIT.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/declare-handler.html\n\n','mysql> CREATE TABLE test.t (s1 INT, PRIMARY KEY (s1));\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> delimiter //\n\nmysql> CREATE PROCEDURE handlerdemo ()\n       BEGIN\n         DECLARE CONTINUE HANDLER FOR SQLSTATE \'23000\' SET @x2 = 1;\n         SET @x = 1;\n         INSERT INTO test.t VALUES (1);\n         SET @x = 2;\n         INSERT INTO test.t VALUES (1);\n         SET @x = 3;\n       END;\n       //\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> CALL handlerdemo()//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SELECT @x//\n    +------+\n    | @x   |\n    +------+\n    | 3    |\n    +------+\n    1 row in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/declare-handler.html'),(580,'GET DIAGNOSTICS',36,'Syntax:\nGET [CURRENT | STACKED] DIAGNOSTICS\n{\n    statement_information_item\n    [, statement_information_item] ...\n  | CONDITION condition_number\n    condition_information_item\n    [, condition_information_item] ...\n}\n\nstatement_information_item:\n    target = statement_information_item_name\n\ncondition_information_item:\n    target = condition_information_item_name\n\nstatement_information_item_name:\n    NUMBER\n  | ROW_COUNT\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | RETURNED_SQLSTATE\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_number, target:\n    (see following discussion)\n\nSQL statements produce diagnostic information that populates the\ndiagnostics area. The GET DIAGNOSTICS statement enables applications to\ninspect this information. (You can also use SHOW WARNINGS or SHOW\nERRORS to see conditions or errors.)\n\nNo special privileges are required to execute GET DIAGNOSTICS.\n\nThe keyword CURRENT means to retrieve information from the current\ndiagnostics area. The keyword STACKED means to retrieve information\nfrom the second diagnostics area, which is available only if the\ncurrent context is a condition handler. If neither keyword is given,\nthe default is to use the current diagnostics area.\n\nThe GET DIAGNOSTICS statement is typically used in a handler within a\nstored program. It is a MySQL extension that GET [CURRENT] DIAGNOSTICS\nis permitted outside handler context to check the execution of any SQL\nstatement. For example, if you invoke the mysql client program, you can\nenter these statements at the prompt:\n\nmysql> DROP TABLE test.no_such_table;\nERROR 1051 (42S02): Unknown table \'test.no_such_table\'\nmysql> GET DIAGNOSTICS CONDITION 1\n         @p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;\nmysql> SELECT @p1, @p2;\n+-------+------------------------------------+\n| @p1   | @p2                                |\n+-------+------------------------------------+\n| 42S02 | Unknown table \'test.no_such_table\' |\n+-------+------------------------------------+\n\nThis extension applies only to the current diagnostics area. It does\nnot apply to the second diagnostics area because GET STACKED\nDIAGNOSTICS is permitted only if the current context is a condition\nhandler. If that is not the case, a GET STACKED DIAGNOSTICS when\nhandler not active error occurs.\n\nFor a description of the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html. Briefly,\nit contains two kinds of information:\n\no Statement information, such as the number of conditions that occurred\n  or the affected-rows count.\n\no Condition information, such as the error code and message. If a\n  statement raises multiple conditions, this part of the diagnostics\n  area has a condition area for each one. If a statement raises no\n  conditions, this part of the diagnostics area is empty.\n\nFor a statement that produces three conditions, the diagnostics area\ncontains statement and condition information like this:\n\nStatement information:\n  row count\n  ... other statement information items ...\nCondition area list:\n  Condition area 1:\n    error code for condition 1\n    error message for condition 1\n    ... other condition information items ...\n  Condition area 2:\n    error code for condition 2:\n    error message for condition 2\n    ... other condition information items ...\n  Condition area 3:\n    error code for condition 3\n    error message for condition 3\n    ... other condition information items ...\n\nGET DIAGNOSTICS can obtain either statement or condition information,\nbut not both in the same statement:\n\no To obtain statement information, retrieve the desired statement items\n  into target variables. This instance of GET DIAGNOSTICS assigns the\n  number of available conditions and the rows-affected count to the\n  user variables @p1 and @p2:\n\nGET DIAGNOSTICS @p1 = NUMBER, @p2 = ROW_COUNT;\n\no To obtain condition information, specify the condition number and\n  retrieve the desired condition items into target variables. This\n  instance of GET DIAGNOSTICS assigns the SQLSTATE value and error\n  message to the user variables @p3 and @p4:\n\nGET DIAGNOSTICS CONDITION 1\n  @p3 = RETURNED_SQLSTATE, @p4 = MESSAGE_TEXT;\n\nThe retrieval list specifies one or more target = item_name\nassignments, separated by commas. Each assignment names a target\nvariable and either a statement_information_item_name or\ncondition_information_item_name designator, depending on whether the\nstatement retrieves statement or condition information.\n\nValid target designators for storing item information can be stored\nprocedure or function parameters, stored program local variables\ndeclared with DECLARE, or user-defined variables.\n\nValid condition_number designators can be stored procedure or function\nparameters, stored program local variables declared with DECLARE,\nuser-defined variables, system variables, or literals. A character\nliteral may include a _charset introducer. A warning occurs if the\ncondition number is not in the range from 1 to the number of condition\nareas that have information. In this case, the warning is added to the\ndiagnostics area without clearing it.\n\nWhen a condition occurs, MySQL does not populate all condition items\nrecognized by GET DIAGNOSTICS. For example:\n\nmysql> GET DIAGNOSTICS CONDITION 1\n         @p5 = SCHEMA_NAME, @p6 = TABLE_NAME;\nmysql> SELECT @p5, @p6;\n+------+------+\n| @p5  | @p6  |\n+------+------+\n|      |      |\n+------+------+\n\nIn standard SQL, if there are multiple conditions, the first condition\nrelates to the SQLSTATE value returned for the previous SQL statement.\nIn MySQL, this is not guaranteed. To get the main error, you cannot do\nthis:\n\nGET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO;\n\nInstead, retrieve the condition count first, then use it to specify\nwhich condition number to inspect:\n\nGET DIAGNOSTICS @cno = NUMBER;\nGET DIAGNOSTICS CONDITION @cno @errno = MYSQL_ERRNO;\n\nFor information about permissible statement and condition information\nitems, and which ones are populated when a condition occurs, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html#diagnosti\ncs-area-information-items.\n\nHere is an example that uses GET DIAGNOSTICS and an exception handler\nin stored procedure context to assess the outcome of an insert\noperation. If the insert was successful, the procedure uses GET\nDIAGNOSTICS to get the rows-affected count. This shows that you can use\nGET DIAGNOSTICS multiple times to retrieve information about a\nstatement as long as the current diagnostics area has not been cleared.\n\nCREATE PROCEDURE do_insert(value INT)\nBEGIN\n  -- Declare variables to hold diagnostics area information\n  DECLARE code CHAR(5) DEFAULT \'00000\';\n  DECLARE msg TEXT;\n  DECLARE rows INT;\n  DECLARE result TEXT;\n  -- Declare exception handler for failed insert\n  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n    BEGIN\n      GET DIAGNOSTICS CONDITION 1\n        code = RETURNED_SQLSTATE, msg = MESSAGE_TEXT;\n    END;\n\n  -- Perform the insert\n  INSERT INTO t1 (int_col) VALUES(value);\n  -- Check whether the insert was successful\n  IF code = \'00000\' THEN\n    GET DIAGNOSTICS rows = ROW_COUNT;\n    SET result = CONCAT(\'insert succeeded, row count = \',rows);\n  ELSE\n    SET result = CONCAT(\'insert failed, error = \',code,\', message = \',msg);\n  END IF;\n  -- Say what happened\n  SELECT result;\nEND;\n\nSuppose that t1.int_col is an integer column that is declared as NOT\nNULL. The procedure produces these results when invoked to insert\nnon-NULL and NULL values, respectively:\n\nmysql> CALL do_insert(1);\n+---------------------------------+\n| result                          |\n+---------------------------------+\n| insert succeeded, row count = 1 |\n+---------------------------------+\n\nmysql> CALL do_insert(NULL);\n+-------------------------------------------------------------------------+\n| result                                                                  |\n+-------------------------------------------------------------------------+\n| insert failed, error = 23000, message = Column \'int_col\' cannot be null |\n+-------------------------------------------------------------------------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/get-diagnostics.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/get-diagnostics.html'),(581,'RESIGNAL',36,'Syntax:\nRESIGNAL [condition_value]\n    [SET signal_information_item\n    [, signal_information_item] ...]\n\ncondition_value: {\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n}\n\nsignal_information_item:\n    condition_information_item_name = simple_value_specification\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_name, simple_value_specification:\n    (see following discussion)\n\nRESIGNAL passes on the error condition information that is available\nduring execution of a condition handler within a compound statement\ninside a stored procedure or function, trigger, or event. RESIGNAL may\nchange some or all information before passing it on. RESIGNAL is\nrelated to SIGNAL, but instead of originating a condition as SIGNAL\ndoes, RESIGNAL relays existing condition information, possibly after\nmodifying it.\n\nRESIGNAL makes it possible to both handle an error and return the error\ninformation. Otherwise, by executing an SQL statement within the\nhandler, information that caused the handler\'s activation is destroyed.\nRESIGNAL also can make some procedures shorter if a given handler can\nhandle part of a situation, then pass the condition \"up the line\" to\nanother handler.\n\nNo privileges are required to execute the RESIGNAL statement.\n\nAll forms of RESIGNAL require that the current context be a condition\nhandler. Otherwise, RESIGNAL is illegal and a RESIGNAL when handler not\nactive error occurs.\n\nTo retrieve information from the diagnostics area, use the GET\nDIAGNOSTICS statement (see [HELP GET DIAGNOSTICS]). For information\nabout the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/resignal.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/resignal.html'),(582,'SIGNAL',36,'Syntax:\nSIGNAL condition_value\n    [SET signal_information_item\n    [, signal_information_item] ...]\n\ncondition_value: {\n    SQLSTATE [VALUE] sqlstate_value\n  | condition_name\n}\n\nsignal_information_item:\n    condition_information_item_name = simple_value_specification\n\ncondition_information_item_name: {\n    CLASS_ORIGIN\n  | SUBCLASS_ORIGIN\n  | MESSAGE_TEXT\n  | MYSQL_ERRNO\n  | CONSTRAINT_CATALOG\n  | CONSTRAINT_SCHEMA\n  | CONSTRAINT_NAME\n  | CATALOG_NAME\n  | SCHEMA_NAME\n  | TABLE_NAME\n  | COLUMN_NAME\n  | CURSOR_NAME\n}\n\ncondition_name, simple_value_specification:\n    (see following discussion)\n\nSIGNAL is the way to \"return\" an error. SIGNAL provides error\ninformation to a handler, to an outer portion of the application, or to\nthe client. Also, it provides control over the error\'s characteristics\n(error number, SQLSTATE value, message). Without SIGNAL, it is\nnecessary to resort to workarounds such as deliberately referring to a\nnonexistent table to cause a routine to return an error.\n\nNo privileges are required to execute the SIGNAL statement.\n\nTo retrieve information from the diagnostics area, use the GET\nDIAGNOSTICS statement (see [HELP GET DIAGNOSTICS]). For information\nabout the diagnostics area, see\nhttps://dev.mysql.com/doc/refman/5.7/en/diagnostics-area.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/signal.html\n\n','CREATE PROCEDURE p (pval INT)\nBEGIN\n  DECLARE specialty CONDITION FOR SQLSTATE \'45000\';\n  IF pval = 0 THEN\n    SIGNAL SQLSTATE \'01000\';\n  ELSEIF pval = 1 THEN\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSEIF pval = 2 THEN\n    SIGNAL specialty\n      SET MESSAGE_TEXT = \'An error occurred\';\n  ELSE\n    SIGNAL SQLSTATE \'01000\'\n      SET MESSAGE_TEXT = \'A warning occurred\', MYSQL_ERRNO = 1000;\n    SIGNAL SQLSTATE \'45000\'\n      SET MESSAGE_TEXT = \'An error occurred\', MYSQL_ERRNO = 1001;\n  END IF;\nEND;\n','https://dev.mysql.com/doc/refman/5.7/en/signal.html'),(583,'ALTER USER',37,'Syntax:\nALTER USER [IF EXISTS]\n    user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH resource_option [resource_option] ...]\n    [password_option | lock_option] ...\n\nALTER USER [IF EXISTS]\n    USER() IDENTIFIED BY \'auth_string\'\n\nuser:\n    (see )\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n}\n\ntls_option: {\n   SSL\n | X509\n | CIPHER \'cipher\'\n | ISSUER \'issuer\'\n | SUBJECT \'subject\'\n}\n\nresource_option: {\n    MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\npassword_option: {\n    PASSWORD EXPIRE\n  | PASSWORD EXPIRE DEFAULT\n  | PASSWORD EXPIRE NEVER\n  | PASSWORD EXPIRE INTERVAL N DAY\n}\n\nlock_option: {\n    ACCOUNT LOCK\n  | ACCOUNT UNLOCK\n}\n\nThe ALTER USER statement modifies MySQL accounts. It enables\nauthentication, SSL/TLS, resource-limit, and password-management\nproperties to be modified for existing accounts. It can also be used to\nlock and unlock accounts.\n\nTo use ALTER USER, you must have the global CREATE USER privilege or\nthe UPDATE privilege for the mysql system database. When the read_only\nsystem variable is enabled, ALTER USER additionally requires the SUPER\nprivilege.\n\nBy default, an error occurs if you try to modify a user that does not\nexist. If the IF EXISTS clause is given, the statement produces a\nwarning for each named user that does not exist, rather than an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/alter-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/alter-user.html'),(584,'CREATE USER',37,'Syntax:\nCREATE USER [IF NOT EXISTS]\n    user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH resource_option [resource_option] ...]\n    [password_option | lock_option] ...\n\nuser:\n    (see )\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n  | IDENTIFIED BY PASSWORD \'auth_string\'\n}\n\ntls_option: {\n   SSL\n | X509\n | CIPHER \'cipher\'\n | ISSUER \'issuer\'\n | SUBJECT \'subject\'\n}\n\nresource_option: {\n    MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\npassword_option: {\n    PASSWORD EXPIRE\n  | PASSWORD EXPIRE DEFAULT\n  | PASSWORD EXPIRE NEVER\n  | PASSWORD EXPIRE INTERVAL N DAY\n}\n\nlock_option: {\n    ACCOUNT LOCK\n  | ACCOUNT UNLOCK\n}\n\nThe CREATE USER statement creates new MySQL accounts. It enables\nauthentication, SSL/TLS, resource-limit, and password-management\nproperties to be established for new accounts, and controls whether\naccounts are initially locked or unlocked.\n\nTo use CREATE USER, you must have the global CREATE USER privilege, or\nthe INSERT privilege for the mysql system database. When the read_only\nsystem variable is enabled, CREATE USER additionally requires the SUPER\nprivilege.\n\nAn error occurs if you try to create an account that already exists. If\nthe IF NOT EXISTS clause is given, the statement produces a warning for\neach named account that already exists, rather than an error.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-user.html'),(585,'DROP USER',37,'Syntax:\nDROP USER [IF EXISTS] user [, user] ...\n\nThe DROP USER statement removes one or more MySQL accounts and their\nprivileges. It removes privilege rows for the account from all grant\ntables.\n\nTo use DROP USER, you must have the global CREATE USER privilege, or\nthe DELETE privilege for the mysql system database. When the read_only\nsystem variable is enabled, DROP USER additionally requires the SUPER\nprivilege.\n\nAn error occurs if you try to drop an account that does not exist. If\nthe IF EXISTS clause is given, the statement produces a warning for\neach named user that does not exist, rather than an error.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nDROP USER \'jeffrey\'@\'localhost\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-user.html'),(586,'GRANT',37,'Syntax:\nGRANT\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    TO user [auth_option] [, user [auth_option]] ...\n    [REQUIRE {NONE | tls_option [[AND] tls_option] ...}]\n    [WITH {GRANT OPTION | resource_option} ...]\n\nGRANT PROXY ON user\n    TO user [, user] ...\n    [WITH GRANT OPTION]\n\nobject_type: {\n    TABLE\n  | FUNCTION\n  | PROCEDURE\n}\n\npriv_level: {\n    *\n  | *.*\n  | db_name.*\n  | db_name.tbl_name\n  | tbl_name\n  | db_name.routine_name\n}\n\nuser:\n    (see https://dev.mysql.com/doc/refman/5.7/en/account-names.html)\n\nauth_option: {\n    IDENTIFIED BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin\n  | IDENTIFIED WITH auth_plugin BY \'auth_string\'\n  | IDENTIFIED WITH auth_plugin AS \'auth_string\'\n  | IDENTIFIED BY PASSWORD \'auth_string\'\n}\n\ntls_option: {\n    SSL\n  | X509\n  | CIPHER \'cipher\'\n  | ISSUER \'issuer\'\n  | SUBJECT \'subject\'\n}\n\nresource_option: {\n  | MAX_QUERIES_PER_HOUR count\n  | MAX_UPDATES_PER_HOUR count\n  | MAX_CONNECTIONS_PER_HOUR count\n  | MAX_USER_CONNECTIONS count\n}\n\nThe GRANT statement grants privileges to MySQL user accounts.\n\nTo use GRANT, you must have the GRANT OPTION privilege, and you must\nhave the privileges that you are granting. When the read_only system\nvariable is enabled, GRANT additionally requires the SUPER privilege.\n\nThe REVOKE statement is related to GRANT and enables administrators to\nremove account privileges. See [HELP REVOKE].\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nGRANT ALL ON db1.* TO \'jeffrey\'@\'localhost\';\n\nThe host name part of the account, if omitted, defaults to \'%\'.\n\nNormally, a database administrator first uses CREATE USER to create an\naccount and define its nonprivilege characteristics such as its\npassword, whether it uses secure connections, and limits on access to\nserver resources, then uses GRANT to define its privileges. ALTER USER\nmay be used to change the nonprivilege characteristics of existing\naccounts. For example:\n\nCREATE USER \'jeffrey\'@\'localhost\' IDENTIFIED BY \'password\';\nGRANT ALL ON db1.* TO \'jeffrey\'@\'localhost\';\nGRANT SELECT ON db2.invoice TO \'jeffrey\'@\'localhost\';\nALTER USER \'jeffrey\'@\'localhost\' WITH MAX_QUERIES_PER_HOUR 90;\n\n*Note*:\n\nExamples shown here include no IDENTIFIED clause. It is assumed that\nyou establish passwords with CREATE USER at account-creation time to\navoid creating insecure accounts.\n\n*Note*:\n\nIf an account named in a GRANT statement does not already exist, GRANT\nmay create it under the conditions described later in the discussion of\nthe NO_AUTO_CREATE_USER SQL mode. It is also possible to use GRANT to\nspecify nonprivilege account characteristics such as whether it uses\nsecure connections and limits on access to server resources.\n\nHowever, use of GRANT to create accounts or define nonprivilege\ncharacteristics is deprecated as of MySQL 5.7.6. Instead, perform these\ntasks using CREATE USER or ALTER USER.\n\nFrom the mysql program, GRANT responds with Query OK, 0 rows affected\nwhen executed successfully. To determine what privileges result from\nthe operation, use SHOW GRANTS. See [HELP SHOW GRANTS].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/grant.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/grant.html'),(587,'RENAME USER',37,'Syntax:\nRENAME USER old_user TO new_user\n    [, old_user TO new_user] ...\n\nThe RENAME USER statement renames existing MySQL accounts. An error\noccurs for old accounts that do not exist or new accounts that already\nexist.\n\nTo use RENAME USER, you must have the global CREATE USER privilege, or\nthe UPDATE privilege for the mysql system database. When the read_only\nsystem variable is enabled, RENAME USER additionally requires the SUPER\nprivilege.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nRENAME USER \'jeffrey\'@\'localhost\' TO \'jeff\'@\'127.0.0.1\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nRENAME USER causes the privileges held by the old user to be those held\nby the new user. However, RENAME USER does not automatically drop or\ninvalidate databases or objects within them that the old user created.\nThis includes stored programs or views for which the DEFINER attribute\nnames the old user. Attempts to access such objects may produce an\nerror if they execute in definer security context. (For information\nabout security context, see\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-objects-security.html.)\n\nThe privilege changes take effect as indicated in\nhttps://dev.mysql.com/doc/refman/5.7/en/privilege-changes.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/rename-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/rename-user.html'),(588,'REVOKE',37,'Syntax:\nREVOKE\n    priv_type [(column_list)]\n      [, priv_type [(column_list)]] ...\n    ON [object_type] priv_level\n    FROM user [, user] ...\n\nREVOKE ALL [PRIVILEGES], GRANT OPTION\n    FROM user [, user] ...\n\nREVOKE PROXY ON user\n    FROM user [, user] ...\n\nThe REVOKE statement enables system administrators to revoke privileges\nfrom MySQL accounts.\n\nWhen the read_only system variable is enabled, REVOKE requires the\nSUPER privilege in addition to any other required privileges described\nin the following discussion.\n\nEach account name uses the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nREVOKE INSERT ON *.* FROM \'jeffrey\'@\'localhost\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nFor details on the levels at which privileges exist, the permissible\npriv_type, priv_level, and object_type values, and the syntax for\nspecifying users and passwords, see [HELP GRANT].\n\nTo use the first REVOKE syntax, you must have the GRANT OPTION\nprivilege, and you must have the privileges that you are revoking.\n\nTo revoke all privileges, use the second syntax, which drops all\nglobal, database, table, column, and routine privileges for the named\nuser or users:\n\nREVOKE ALL PRIVILEGES, GRANT OPTION FROM user [, user] ...\n\nTo use this REVOKE syntax, you must have the global CREATE USER\nprivilege, or the UPDATE privilege for the mysql system database.\n\nUser accounts from which privileges are to be revoked must exist.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/revoke.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/revoke.html'),(589,'SET PASSWORD',37,'Syntax:\nSET PASSWORD [FOR user] = password_option\n\npassword_option: {\n    \'auth_string\'\n  | PASSWORD(\'auth_string\')\n}\n\nThe SET PASSWORD statement assigns a password to a MySQL user account.\n\'auth_string\' represents a cleartext (unencrypted) password.\n\n*Note*:\n\no SET PASSWORD ... = PASSWORD(\'auth_string\') syntax is deprecated as of\n  MySQL 5.7.6 and will be removed in a future MySQL release.\n\no SET PASSWORD ... = \'auth_string\' syntax is not deprecated, but ALTER\n  USER is the preferred statement for account alterations, including\n  assigning passwords. For example:\n\nALTER USER user IDENTIFIED BY \'auth_string\';\n\n*Important*:\n\nUnder some circumstances, SET PASSWORD may be recorded in server logs\nor on the client side in a history file such as ~/.mysql_history, which\nmeans that cleartext passwords may be read by anyone having read access\nto that information. For information about the conditions under which\nthis occurs for the server logs and how to control it, see\nhttps://dev.mysql.com/doc/refman/5.7/en/password-logging.html. For\nsimilar information about client-side logging, see\nhttps://dev.mysql.com/doc/refman/5.7/en/mysql-logging.html.\n\nSET PASSWORD can be used with or without a FOR clause that explicitly\nnames a user account:\n\no With a FOR user clause, the statement sets the password for the named\n  account, which must exist:\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = \'auth_string\';\n\no With no FOR user clause, the statement sets the password for the\n  current user:\n\nSET PASSWORD = \'auth_string\';\n\n  Any client who connects to the server using a nonanonymous account\n  can change the password for that account. (In particular, you can\n  change your own password.) To see which account the server\n  authenticated you as, invoke the CURRENT_USER() function:\n\nSELECT CURRENT_USER();\n\nIf a FOR user clause is given, the account name uses the format\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. For\nexample:\n\nSET PASSWORD FOR \'bob\'@\'%.example.org\' = \'auth_string\';\n\nThe host name part of the account name, if omitted, defaults to \'%\'.\n\nSetting the password for a named account (with a FOR clause) requires\nthe UPDATE privilege for the mysql system database. Setting the\npassword for yourself (for a nonanonymous account with no FOR clause)\nrequires no special privileges. When the read_only system variable is\nenabled, SET PASSWORD requires the SUPER privilege in addition to any\nother required privileges.\n\nThe password can be specified in these ways:\n\no Use a string without PASSWORD()\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = \'password\';\n\n  SET PASSWORD interprets the string as a cleartext string, passes it\n  to the authentication plugin associated with the account, and stores\n  the result returned by the plugin in the account row in the\n  mysql.user system table. (The plugin is given the opportunity to hash\n  the value into the encryption format it expects. The plugin may use\n  the value as specified, in which case no hashing occurs.)\n\no Use the PASSWORD() function (deprecated as of MySQL 5.7.6)\n\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = PASSWORD(\'password\');\n\n  The PASSWORD() argument is the cleartext (unencrypted) password.\n  PASSWORD() hashes the password and returns the encrypted password\n  string for storage in the account row in the mysql.user system table.\n\n  The PASSWORD() function hashes the password using the hashing method\n  determined by the value of the old_passwords system variable value.\n  Be sure that old_passwords has the value corresponding to the hashing\n  method expected by the authentication plugin associated with the\n  account. For example, if the account uses the mysql_native_password\n  plugin, the old_passwords value must be 0:\n\nSET old_passwords = 0;\nSET PASSWORD FOR \'jeffrey\'@\'localhost\' = PASSWORD(\'password\');\n\n  If the old_passwords value differs from that required by the\n  authentication plugin, the hashed password value returned by\n  PASSWORD() will not by usable by the plugin and correct\n  authentication of client connections will not occur.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-password.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-password.html'),(590,'ANALYZE TABLE',38,'Syntax:\nANALYZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n\nANALYZE TABLE performs a key distribution analysis and stores the\ndistribution for the named table or tables. For MyISAM tables, this\nstatement is equivalent to using myisamchk --analyze.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nANALYZE TABLE works with InnoDB, NDB, and MyISAM tables. It does not\nwork with views.\n\nANALYZE TABLE is supported for partitioned tables, and you can use\nALTER TABLE ... ANALYZE PARTITION to analyze one or more partitions;\nfor more information, see [HELP ALTER TABLE], and\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-maintenance.html.\n\nDuring the analysis, the table is locked with a read lock for InnoDB\nand MyISAM.\n\nBy default, the server writes ANALYZE TABLE statements to the binary\nlog so that they replicate to replication slaves. To suppress logging,\nspecify the optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/analyze-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/analyze-table.html'),(591,'CHECK TABLE',38,'Syntax:\nCHECK TABLE tbl_name [, tbl_name] ... [option] ...\n\noption: {\n    FOR UPGRADE\n  | QUICK\n  | FAST\n  | MEDIUM\n  | EXTENDED\n  | CHANGED\n}\n\nCHECK TABLE checks a table or tables for errors. For MyISAM tables, the\nkey statistics are updated as well. CHECK TABLE can also check views\nfor problems, such as tables that are referenced in the view definition\nthat no longer exist.\n\nTo check a table, you must have some privilege for it.\n\nCHECK TABLE works for InnoDB, MyISAM, ARCHIVE, and CSV tables.\n\nBefore running CHECK TABLE on InnoDB tables, see\nhttps://dev.mysql.com/doc/refman/5.7/en/check-table.html#check-table-in\nnodb.\n\nCHECK TABLE is supported for partitioned tables, and you can use ALTER\nTABLE ... CHECK PARTITION to check one or more partitions; for more\ninformation, see [HELP ALTER TABLE], and\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-maintenance.html.\n\nCHECK TABLE ignores virtual generated columns that are not indexed.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/check-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/check-table.html'),(592,'CHECKSUM TABLE',38,'Syntax:\nCHECKSUM TABLE tbl_name [, tbl_name] ... [QUICK | EXTENDED]\n\nCHECKSUM TABLE reports a checksum for the contents of a table. You can\nuse this statement to verify that the contents are the same before and\nafter a backup, rollback, or other operation that is intended to put\nthe data back to a known state.\n\nThis statement requires the SELECT privilege for the table.\n\nThis statement is not supported for views. If you run CHECKSUM TABLE\nagainst a view, the Checksum value is always NULL, and a warning is\nreturned.\n\nFor a nonexistent table, CHECKSUM TABLE returns NULL and generates a\nwarning.\n\nDuring the checksum operation, the table is locked with a read lock for\nInnoDB and MyISAM.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/checksum-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/checksum-table.html'),(593,'OPTIMIZE TABLE',38,'Syntax:\nOPTIMIZE [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n\nOPTIMIZE TABLE reorganizes the physical storage of table data and\nassociated index data, to reduce storage space and improve I/O\nefficiency when accessing the table. The exact changes made to each\ntable depend on the storage engine used by that table.\n\nUse OPTIMIZE TABLE in these cases, depending on the type of table:\n\no After doing substantial insert, update, or delete operations on an\n  InnoDB table that has its own .ibd file because it was created with\n  the innodb_file_per_table option enabled. The table and indexes are\n  reorganized, and disk space can be reclaimed for use by the operating\n  system.\n\no After doing substantial insert, update, or delete operations on\n  columns that are part of a FULLTEXT index in an InnoDB table. Set the\n  configuration option innodb_optimize_fulltext_only=1 first. To keep\n  the index maintenance period to a reasonable time, set the\n  innodb_ft_num_word_optimize option to specify how many words to\n  update in the search index, and run a sequence of OPTIMIZE TABLE\n  statements until the search index is fully updated.\n\no After deleting a large part of a MyISAM or ARCHIVE table, or making\n  many changes to a MyISAM or ARCHIVE table with variable-length rows\n  (tables that have VARCHAR, VARBINARY, BLOB, or TEXT columns). Deleted\n  rows are maintained in a linked list and subsequent INSERT operations\n  reuse old row positions. You can use OPTIMIZE TABLE to reclaim the\n  unused space and to defragment the data file. After extensive changes\n  to a table, this statement may also improve performance of statements\n  that use the table, sometimes significantly.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nOPTIMIZE TABLE works for InnoDB, MyISAM, and ARCHIVE tables. OPTIMIZE\nTABLE is also supported for dynamic columns of in-memory NDB tables. It\ndoes not work for fixed-width columns of in-memory tables, nor does it\nwork for Disk Data tables. The performance of OPTIMIZE on NDB Cluster\ntables can be tuned using --ndb-optimization-delay, which controls the\nlength of time to wait between processing batches of rows by OPTIMIZE\nTABLE. For more information, see Previous NDB Cluster Issues Resolved\nin NDB Cluster 7.3\n(https://dev.mysql.com/doc/refman/5.6/en/mysql-cluster-limitations-reso\nlved.html).\n\nFor NDB Cluster tables, OPTIMIZE TABLE can be interrupted by (for\nexample) killing the SQL thread performing the OPTIMIZE operation.\n\nBy default, OPTIMIZE TABLE does not work for tables created using any\nother storage engine and returns a result indicating this lack of\nsupport. You can make OPTIMIZE TABLE work for other storage engines by\nstarting mysqld with the --skip-new option. In this case, OPTIMIZE\nTABLE is just mapped to ALTER TABLE.\n\nThis statement does not work with views.\n\nOPTIMIZE TABLE is supported for partitioned tables. For information\nabout using this statement with partitioned tables and table\npartitions, see\nhttps://dev.mysql.com/doc/refman/5.7/en/partitioning-maintenance.html.\n\nBy default, the server writes OPTIMIZE TABLE statements to the binary\nlog so that they replicate to replication slaves. To suppress logging,\nspecify the optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/optimize-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/optimize-table.html'),(594,'REPAIR TABLE',38,'Syntax:\nREPAIR [NO_WRITE_TO_BINLOG | LOCAL]\n    TABLE tbl_name [, tbl_name] ...\n    [QUICK] [EXTENDED] [USE_FRM]\n\nREPAIR TABLE repairs a possibly corrupted table, for certain storage\nengines only.\n\nThis statement requires SELECT and INSERT privileges for the table.\n\nAlthough normally you should never have to run REPAIR TABLE, if\ndisaster strikes, this statement is very likely to get back all your\ndata from a MyISAM table. If your tables become corrupted often, try to\nfind the reason for it, to eliminate the need to use REPAIR TABLE. See\nhttps://dev.mysql.com/doc/refman/5.7/en/crashing.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/myisam-table-problems.html.\n\nREPAIR TABLE checks the table to see whether an upgrade is required. If\nso, it performs the upgrade, following the same rules as CHECK TABLE\n... FOR UPGRADE. See [HELP CHECK TABLE], for more information.\n\n*Important*:\n\no Make a backup of a table before performing a table repair operation;\n  under some circumstances the operation might cause data loss.\n  Possible causes include but are not limited to file system errors.\n  See https://dev.mysql.com/doc/refman/5.7/en/backup-and-recovery.html.\n\no If the server crashes during a REPAIR TABLE operation, it is\n  essential after restarting it that you immediately execute another\n  REPAIR TABLE statement for the table before performing any other\n  operations on it. In the worst case, you might have a new clean index\n  file without information about the data file, and then the next\n  operation you perform could overwrite the data file. This is an\n  unlikely but possible scenario that underscores the value of making a\n  backup first.\n\no In the event that a table on the master becomes corrupted and you run\n  REPAIR TABLE on it, any resulting changes to the original table are\n  not propagated to slaves.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/repair-table.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/repair-table.html'),(595,'CREATE FUNCTION UDF',39,'Syntax:\nCREATE [AGGREGATE] FUNCTION function_name\n    RETURNS {STRING|INTEGER|REAL|DECIMAL}\n    SONAME shared_library_name\n\nA user-defined function (UDF) is a way to extend MySQL with a new\nfunction that works like a native (built-in) MySQL function such as\nABS() or CONCAT().\n\nfunction_name is the name that should be used in SQL statements to\ninvoke the function. The RETURNS clause indicates the type of the\nfunction\'s return value. DECIMAL is a legal value after RETURNS, but\ncurrently DECIMAL functions return string values and should be written\nlike STRING functions.\n\nshared_library_name is the base name of the shared library file that\ncontains the code that implements the function. The file must be\nlocated in the plugin directory. This directory is given by the value\nof the plugin_dir system variable. For more information, see\nhttps://dev.mysql.com/doc/refman/5.7/en/udf-loading.html.\n\nTo create a function, you must have the INSERT privilege for the mysql\nsystem database. This is necessary because CREATE FUNCTION adds a row\nto the mysql.func system table that records the function\'s name, type,\nand shared library name.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/create-function-udf.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/create-function-udf.html'),(596,'DROP FUNCTION UDF',39,'Syntax:\nDROP FUNCTION function_name\n\nThis statement drops the user-defined function (UDF) named\nfunction_name.\n\nTo drop a function, you must have the DELETE privilege for the mysql\nsystem database. This is because DROP FUNCTION removes a row from the\nmysql.func system table that records the function\'s name, type, and\nshared library name.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/drop-function-udf.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/drop-function-udf.html'),(597,'INSTALL PLUGIN',40,'Syntax:\nINSTALL PLUGIN plugin_name SONAME \'shared_library_name\'\n\nThis statement installs a server plugin. It requires the INSERT\nprivilege for the mysql.plugin system table.\n\nplugin_name is the name of the plugin as defined in the plugin\ndescriptor structure contained in the library file (see\nhttps://dev.mysql.com/doc/refman/5.7/en/plugin-data-structures.html).\nPlugin names are not case-sensitive. For maximal compatibility, plugin\nnames should be limited to ASCII letters, digits, and underscore\nbecause they are used in C source files, shell command lines, M4 and\nBourne shell scripts, and SQL environments.\n\nshared_library_name is the name of the shared library that contains the\nplugin code. The name includes the file name extension (for example,\nlibmyplugin.so, libmyplugin.dll, or libmyplugin.dylib).\n\nThe shared library must be located in the plugin directory (the\ndirectory named by the plugin_dir system variable). The library must be\nin the plugin directory itself, not in a subdirectory. By default,\nplugin_dir is the plugin directory under the directory named by the\npkglibdir configuration variable, but it can be changed by setting the\nvalue of plugin_dir at server startup. For example, set its value in a\nmy.cnf file:\n\n[mysqld]\nplugin_dir=/path/to/plugin/directory\n\nIf the value of plugin_dir is a relative path name, it is taken to be\nrelative to the MySQL base directory (the value of the basedir system\nvariable).\n\nINSTALL PLUGIN loads and initializes the plugin code to make the plugin\navailable for use. A plugin is initialized by executing its\ninitialization function, which handles any setup that the plugin must\nperform before it can be used. When the server shuts down, it executes\nthe deinitialization function for each plugin that is loaded so that\nthe plugin has a chance to perform any final cleanup.\n\nINSTALL PLUGIN also registers the plugin by adding a line that\nindicates the plugin name and library file name to the mysql.plugin\nsystem table. At server startup, the server loads and initializes any\nplugin that is listed in mysql.plugin. This means that a plugin is\ninstalled with INSTALL PLUGIN only once, not every time the server\nstarts. Plugin loading at startup does not occur if the server is\nstarted with the --skip-grant-tables option.\n\nA plugin library can contain multiple plugins. For each of them to be\ninstalled, use a separate INSTALL PLUGIN statement. Each statement\nnames a different plugin, but all of them specify the same library\nname.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/install-plugin.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/install-plugin.html'),(598,'UNINSTALL PLUGIN',40,'Syntax:\nUNINSTALL PLUGIN plugin_name\n\nThis statement removes an installed server plugin. It requires the\nDELETE privilege for the mysql.plugin system table. UNINSTALL PLUGIN is\nthe complement of INSTALL PLUGIN.\n\nplugin_name must be the name of some plugin that is listed in the\nmysql.plugin table. The server executes the plugin\'s deinitialization\nfunction and removes the row for the plugin from the mysql.plugin\nsystem table, so that subsequent server restarts will not load and\ninitialize the plugin. UNINSTALL PLUGIN does not remove the plugin\'s\nshared library file.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/uninstall-plugin.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/uninstall-plugin.html'),(599,'SET',3,'Syntax:\nSET variable = expr [, variable = expr] ...\n\nvariable: {\n    user_var_name\n  | param_name\n  | local_var_name\n  | {GLOBAL | @@GLOBAL.} system_var_name\n  | [SESSION | @@SESSION. | @@] system_var_name\n}\n\nSET syntax for variable assignment enables you to assign values to\ndifferent types of variables that affect the operation of the server or\nclients:\n\no User-defined variables. See\n  https://dev.mysql.com/doc/refman/5.7/en/user-variables.html.\n\no Stored procedure and function parameters, and stored program local\n  variables. See\n  https://dev.mysql.com/doc/refman/5.7/en/stored-program-variables.html\n  .\n\no System variables. See\n  https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n  System variables also can be set at server startup, as described in\n  https://dev.mysql.com/doc/refman/5.7/en/using-system-variables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-variable.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-variable.html'),(600,'SET CHARACTER SET',3,'Syntax:\nSET {CHARACTER SET | CHARSET}\n    {\'charset_name\' | DEFAULT}\n\nThis statement maps all strings sent between the server and the current\nclient with the given mapping. SET CHARACTER SET sets three session\nsystem variables: character_set_client and character_set_results are\nset to the given character set, and character_set_connection to the\nvalue of character_set_database. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html.\n\ncharset_name may be quoted or unquoted.\n\nThe default character set mapping can be restored by using the value\nDEFAULT. The default depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET CHARACTER SET produces an error. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html'),(601,'SET CHARSET',3,'Syntax:\nSET {CHARACTER SET | CHARSET}\n    {\'charset_name\' | DEFAULT}\n\nThis statement maps all strings sent between the server and the current\nclient with the given mapping. SET CHARACTER SET sets three session\nsystem variables: character_set_client and character_set_results are\nset to the given character set, and character_set_connection to the\nvalue of character_set_database. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html.\n\ncharset_name may be quoted or unquoted.\n\nThe default character set mapping can be restored by using the value\nDEFAULT. The default depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET CHARACTER SET produces an error. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html'),(602,'SET NAMES',3,'Syntax:\nSET NAMES {\'charset_name\'\n    [COLLATE \'collation_name\'] | DEFAULT}\n\nThis statement sets the three session system variables\ncharacter_set_client, character_set_connection, and\ncharacter_set_results to the given character set. Setting\ncharacter_set_connection to charset_name also sets collation_connection\nto the default collation for charset_name. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html.\n\nThe optional COLLATE clause may be used to specify a collation\nexplicitly. If given, the collation must one of the permitted\ncollations for charset_name.\n\ncharset_name and collation_name may be quoted or unquoted.\n\nThe default mapping can be restored by using a value of DEFAULT. The\ndefault depends on the server configuration.\n\nSome character sets cannot be used as the client character set.\nAttempting to use them with SET NAMES produces an error. See\nhttps://dev.mysql.com/doc/refman/5.7/en/charset-connection.html#charset\n-connection-impermissible-client-charset.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/set-names.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/set-names.html'),(603,'SHOW',3,'SHOW has many forms that provide information about databases, tables,\ncolumns, or status information about the server. This section describes\nthose following:\n\nSHOW {BINARY | MASTER} LOGS\nSHOW BINLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW CHARACTER SET [like_or_where]\nSHOW COLLATION [like_or_where]\nSHOW [FULL] COLUMNS FROM tbl_name [FROM db_name] [like_or_where]\nSHOW CREATE DATABASE db_name\nSHOW CREATE EVENT event_name\nSHOW CREATE FUNCTION func_name\nSHOW CREATE PROCEDURE proc_name\nSHOW CREATE TABLE tbl_name\nSHOW CREATE TRIGGER trigger_name\nSHOW CREATE VIEW view_name\nSHOW DATABASES [like_or_where]\nSHOW ENGINE engine_name {STATUS | MUTEX}\nSHOW [STORAGE] ENGINES\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW EVENTS\nSHOW FUNCTION CODE func_name\nSHOW FUNCTION STATUS [like_or_where]\nSHOW GRANTS FOR user\nSHOW INDEX FROM tbl_name [FROM db_name]\nSHOW MASTER STATUS\nSHOW OPEN TABLES [FROM db_name] [like_or_where]\nSHOW PLUGINS\nSHOW PROCEDURE CODE proc_name\nSHOW PROCEDURE STATUS [like_or_where]\nSHOW PRIVILEGES\nSHOW [FULL] PROCESSLIST\nSHOW PROFILE [types] [FOR QUERY n] [OFFSET n] [LIMIT n]\nSHOW PROFILES\nSHOW RELAYLOG EVENTS [IN \'log_name\'] [FROM pos] [LIMIT [offset,] row_count]\nSHOW SLAVE HOSTS\nSHOW SLAVE STATUS [FOR CHANNEL channel]\nSHOW [GLOBAL | SESSION] STATUS [like_or_where]\nSHOW TABLE STATUS [FROM db_name] [like_or_where]\nSHOW [FULL] TABLES [FROM db_name] [like_or_where]\nSHOW TRIGGERS [FROM db_name] [like_or_where]\nSHOW [GLOBAL | SESSION] VARIABLES [like_or_where]\nSHOW WARNINGS [LIMIT [offset,] row_count]\n\nlike_or_where:\n    LIKE \'pattern\'\n  | WHERE expr\n\nIf the syntax for a given SHOW statement includes a LIKE \'pattern\'\npart, \'pattern\' is a string that can contain the SQL % and _ wildcard\ncharacters. The pattern is useful for restricting statement output to\nmatching values.\n\nSeveral SHOW statements also accept a WHERE clause that provides more\nflexibility in specifying which rows to display. See\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show.html'),(604,'SHOW BINARY LOGS',3,'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged. A user with the SUPER or\nREPLICATION CLIENT privilege may execute this statement.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html'),(605,'SHOW MASTER LOGS',3,'Syntax:\nSHOW BINARY LOGS\nSHOW MASTER LOGS\n\nLists the binary log files on the server. This statement is used as\npart of the procedure described in [HELP PURGE BINARY LOGS], that shows\nhow to determine which logs can be purged. A user with the SUPER or\nREPLICATION CLIENT privilege may execute this statement.\n\nmysql> SHOW BINARY LOGS;\n+---------------+-----------+\n| Log_name      | File_size |\n+---------------+-----------+\n| binlog.000015 |    724935 |\n| binlog.000016 |    733481 |\n+---------------+-----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-binary-logs.html'),(606,'SHOW BINLOG EVENTS',3,'Syntax:\nSHOW BINLOG EVENTS\n   [IN \'log_name\']\n   [FROM pos]\n   [LIMIT [offset,] row_count]\n\nShows the events in the binary log. If you do not specify \'log_name\',\nthe first binary log is displayed. SHOW BINLOG EVENTS requires the\nREPLICATION SLAVE privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html'),(607,'SHOW CHARACTER SET',3,'Syntax:\nSHOW CHARACTER SET\n    [LIKE \'pattern\' | WHERE expr]\n\nThe SHOW CHARACTER SET statement shows all available character sets.\nThe LIKE clause, if present, indicates which character set names to\nmatch. The WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html. For\nexample:\n\nmysql> SHOW CHARACTER SET LIKE \'latin%\';\n+---------+-----------------------------+-------------------+--------+\n| Charset | Description                 | Default collation | Maxlen |\n+---------+-----------------------------+-------------------+--------+\n| latin1  | cp1252 West European        | latin1_swedish_ci |      1 |\n| latin2  | ISO 8859-2 Central European | latin2_general_ci |      1 |\n| latin5  | ISO 8859-9 Turkish          | latin5_turkish_ci |      1 |\n| latin7  | ISO 8859-13 Baltic          | latin7_general_ci |      1 |\n+---------+-----------------------------+-------------------+--------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-character-set.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-character-set.html'),(608,'SHOW COLLATION',3,'Syntax:\nSHOW COLLATION\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement lists collations supported by the server. By default,\nthe output from SHOW COLLATION includes all available collations. The\nLIKE clause, if present, indicates which collation names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html. For\nexample:\n\nmysql> SHOW COLLATION WHERE Charset = \'latin1\';\n+-------------------+---------+----+---------+----------+---------+\n| Collation         | Charset | Id | Default | Compiled | Sortlen |\n+-------------------+---------+----+---------+----------+---------+\n| latin1_german1_ci | latin1  |  5 |         | Yes      |       1 |\n| latin1_swedish_ci | latin1  |  8 | Yes     | Yes      |       1 |\n| latin1_danish_ci  | latin1  | 15 |         | Yes      |       1 |\n| latin1_german2_ci | latin1  | 31 |         | Yes      |       2 |\n| latin1_bin        | latin1  | 47 |         | Yes      |       1 |\n| latin1_general_ci | latin1  | 48 |         | Yes      |       1 |\n| latin1_general_cs | latin1  | 49 |         | Yes      |       1 |\n| latin1_spanish_ci | latin1  | 94 |         | Yes      |       1 |\n+-------------------+---------+----+---------+----------+---------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-collation.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-collation.html'),(609,'SHOW COLUMNS',3,'Syntax:\nSHOW [FULL] {COLUMNS | FIELDS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. SHOW COLUMNS displays information only for\nthose columns for which you have some privilege.\n\nmysql> SHOW COLUMNS FROM City;\n+-------------+----------+------+-----+---------+----------------+\n| Field       | Type     | Null | Key | Default | Extra          |\n+-------------+----------+------+-----+---------+----------------+\n| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name        | char(35) | NO   |     |         |                |\n| CountryCode | char(3)  | NO   | MUL |         |                |\n| District    | char(20) | NO   |     |         |                |\n| Population  | int(11)  | NO   |     | 0       |                |\n+-------------+----------+------+-----+---------+----------------+\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n\nThe optional FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each\ncolumn.\n\nThe LIKE clause, if present, indicates which column names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nThe data types may differ from what you expect them to be based on a\nCREATE TABLE statement because MySQL sometimes changes data types when\nyou create or alter a table. The conditions under which this occurs are\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/silent-column-changes.html.\n\nSHOW COLUMNS displays the following values for each table column:\n\no Field\n\n  The column name.\n\no Type\n\n  The column data type.\n\no Collation\n\n  The collation for nonbinary string columns, or NULL for other\n  columns. This value is displayed only if you use the FULL keyword.\n\no Null\n\n  The column nullability. The value is YES if NULL values can be stored\n  in the column, NO if not.\n\no Key\n\n  Whether the column is indexed:\n\n  o If Key is empty, the column either is not indexed or is indexed\n    only as a secondary column in a multiple-column, nonunique index.\n\n  o If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n    in a multiple-column PRIMARY KEY.\n\n  o If Key is UNI, the column is the first column of a UNIQUE index. (A\n    UNIQUE index permits multiple NULL values, but you can tell whether\n    the column permits NULL by checking the Null field.)\n\n  o If Key is MUL, the column is the first column of a nonunique index\n    in which multiple occurrences of a given value are permitted within\n    the column.\n\n  If more than one of the Key values applies to a given column of a\n  table, Key displays the one with the highest priority, in the order\n  PRI, UNI, MUL.\n\n  A UNIQUE index may be displayed as PRI if it cannot contain NULL\n  values and there is no PRIMARY KEY in the table. A UNIQUE index may\n  display as MUL if several columns form a composite UNIQUE index;\n  although the combination of the columns is unique, each column can\n  still hold multiple occurrences of a given value.\n\no Default\n\n  The default value for the column. This is NULL if the column has an\n  explicit default of NULL, or if the column definition includes no\n  DEFAULT clause.\n\no Extra\n\n  Any additional information that is available about a given column.\n  The value is nonempty in these cases:\n\n  o auto_increment for columns that have the AUTO_INCREMENT attribute.\n\n  o on update CURRENT_TIMESTAMP for TIMESTAMP or DATETIME columns that\n    have the ON UPDATE CURRENT_TIMESTAMP attribute.\n\n  o VIRTUAL GENERATED or VIRTUAL STORED for generated columns.\n\no Privileges\n\n  The privileges you have for the column. This value is displayed only\n  if you use the FULL keyword.\n\no Comment\n\n  Any comment included in the column definition. This value is\n  displayed only if you use the FULL keyword.\n\nTable column information is also available from the INFORMATION_SCHEMA\nCOLUMNS table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/columns-table.html.\n\nYou can list a table\'s columns with the mysqlshow db_name tbl_name\ncommand.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee https://dev.mysql.com/doc/refman/5.7/en/describe.html.\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-columns.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-columns.html'),(610,'SHOW FIELDS',3,'Syntax:\nSHOW [FULL] {COLUMNS | FIELDS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW COLUMNS displays information about the columns in a given table.\nIt also works for views. SHOW COLUMNS displays information only for\nthose columns for which you have some privilege.\n\nmysql> SHOW COLUMNS FROM City;\n+-------------+----------+------+-----+---------+----------------+\n| Field       | Type     | Null | Key | Default | Extra          |\n+-------------+----------+------+-----+---------+----------------+\n| ID          | int(11)  | NO   | PRI | NULL    | auto_increment |\n| Name        | char(35) | NO   |     |         |                |\n| CountryCode | char(3)  | NO   | MUL |         |                |\n| District    | char(20) | NO   |     |         |                |\n| Population  | int(11)  | NO   |     | 0       |                |\n+-------------+----------+------+-----+---------+----------------+\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW COLUMNS FROM mytable FROM mydb;\nSHOW COLUMNS FROM mydb.mytable;\n\nThe optional FULL keyword causes the output to include the column\ncollation and comments, as well as the privileges you have for each\ncolumn.\n\nThe LIKE clause, if present, indicates which column names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nThe data types may differ from what you expect them to be based on a\nCREATE TABLE statement because MySQL sometimes changes data types when\nyou create or alter a table. The conditions under which this occurs are\ndescribed in\nhttps://dev.mysql.com/doc/refman/5.7/en/silent-column-changes.html.\n\nSHOW COLUMNS displays the following values for each table column:\n\no Field\n\n  The column name.\n\no Type\n\n  The column data type.\n\no Collation\n\n  The collation for nonbinary string columns, or NULL for other\n  columns. This value is displayed only if you use the FULL keyword.\n\no Null\n\n  The column nullability. The value is YES if NULL values can be stored\n  in the column, NO if not.\n\no Key\n\n  Whether the column is indexed:\n\n  o If Key is empty, the column either is not indexed or is indexed\n    only as a secondary column in a multiple-column, nonunique index.\n\n  o If Key is PRI, the column is a PRIMARY KEY or is one of the columns\n    in a multiple-column PRIMARY KEY.\n\n  o If Key is UNI, the column is the first column of a UNIQUE index. (A\n    UNIQUE index permits multiple NULL values, but you can tell whether\n    the column permits NULL by checking the Null field.)\n\n  o If Key is MUL, the column is the first column of a nonunique index\n    in which multiple occurrences of a given value are permitted within\n    the column.\n\n  If more than one of the Key values applies to a given column of a\n  table, Key displays the one with the highest priority, in the order\n  PRI, UNI, MUL.\n\n  A UNIQUE index may be displayed as PRI if it cannot contain NULL\n  values and there is no PRIMARY KEY in the table. A UNIQUE index may\n  display as MUL if several columns form a composite UNIQUE index;\n  although the combination of the columns is unique, each column can\n  still hold multiple occurrences of a given value.\n\no Default\n\n  The default value for the column. This is NULL if the column has an\n  explicit default of NULL, or if the column definition includes no\n  DEFAULT clause.\n\no Extra\n\n  Any additional information that is available about a given column.\n  The value is nonempty in these cases:\n\n  o auto_increment for columns that have the AUTO_INCREMENT attribute.\n\n  o on update CURRENT_TIMESTAMP for TIMESTAMP or DATETIME columns that\n    have the ON UPDATE CURRENT_TIMESTAMP attribute.\n\n  o VIRTUAL GENERATED or VIRTUAL STORED for generated columns.\n\no Privileges\n\n  The privileges you have for the column. This value is displayed only\n  if you use the FULL keyword.\n\no Comment\n\n  Any comment included in the column definition. This value is\n  displayed only if you use the FULL keyword.\n\nTable column information is also available from the INFORMATION_SCHEMA\nCOLUMNS table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/columns-table.html.\n\nYou can list a table\'s columns with the mysqlshow db_name tbl_name\ncommand.\n\nThe DESCRIBE statement provides information similar to SHOW COLUMNS.\nSee https://dev.mysql.com/doc/refman/5.7/en/describe.html.\n\nThe SHOW CREATE TABLE, SHOW TABLE STATUS, and SHOW INDEX statements\nalso provide information about tables. See [HELP SHOW].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-columns.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-columns.html'),(611,'SHOW CREATE DATABASE',3,'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n\nShows the CREATE DATABASE statement that creates the named database. If\nthe SHOW statement includes an IF NOT EXISTS clause, the output too\nincludes such a clause. SHOW CREATE SCHEMA is a synonym for SHOW CREATE\nDATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html\n\n','mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html'),(612,'SHOW CREATE SCHEMA',3,'Syntax:\nSHOW CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] db_name\n\nShows the CREATE DATABASE statement that creates the named database. If\nthe SHOW statement includes an IF NOT EXISTS clause, the output too\nincludes such a clause. SHOW CREATE SCHEMA is a synonym for SHOW CREATE\nDATABASE.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html\n\n','mysql> SHOW CREATE DATABASE test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n\nmysql> SHOW CREATE SCHEMA test\\G\n*************************** 1. row ***************************\n       Database: test\nCreate Database: CREATE DATABASE `test`\n                 /*!40100 DEFAULT CHARACTER SET latin1 */\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-database.html'),(613,'SHOW CREATE EVENT',3,'Syntax:\nSHOW CREATE EVENT event_name\n\nThis statement displays the CREATE EVENT statement needed to re-create\na given event. It requires the EVENT privilege for the database from\nwhich the event is to be shown. For example (using the same event\ne_daily defined and then altered in [HELP SHOW EVENTS]):\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-event.html\n\n','mysql> SHOW CREATE EVENT myschema.e_daily\\G\n*************************** 1. row ***************************\n               Event: e_daily\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n           time_zone: SYSTEM\n        Create Event: CREATE DEFINER=`jon`@`ghidora` EVENT `e_daily`\n                        ON SCHEDULE EVERY 1 DAY\n                        STARTS CURRENT_TIMESTAMP + INTERVAL 6 HOUR\n                        ON COMPLETION NOT PRESERVE\n                        ENABLE\n                        COMMENT \'Saves total number of sessions then\n                                clears the table each day\'\n                        DO BEGIN\n                          INSERT INTO site_activity.totals (time, total)\n                            SELECT CURRENT_TIMESTAMP, COUNT(*)\n                              FROM site_activity.sessions;\n                          DELETE FROM site_activity.sessions;\n                        END\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-event.html'),(614,'SHOW CREATE FUNCTION',3,'Syntax:\nSHOW CREATE FUNCTION func_name\n\nThis statement is similar to SHOW CREATE PROCEDURE but for stored\nfunctions. See [HELP SHOW CREATE PROCEDURE].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-function.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-function.html'),(615,'SHOW CREATE PROCEDURE',3,'Syntax:\nSHOW CREATE PROCEDURE proc_name\n\nThis statement is a MySQL extension. It returns the exact string that\ncan be used to re-create the named stored procedure. A similar\nstatement, SHOW CREATE FUNCTION, displays information about stored\nfunctions (see [HELP SHOW CREATE FUNCTION]).\n\nTo use either statement, you must be the user named in the routine\nDEFINER clause or have SELECT access to the mysql.proc table. If you do\nnot have privileges for the routine itself, the value displayed for the\nCreate Procedure or Create Function field will be NULL.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-procedure.html\n\n','mysql> SHOW CREATE PROCEDURE test.simpleproc\\G\n*************************** 1. row ***************************\n           Procedure: simpleproc\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n    Create Procedure: CREATE PROCEDURE `simpleproc`(OUT param1 INT)\n                      BEGIN\n                      SELECT COUNT(*) INTO param1 FROM t;\n                      END\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n\nmysql> SHOW CREATE FUNCTION test.hello\\G\n*************************** 1. row ***************************\n            Function: hello\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n     Create Function: CREATE FUNCTION `hello`(s CHAR(20))\n                      RETURNS char(50) CHARSET latin1\n                      RETURN CONCAT(\'Hello, \',s,\'!\')\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-procedure.html'),(616,'SHOW CREATE TABLE',3,'Syntax:\nSHOW CREATE TABLE tbl_name\n\nShows the CREATE TABLE statement that creates the named table. To use\nthis statement, you must have some privilege for the table. This\nstatement also works with views.\n\nSHOW CREATE TABLE quotes table and column names according to the value\nof the sql_quote_show_create option. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nFor information about how CREATE TABLE statements are stored by MySQL,\nsee\nhttps://dev.mysql.com/doc/refman/5.7/en/create-table-statement-retentio\nn.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-table.html\n\n','mysql> SHOW CREATE TABLE t\\G\n*************************** 1. row ***************************\n       Table: t\nCreate Table: CREATE TABLE `t` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `s` char(60) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\n','https://dev.mysql.com/doc/refman/5.7/en/show-create-table.html'),(617,'SHOW CREATE TRIGGER',3,'Syntax:\nSHOW CREATE TRIGGER trigger_name\n\nThis statement shows the CREATE TRIGGER statement that creates the\nnamed trigger. This statement requires the TRIGGER privilege for the\ntable associated with the trigger.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-trigger.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-trigger.html'),(618,'SHOW CREATE USER',3,'Syntax:\nSHOW CREATE USER user\n\nThis statement shows the CREATE USER statement that creates the named\nuser. An error occurs if the user does not exist. The statement\nrequires the SELECT privilege for the mysql system database, except to\ndisplay information for the current user.\n\nTo name the account, use the format described in\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html. The host\nname part of the account name, if omitted, defaults to \'%\'. It is also\npossible to specify CURRENT_USER or CURRENT_USER() to refer to the\naccount associated with the current session.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-user.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-user.html'),(619,'SHOW CREATE VIEW',3,'Syntax:\nSHOW CREATE VIEW view_name\n\nThis statement shows the CREATE VIEW statement that creates the named\nview.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-create-view.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-create-view.html'),(620,'SHOW DATABASES',3,'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nMySQL implements databases as directories in the data directory, so\nthis statement simply lists directories in that location. However, the\noutput may include names of directories that do not correspond to\nactual databases.\n\nDatabase information is also available from the INFORMATION_SCHEMA\nSCHEMATA table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/schemata-table.html.\n\n*Caution*:\n\nBecause a global privilege is considered a privilege for all databases,\nany global privilege enables a user to see all database names with SHOW\nDATABASES or by examining the INFORMATION_SCHEMA SCHEMATA table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-databases.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-databases.html'),(621,'SHOW SCHEMAS',3,'Syntax:\nSHOW {DATABASES | SCHEMAS}\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW DATABASES lists the databases on the MySQL server host. SHOW\nSCHEMAS is a synonym for SHOW DATABASES. The LIKE clause, if present,\nindicates which database names to match. The WHERE clause can be given\nto select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nYou see only those databases for which you have some kind of privilege,\nunless you have the global SHOW DATABASES privilege. You can also get\nthis list using the mysqlshow command.\n\nIf the server was started with the --skip-show-database option, you\ncannot use this statement at all unless you have the SHOW DATABASES\nprivilege.\n\nMySQL implements databases as directories in the data directory, so\nthis statement simply lists directories in that location. However, the\noutput may include names of directories that do not correspond to\nactual databases.\n\nDatabase information is also available from the INFORMATION_SCHEMA\nSCHEMATA table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/schemata-table.html.\n\n*Caution*:\n\nBecause a global privilege is considered a privilege for all databases,\nany global privilege enables a user to see all database names with SHOW\nDATABASES or by examining the INFORMATION_SCHEMA SCHEMATA table.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-databases.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-databases.html'),(622,'SHOW ENGINE',3,'Syntax:\nSHOW ENGINE engine_name {STATUS | MUTEX}\n\nSHOW ENGINE displays operational information about a storage engine. It\nrequires the PROCESS privilege. The statement has these variants:\n\nSHOW ENGINE INNODB STATUS\nSHOW ENGINE INNODB MUTEX\nSHOW ENGINE PERFORMANCE_SCHEMA STATUS\n\nSHOW ENGINE INNODB STATUS displays extensive information from the\nstandard InnoDB Monitor about the state of the InnoDB storage engine.\nFor information about the standard monitor and other InnoDB Monitors\nthat provide information about InnoDB processing, see\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-monitors.html.\n\nSHOW ENGINE INNODB MUTEX displays InnoDB mutex and rw-lock statistics.\n\n*Note*:\n\nInnoDB mutexes and rwlocks can also be monitored using Performance\nSchema tables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/monitor-innodb-mutex-waits-perf\normance-schema.html.\n\nSHOW ENGINE INNODB MUTEX output was removed in MySQL 5.7.2. It was\nrevised and reintroduced in MySQL 5.7.8.\n\nIn MySQL 5.7.8, mutex statistics collection is configured dynamically\nusing the following options:\n\no To enable the collection of mutex statistics, run:\n\nSET GLOBAL innodb_monitor_enable=\'latch\';\n\no To reset mutex statistics, run:\n\nSET GLOBAL innodb_monitor_reset=\'latch\';\n\no To disable the collection of mutex statistics, run:\n\nSET GLOBAL innodb_monitor_disable=\'latch\';\n\nCollection of mutex statistics for SHOW ENGINE INNODB MUTEX can also be\nenabled by setting innodb_monitor_enable=\'all\', or disabled by setting\ninnodb_monitor_disable=\'all\'.\n\nSHOW ENGINE INNODB MUTEX output has these columns:\n\no Type\n\n  Always InnoDB.\n\no Name\n\n  Prior to MySQL 5.7.8, the Name field reports the source file where\n  the mutex is implemented, and the line number in the file where the\n  mutex is created. The line number is specific to your version of\n  MySQL. As of MySQL 5.7.8, only the mutex name is reported. File name\n  and line number are still reported for rwlocks.\n\no Status\n\n  The mutex status.\n\n  Prior to MySQL 5.7.8, the Status field displays several values if\n  WITH_DEBUG was defined at MySQL compilation time. If WITH_DEBUG was\n  not defined, the statement displays only the os_waits value. In the\n  latter case (without WITH_DEBUG), the information on which the output\n  is based is insufficient to distinguish regular mutexes and mutexes\n  that protect rwlocks (which permit multiple readers or a single\n  writer). Consequently, the output may appear to contain multiple rows\n  for the same mutex. Pre-MySQL 5.7.8 Status field values include:\n\n  o count indicates how many times the mutex was requested.\n\n  o spin_waits indicates how many times the spinlock had to run.\n\n  o spin_rounds indicates the number of spinlock rounds. (spin_rounds\n    divided by spin_waits provides the average round count.)\n\n  o os_waits indicates the number of operating system waits. This\n    occurs when the spinlock did not work (the mutex was not locked\n    during the spinlock and it was necessary to yield to the operating\n    system and wait).\n\n  o os_yields indicates the number of times a thread trying to lock a\n    mutex gave up its timeslice and yielded to the operating system (on\n    the presumption that permitting other threads to run will free the\n    mutex so that it can be locked).\n\n  o os_wait_times indicates the amount of time (in ms) spent in\n    operating system waits. In MySQL 5.7 timing is disabled and this\n    value is always 0.\n\n  As of MySQL 5.7.8, the Status field reports the number of spins,\n  waits, and calls. Statistics for low-level operating system mutexes,\n  which are implemented outside of InnoDB, are not reported.\n\n  o spins indicates the number of spins.\n\n  o waits indicates the number of mutex waits.\n\n  o calls indicates how many times the mutex was requested.\n\nSHOW ENGINE INNODB MUTEX skips the mutexes and rw-locks of buffer pool\nblocks, as the amount of output can be overwhelming on systems with a\nlarge buffer pool. (There is one mutex and one rw-lock in each 16K\nbuffer pool block, and there are 65,536 blocks per gigabyte.) SHOW\nENGINE INNODB MUTEX also does not list any mutexes or rw-locks that\nhave never been waited on (os_waits=0). Thus, SHOW ENGINE INNODB MUTEX\nonly displays information about mutexes and rw-locks outside of the\nbuffer pool that have caused at least one OS-level wait.\n\nUse SHOW ENGINE PERFORMANCE_SCHEMA STATUS to inspect the internal\noperation of the Performance Schema code:\n\nmysql> SHOW ENGINE PERFORMANCE_SCHEMA STATUS\\G\n...\n*************************** 3. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.size\nStatus: 76\n*************************** 4. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.count\nStatus: 10000\n*************************** 5. row ***************************\n  Type: performance_schema\n  Name: events_waits_history.memory\nStatus: 760000\n...\n*************************** 57. row ***************************\n  Type: performance_schema\n  Name: performance_schema.memory\nStatus: 26459600\n...\n\nThis statement is intended to help the DBA understand the effects that\ndifferent Performance Schema options have on memory requirements.\n\nName values consist of two parts, which name an internal buffer and a\nbuffer attribute, respectively. Interpret buffer names as follows:\n\no An internal buffer that is not exposed as a table is named within\n  parentheses. Examples: (pfs_cond_class).size,\n  (pfs_mutex_class).memory.\n\no An internal buffer that is exposed as a table in the\n  performance_schema database is named after the table, without\n  parentheses. Examples: events_waits_history.size,\n  mutex_instances.count.\n\no A value that applies to the Performance Schema as a whole begins with\n  performance_schema. Example: performance_schema.memory.\n\nBuffer attributes have these meanings:\n\no size is the size of the internal record used by the implementation,\n  such as the size of a row in a table. size values cannot be changed.\n\no count is the number of internal records, such as the number of rows\n  in a table. count values can be changed using Performance Schema\n  configuration options.\n\no For a table, tbl_name.memory is the product of size and count. For\n  the Performance Schema as a whole, performance_schema.memory is the\n  sum of all the memory used (the sum of all other memory values).\n\nIn some cases, there is a direct relationship between a Performance\nSchema configuration parameter and a SHOW ENGINE value. For example,\nevents_waits_history_long.count corresponds to\nperformance_schema_events_waits_history_long_size. In other cases, the\nrelationship is more complex. For example, events_waits_history.count\ncorresponds to performance_schema_events_waits_history_size (the number\nof rows per thread) multiplied by\nperformance_schema_max_thread_instances ( the number of threads).\n\nSHOW ENGINE NDB STATUS If the server has the NDB storage engine\nenabled, SHOW ENGINE NDB STATUS displays cluster status information\nsuch as the number of connected data nodes, the cluster connectstring,\nand cluster binary log epochs, as well as counts of various Cluster API\nobjects created by the MySQL Server when connected to the cluster.\nSample output from this statement is shown here:\n\nmysql> SHOW ENGINE NDB STATUS;\n+------------+-----------------------+--------------------------------------------------+\n| Type       | Name                  | Status                                           |\n+------------+-----------------------+--------------------------------------------------+\n| ndbcluster | connection            | cluster_node_id=7,\n  connected_host=198.51.100.103, connected_port=1186, number_of_data_nodes=4,\n  number_of_ready_data_nodes=3, connect_count=0                                         |\n| ndbcluster | NdbTransaction        | created=6, free=0, sizeof=212                    |\n| ndbcluster | NdbOperation          | created=8, free=8, sizeof=660                    |\n| ndbcluster | NdbIndexScanOperation | created=1, free=1, sizeof=744                    |\n| ndbcluster | NdbIndexOperation     | created=0, free=0, sizeof=664                    |\n| ndbcluster | NdbRecAttr            | created=1285, free=1285, sizeof=60               |\n| ndbcluster | NdbApiSignal          | created=16, free=16, sizeof=136                  |\n| ndbcluster | NdbLabel              | created=0, free=0, sizeof=196                    |\n| ndbcluster | NdbBranch             | created=0, free=0, sizeof=24                     |\n| ndbcluster | NdbSubroutine         | created=0, free=0, sizeof=68                     |\n| ndbcluster | NdbCall               | created=0, free=0, sizeof=16                     |\n| ndbcluster | NdbBlob               | created=1, free=1, sizeof=264                    |\n| ndbcluster | NdbReceiver           | created=4, free=0, sizeof=68                     |\n| ndbcluster | binlog                | latest_epoch=155467, latest_trans_epoch=148126,\n  latest_received_binlog_epoch=0, latest_handled_binlog_epoch=0,\n  latest_applied_binlog_epoch=0                                                         |\n+------------+-----------------------+--------------------------------------------------+\n\nThe Status column in each of these rows provides information about the\nMySQL server\'s connection to the cluster and about the cluster binary\nlog\'s status, respectively. The Status information is in the form of\ncomma-delimited set of name/value pairs.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-engine.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-engine.html'),(623,'SHOW ENGINES',3,'Syntax:\nSHOW [STORAGE] ENGINES\n\nSHOW ENGINES displays status information about the server\'s storage\nengines. This is particularly useful for checking whether a storage\nengine is supported, or to see what the default engine is.\n\nFor information about MySQL storage engines, see\nhttps://dev.mysql.com/doc/refman/5.7/en/innodb-storage-engine.html, and\nhttps://dev.mysql.com/doc/refman/5.7/en/storage-engines.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-engines.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-engines.html'),(624,'SHOW ERRORS',3,'Syntax:\nSHOW ERRORS [LIMIT [offset,] row_count]\nSHOW COUNT(*) ERRORS\n\nSHOW ERRORS is a diagnostic statement that is similar to SHOW WARNINGS,\nexcept that it displays information only for errors, rather than for\nerrors, warnings, and notes.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nThe SHOW COUNT(*) ERRORS statement displays the number of errors. You\ncan also retrieve this number from the error_count variable:\n\nSHOW COUNT(*) ERRORS;\nSELECT @@error_count;\n\nSHOW ERRORS and error_count apply only to errors, not warnings or\nnotes. In other respects, they are similar to SHOW WARNINGS and\nwarning_count. In particular, SHOW ERRORS cannot display information\nfor more than max_error_count messages, and error_count can exceed the\nvalue of max_error_count if the number of errors exceeds\nmax_error_count.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-errors.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-errors.html'),(625,'SHOW EVENTS',3,'Syntax:\nSHOW EVENTS\n    [{FROM | IN} schema_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement displays information about Event Manager events, which\nare discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/event-scheduler.html. It\nrequires the EVENT privilege for the database from which the events are\nto be shown.\n\nIn its simplest form, SHOW EVENTS lists all of the events in the\ncurrent schema:\n\nmysql> SELECT CURRENT_USER(), SCHEMA();\n+----------------+----------+\n| CURRENT_USER() | SCHEMA() |\n+----------------+----------+\n| jon@ghidora    | myschema |\n+----------------+----------+\n1 row in set (0.00 sec)\n\nmysql> SHOW EVENTS\\G\n*************************** 1. row ***************************\n                  Db: myschema\n                Name: e_daily\n             Definer: jon@ghidora\n           Time zone: SYSTEM\n                Type: RECURRING\n          Execute at: NULL\n      Interval value: 1\n      Interval field: DAY\n              Starts: 2018-08-08 11:06:34\n                Ends: NULL\n              Status: ENABLED\n          Originator: 1\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n\nTo see events for a specific schema, use the FROM clause. For example,\nto see events for the test schema, use the following statement:\n\nSHOW EVENTS FROM test;\n\nThe LIKE clause, if present, indicates which event names to match. The\nWHERE clause can be given to select rows using more general conditions,\nas discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-events.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-events.html'),(626,'SHOW FUNCTION CODE',3,'Syntax:\nSHOW FUNCTION CODE func_name\n\nThis statement is similar to SHOW PROCEDURE CODE but for stored\nfunctions. See [HELP SHOW PROCEDURE CODE].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-function-code.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-function-code.html'),(627,'SHOW FUNCTION STATUS',3,'Syntax:\nSHOW FUNCTION STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is similar to SHOW PROCEDURE STATUS but for stored\nfunctions. See [HELP SHOW PROCEDURE STATUS].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-function-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-function-status.html'),(628,'SHOW GRANTS',3,'Syntax:\nSHOW GRANTS [FOR user]\n\nThis statement displays the privileges that are assigned to a MySQL\nuser account, in the form of GRANT statements that must be executed to\nduplicate the privilege assignments.\n\n*Note*:\n\nTo display nonprivilege information for MySQL accounts, use the SHOW\nCREATE USER statement. See [HELP SHOW CREATE USER].\n\nSHOW GRANTS requires the SELECT privilege for the mysql system\ndatabase, except to display privileges for the current user.\n\nTo name the account for SHOW GRANTS, use the same format as for the\nGRANT statement (for example, \'jeffrey\'@\'localhost\'):\n\nmysql> SHOW GRANTS FOR \'jeffrey\'@\'localhost\';\n+------------------------------------------------------------------+\n| Grants for jeffrey@localhost                                     |\n+------------------------------------------------------------------+\n| GRANT USAGE ON *.* TO `jeffrey`@`localhost`                      |\n| GRANT SELECT, INSERT, UPDATE ON `db1`.* TO `jeffrey`@`localhost` |\n+------------------------------------------------------------------+\n\nThe host part, if omitted, defaults to \'%\'. For additional information\nabout specifying account names, see\nhttps://dev.mysql.com/doc/refman/5.7/en/account-names.html.\n\nTo display the privileges granted to the current user (the account you\nare using to connect to the server), you can use any of the following\nstatements:\n\nSHOW GRANTS;\nSHOW GRANTS FOR CURRENT_USER;\nSHOW GRANTS FOR CURRENT_USER();\n\nIf SHOW GRANTS FOR CURRENT_USER (or any of the equivalent syntaxes) is\nused in definer context, such as within a stored procedure that\nexecutes with definer rather than invoker privileges, the grants\ndisplayed are those of the definer and not the invoker.\n\nSHOW GRANTS does not display privileges that are available to the named\naccount but are granted to a different account. For example, if an\nanonymous account exists, the named account might be able to use its\nprivileges, but SHOW GRANTS does not display them.\n\nSHOW GRANTS output does not include IDENTIFIED BY PASSWORD clauses. Use\nthe SHOW CREATE USER statement instead. See [HELP SHOW CREATE USER].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-grants.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-grants.html'),(629,'SHOW INDEX',3,'Syntax:\nSHOW {INDEX | INDEXES | KEYS}\n    {FROM | IN} tbl_name\n    [{FROM | IN} db_name]\n    [WHERE expr]\n\nSHOW INDEX returns table index information. The format resembles that\nof the SQLStatistics call in ODBC. This statement requires some\nprivilege for any column in the table.\n\nmysql> SHOW INDEX FROM City\\G\n*************************** 1. row ***************************\n        Table: city\n   Non_unique: 0\n     Key_name: PRIMARY\n Seq_in_index: 1\n  Column_name: ID\n    Collation: A\n  Cardinality: 4188\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE\n      Comment:\nIndex_comment:\n*************************** 2. row ***************************\n        Table: city\n   Non_unique: 1\n     Key_name: CountryCode\n Seq_in_index: 1\n  Column_name: CountryCode\n    Collation: A\n  Cardinality: 232\n     Sub_part: NULL\n       Packed: NULL\n         Null:\n   Index_type: BTREE\n      Comment:\nIndex_comment:\n\nAn alternative to tbl_name FROM db_name syntax is db_name.tbl_name.\nThese two statements are equivalent:\n\nSHOW INDEX FROM mytable FROM mydb;\nSHOW INDEX FROM mydb.mytable;\n\nThe WHERE clause can be given to select rows using more general\nconditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nSHOW INDEX returns the following fields:\n\no Table\n\n  The name of the table.\n\no Non_unique\n\n  0 if the index cannot contain duplicates, 1 if it can.\n\no Key_name\n\n  The name of the index. If the index is the primary key, the name is\n  always PRIMARY.\n\no Seq_in_index\n\n  The column sequence number in the index, starting with 1.\n\no Column_name\n\n  The name of the column.\n\no Collation\n\n  How the column is sorted in the index. This can have values A\n  (ascending) or NULL (not sorted).\n\no Cardinality\n\n  An estimate of the number of unique values in the index. To update\n  this number, run ANALYZE TABLE or (for MyISAM tables) myisamchk -a.\n\n  Cardinality is counted based on statistics stored as integers, so the\n  value is not necessarily exact even for small tables. The higher the\n  cardinality, the greater the chance that MySQL uses the index when\n  doing joins.\n\no Sub_part\n\n  The index prefix. That is, the number of indexed characters if the\n  column is only partly indexed, NULL if the entire column is indexed.\n\n  *Note*:\n\n  Prefix limits are measured in bytes. However, prefix lengths for\n  index specifications in CREATE TABLE, ALTER TABLE, and CREATE INDEX\n  statements are interpreted as number of characters for nonbinary\n  string types (CHAR, VARCHAR, TEXT) and number of bytes for binary\n  string types (BINARY, VARBINARY, BLOB). Take this into account when\n  specifying a prefix length for a nonbinary string column that uses a\n  multibyte character set.\n\n  For additional information about index prefixes, see\n  https://dev.mysql.com/doc/refman/5.7/en/column-indexes.html, and\n  [HELP CREATE INDEX].\n\no Packed\n\n  Indicates how the key is packed. NULL if it is not.\n\no Null\n\n  Contains YES if the column may contain NULL values and \'\' if not.\n\no Index_type\n\n  The index method used (BTREE, FULLTEXT, HASH, RTREE).\n\no Comment\n\n  Information about the index not described in its own column, such as\n  disabled if the index is disabled.\n\no Index_comment\n\n  Any comment provided for the index with a COMMENT attribute when the\n  index was created.\n\nInformation about table indexes is also available from the\nINFORMATION_SCHEMA STATISTICS table. See\nhttps://dev.mysql.com/doc/refman/5.7/en/statistics-table.html.\n\nYou can list a table\'s indexes with the mysqlshow -k db_name tbl_name\ncommand.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-index.html'),(630,'SHOW MASTER STATUS',3,'Syntax:\nSHOW MASTER STATUS\n\nThis statement provides status information about the binary log files\nof the master. It requires either the SUPER or REPLICATION CLIENT\nprivilege.\n\nExample:\n\nmysql> SHOW MASTER STATUS\\G\n*************************** 1. row ***************************\n             File: master-bin.000002\n         Position: 1307\n     Binlog_Do_DB: test\n Binlog_Ignore_DB: manual, mysql\nExecuted_Gtid_Set: 3E11FA47-71CA-11E1-9E33-C80AA9429562:1-5\n1 row in set (0.00 sec)\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-master-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-master-status.html'),(631,'SHOW OPEN TABLES',3,'Syntax:\nSHOW OPEN TABLES\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW OPEN TABLES lists the non-TEMPORARY tables that are currently open\nin the table cache. See\nhttps://dev.mysql.com/doc/refman/5.7/en/table-cache.html. The FROM\nclause, if present, restricts the tables shown to those present in the\ndb_name database. The LIKE clause, if present, indicates which table\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-open-tables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-open-tables.html'),(632,'SHOW PLUGINS',3,'Syntax:\nSHOW PLUGINS\n\nSHOW PLUGINS displays information about server plugins.\n\nExample of SHOW PLUGINS output:\n\nmysql> SHOW PLUGINS\\G\n*************************** 1. row ***************************\n   Name: binlog\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 2. row ***************************\n   Name: CSV\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 3. row ***************************\n   Name: MEMORY\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n*************************** 4. row ***************************\n   Name: MyISAM\n Status: ACTIVE\n   Type: STORAGE ENGINE\nLibrary: NULL\nLicense: GPL\n...\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-plugins.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-plugins.html'),(633,'SHOW PRIVILEGES',3,'Syntax:\nSHOW PRIVILEGES\n\nSHOW PRIVILEGES shows the list of system privileges that the MySQL\nserver supports. The exact list of privileges depends on the version of\nyour server.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-privileges.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-privileges.html'),(634,'SHOW PROCEDURE CODE',3,'Syntax:\nSHOW PROCEDURE CODE proc_name\n\nThis statement is a MySQL extension that is available only for servers\nthat have been built with debugging support. It displays a\nrepresentation of the internal implementation of the named stored\nprocedure. A similar statement, SHOW FUNCTION CODE, displays\ninformation about stored functions (see [HELP SHOW FUNCTION CODE]).\n\nTo use either statement, you must be the owner of the routine or have\nSELECT access to the mysql.proc table.\n\nIf the named routine is available, each statement produces a result\nset. Each row in the result set corresponds to one \"instruction\" in the\nroutine. The first column is Pos, which is an ordinal number beginning\nwith 0. The second column is Instruction, which contains an SQL\nstatement (usually changed from the original source), or a directive\nwhich has meaning only to the stored-routine handler.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-procedure-code.html\n\n','mysql> DELIMITER //\nmysql> CREATE PROCEDURE p1 ()\n    -> BEGIN\n    ->   DECLARE fanta INT DEFAULT 55;\n    ->   DROP TABLE t2;\n    ->   LOOP\n    ->     INSERT INTO t3 VALUES (fanta);\n    ->     END LOOP;\n    ->   END//\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> SHOW PROCEDURE CODE p1//\n+-----+----------------------------------------+\n| Pos | Instruction                            |\n+-----+----------------------------------------+\n|   0 | set fanta@0 55                         |\n|   1 | stmt 9 \"DROP TABLE t2\"                 |\n|   2 | stmt 5 \"INSERT INTO t3 VALUES (fanta)\" |\n|   3 | jump 2                                 |\n+-----+----------------------------------------+\n4 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/show-procedure-code.html'),(635,'SHOW PROCEDURE STATUS',3,'Syntax:\nSHOW PROCEDURE STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\nThis statement is a MySQL extension. It returns characteristics of a\nstored procedure, such as the database, name, type, creator, creation\nand modification dates, and character set information. A similar\nstatement, SHOW FUNCTION STATUS, displays information about stored\nfunctions (see [HELP SHOW FUNCTION STATUS]).\n\nThe LIKE clause, if present, indicates which procedure or function\nnames to match. The WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-procedure-status.html\n\n','mysql> SHOW PROCEDURE STATUS LIKE \'sp1\'\\G\n*************************** 1. row ***************************\n                  Db: test\n                Name: sp1\n                Type: PROCEDURE\n             Definer: testuser@localhost\n            Modified: 2018-08-08 13:54:11\n             Created: 2018-08-08 13:54:11\n       Security_type: DEFINER\n             Comment:\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n','https://dev.mysql.com/doc/refman/5.7/en/show-procedure-status.html'),(636,'SHOW PROCESSLIST',3,'Syntax:\nSHOW [FULL] PROCESSLIST\n\nSHOW PROCESSLIST shows which threads are running. If you have the\nPROCESS privilege, you can see all threads. Otherwise, you can see only\nyour own threads (that is, threads associated with the MySQL account\nthat you are using). If you do not use the FULL keyword, only the first\n100 characters of each statement are shown in the Info field.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-processlist.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-processlist.html'),(637,'SHOW PROFILE',3,'Syntax:\nSHOW PROFILE [type [, type] ... ]\n    [FOR QUERY n]\n    [LIMIT row_count [OFFSET offset]]\n\ntype: {\n    ALL\n  | BLOCK IO\n  | CONTEXT SWITCHES\n  | CPU\n  | IPC\n  | MEMORY\n  | PAGE FAULTS\n  | SOURCE\n  | SWAPS\n}\n\nThe SHOW PROFILE and SHOW PROFILES statements display profiling\ninformation that indicates resource usage for statements executed\nduring the course of the current session.\n\n*Note*:\n\nThe SHOW PROFILE and SHOW PROFILES statements are deprecated and will\nbe removed in a future MySQL release. Use the Performance Schema\ninstead; see\nhttps://dev.mysql.com/doc/refman/5.7/en/performance-schema-query-profil\ning.html.\n\nTo control profiling, use the profiling session variable, which has a\ndefault value of 0 (OFF). Enable profiling by setting profiling to 1 or\nON:\n\nmysql> SET profiling = 1;\n\nSHOW PROFILES displays a list of the most recent statements sent to the\nserver. The size of the list is controlled by the\nprofiling_history_size session variable, which has a default value of\n15. The maximum value is 100. Setting the value to 0 has the practical\neffect of disabling profiling.\n\nAll statements are profiled except SHOW PROFILE and SHOW PROFILES, so\nyou will find neither of those statements in the profile list.\nMalformed statements are profiled. For example, SHOW PROFILING is an\nillegal statement, and a syntax error occurs if you try to execute it,\nbut it will show up in the profiling list.\n\nSHOW PROFILE displays detailed information about a single statement.\nWithout the FOR QUERY n clause, the output pertains to the most\nrecently executed statement. If FOR QUERY n is included, SHOW PROFILE\ndisplays information for statement n. The values of n correspond to the\nQuery_ID values displayed by SHOW PROFILES.\n\nThe LIMIT row_count clause may be given to limit the output to\nrow_count rows. If LIMIT is given, OFFSET offset may be added to begin\nthe output offset rows into the full set of rows.\n\nBy default, SHOW PROFILE displays Status and Duration columns. The\nStatus values are like the State values displayed by SHOW PROCESSLIST,\nalthough there might be some minor differences in interpretion for the\ntwo statements for some status values (see\nhttps://dev.mysql.com/doc/refman/5.7/en/thread-information.html).\n\nOptional type values may be specified to display specific additional\ntypes of information:\n\no ALL displays all information\n\no BLOCK IO displays counts for block input and output operations\n\no CONTEXT SWITCHES displays counts for voluntary and involuntary\n  context switches\n\no CPU displays user and system CPU usage times\n\no IPC displays counts for messages sent and received\n\no MEMORY is not currently implemented\n\no PAGE FAULTS displays counts for major and minor page faults\n\no SOURCE displays the names of functions from the source code, together\n  with the name and line number of the file in which the function\n  occurs\n\no SWAPS displays swap counts\n\nProfiling is enabled per session. When a session ends, its profiling\ninformation is lost.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-profile.html\n\n','mysql> SELECT @@profiling;\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set (0.00 sec)\n\nmysql> SET profiling = 1;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql> DROP TABLE IF EXISTS t1;\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> CREATE TABLE T1 (id INT);\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> SHOW PROFILES;\n+----------+----------+--------------------------+\n| Query_ID | Duration | Query                    |\n+----------+----------+--------------------------+\n|        0 | 0.000088 | SET PROFILING = 1        |\n|        1 | 0.000136 | DROP TABLE IF EXISTS t1  |\n|        2 | 0.011947 | CREATE TABLE t1 (id INT) |\n+----------+----------+--------------------------+\n3 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE;\n+----------------------+----------+\n| Status               | Duration |\n+----------------------+----------+\n| checking permissions | 0.000040 |\n| creating table       | 0.000056 |\n| After create         | 0.011363 |\n| query end            | 0.000375 |\n| freeing items        | 0.000089 |\n| logging slow query   | 0.000019 |\n| cleaning up          | 0.000005 |\n+----------------------+----------+\n7 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE FOR QUERY 1;\n+--------------------+----------+\n| Status             | Duration |\n+--------------------+----------+\n| query end          | 0.000107 |\n| freeing items      | 0.000008 |\n| logging slow query | 0.000015 |\n| cleaning up        | 0.000006 |\n+--------------------+----------+\n4 rows in set (0.00 sec)\n\nmysql> SHOW PROFILE CPU FOR QUERY 2;\n+----------------------+----------+----------+------------+\n| Status               | Duration | CPU_user | CPU_system |\n+----------------------+----------+----------+------------+\n| checking permissions | 0.000040 | 0.000038 |   0.000002 |\n| creating table       | 0.000056 | 0.000028 |   0.000028 |\n| After create         | 0.011363 | 0.000217 |   0.001571 |\n| query end            | 0.000375 | 0.000013 |   0.000028 |\n| freeing items        | 0.000089 | 0.000010 |   0.000014 |\n| logging slow query   | 0.000019 | 0.000009 |   0.000010 |\n| cleaning up          | 0.000005 | 0.000003 |   0.000002 |\n+----------------------+----------+----------+------------+\n7 rows in set (0.00 sec)\n','https://dev.mysql.com/doc/refman/5.7/en/show-profile.html'),(638,'SHOW PROFILES',3,'Syntax:\nSHOW PROFILES\n\nThe SHOW PROFILES statement, together with SHOW PROFILE, displays\nprofiling information that indicates resource usage for statements\nexecuted during the course of the current session. For more\ninformation, see [HELP SHOW PROFILE].\n\n*Note*:\n\nThe SHOW PROFILE and SHOW PROFILES statements are deprecated and will\nbe removed in a future MySQL release. Use the Performance Schema\ninstead; see\nhttps://dev.mysql.com/doc/refman/5.7/en/performance-schema-query-profil\ning.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-profiles.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-profiles.html'),(639,'SHOW RELAYLOG EVENTS',3,'Syntax:\nSHOW RELAYLOG EVENTS\n    [IN \'log_name\']\n    [FROM pos]\n    [LIMIT [offset,] row_count]\n    [channel_option]\n\nchannel_option:\n    FOR CHANNEL channel\n\nShows the events in the relay log of a replication slave. If you do not\nspecify \'log_name\', the first relay log is displayed. This statement\nhas no effect on the master. SHOW RELAYLOG EVENTS requires the\nREPLICATION SLAVE privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-relaylog-events.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-relaylog-events.html'),(640,'SHOW SLAVE HOSTS',3,'Syntax:\nSHOW SLAVE HOSTS\n\nDisplays a list of replication slaves currently registered with the\nmaster.\n\nSHOW SLAVE HOSTS should be executed on a server that acts as a\nreplication master. SHOW SLAVE HOSTS requires the REPLICATION SLAVE\nprivilege. The statement displays information about servers that are or\nhave been connected as replication slaves, with each row of the result\ncorresponding to one slave server, as shown here:\n\nmysql> SHOW SLAVE HOSTS;\n+------------+-----------+------+-----------+--------------------------------------+\n| Server_id  | Host      | Port | Master_id | Slave_UUID                           |\n+------------+-----------+------+-----------+--------------------------------------+\n|  192168010 | iconnect2 | 3306 | 192168011 | 14cb6624-7f93-11e0-b2c0-c80aa9429562 |\n| 1921680101 | athena    | 3306 | 192168011 | 07af4990-f41f-11df-a566-7ac56fdaf645 |\n+------------+-----------+------+-----------+--------------------------------------+\n\no Server_id: The unique server ID of the slave server, as configured in\n  the slave server\'s option file, or on the command line with\n  --server-id=value.\n\no Host: The host name of the slave server as specified on the slave\n  with the --report-host option. This can differ from the machine name\n  as configured in the operating system.\n\no User: The slave server user name as, specified on the slave with the\n  --report-user option. Statement output includes this column only if\n  the master server is started with the --show-slave-auth-info option.\n\no Password: The slave server password as, specified on the slave with\n  the --report-password option. Statement output includes this column\n  only if the master server is started with the --show-slave-auth-info\n  option.\n\no Port: The port on the master to which the slave server is listening,\n  as specified on the slave with the --report-port option.\n\n  A zero in this column means that the slave port (--report-port) was\n  not set.\n\no Master_id: The unique server ID of the master server that the slave\n  server is replicating from. This is the server ID of the server on\n  which SHOW SLAVE HOSTS is executed, so this same value is listed for\n  each row in the result.\n\no Slave_UUID: The globally unique ID of this slave, as generated on the\n  slave and found in the slave\'s auto.cnf file.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-slave-hosts.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-slave-hosts.html'),(641,'SHOW SLAVE STATUS',3,'Syntax:\nSHOW SLAVE STATUS [FOR CHANNEL channel]\n\nThis statement provides status information on essential parameters of\nthe slave threads. It requires either the SUPER or REPLICATION CLIENT\nprivilege.\n\nIf you issue this statement using the mysql client, you can use a \\G\nstatement terminator rather than a semicolon to obtain a more readable\nvertical layout:\n\nmysql> SHOW SLAVE STATUS\\G\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: localhost\n                  Master_User: repl\n                  Master_Port: 13000\n                Connect_Retry: 60\n              Master_Log_File: master-bin.000002\n          Read_Master_Log_Pos: 1307\n               Relay_Log_File: slave-relay-bin.000003\n                Relay_Log_Pos: 1508\n        Relay_Master_Log_File: master-bin.000002\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n              Replicate_Do_DB:\n          Replicate_Ignore_DB:\n           Replicate_Do_Table:\n       Replicate_Ignore_Table:\n      Replicate_Wild_Do_Table:\n  Replicate_Wild_Ignore_Table:\n                   Last_Errno: 0\n                   Last_Error:\n                 Skip_Counter: 0\n          Exec_Master_Log_Pos: 1307\n              Relay_Log_Space: 1858\n              Until_Condition: None\n               Until_Log_File:\n                Until_Log_Pos: 0\n           Master_SSL_Allowed: No\n           Master_SSL_CA_File:\n           Master_SSL_CA_Path:\n              Master_SSL_Cert:\n            Master_SSL_Cipher:\n               Master_SSL_Key:\n        Seconds_Behind_Master: 0\nMaster_SSL_Verify_Server_Cert: No\n                Last_IO_Errno: 0\n                Last_IO_Error:\n               Last_SQL_Errno: 0\n               Last_SQL_Error:\n  Replicate_Ignore_Server_Ids:\n             Master_Server_Id: 1\n                  Master_UUID: 3e11fa47-71ca-11e1-9e33-c80aa9429562\n             Master_Info_File: /var/mysqld.2/data/master.info\n                    SQL_Delay: 0\n          SQL_Remaining_Delay: NULL\n      Slave_SQL_Running_State: Reading event from the relay log\n           Master_Retry_Count: 10\n                  Master_Bind:\n      Last_IO_Error_Timestamp:\n     Last_SQL_Error_Timestamp:\n               Master_SSL_Crl:\n           Master_SSL_Crlpath:\n           Retrieved_Gtid_Set: 3e11fa47-71ca-11e1-9e33-c80aa9429562:1-5\n            Executed_Gtid_Set: 3e11fa47-71ca-11e1-9e33-c80aa9429562:1-5\n                Auto_Position: 1\n         Replicate_Rewrite_DB:\n                 Channel_name:\n           Master_TLS_Version: TLSv1.2\n\nThe Performance Schema provides tables that expose replication\ninformation. This is similar to the information available from the SHOW\nSLAVE STATUS statement, but represented in table form. For details, see\nhttps://dev.mysql.com/doc/refman/5.7/en/performance-schema-replication-\ntables.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-slave-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-slave-status.html'),(642,'SHOW STATUS',3,'Syntax:\nSHOW [GLOBAL | SESSION] STATUS\n    [LIKE \'pattern\' | WHERE expr]\n\n*Note*:\n\nAs of MySQL 5.7.6, the value of the show_compatibility_56 system\nvariable affects the information available from and privileges required\nfor the statement described here. For details, see the description of\nthat variable in\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nSHOW STATUS provides server status information (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-status-variables.html).\nThis statement does not require any privilege. It requires only the\nability to connect to the server.\n\nStatus variable information is also available from these sources:\n\no Performance Schema tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/performance-schema-status-var\n  iable-tables.html.\n\no The GLOBAL_STATUS and SESSION_STATUS tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/status-table.html.\n\no The mysqladmin extended-status command. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysqladmin.html.\n\nFor SHOW STATUS, a LIKE clause, if present, indicates which variable\nnames to match. A WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nSHOW STATUS accepts an optional GLOBAL or SESSION variable scope\nmodifier:\n\no With a GLOBAL modifier, the statement displays the global status\n  values. A global status variable may represent status for some aspect\n  of the server itself (for example, Aborted_connects), or the\n  aggregated status over all connections to MySQL (for example,\n  Bytes_received and Bytes_sent). If a variable has no global value,\n  the session value is displayed.\n\no With a SESSION modifier, the statement displays the status variable\n  values for the current connection. If a variable has no session\n  value, the global value is displayed. LOCAL is a synonym for SESSION.\n\no If no modifier is present, the default is SESSION.\n\nThe scope for each status variable is listed at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-status-variables.html.\n\nEach invocation of the SHOW STATUS statement uses an internal temporary\ntable and increments the global Created_tmp_tables value.\n\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern:\n\nmysql> SHOW STATUS LIKE \'Key%\';\n+--------------------+----------+\n| Variable_name      | Value    |\n+--------------------+----------+\n| Key_blocks_used    | 14955    |\n| Key_read_requests  | 96854827 |\n| Key_reads          | 162040   |\n| Key_write_requests | 7589728  |\n| Key_writes         | 3813196  |\n+--------------------+----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-status.html'),(643,'SHOW TABLE STATUS',3,'Syntax:\nSHOW TABLE STATUS\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLE STATUS works likes SHOW TABLES, but provides a lot of\ninformation about each non-TEMPORARY table. You can also get this list\nusing the mysqlshow --status db_name command. The LIKE clause, if\npresent, indicates which table names to match. The WHERE clause can be\ngiven to select rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-table-status.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-table-status.html'),(644,'SHOW TABLES',3,'Syntax:\nSHOW [FULL] TABLES\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TABLES lists the non-TEMPORARY tables in a given database. You can\nalso get this list using the mysqlshow db_name command. The LIKE\nclause, if present, indicates which table names to match. The WHERE\nclause can be given to select rows using more general conditions, as\ndiscussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nMatching performed by the LIKE clause is dependent on the setting of\nthe lower_case_table_names system variable.\n\nThis statement also lists any views in the database. The optional FULL\nmodifier causes SHOW TABLES to display a second output column with\nvalues of BASE TABLE for a table, VIEW for a view, or SYSTEM VIEW for\nan INFORMATION_SCHEMA table.\n\nIf you have no privileges for a base table or view, it does not show up\nin the output from SHOW TABLES or mysqlshow db_name.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-tables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-tables.html'),(645,'SHOW TRIGGERS',3,'Syntax:\nSHOW TRIGGERS\n    [{FROM | IN} db_name]\n    [LIKE \'pattern\' | WHERE expr]\n\nSHOW TRIGGERS lists the triggers currently defined for tables in a\ndatabase (the default database unless a FROM clause is given). This\nstatement returns results only for databases and tables for which you\nhave the TRIGGER privilege. The LIKE clause, if present, indicates\nwhich table names (not trigger names) to match and causes the statement\nto display triggers for those tables. The WHERE clause can be given to\nselect rows using more general conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nFor the ins_sum trigger defined in\nhttps://dev.mysql.com/doc/refman/5.7/en/triggers.html, the output of\nSHOW TRIGGERS is as shown here:\n\nmysql> SHOW TRIGGERS LIKE \'acc%\'\\G\n*************************** 1. row ***************************\n             Trigger: ins_sum\n               Event: INSERT\n               Table: account\n           Statement: SET @sum = @sum + NEW.amount\n              Timing: BEFORE\n             Created: 2018-08-08 10:10:12.61\n            sql_mode: ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,\n                      NO_ZERO_IN_DATE,NO_ZERO_DATE,\n                      ERROR_FOR_DIVISION_BY_ZERO,\n                      NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION\n             Definer: me@localhost\ncharacter_set_client: utf8\ncollation_connection: utf8_general_ci\n  Database Collation: latin1_swedish_ci\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-triggers.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-triggers.html'),(646,'SHOW VARIABLES',3,'Syntax:\nSHOW [GLOBAL | SESSION] VARIABLES\n    [LIKE \'pattern\' | WHERE expr]\n\n*Note*:\n\nAs of MySQL 5.7.6, the value of the show_compatibility_56 system\nvariable affects the information available from and privileges required\nfor the statement described here. For details, see the description of\nthat variable in\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nSHOW VARIABLES shows the values of MySQL system variables (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html).\nThis statement does not require any privilege. It requires only the\nability to connect to the server.\n\nSystem variable information is also available from these sources:\n\no Performance Schema tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/performance-schema-system-var\n  iable-tables.html.\n\no The GLOBAL_VARIABLES and SESSION_VARIABLES tables. See\n  https://dev.mysql.com/doc/refman/5.7/en/variables-table.html.\n\no The mysqladmin variables command. See\n  https://dev.mysql.com/doc/refman/5.7/en/mysqladmin.html.\n\nFor SHOW VARIABLES, a LIKE clause, if present, indicates which variable\nnames to match. A WHERE clause can be given to select rows using more\ngeneral conditions, as discussed in\nhttps://dev.mysql.com/doc/refman/5.7/en/extended-show.html.\n\nSHOW VARIABLES accepts an optional GLOBAL or SESSION variable scope\nmodifier:\n\no With a GLOBAL modifier, the statement displays global system variable\n  values. These are the values used to initialize the corresponding\n  session variables for new connections to MySQL. If a variable has no\n  global value, no value is displayed.\n\no With a SESSION modifier, the statement displays the system variable\n  values that are in effect for the current connection. If a variable\n  has no session value, the global value is displayed. LOCAL is a\n  synonym for SESSION.\n\no If no modifier is present, the default is SESSION.\n\nThe scope for each system variable is listed at\nhttps://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html.\n\nSHOW VARIABLES is subject to a version-dependent display-width limit.\nFor variables with very long values that are not completely displayed,\nuse SELECT as a workaround. For example:\n\nSELECT @@GLOBAL.innodb_data_file_path;\n\nMost system variables can be set at server startup (read-only variables\nsuch as version_comment are exceptions). Many can be changed at runtime\nwith the SET statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/using-system-variables.html,\nand [HELP SET].\n\nWith a LIKE clause, the statement displays only rows for those\nvariables with names that match the pattern. To obtain the row for a\nspecific variable, use a LIKE clause as shown:\n\nSHOW VARIABLES LIKE \'max_join_size\';\nSHOW SESSION VARIABLES LIKE \'max_join_size\';\n\nTo get a list of variables whose name match a pattern, use the %\nwildcard character in a LIKE clause:\n\nSHOW VARIABLES LIKE \'%size%\';\nSHOW GLOBAL VARIABLES LIKE \'%size%\';\n\nWildcard characters can be used in any position within the pattern to\nbe matched. Strictly speaking, because _ is a wildcard that matches any\nsingle character, you should escape it as \\_ to match it literally. In\npractice, this is rarely necessary.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-variables.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-variables.html'),(647,'SHOW WARNINGS',3,'Syntax:\nSHOW WARNINGS [LIMIT [offset,] row_count]\nSHOW COUNT(*) WARNINGS\n\nSHOW WARNINGS is a diagnostic statement that displays information about\nthe conditions (errors, warnings, and notes) resulting from executing a\nstatement in the current session. Warnings are generated for DML\nstatements such as INSERT, UPDATE, and LOAD DATA as well as DDL\nstatements such as CREATE TABLE and ALTER TABLE.\n\nThe LIMIT clause has the same syntax as for the SELECT statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/select.html.\n\nSHOW WARNINGS is also used following EXPLAIN, to display the extended\ninformation generated by EXPLAIN. See\nhttps://dev.mysql.com/doc/refman/5.7/en/explain-extended.html.\n\nSHOW WARNINGS displays information about the conditions resulting from\nexecution of the most recent nondiagnostic statement in the current\nsession. If the most recent statement resulted in an error during\nparsing, SHOW WARNINGS shows the resulting conditions, regardless of\nstatement type (diagnostic or nondiagnostic).\n\nThe SHOW COUNT(*) WARNINGS diagnostic statement displays the total\nnumber of errors, warnings, and notes. You can also retrieve this\nnumber from the warning_count system variable:\n\nSHOW COUNT(*) WARNINGS;\nSELECT @@warning_count;\n\nA difference in these statements is that the first is a diagnostic\nstatement that does not clear the message list. The second, because it\nis a SELECT statement is considered nondiagnostic and does clear the\nmessage list.\n\nA related diagnostic statement, SHOW ERRORS, shows only error\nconditions (it excludes warnings and notes), and SHOW COUNT(*) ERRORS\nstatement displays the total number of errors. See [HELP SHOW ERRORS].\nGET DIAGNOSTICS can be used to examine information for individual\nconditions. See [HELP GET DIAGNOSTICS].\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/show-warnings.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/show-warnings.html'),(648,'BINLOG',3,'Syntax:\nBINLOG \'str\'\n\nBINLOG is an internal-use statement. It is generated by the mysqlbinlog\nprogram as the printable representation of certain events in binary log\nfiles. (See https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html.)\nThe \'str\' value is a base 64-encoded string the that server decodes to\ndetermine the data change indicated by the corresponding event. This\nstatement requires the SUPER privilege.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/binlog.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/binlog.html'),(649,'CACHE INDEX',3,'Syntax:\nCACHE INDEX {\n      tbl_index_list [, tbl_index_list] ...\n    | tbl_name PARTITION (partition_list)\n  }\n  IN key_cache_name\n\ntbl_index_list:\n  tbl_name [{INDEX|KEY} (index_name[, index_name] ...)]\n\npartition_list: {\n    partition_name[, partition_name] ...\n  | ALL\n}\n\nThe CACHE INDEX statement assigns table indexes to a specific key\ncache. It applies only to MyISAM tables, including partitioned MyISAM\ntables. After the indexes have been assigned, they can be preloaded\ninto the cache if desired with LOAD INDEX INTO CACHE.\n\nThe following statement assigns indexes from the tables t1, t2, and t3\nto the key cache named hot_cache:\n\nmysql> CACHE INDEX t1, t2, t3 IN hot_cache;\n+---------+--------------------+----------+----------+\n| Table   | Op                 | Msg_type | Msg_text |\n+---------+--------------------+----------+----------+\n| test.t1 | assign_to_keycache | status   | OK       |\n| test.t2 | assign_to_keycache | status   | OK       |\n| test.t3 | assign_to_keycache | status   | OK       |\n+---------+--------------------+----------+----------+\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/cache-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/cache-index.html'),(650,'FLUSH',3,'Syntax:\nFLUSH [NO_WRITE_TO_BINLOG | LOCAL] {\n    flush_option [, flush_option] ...\n  | tables_option\n}\n\nflush_option: {\n    BINARY LOGS\n  | DES_KEY_FILE\n  | ENGINE LOGS\n  | ERROR LOGS\n  | GENERAL LOGS\n  | HOSTS\n  | LOGS\n  | PRIVILEGES\n  | OPTIMIZER_COSTS\n  | QUERY CACHE\n  | RELAY LOGS [FOR CHANNEL channel]\n  | SLOW LOGS\n  | STATUS\n  | USER_RESOURCES\n}\n\ntables_option: {\n    TABLES\n  | TABLES tbl_name [, tbl_name] ...\n  | TABLES WITH READ LOCK\n  | TABLES tbl_name [, tbl_name] ... WITH READ LOCK\n  | TABLES tbl_name [, tbl_name] ... FOR EXPORT\n}\n\nThe FLUSH statement has several variant forms that clear or reload\nvarious internal caches, flush tables, or acquire locks. To execute\nFLUSH, you must have the RELOAD privilege. Specific flush options might\nrequire additional privileges, as described later.\n\n*Note*:\n\nIt is not possible to issue FLUSH statements within stored functions or\ntriggers. However, you may use FLUSH in stored procedures, so long as\nthese are not called from stored functions or triggers. See\nhttps://dev.mysql.com/doc/refman/5.7/en/stored-program-restrictions.htm\nl.\n\nBy default, the server writes FLUSH statements to the binary log so\nthat they replicate to replication slaves. To suppress logging, specify\nthe optional NO_WRITE_TO_BINLOG keyword or its alias LOCAL.\n\n*Note*:\n\nFLUSH LOGS, FLUSH BINARY LOGS, FLUSH TABLES WITH READ LOCK (with or\nwithout a table list), and FLUSH TABLES tbl_name ... FOR EXPORT are not\nwritten to the binary log in any case because they would cause problems\nif replicated to a slave.\n\nThe FLUSH statement causes an implicit commit. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nThe mysqladmin utility provides a command-line interface to some flush\noperations, using commands such as flush-hosts, flush-logs,\nflush-privileges, flush-status, and flush-tables. See\nhttps://dev.mysql.com/doc/refman/5.7/en/mysqladmin.html.\n\nSending a SIGHUP signal to the server causes several flush operations\nto occur that are similar to various forms of the FLUSH statement. See\nhttps://dev.mysql.com/doc/refman/5.7/en/server-signal-response.html.\n\nThe RESET statement is similar to FLUSH. See [HELP RESET], for\ninformation about using the RESET statement with replication.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/flush.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/flush.html'),(651,'KILL',3,'Syntax:\nKILL [CONNECTION | QUERY] processlist_id\n\nEach connection to mysqld runs in a separate thread. You can kill a\nthread with the KILL processlist_id statement.\n\nThread processlist identifiers can be determined from the ID column of\nthe INFORMATION_SCHEMA PROCESSLIST table, the Id column of SHOW\nPROCESSLIST output, and the PROCESSLIST_ID column of the Performance\nSchema threads table. The value for the current thread is returned by\nthe CONNECTION_ID() function.\n\nKILL permits an optional CONNECTION or QUERY modifier:\n\no KILL CONNECTION is the same as KILL with no modifier: It terminates\n  the connection associated with the given processlist_id, after\n  terminating any statement the connection is executing.\n\no KILL QUERY terminates the statement the connection is currently\n  executing, but leaves the connection itself intact.\n\nThe ability to see which threads are available to be killed depends on\nthe PROCESS privilege:\n\no Without PROCESS, you can see only your own threads.\n\no With PROCESS, you can see all threads.\n\nThe ability to kill threads and statements depends on the SUPER\nprivilege:\n\no Without SUPER, you can kill only your own threads and statements.\n\no With SUPER, you can kill all threads and statements.\n\nYou can also use the mysqladmin processlist and mysqladmin kill\ncommands to examine and kill threads.\n\n*Note*:\n\nYou cannot use KILL with the Embedded MySQL Server library because the\nembedded server merely runs inside the threads of the host application.\nIt does not create any connection threads of its own.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/kill.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/kill.html'),(652,'LOAD INDEX',3,'Syntax:\nLOAD INDEX INTO CACHE\n  tbl_index_list [, tbl_index_list] ...\n\ntbl_index_list:\n  tbl_name\n    [PARTITION (partition_list)]\n    [{INDEX|KEY} (index_name[, index_name] ...)]\n    [IGNORE LEAVES]\n\npartition_list: {\n    partition_name[, partition_name] ...\n  | ALL\n}\n\nThe LOAD INDEX INTO CACHE statement preloads a table index into the key\ncache to which it has been assigned by an explicit CACHE INDEX\nstatement, or into the default key cache otherwise.\n\nLOAD INDEX INTO CACHE applies only to MyISAM tables, including\npartitioned MyISAM tables. In addition, indexes on partitioned tables\ncan be preloaded for one, several, or all partitions.\n\nThe IGNORE LEAVES modifier causes only blocks for the nonleaf nodes of\nthe index to be preloaded.\n\nIGNORE LEAVES is also supported for partitioned MyISAM tables.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/load-index.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/load-index.html'),(653,'RESET',3,'Syntax:\nRESET reset_option [, reset_option] ...\n\nreset_option: {\n    MASTER\n  | QUERY CACHE\n  | SLAVE\n}\n\nThe RESET statement is used to clear the state of various server\noperations. You must have the RELOAD privilege to execute RESET.\n\nRESET acts as a stronger version of the FLUSH statement. See [HELP\nFLUSH].\n\nThe RESET statement causes an implicit commit. See\nhttps://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.\n\nThe following list describes the permitted RESET statement reset_option\nvalues:\n\no RESET MASTER\n\n  Deletes all binary logs listed in the index file, resets the binary\n  log index file to be empty, and creates a new binary log file.\n\no RESET QUERY CACHE\n\n  Removes all query results from the query cache.\n\n  *Note*:\n\n  The query cache is deprecated as of MySQL 5.7.20, and is removed in\n  MySQL 8.0. Deprecation includes RESET QUERY CACHE.\n\no RESET SLAVE\n\n  Makes the slave forget its replication position in the master binary\n  logs. Also resets the relay log by deleting any existing relay log\n  files and beginning a new one.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/reset.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/reset.html'),(654,'SHUTDOWN',3,'Syntax:\nSHUTDOWN\n\nThis statement stops the MySQL server. It requires the SHUTDOWN\nprivilege.\n\nSHUTDOWN was added in MySQL 5.7.9. It provides an SQL-level interface\nto the same functionality available using the mysqladmin shutdown\ncommand or the mysql_shutdown() C API function.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/shutdown.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/shutdown.html'),(655,'EXPLAIN',41,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\nexplain_type: {\n    EXTENDED\n  | PARTITIONS\n  | FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/explain.html'),(656,'DESCRIBE',41,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\nexplain_type: {\n    EXTENDED\n  | PARTITIONS\n  | FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/explain.html'),(657,'DESC',41,'Syntax:\n{EXPLAIN | DESCRIBE | DESC}\n    tbl_name [col_name | wild]\n\n{EXPLAIN | DESCRIBE | DESC}\n    [explain_type]\n    {explainable_stmt | FOR CONNECTION connection_id}\n\nexplain_type: {\n    EXTENDED\n  | PARTITIONS\n  | FORMAT = format_name\n}\n\nformat_name: {\n    TRADITIONAL\n  | JSON\n}\n\nexplainable_stmt: {\n    SELECT statement\n  | DELETE statement\n  | INSERT statement\n  | REPLACE statement\n  | UPDATE statement\n}\n\nThe DESCRIBE and EXPLAIN statements are synonyms. In practice, the\nDESCRIBE keyword is more often used to obtain information about table\nstructure, whereas EXPLAIN is used to obtain a query execution plan\n(that is, an explanation of how MySQL would execute a query).\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/explain.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/explain.html'),(658,'HELP STATEMENT',41,'Syntax:\nHELP \'search_string\'\n\nThe HELP statement returns online information from the MySQL Reference\nManual. Its proper operation requires that the help tables in the mysql\ndatabase be initialized with help topic information (see\nhttps://dev.mysql.com/doc/refman/5.7/en/server-side-help-support.html).\n\nThe HELP statement searches the help tables for the given search string\nand displays the result of the search. The search string is not\ncase-sensitive.\n\nThe search string can contain the wildcard characters % and _. These\nhave the same meaning as for pattern-matching operations performed with\nthe LIKE operator. For example, HELP \'rep%\' returns a list of topics\nthat begin with rep.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/help.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/help.html'),(659,'USE',41,'Syntax:\nUSE db_name\n\nThe USE db_name statement tells MySQL to use the db_name database as\nthe default (current) database for subsequent statements. The database\nremains the default until the end of the session or another USE\nstatement is issued:\n\nUSE db1;\nSELECT COUNT(*) FROM mytable;   # selects from db1.mytable\nUSE db2;\nSELECT COUNT(*) FROM mytable;   # selects from db2.mytable\n\nThe database name must be specified on a single line. Newlines in\ndatabase names are not supported.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/use.html\n\n','','https://dev.mysql.com/doc/refman/5.7/en/use.html'),(660,'MERGE',42,'The MERGE storage engine, also known as the MRG_MyISAM engine, is a\ncollection of identical MyISAM tables that can be used as one.\n\"Identical\" means that all tables have identical column data types and\nindex information. You cannot merge MyISAM tables in which the columns\nare listed in a different order, do not have exactly the same data\ntypes in corresponding columns, or have the indexes in different order.\nHowever, any or all of the MyISAM tables can be compressed with\nmyisampack. See\nhttps://dev.mysql.com/doc/refman/5.7/en/myisampack.html. Differences\nbetween tables such as these do not matter:\n\no Names of corresponding columns and indexes can differ.\n\no Comments for tables, columns, and indexes can differ.\n\no Table options such as AVG_ROW_LENGTH, MAX_ROWS, or PACK_KEYS can\n  differ.\n\nURL: https://dev.mysql.com/doc/refman/5.7/en/merge-storage-engine.html\n\n','mysql> CREATE TABLE t1 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> CREATE TABLE t2 (\n    ->    a INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\n    ->    message CHAR(20)) ENGINE=MyISAM;\nmysql> INSERT INTO t1 (message) VALUES (\'Testing\'),(\'table\'),(\'t1\');\nmysql> INSERT INTO t2 (message) VALUES (\'Testing\'),(\'table\'),(\'t2\');\nmysql> CREATE TABLE total (\n    ->    a INT NOT NULL AUTO_INCREMENT,\n    ->    message CHAR(20), INDEX(a))\n    ->    ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;\n','https://dev.mysql.com/doc/refman/5.7/en/merge-storage-engine.html');
/*!40000 ALTER TABLE `help_topic` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `innodb_index_stats`
--

-- DROP TABLE IF EXISTS `innodb_index_stats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;


DROP TABLE IF EXISTS `ndb_binlog_index`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ndb_binlog_index` (
  `Position` bigint(20) unsigned NOT NULL,
  `File` varchar(255) NOT NULL,
  `epoch` bigint(20) unsigned NOT NULL,
  `inserts` int(10) unsigned NOT NULL,
  `updates` int(10) unsigned NOT NULL,
  `deletes` int(10) unsigned NOT NULL,
  `schemaops` int(10) unsigned NOT NULL,
  `orig_server_id` int(10) unsigned NOT NULL,
  `orig_epoch` bigint(20) unsigned NOT NULL,
  `gci` int(10) unsigned NOT NULL,
  `next_position` bigint(20) unsigned NOT NULL,
  `next_file` varchar(255) NOT NULL,
  PRIMARY KEY (`epoch`,`orig_server_id`,`orig_epoch`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ndb_binlog_index`
--

LOCK TABLES `ndb_binlog_index` WRITE;
/*!40000 ALTER TABLE `ndb_binlog_index` DISABLE KEYS */;
/*!40000 ALTER TABLE `ndb_binlog_index` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `plugin`
--

DROP TABLE IF EXISTS `plugin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `plugin` (
  `name` varchar(64) NOT NULL DEFAULT '',
  `dl` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='MySQL plugins';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `plugin`
--

LOCK TABLES `plugin` WRITE;
/*!40000 ALTER TABLE `plugin` DISABLE KEYS */;
INSERT INTO `plugin` VALUES ('auth_socket','auth_socket.so');
/*!40000 ALTER TABLE `plugin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proc`
--

DROP TABLE IF EXISTS `proc`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proc` (
  `db` char(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `name` char(64) NOT NULL DEFAULT '',
  `type` enum('FUNCTION','PROCEDURE') NOT NULL,
  `specific_name` char(64) NOT NULL DEFAULT '',
  `language` enum('SQL') NOT NULL DEFAULT 'SQL',
  `sql_data_access` enum('CONTAINS_SQL','NO_SQL','READS_SQL_DATA','MODIFIES_SQL_DATA') NOT NULL DEFAULT 'CONTAINS_SQL',
  `is_deterministic` enum('YES','NO') NOT NULL DEFAULT 'NO',
  `security_type` enum('INVOKER','DEFINER') NOT NULL DEFAULT 'DEFINER',
  `param_list` blob NOT NULL,
  `returns` longblob NOT NULL,
  `body` longblob NOT NULL,
  `definer` char(93) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `sql_mode` set('REAL_AS_FLOAT','PIPES_AS_CONCAT','ANSI_QUOTES','IGNORE_SPACE','NOT_USED','ONLY_FULL_GROUP_BY','NO_UNSIGNED_SUBTRACTION','NO_DIR_IN_CREATE','POSTGRESQL','ORACLE','MSSQL','DB2','MAXDB','NO_KEY_OPTIONS','NO_TABLE_OPTIONS','NO_FIELD_OPTIONS','MYSQL323','MYSQL40','ANSI','NO_AUTO_VALUE_ON_ZERO','NO_BACKSLASH_ESCAPES','STRICT_TRANS_TABLES','STRICT_ALL_TABLES','NO_ZERO_IN_DATE','NO_ZERO_DATE','INVALID_DATES','ERROR_FOR_DIVISION_BY_ZERO','TRADITIONAL','NO_AUTO_CREATE_USER','HIGH_NOT_PRECEDENCE','NO_ENGINE_SUBSTITUTION','PAD_CHAR_TO_FULL_LENGTH') NOT NULL DEFAULT '',
  `comment` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `character_set_client` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `collation_connection` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `db_collation` char(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `body_utf8` longblob,
  PRIMARY KEY (`db`,`name`,`type`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='Stored Procedures';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proc`
--

LOCK TABLES `proc` WRITE;
/*!40000 ALTER TABLE `proc` DISABLE KEYS */;
/*!40000 ALTER TABLE `proc` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `procs_priv`
--

DROP TABLE IF EXISTS `procs_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `procs_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Routine_name` char(64) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Routine_type` enum('FUNCTION','PROCEDURE') COLLATE utf8_bin NOT NULL,
  `Grantor` char(93) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proc_priv` set('Execute','Alter Routine','Grant') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`Db`,`User`,`Routine_name`,`Routine_type`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Procedure privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `procs_priv`
--

LOCK TABLES `procs_priv` WRITE;
/*!40000 ALTER TABLE `procs_priv` DISABLE KEYS */;
/*!40000 ALTER TABLE `procs_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `proxies_priv`
--

DROP TABLE IF EXISTS `proxies_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `proxies_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proxied_host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Proxied_user` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `With_grant` tinyint(1) NOT NULL DEFAULT '0',
  `Grantor` char(93) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Host`,`User`,`Proxied_host`,`Proxied_user`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='User proxy privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `proxies_priv`
--

LOCK TABLES `proxies_priv` WRITE;
/*!40000 ALTER TABLE `proxies_priv` DISABLE KEYS */;
INSERT INTO `proxies_priv` VALUES ('localhost','root','','',1,'boot@connecting host','0000-00-00 00:00:00');
/*!40000 ALTER TABLE `proxies_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `server_cost`
--

DROP TABLE IF EXISTS `server_cost`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `server_cost` (
  `cost_name` varchar(64) NOT NULL,
  `cost_value` float DEFAULT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `comment` varchar(1024) DEFAULT NULL,
  PRIMARY KEY (`cost_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `server_cost`
--

LOCK TABLES `server_cost` WRITE;
/*!40000 ALTER TABLE `server_cost` DISABLE KEYS */;
INSERT INTO `server_cost` VALUES ('disk_temptable_create_cost',NULL,'2019-10-17 09:52:19',NULL),('disk_temptable_row_cost',NULL,'2019-10-17 09:52:19',NULL),('key_compare_cost',NULL,'2019-10-17 09:52:19',NULL),('memory_temptable_create_cost',NULL,'2019-10-17 09:52:19',NULL),('memory_temptable_row_cost',NULL,'2019-10-17 09:52:19',NULL),('row_evaluate_cost',NULL,'2019-10-17 09:52:19',NULL);
/*!40000 ALTER TABLE `server_cost` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `servers`
--

DROP TABLE IF EXISTS `servers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `servers` (
  `Server_name` char(64) NOT NULL DEFAULT '',
  `Host` char(64) NOT NULL DEFAULT '',
  `Db` char(64) NOT NULL DEFAULT '',
  `Username` char(64) NOT NULL DEFAULT '',
  `Password` char(64) NOT NULL DEFAULT '',
  `Port` int(4) NOT NULL DEFAULT '0',
  `Socket` char(64) NOT NULL DEFAULT '',
  `Wrapper` char(64) NOT NULL DEFAULT '',
  `Owner` char(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`Server_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='MySQL Foreign Servers table';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `servers`
--

LOCK TABLES `servers` WRITE;
/*!40000 ALTER TABLE `servers` DISABLE KEYS */;
/*!40000 ALTER TABLE `servers` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `slave_master_info`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slave_master_info` (
  `Number_of_lines` int(10) unsigned NOT NULL COMMENT 'Number of lines in the file.',
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the master binary log currently being read from the master.',
  `Master_log_pos` bigint(20) unsigned NOT NULL COMMENT 'The master log position of the last read event.',
  `Host` char(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'The host name of the master.',
  `User_name` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The user name used to connect to the master.',
  `User_password` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The password used to connect to the master.',
  `Port` int(10) unsigned NOT NULL COMMENT 'The network port used to connect to the master.',
  `Connect_retry` int(10) unsigned NOT NULL COMMENT 'The period (in seconds) that the slave will wait before trying to reconnect to the master.',
  `Enabled_ssl` tinyint(1) NOT NULL COMMENT 'Indicates whether the server supports SSL connections.',
  `Ssl_ca` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file used for the Certificate Authority (CA) certificate.',
  `Ssl_capath` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The path to the Certificate Authority (CA) certificates.',
  `Ssl_cert` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the SSL certificate file.',
  `Ssl_cipher` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the cipher in use for the SSL connection.',
  `Ssl_key` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The name of the SSL key file.',
  `Ssl_verify_server_cert` tinyint(1) NOT NULL COMMENT 'Whether to verify the server certificate.',
  `Heartbeat` float NOT NULL,
  `Bind` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Displays which interface is employed when connecting to the MySQL server',
  `Ignored_server_ids` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The number of server IDs to be ignored, followed by the actual server IDs',
  `Uuid` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The master server uuid.',
  `Retry_count` bigint(20) unsigned NOT NULL COMMENT 'Number of reconnect attempts, to the master, before giving up.',
  `Ssl_crl` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The file used for the Certificate Revocation List (CRL)',
  `Ssl_crlpath` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'The path used for Certificate Revocation List (CRL) files',
  `Enabled_auto_position` tinyint(1) NOT NULL COMMENT 'Indicates whether GTIDs will be used to retrieve events from the master.',
  `Channel_name` char(64) NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  `Tls_version` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'Tls version',
  PRIMARY KEY (`Channel_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Master Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slave_relay_log_info`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slave_relay_log_info` (
  `Number_of_lines` int(10) unsigned NOT NULL COMMENT 'Number of lines in the file or rows in the table. Used to version table definitions.',
  `Relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the current relay log file.',
  `Relay_log_pos` bigint(20) unsigned NOT NULL COMMENT 'The relay log position of the last executed event.',
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'The name of the master binary log file from which the events in the relay log file were read.',
  `Master_log_pos` bigint(20) unsigned NOT NULL COMMENT 'The master log position of the last executed event.',
  `Sql_delay` int(11) NOT NULL COMMENT 'The number of seconds that the slave must lag behind the master.',
  `Number_of_workers` int(10) unsigned NOT NULL,
  `Id` int(10) unsigned NOT NULL COMMENT 'Internal Id that uniquely identifies this record.',
  `Channel_name` char(64) NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  PRIMARY KEY (`Channel_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Relay Log Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slave_worker_info`
--

DROP TABLE IF EXISTS `slave_worker_info`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `slave_worker_info` (
  `Id` int(10) unsigned NOT NULL,
  `Relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Relay_log_pos` bigint(20) unsigned NOT NULL,
  `Master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Master_log_pos` bigint(20) unsigned NOT NULL,
  `Checkpoint_relay_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Checkpoint_relay_log_pos` bigint(20) unsigned NOT NULL,
  `Checkpoint_master_log_name` text CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Checkpoint_master_log_pos` bigint(20) unsigned NOT NULL,
  `Checkpoint_seqno` int(10) unsigned NOT NULL,
  `Checkpoint_group_size` int(10) unsigned NOT NULL,
  `Checkpoint_group_bitmap` blob NOT NULL,
  `Channel_name` char(64) NOT NULL COMMENT 'The channel on which the slave is connected to a source. Used in Multisource Replication',
  PRIMARY KEY (`Channel_name`,`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Worker Information';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `slave_worker_info`
--

LOCK TABLES `slave_worker_info` WRITE;
/*!40000 ALTER TABLE `slave_worker_info` DISABLE KEYS */;
/*!40000 ALTER TABLE `slave_worker_info` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tables_priv`
--

DROP TABLE IF EXISTS `tables_priv`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tables_priv` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Db` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Table_name` char(64) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Grantor` char(93) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Table_priv` set('Select','Insert','Update','Delete','Create','Drop','Grant','References','Index','Alter','Create View','Show view','Trigger') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `Column_priv` set('Select','Insert','Update','References') CHARACTER SET utf8 NOT NULL DEFAULT '',
  PRIMARY KEY (`Host`,`Db`,`User`,`Table_name`),
  KEY `Grantor` (`Grantor`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Table privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tables_priv`
--

LOCK TABLES `tables_priv` WRITE;
/*!40000 ALTER TABLE `tables_priv` DISABLE KEYS */;
INSERT INTO `tables_priv` VALUES ('localhost','mysql','mysql.session','user','boot@connecting host','0000-00-00 00:00:00','Select',''),('localhost','sys','mysql.sys','sys_config','root@localhost','2019-10-17 09:52:20','Select','');
/*!40000 ALTER TABLE `tables_priv` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone`
--

DROP TABLE IF EXISTS `time_zone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone` (
  `Time_zone_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Use_leap_seconds` enum('Y','N') NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Time_zone_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone`
--

LOCK TABLES `time_zone` WRITE;
/*!40000 ALTER TABLE `time_zone` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_leap_second`
--

DROP TABLE IF EXISTS `time_zone_leap_second`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_leap_second` (
  `Transition_time` bigint(20) NOT NULL,
  `Correction` int(11) NOT NULL,
  PRIMARY KEY (`Transition_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Leap seconds information for time zones';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_leap_second`
--

LOCK TABLES `time_zone_leap_second` WRITE;
/*!40000 ALTER TABLE `time_zone_leap_second` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_leap_second` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_name`
--

DROP TABLE IF EXISTS `time_zone_name`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_name` (
  `Name` char(64) NOT NULL,
  `Time_zone_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zone names';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_name`
--

LOCK TABLES `time_zone_name` WRITE;
/*!40000 ALTER TABLE `time_zone_name` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_name` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition`
--

DROP TABLE IF EXISTS `time_zone_transition`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_transition` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_time` bigint(20) NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`Time_zone_id`,`Transition_time`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zone transitions';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition`
--

LOCK TABLES `time_zone_transition` WRITE;
/*!40000 ALTER TABLE `time_zone_transition` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `time_zone_transition_type`
--

DROP TABLE IF EXISTS `time_zone_transition_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `time_zone_transition_type` (
  `Time_zone_id` int(10) unsigned NOT NULL,
  `Transition_type_id` int(10) unsigned NOT NULL,
  `Offset` int(11) NOT NULL DEFAULT '0',
  `Is_DST` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `Abbreviation` char(8) NOT NULL DEFAULT '',
  PRIMARY KEY (`Time_zone_id`,`Transition_type_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 STATS_PERSISTENT=0 COMMENT='Time zone transition types';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `time_zone_transition_type`
--

LOCK TABLES `time_zone_transition_type` WRITE;
/*!40000 ALTER TABLE `time_zone_transition_type` DISABLE KEYS */;
/*!40000 ALTER TABLE `time_zone_transition_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `user` (
  `Host` char(60) COLLATE utf8_bin NOT NULL DEFAULT '',
  `User` char(32) COLLATE utf8_bin NOT NULL DEFAULT '',
  `Select_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Insert_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Update_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Delete_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Drop_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Reload_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Shutdown_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Process_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `File_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Grant_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `References_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Index_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_db_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Super_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tmp_table_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Lock_tables_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Execute_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_slave_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Repl_client_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Show_view_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Alter_routine_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_user_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Event_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Trigger_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `Create_tablespace_priv` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `ssl_type` enum('','ANY','X509','SPECIFIED') CHARACTER SET utf8 NOT NULL DEFAULT '',
  `ssl_cipher` blob NOT NULL,
  `x509_issuer` blob NOT NULL,
  `x509_subject` blob NOT NULL,
  `max_questions` int(11) unsigned NOT NULL DEFAULT '0',
  `max_updates` int(11) unsigned NOT NULL DEFAULT '0',
  `max_connections` int(11) unsigned NOT NULL DEFAULT '0',
  `max_user_connections` int(11) unsigned NOT NULL DEFAULT '0',
  `plugin` char(64) COLLATE utf8_bin NOT NULL DEFAULT 'mysql_native_password',
  `authentication_string` text COLLATE utf8_bin,
  `password_expired` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  `password_last_changed` timestamp NULL DEFAULT NULL,
  `password_lifetime` smallint(5) unsigned DEFAULT NULL,
  `account_locked` enum('N','Y') CHARACTER SET utf8 NOT NULL DEFAULT 'N',
  PRIMARY KEY (`Host`,`User`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='Users and global privileges';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES ('localhost','root','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'auth_socket','','N','2019-10-17 09:52:19',NULL,'N'),('localhost','mysql.session','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','Y','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'mysql_native_password','*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE','N','2019-10-17 09:52:20',NULL,'Y'),('localhost','mysql.sys','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','N','','','','',0,0,0,0,'mysql_native_password','*THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE','N','2019-10-17 09:52:20',NULL,'Y'),('localhost','debian-sys-maint','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'mysql_native_password','*1592640A46FBB0C556DEC352A2CD904AF0798147','N','2019-10-17 09:52:21',NULL,'N'),('%','radware','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','Y','','','','',0,0,0,0,'mysql_native_password','*66962B33C94C86B3DFD02ACB7ED520191151090D','N','2019-10-17 09:59:15',NULL,'N');
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `general_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `general_log` (
  `event_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `thread_id` bigint(21) unsigned NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumblob NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='General log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `slow_log`
--

/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE IF NOT EXISTS `slow_log` (
  `start_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `query_time` time(6) NOT NULL,
  `lock_time` time(6) NOT NULL,
  `rows_sent` int(11) NOT NULL,
  `rows_examined` int(11) NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int(11) NOT NULL,
  `insert_id` int(11) NOT NULL,
  `server_id` int(10) unsigned NOT NULL,
  `sql_text` mediumblob NOT NULL,
  `thread_id` bigint(21) unsigned NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8 COMMENT='Slow log';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Current Database: `radware_DB`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `radware_DB` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `radware_DB`;

--
-- Table structure for table `app_logins`
--

DROP TABLE IF EXISTS `app_logins`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `app_logins` (
  `id` int(11) NOT NULL,
  `login` varchar(45) DEFAULT NULL,
  `name` varchar(45) DEFAULT NULL,
  `surname` varchar(45) DEFAULT NULL,
  `email` varchar(45) DEFAULT NULL,
  `pass` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `app_logins`
--

LOCK TABLES `app_logins` WRITE;
/*!40000 ALTER TABLE `app_logins` DISABLE KEYS */;
INSERT INTO `app_logins` VALUES (1,'lkobieriecki0','Lola','Kobieriecki','lkobieriecki0@newsvine.com','MOQvKEG'),(2,'test','test','test','test@test.pl','test'),(3,'clonsdale2','Cristionna','Lonsdale','clonsdale2@hud.gov','o51lFaTuUvJJ'),(4,'bbooij3','Bar','Booij','bbooij3@ezinearticles.com','KyrF9y'),(5,'rcathro4','Riccardo','Cathro','rcathro4@facebook.com','HPNBzO'),(6,'wharmond5','Wayland','Harmond','wharmond5@mysql.com','plRuQ9ShYXxI'),(7,'edongall6','Emilie','Dongall','edongall6@mlb.com','fueZLhE9w'),(8,'rwakeman7','Rocky','Wakeman','rwakeman7@ted.com','IHt5S5BVzKW'),(9,'rclaughton8','Rolfe','Claughton','rclaughton8@usda.gov','v6dFCHwb5Ba'),(10,'ypottberry9','Ysabel','Pottberry','ypottberry9@geocities.jp','cC8ovA4CnTb'),(11,'hnoorea','Hilly','Noore','hnoorea@wisc.edu','6c8DUozQ9'),(12,'lwestcarb','Lorilee','Westcar','lwestcarb@miitbeian.gov.cn','rgI5AHGq'),(13,'ewestmacottc','Elsy','Westmacott','ewestmacottc@webnode.com','4Htr1MK'),(14,'mblucherd','Marietta','Blucher','mblucherd@xing.com','wsOy9y00xLU'),(15,'aallinsone','Aluino','Allinson','aallinsone@google.com.br','Vw1csQZQYc'),(16,'vmaccrawf','Vivyanne','Maccraw','vmaccrawf@twitter.com','BdfL7ZLjjIZO'),(17,'jguerring','Jesus','Guerrin','jguerring@usda.gov','WFElBk'),(18,'kohenecanh','Killie','O\'Henecan','kohenecanh@globo.com','WRiNlx'),(19,'bbiggadikei','Bryon','Biggadike','bbiggadikei@wikimedia.org','761KjpP'),(20,'rhawkeswoodj','Randi','Hawkeswood','rhawkeswoodj@wordpress.com','497GTKiU'),(21,'knicklessk','Kirstin','Nickless','knicklessk@naver.com','xFwAQ6DT'),(22,'csneezuml','Carrissa','Sneezum','csneezuml@naver.com','yu8by9d4qb'),(23,'rpurdiem','Rozanna','Purdie','rpurdiem@scribd.com','5ltELq8w7'),(24,'kibesonn','Katee','Ibeson','kibesonn@jimdo.com','9Fg92x9nswt'),(25,'smcgrortyo','Seana','McGrorty','smcgrortyo@bbb.org','s6AQKJNl8'),(26,'smatsonp','Sonnie','Matson','smatsonp@tripadvisor.com','MupW3utLt'),(27,'slibreyq','Salim','Librey','slibreyq@ask.com','obQBrvB'),(28,'grumker','Grete','Rumke','grumker@biglobe.ne.jp','d6piQf6Ulp'),(29,'charles','Carilyn','Harle','charles@senate.gov','uId5gy9UF'),(30,'rquenellt','Reece','Quenell','rquenellt@mayoclinic.com','lWemr3vnuA'),(31,'cdavieu','Cesaro','Davie','cdavieu@joomla.org','gWzeRvw'),(32,'mlacostev','Maritsa','Lacoste','mlacostev@ehow.com','dqVJlpudJ1q'),(33,'dondrichw','Dag','Ondrich','dondrichw@smugmug.com','oHhxh640'),(34,'bdepportx','Barnie','Depport','bdepportx@deliciousdays.com','dtEHoSj'),(35,'ramnery','Roger','Amner','ramnery@infoseek.co.jp','mC1xBYtHh'),(36,'dinskippz','Dolf','Inskipp','dinskippz@diigo.com','GnJzM3cgmZ0'),(37,'tclaypole10','Tommie','Claypole','tclaypole10@ezinearticles.com','qzTFCvWfekg'),(38,'cvanyutin11','Clair','Vanyutin','cvanyutin11@state.gov','e3X8aIFuZ2'),(39,'fcondict12','Fifi','Condict','fcondict12@sohu.com','wfNIKLYJ'),(40,'pcunnane13','Papagena','Cunnane','pcunnane13@hp.com','YcJJdK8pbwx'),(41,'ekilalea14','Eran','Kilalea','ekilalea14@cdbaby.com','4vf829M'),(42,'osikorsky15','Olvan','Sikorsky','osikorsky15@prweb.com','MSqciRz2lf'),(43,'psummerfield16','Park','Summerfield','psummerfield16@rediff.com','e5K7dWS4iZNO'),(44,'ssanchiz17','Seth','Sanchiz','ssanchiz17@php.net','jIRGva1Penq'),(45,'freddings18','Filia','Reddings','freddings18@go.com','TCeVDnFLdljG'),(46,'jdederick19','Jaine','Dederick','jdederick19@sohu.com','I0KTh3G'),(47,'rbunstone1a','Riley','Bunstone','rbunstone1a@marriott.com','jmxpLHhEju2s'),(48,'rprott1b','Rozanne','Prott','rprott1b@seesaa.net','msoTmHNagBv3'),(49,'zbasilio1c','Zahara','Basilio','zbasilio1c@wix.com','lbn15bi4'),(50,'ddury1d','Dani','Dury','ddury1d@xinhuanet.com','SOVgJe2NwfA'),(51,'mellingsworth1e','Marcie','Ellingsworth','mellingsworth1e@desdev.cn','SClNBedD'),(52,'lkiljan1f','Lawton','Kiljan','lkiljan1f@dmoz.org','qSDjKjn5Z'),(53,'bgorini1g','Berty','Gorini','bgorini1g@godaddy.com','Lrsmf5'),(54,'lskitral1h','Luigi','Skitral','lskitral1h@accuweather.com','IkuMYMAsBu'),(55,'iniesegen1i','Ileane','Niesegen','iniesegen1i@livejournal.com','ZdfvDOVxE'),(56,'iwalsh1j','Isak','Walsh','iwalsh1j@opensource.org','frf0VVUxu'),(57,'jborleace1k','Jaynell','Borleace','jborleace1k@altervista.org','oQHK91'),(58,'rskeldon1l','Raphaela','Skeldon','rskeldon1l@walmart.com','8z1L0Z3ft'),(59,'gmullin1m','Gwenette','Mullin','gmullin1m@wp.com','fXJnwoqfUqx'),(60,'ashakelady1n','Ab','Shakelady','ashakelady1n@paypal.com','ugSYTUXhwI'),(61,'lgirardi1o','Lucias','Girardi','lgirardi1o@imageshack.us','g6vxLviquaiv'),(62,'cpetken1p','Corabella','Petken','cpetken1p@hud.gov','DuGgFDJK'),(63,'gdziwisz1q','Georgie','Dziwisz','gdziwisz1q@globo.com','vRjSgLNsaRG'),(64,'ncopcote1r','Noach','Copcote','ncopcote1r@va.gov','IEonyIt'),(65,'cpelham1s','Carolyn','Pelham','cpelham1s@cargocollective.com','KG90G5IhPNO'),(66,'kbarthrup1t','Klemens','Barthrup','kbarthrup1t@homestead.com','nE7l3vEF2muC'),(67,'ypearmain1u','Yorke','Pearmain','ypearmain1u@purevolume.com','EOfXGWx'),(68,'tjonczyk1v','Tony','Jonczyk','tjonczyk1v@yale.edu','ptzm9inxe'),(69,'jdorset1w','Jerri','Dorset','jdorset1w@guardian.co.uk','zZ1Ntl'),(70,'hmuehler1x','Harlen','Muehler','hmuehler1x@sitemeter.com','eou4876N'),(71,'tdanniel1y','Terri','Danniel','tdanniel1y@dyndns.org','RrLjM6o'),(72,'lmerlin1z','Lorant','Merlin','lmerlin1z@comsenz.com','B3Rah5T9Ggr'),(73,'fgerger20','Fidelio','Gerger','fgerger20@businesswire.com','loyVAG'),(74,'bhanselmann21','Betti','Hanselmann','bhanselmann21@freewebs.com','sy3xj6OiTR'),(75,'hromushkin22','Hillyer','Romushkin','hromushkin22@g.co','wSjsfT5'),(76,'jnorville23','Jerad','Norville','jnorville23@marketwatch.com','JaCO8jDDlT'),(77,'lmuttock24','Lindi','Muttock','lmuttock24@sciencedaily.com','GTgTmp'),(78,'joventon25','Justina','Oventon','joventon25@miibeian.gov.cn','bjwoQbqK'),(79,'dstretton26','Deny','Stretton','dstretton26@kickstarter.com','tPkXo2'),(80,'mivashinnikov27','Mimi','Ivashinnikov','mivashinnikov27@sbwire.com','m6Peghw'),(81,'sclementel28','Sari','Clementel','sclementel28@netlog.com','rAkwYDX9g'),(82,'cbooij29','Claudia','Booij','cbooij29@dell.com','xu1ghE'),(83,'arahl2a','Aldous','Rahl','arahl2a@over-blog.com','2VbWXZ'),(84,'wmatschuk2b','Willem','Matschuk','wmatschuk2b@theguardian.com','NSso07eVIiS'),(85,'ishakeshaft2c','Ilka','Shakeshaft','ishakeshaft2c@google.cn','sLNwq7tcG9F'),(86,'hwilstead2d','Harv','Wilstead','hwilstead2d@angelfire.com','kEZ0qkF'),(87,'dembling2e','Dorine','Embling','dembling2e@hibu.com','oDiCkxKm'),(88,'darnaudet2f','Dex','Arnaudet','darnaudet2f@edublogs.org','TqUd2N0anQw'),(89,'kfiggen2g','Kameko','Figgen','kfiggen2g@china.com.cn','netMdfJQw'),(90,'fbrookhouse2h','Flossi','Brookhouse','fbrookhouse2h@usgs.gov','Dxtir3'),(91,'schaman2i','Shanta','Chaman','schaman2i@theatlantic.com','w2ONnl9i6G'),(92,'oportlock2j','Octavia','Portlock','oportlock2j@imageshack.us','2tOjwp0fMW3'),(93,'sloakes2k','Shandra','Loakes','sloakes2k@cisco.com','Fb5fe7tmiTN'),(94,'jkeme2l','Jephthah','Keme','jkeme2l@blogger.com','2CRDBDK'),(95,'gmumbray2m','Guido','Mumbray','gmumbray2m@ning.com','8kSTMLji'),(96,'kfowgies2n','Kath','Fowgies','kfowgies2n@pbs.org','w8IA2H7D'),(97,'hharuard2o','Hew','Haruard','hharuard2o@istockphoto.com','jlI8oQBg'),(98,'mlinnane2p','Marilin','Linnane','mlinnane2p@sohu.com','vDOZW3qz8'),(99,'gvoff2q','Glyn','Voff','gvoff2q@oakley.com','N8XhGB'),(100,'hply2r','Hugo','Ply','hply2r@yellowpages.com','gy9tgj'),(101,'bupstone2s','Brooks','Upstone','bupstone2s@xing.com','PZ853HcAP2z'),(102,'cklagge2t','Cacilia','Klagge','cklagge2t@slideshare.net','6mVEdBTts48'),(103,'jfairney2u','Jerrylee','Fairney','jfairney2u@huffingtonpost.com','BvFQnJP'),(104,'mickiewicz01','Adam','Mickiewicz','Adam@tadeusz.pl','pTeZUeyi'),(105,'tphear2w','Tove','Phear','tphear2w@elegantthemes.com','h0ved5I9M3gi'),(106,'cmccowan2x','Carrol','McCowan','cmccowan2x@elegantthemes.com','JZWi3tYPdhD2'),(107,'mtresvina2y','Marion','Tresvina','mtresvina2y@surveymonkey.com','bTPue4SRUK'),(108,'alechmere2z','Auria','Lechmere','alechmere2z@msn.com','pzmbE6QMZuvQ'),(109,'lchesterman30','Leela','Chesterman','lchesterman30@sina.com.cn','uv4iTB'),(110,'pphizackerly31','Patrizia','Phizackerly','pphizackerly31@facebook.com','MACeaMQ17Kni'),(111,'epersehouse32','Emmit','Persehouse','epersehouse32@wufoo.com','qJtvnymUH6IO'),(112,'mbussons33','Melosa','Bussons','mbussons33@yandex.ru','WsZnB8'),(113,'bsunnex34','Blaine','Sunnex','bsunnex34@ftc.gov','k5l6dbAUT'),(114,'jvanderhoog35','Jania','Van Der Hoog','jvanderhoog35@freewebs.com','zxyVNAqM3W'),(115,'ccud36','Constanta','Cud','ccud36@quantcast.com','8ZIzKfVSOWma'),(116,'byurov37','Bennie','Yurov','byurov37@techcrunch.com','hez4HTWid1AM'),(117,'ctocknell38','Corri','Tocknell','ctocknell38@moonfruit.com','9vxNPwcYI'),(118,'bmcterrelly39','Burke','McTerrelly','bmcterrelly39@walmart.com','NsCXVu'),(119,'jliverseege3a','Jase','Liverseege','jliverseege3a@vk.com','pzkR4FuzjKy'),(120,'ewant3b','Eduino','Want','ewant3b@tumblr.com','LSd0nDEHk'),(121,'bchitty3c','Benjie','Chitty','bchitty3c@nhs.uk','1TBGop'),(122,'callan3d','Cacilia','Allan','callan3d@gnu.org','qLCFA4KVA'),(123,'mschwartz3e','Margaretha','Schwartz','mschwartz3e@un.org','kj3aX7fgKB'),(124,'tslarke3f','Tandi','Slarke','tslarke3f@deviantart.com','l2MFmH'),(125,'wgrinyer3g','Wenda','Grinyer','wgrinyer3g@wisc.edu','B0Yi7cGfoD'),(126,'cmila3h','Chere','Mila','cmila3h@cbslocal.com','8t7DEO'),(127,'cizachik3i','Candra','Izachik','cizachik3i@oakley.com','fm4O6Ky4ka'),(128,'dsetterington3j','Drusi','Setterington','dsetterington3j@issuu.com','WbOKWFi9skS'),(129,'mloos3k','Mano','Loos','mloos3k@plala.or.jp','16JaGYUw'),(130,'bbrayn3l','Basilius','Brayn','bbrayn3l@answers.com','NZLIWJX'),(131,'cvalance3m','Court','Valance','cvalance3m@bloomberg.com','KTNckBTU'),(132,'cpresdie3n','Carolus','Presdie','cpresdie3n@constantcontact.com','YhbyN62J8x'),(133,'jgoalby3o','Julina','Goalby','jgoalby3o@archive.org','GK44IA3Cjd'),(134,'ddunkirk3p','Delilah','Dunkirk','ddunkirk3p@sohu.com','P0SYoP5l'),(135,'mcatonne3q','Milena','Catonne','mcatonne3q@house.gov','xp0pZnoh2dF'),(136,'adinley3r','Amandi','Dinley','adinley3r@godaddy.com','68LH7ejslO'),(137,'pornelas3s','Pancho','Ornelas','pornelas3s@vimeo.com','yoGUOv8Ru'),(138,'jkintish3t','Jessie','Kintish','jkintish3t@parallels.com','oSY7aTHcv'),(139,'mdefond3u','Maure','Defond','mdefond3u@vistaprint.com','SE3ZpgDL1I'),(140,'bitzhaiek3v','Bibbye','Itzhaiek','bitzhaiek3v@fotki.com','eXLgxqNiK'),(141,'nwason3w','Nerte','Wason','nwason3w@google.com.au','Ftdqfp'),(142,'wbroker3x','Willette','Broker','wbroker3x@networkadvertising.org','eP87lKANHfS'),(143,'ebaudichon3y','Elane','Baudichon','ebaudichon3y@cbc.ca','acEoECw133oO'),(144,'mfollos3z','Margarete','Follos','mfollos3z@ox.ac.uk','U0TmhM0B'),(145,'vrean40','Vitia','Rean','vrean40@stumbleupon.com','yI4D5UoIeAN'),(146,'hbrose41','Harmonia','Brose','hbrose41@flavors.me','0JtlS36'),(147,'bfraser42','Bellina','Fraser','bfraser42@taobao.com','n4sQNrX'),(148,'mbrymner43','Marv','Brymner','mbrymner43@squidoo.com','ECgI4NJoyH6'),(149,'agregorowicz44','Addi','Gregorowicz','agregorowicz44@shinystat.com','qYplPIT'),(150,'gconningham45','Goldarina','Conningham','gconningham45@msn.com','2GcfFmfZcfX'),(151,'rmathis46','Rosemary','Mathis','rmathis46@ebay.co.uk','IHK6Ogth8'),(152,'hhitter47','Hendrik','Hitter','hhitter47@wsj.com','OyaCD5'),(153,'harenson48','Hagen','Arenson','harenson48@amazon.co.jp','WZ26Zm'),(154,'gtanzer49','Giulio','Tanzer','gtanzer49@vkontakte.ru','40R1HNg'),(155,'ycoleborn4a','Yoshiko','Coleborn','ycoleborn4a@about.me','gVaFrzkg'),(156,'lcolliber4b','Lindi','Colliber','lcolliber4b@vimeo.com','3KBfYGhsAamM'),(157,'cpendleberry4c','Conney','Pendleberry','cpendleberry4c@epa.gov','9MM2CShfW'),(158,'cgather4d','Chloe','Gather','cgather4d@amazon.co.uk','b8ordd'),(159,'abusse4e','Armando','Busse','abusse4e@tamu.edu','aNQb2g'),(160,'rkubala4f','Rochette','Kubala','rkubala4f@clickbank.net','uGmGoEy'),(161,'bvause4g','Betty','Vause','bvause4g@noaa.gov','QjgrpqFiORej'),(162,'gedeler4h','Genovera','Edeler','gedeler4h@51.la','HTtzmL'),(163,'malps4i','Maura','Alps','malps4i@gnu.org','XltmiZ8Yj'),(164,'eburgett4j','Emmet','Burgett','eburgett4j@weibo.com','MqTbdRDL2RrF'),(165,'vaimeric4k','Veda','Aimeric','vaimeric4k@google.co.jp','1dqCxdY1Y'),(166,'kdavidovici4l','Kakalina','Davidovici','kdavidovici4l@dmoz.org','c8ryFCU'),(167,'rbate4m','Rudolfo','Bate','rbate4m@devhub.com','Mlg6PzY'),(168,'omcilenna4n','Obadias','McIlenna','omcilenna4n@stanford.edu','vyK6bdBP8'),(169,'gtrevithick4o','Gareth','Trevithick','gtrevithick4o@unesco.org','CYLluN'),(170,'splane4p','Starlin','Plane','splane4p@yahoo.com','elTlcIuKvVWB'),(171,'bwybron4q','Bellanca','Wybron','bwybron4q@accuweather.com','onRJRt'),(172,'nlanchberry4r','Nataline','Lanchberry','nlanchberry4r@liveinternet.ru','QCVU9bHe'),(173,'mtiesman4s','Minne','Tiesman','mtiesman4s@sakura.ne.jp','ynlC9CWTAr4'),(174,'mpierro4t','Mala','Pierro','mpierro4t@hao123.com','U8t1iBPVr'),(175,'kwilmot4u','Kinna','Wilmot','kwilmot4u@ted.com','ETjcb6rLD'),(176,'alindro4v','Analiese','Lindro','alindro4v@drupal.org','wyZgzmAw'),(177,'mbabbidge4w','Marchall','Babbidge','mbabbidge4w@intel.com','P7FY3l'),(178,'jstraw4x','Jo ann','Straw','jstraw4x@livejournal.com','d4MBXX9CEy'),(179,'mjindracek4y','Merilee','Jindracek','mjindracek4y@dyndns.org','WwKljXxY'),(180,'tding4z','Tracie','Ding','tding4z@yellowbook.com','R7f4c3LvZwz'),(181,'jcaslin50','Jannel','Caslin','jcaslin50@marriott.com','qfmqDreexZyY'),(182,'cjoust51','Celestina','Joust','cjoust51@instagram.com','tDs1NVv4bwpl'),(183,'rmitchell52','Ray','Mitchell','rmitchell52@exblog.jp','oEVw7M4Azd'),(184,'fsieghard53','Flossi','Sieghard','fsieghard53@tmall.com','5Bp7F1ke5'),(185,'cwithrop54','Cynthy','Withrop','cwithrop54@indiegogo.com','bpkoMwa'),(186,'cantonioni55','Claudie','Antonioni','cantonioni55@imageshack.us','Nfg9FDfXeL'),(187,'gstokes56','Gerrie','Stokes','gstokes56@miibeian.gov.cn','ooTjJ19fL5fJ'),(188,'fcarillo57','Frankie','Carillo','fcarillo57@livejournal.com','5RVskE3E'),(189,'sottley58','Sidonnie','Ottley','sottley58@pinterest.com','aYfMqH'),(190,'gveighey59','Ginevra','Veighey','gveighey59@rediff.com','PK2Fyfx'),(191,'mpuddle5a','Mala','Puddle','mpuddle5a@eepurl.com','4j31RJm'),(192,'nheaseman5b','Nannie','Heaseman','nheaseman5b@hatena.ne.jp','MhMQ1oU'),(193,'smedcraft5c','Staffard','Medcraft','smedcraft5c@networksolutions.com','mqimnEUstOA'),(194,'bshalcras5d','Bax','Shalcras','bshalcras5d@so-net.ne.jp','HM3vDN4'),(195,'bpollok5e','Broderic','Pollok','bpollok5e@altervista.org','6eaVliBOZ2E'),(196,'ybartalot5f','Ynes','Bartalot','ybartalot5f@myspace.com','dUYnts6rFp'),(197,'ggroves5g','Giraud','Groves','ggroves5g@barnesandnoble.com','I8vpGET'),(198,'sleadston5h','Sibyl','Leadston','sleadston5h@army.mil','mFtnwiUvd'),(199,'cburnell5i','Caresse','Burnell','cburnell5i@digg.com','zr4LKOj15Q41'),(200,'dondricek5j','Darill','Ondricek','dondricek5j@irs.gov','pQlIknDUYfN'),(201,'ielam5k','Inigo','Elam','ielam5k@privacy.gov.au','0I7etKU7Nx'),(202,'dlitton5l','Darline','Litton','dlitton5l@guardian.co.uk','BYMasv0Ix1'),(203,'lgeane5m','Luce','Geane','lgeane5m@msu.edu','MGfXA5Fp'),(204,'wdomenico5n','Winnifred','Domenico','wdomenico5n@163.com','GjDoNiy'),(205,'tmarciskewski5o','Tobiah','Marciskewski','tmarciskewski5o@google.it','4wdqbi5'),(206,'nakid5p','Nessy','Akid','nakid5p@yahoo.com','P4w6arge'),(207,'dhastie5q','Dacey','Hastie','dhastie5q@upenn.edu','rFSIO4'),(208,'bfoster5r','Beverlee','Foster','bfoster5r@army.mil','kgnfOd'),(209,'oderycot5s','Owen','Derycot','oderycot5s@studiopress.com','vo7nFCm'),(210,'tmoring5t','Teodoro','Moring','tmoring5t@sourceforge.net','HhgHDE'),(211,'lraff5u','Lynnea','Raff','lraff5u@smh.com.au','kwarPKi1SqF'),(212,'rdutteridge5v','Rutherford','Dutteridge','rdutteridge5v@mapy.cz','d2DjdOK94Nf'),(213,'screak5w','Shaylynn','Creak','screak5w@soundcloud.com','VK8olV88QNEs'),(214,'abeaves5x','Atalanta','Beaves','abeaves5x@fastcompany.com','sWanQIO6jZ7c'),(215,'gcrate5y','Grannie','Crate','gcrate5y@fotki.com','g3Z31OwNHpIU'),(216,'ccaukill5z','Carmina','Caukill','ccaukill5z@umn.edu','bpQkCdGqc0sf'),(217,'lgudger60','Linnell','Gudger','lgudger60@dailymotion.com','LQlFsD2'),(218,'dsalerg61','Donella','Salerg','dsalerg61@ehow.com','YQIIfyhXuV'),(219,'lwake62','Luci','Wake','lwake62@amazon.com','LgSFYRyBaBjY'),(220,'dswanborough63','Drusie','Swanborough','dswanborough63@istockphoto.com','DMpoZQ'),(221,'abrookshaw64','Andrew','Brookshaw','abrookshaw64@japanpost.jp','jbCTxS'),(222,'bacory65','Berta','Acory','bacory65@360.cn','7E7x7s'),(223,'cgrellier66','Cymbre','Grellier','cgrellier66@msn.com','U5k1n6cKYXHg'),(224,'olievesley67','Ofilia','Lievesley','olievesley67@google.pl','AmYe5KRP'),(225,'tmatchell68','Terri-jo','Matchell','tmatchell68@booking.com','dlZA9LNq8kE'),(226,'jfaustian69','Julina','Faustian','jfaustian69@rediff.com','uw1PfqKlej'),(227,'grussam6a','Godard','Russam','grussam6a@t.co','9uOBBQ1DMW'),(228,'dwhickman6b','Daveen','Whickman','dwhickman6b@hud.gov','NlKA9I0b'),(229,'tcrossingham6c','Theressa','Crossingham','tcrossingham6c@woothemes.com','EPbQFMj'),(230,'croulston6d','Cindy','Roulston','croulston6d@weebly.com','qxoFPITq9By'),(231,'cwenman6e','Colan','Wenman','cwenman6e@mediafire.com','u77ATqz'),(232,'mkidby6f','Merola','Kidby','mkidby6f@geocities.com','OcS0CVn'),(233,'ccurrall6g','Cullen','Currall','ccurrall6g@indiegogo.com','0NvWo9w'),(234,'sgladdish6h','Suzanne','Gladdish','sgladdish6h@creativecommons.org','9wdokR4AvW'),(235,'pcorryer6i','Patricio','Corryer','pcorryer6i@unesco.org','mlst5Yl'),(236,'hsmylie6j','Herschel','Smylie','hsmylie6j@diigo.com','YdERV76ocF'),(237,'bhellwing6k','Becca','Hellwing','bhellwing6k@theglobeandmail.com','ov6ObKC'),(238,'rbradnam6l','Rollie','Bradnam','rbradnam6l@tuttocitta.it','Nk4Xq1'),(239,'pdedham6m','Page','Dedham','pdedham6m@google.cn','Sjk8Tu'),(240,'cshobbrook6n','Cindie','Shobbrook','cshobbrook6n@slideshare.net','XhKoWB6jYoK'),(241,'klowndsborough6o','Kimball','Lowndsborough','klowndsborough6o@sbwire.com','z0yDVYr01e6'),(242,'gstatersfield6p','Georgie','Statersfield','gstatersfield6p@latimes.com','lrXlIG2hRJm'),(243,'bpettegre6q','Bibby','Pettegre','bpettegre6q@time.com','UAllfO'),(244,'bhathwood6r','Benedetta','Hathwood','bhathwood6r@com.com','h6HGA873B8H'),(245,'tdowning6s','Tadeas','Downing','tdowning6s@tinyurl.com','pkonYXg9Yq6'),(246,'ldimic6t','Lia','Dimic','ldimic6t@latimes.com','K46nlD'),(247,'abotly6u','Alford','Botly','abotly6u@china.com.cn','1dBMWJ'),(248,'bbranston6v','Boote','Branston','bbranston6v@spiegel.de','emlHb57'),(249,'ggollop6w','Gal','Gollop','ggollop6w@mit.edu','c7O4N3yu'),(250,'meicheler6x','Minerva','Eicheler','meicheler6x@kickstarter.com','KVnvG17uAo'),(251,'sschenfisch6y','Spencer','Schenfisch','sschenfisch6y@seattletimes.com','qFiyxrucZT'),(252,'rromayn6z','Ricki','Romayn','rromayn6z@mlb.com','Rf72aMz5C'),(253,'kbatha70','Kelcey','Batha','kbatha70@wiley.com','EUzBLL7D0'),(254,'cplatt71','Carmelita','Platt','cplatt71@csmonitor.com','H0GKE2KxF'),(255,'gkneel72','Gretal','Kneel','gkneel72@constantcontact.com','vDOiGrQR5i'),(256,'ncrocken73','Nicholas','Crocken','ncrocken73@netscape.com','Zkvm6Q'),(257,'mgartell74','Maje','Gartell','mgartell74@jiathis.com','47eEKqG'),(258,'kdehooch75','Kelcie','De Hooch','kdehooch75@vimeo.com','5iXlxV'),(259,'mpetr76','Melitta','Petr','mpetr76@topsy.com','bU6sjV506M5'),(260,'abernardelli77','Allister','Bernardelli','abernardelli77@gnu.org','4LrrTDyvxz'),(261,'tdennert78','Toni','Dennert','tdennert78@acquirethisname.com','p2GgDXsezgKX'),(262,'cmeryett79','Cecil','Meryett','cmeryett79@comsenz.com','OgsY2MzQqmtf'),(263,'noxby7a','Nertie','Oxby','noxby7a@google.ru','xWzAgiaDUUWQ'),(264,'mcasini7b','Marlane','Casini','mcasini7b@japanpost.jp','F7ISJZnyPU'),(265,'abalasini7c','Arabel','Balasini','abalasini7c@techcrunch.com','QzNR55qTl3d'),(266,'jcesconi7d','Jacki','Cesconi','jcesconi7d@gnu.org','qnzhAgplz'),(267,'afice7e','Adelbert','Fice','afice7e@biglobe.ne.jp','G2MXJLwWo'),(268,'chourston7f','Chev','Hourston','chourston7f@google.nl','ciTt40PfZH'),(269,'mdaud7g','Maryrose','Daud','mdaud7g@princeton.edu','qxUzi0Hy'),(270,'theadon7h','Thurston','Headon','theadon7h@yahoo.co.jp','9x9PoaVu7OsK'),(271,'ggini7i','Garrick','Gini','ggini7i@dion.ne.jp','Y9JIZHq'),(272,'wbaudin7j','Ward','Baudin','wbaudin7j@howstuffworks.com','0lrEtcf'),(273,'mcubuzzi7k','Millicent','Cubuzzi','mcubuzzi7k@artisteer.com','6q2YKxq'),(274,'kskuce7l','Kali','Skuce','kskuce7l@soundcloud.com','pSJ7COr0iVe'),(275,'nmccorkindale7m','Noam','McCorkindale','nmccorkindale7m@si.edu','Yu2xhJx2'),(276,'azottoli7n','Anastasia','Zottoli','azottoli7n@google.ca','jImNQKMEfSF2'),(277,'dtawton7o','Dirk','Tawton','dtawton7o@reuters.com','B8wnqeIpD'),(278,'ocarman7p','Orsa','Carman','ocarman7p@ask.com','87Shq6l5c141'),(279,'fkidwell7q','Fairleigh','Kidwell','fkidwell7q@ftc.gov','PxYtiUj'),(280,'aechallier7r','Allsun','Echallier','aechallier7r@woothemes.com','pnVYvpjs'),(281,'rjaqueme7s','Rollins','Jaqueme','rjaqueme7s@seattletimes.com','4WRxNZmJdQX'),(282,'mmcilvenny7t','Margarette','McIlvenny','mmcilvenny7t@wikimedia.org','97w8Aa'),(283,'tlevis7u','Thomasin','Levis','tlevis7u@weibo.com','lC4KkYOF9C'),(284,'jgirkins7v','Josselyn','Girkins','jgirkins7v@cnbc.com','AydxUw46Dfsc'),(285,'tmussilli7w','Teressa','Mussilli','tmussilli7w@google.com.hk','k6MMHf8'),(286,'rvanwaadenburg7x','Rosella','Van Waadenburg','rvanwaadenburg7x@amazon.co.uk','mENqoW'),(287,'atybalt7y','Adel','Tybalt','atybalt7y@chicagotribune.com','jLPuEEMEBMR4'),(288,'kcoles7z','Kaiser','Coles','kcoles7z@columbia.edu','CqUJR4'),(289,'sbreznovic80','Sammy','Breznovic','sbreznovic80@mashable.com','Y4m4C2H'),(290,'tgwilliams81','Tabby','Gwilliams','tgwilliams81@qq.com','hng4KTtWrHWM'),(291,'tetoile82','Talbot','Etoile','tetoile82@apple.com','6yPk9hY'),(292,'mparres83','Mort','Parres','mparres83@cloudflare.com','3p7TAaR'),(293,'kajam84','Kimbra','Ajam','kajam84@freewebs.com','RdRdRIRcN'),(294,'mstickells85','Monica','Stickells','mstickells85@163.com','MCUogwPc'),(295,'alindelof86','Appolonia','Lindelof','alindelof86@nyu.edu','iPAYPjr'),(296,'pransome87','Perren','Ransome','pransome87@toplist.cz','iG2muQqYY6pd'),(297,'mquinton88','Maurise','Quinton','mquinton88@nydailynews.com','VNfNKWf'),(298,'dledgard89','Drusie','Ledgard','dledgard89@networkadvertising.org','UucechE'),(299,'terbe8a','Thomasina','Erbe','terbe8a@devhub.com','ADvlMCRK6R'),(300,'alangran8b','Annabell','Langran','alangran8b@chronoengine.com','1Lki45O'),(301,'dvasyushkhin8c','Dell','Vasyushkhin','dvasyushkhin8c@behance.net','wHpqO0orz6zD'),(302,'jhoudhury8d','Jarret','Houdhury','jhoudhury8d@squidoo.com','i9GBnl'),(303,'rcurragh8e','Rebecka','Curragh','rcurragh8e@npr.org','iaLIq0MYpZU3'),(304,'eberriball8f','Edmon','Berriball','eberriball8f@seattletimes.com','daOvcXsG'),(305,'rmorgue8g','Rocky','Morgue','rmorgue8g@theglobeandmail.com','Q9dMIDC'),(306,'psidary8h','Padget','Sidary','psidary8h@weebly.com','L0GqgO'),(307,'gorable8i','Giorgi','Orable','gorable8i@trellian.com','w0OxgXYSZ'),(308,'rkemston8j','Rose','Kemston','rkemston8j@quantcast.com','DKjYN7cw'),(309,'gdellcasa8k','Gregorius','Dell Casa','gdellcasa8k@parallels.com','RMSq1zpf1b5'),(310,'aduer8l','Ase','Duer','aduer8l@imageshack.us','xquBTFDC'),(311,'ilogg8m','Ikey','Logg','ilogg8m@sitemeter.com','iAFSfjr98'),(312,'jbromhead8n','Jermaine','Bromhead','jbromhead8n@phpbb.com','PjV9U84Ue'),(313,'lnoye8o','Lynnelle','Noye','lnoye8o@netscape.com','ddjzHclkTv4L'),(314,'tpetett8p','Thorin','Petett','tpetett8p@wsj.com','IRM5Cu'),(315,'abricknall8q','Avrom','Bricknall','abricknall8q@ox.ac.uk','kM5jkuuFzzTw'),(316,'sbushill8r','Shena','Bushill','sbushill8r@flavors.me','IiVMeL2Gafuf'),(317,'gdyball8s','Gayel','Dyball','gdyball8s@nasa.gov','3V5WjkMdfLH'),(318,'hdescroix8t','Hendrika','Descroix','hdescroix8t@ustream.tv','OWu8VV6'),(319,'aspenclay8u','Allen','Spenclay','aspenclay8u@diigo.com','3QGqXIzciu'),(320,'chuyche8v','Clerc','Huyche','chuyche8v@uol.com.br','PTRbvqi5hnLq'),(321,'emewton8w','Elnar','Mewton','emewton8w@macromedia.com','Z7qUrj4Dw'),(322,'flukovic8x','Ferdie','Lukovic','flukovic8x@sourceforge.net','JqDqAuWEJdH'),(323,'jcasazza8y','Jill','Casazza','jcasazza8y@who.int','pZsnk8KuWPI'),(324,'lwybron8z','Libbey','Wybron','lwybron8z@washington.edu','YRxHF8ahfXup'),(325,'rthyer90','Rorie','Thyer','rthyer90@epa.gov','7QkxpGyMhi0x'),(326,'shallworth91','Scarlet','Hallworth','shallworth91@newyorker.com','8LE3RKs96PE'),(327,'vknappen92','Verney','Knappen','vknappen92@google.pl','10hB4UWq'),(328,'akirtlan93','Ashby','Kirtlan','akirtlan93@nytimes.com','3Aab0BGh'),(329,'ldoblin94','Lib','Doblin','ldoblin94@google.com.br','UZRTi1tOU'),(330,'alehrahan95','Angus','Lehrahan','alehrahan95@bandcamp.com','7Paqlzy7fx'),(331,'jdyson96','Jon','Dyson','jdyson96@microsoft.com','hlOHhzdun'),(332,'jbraley97','Joannes','Braley','jbraley97@buzzfeed.com','qAHC2W'),(333,'rriglesford98','Renie','Riglesford','rriglesford98@github.com','9JKPHJQsh'),(334,'rlibrey99','Rhianon','Librey','rlibrey99@scientificamerican.com','xX1iUZWVCVh'),(335,'ocanlin9a','Ode','Canlin','ocanlin9a@census.gov','z26GcWXINh4k'),(336,'tmatiebe9b','Teddy','Matiebe','tmatiebe9b@upenn.edu','icphmY7e80h'),(337,'lmaccarrane9c','Leonidas','MacCarrane','lmaccarrane9c@fotki.com','E4oJS83U'),(338,'kplitz9d','Kinsley','Plitz','kplitz9d@squarespace.com','xVHY0Pjo'),(339,'wdwerryhouse9e','Waverly','Dwerryhouse','wdwerryhouse9e@ftc.gov','K3yI6o'),(340,'mghio9f','Milka','Ghio','mghio9f@yahoo.com','qXhUCsjLdxEH'),(341,'focorrin9g','Fleming','O\'Corrin','focorrin9g@freewebs.com','ET37Hp6ahMbp'),(342,'nbletcher9h','Nickolai','Bletcher','nbletcher9h@mozilla.com','M0thGZ7t'),(343,'hgrigoriev9i','Heda','Grigoriev','hgrigoriev9i@blinklist.com','pyb9gangvQTu'),(344,'iseavers9j','Isabelle','Seavers','iseavers9j@nymag.com','9dBgbG10MIEx'),(345,'tseyers9k','Tamera','Seyers','tseyers9k@economist.com','DUpE1gRQ9'),(346,'ckenwrick9l','Chaddie','Kenwrick','ckenwrick9l@berkeley.edu','lIY8PvrNuRQ'),(347,'apurnell9m','Allan','Purnell','apurnell9m@google.com.br','d7UhtqkTGSWY'),(348,'echinnick9n','Emalia','Chinnick','echinnick9n@biblegateway.com','ra5tKT'),(349,'tkoch9o','Tallou','Koch','tkoch9o@loc.gov','lLDqzwMCIw'),(350,'sdubble9p','Shelli','Dubble','sdubble9p@state.tx.us','ZvOE1prReFR'),(351,'jmorgue9q','Judon','Morgue','jmorgue9q@nasa.gov','T6qlNX'),(352,'btorbett9r','Billie','Torbett','btorbett9r@salon.com','bxvMxjaa'),(353,'gmcgeouch9s','Genevieve','McGeouch','gmcgeouch9s@china.com.cn','sRwxkEr'),(354,'bmcbratney9t','Bruno','McBratney','bmcbratney9t@stumbleupon.com','0wSwAS'),(355,'dwallentin9u','Dahlia','Wallentin','dwallentin9u@a8.net','Be8tTJgC7q'),(356,'bgurney9v','Brietta','Gurney','bgurney9v@gizmodo.com','1ibQAgLS'),(357,'atolson9w','Alex','Tolson','atolson9w@g.co','3QU60v'),(358,'pfritter9x','Paton','Fritter','pfritter9x@github.com','ACMq2T'),(359,'atomsu9y','Ariel','Tomsu','atomsu9y@oakley.com','48YlCEZ'),(360,'tditch9z','Teodora','Ditch','tditch9z@usnews.com','tprdyFWnr'),(361,'croystona0','Caitrin','Royston','croystona0@gmpg.org','zoHboKEJ0X'),(362,'mtackesa1','Martita','Tackes','mtackesa1@state.tx.us','YKoSZMcPm'),(363,'bcraterea2','Brooke','Cratere','bcraterea2@aol.com','8KPrA1JMYD'),(364,'gtrussella3','Georgia','Trussell','gtrussella3@zimbio.com','dIkE0Ro6zq6'),(365,'higlesiaza4','Hillyer','Iglesiaz','higlesiaza4@nbcnews.com','RCUeDz8'),(366,'rhumbya5','Reid','Humby','rhumbya5@newsvine.com','73YXaEs'),(367,'dtomasiana6','Devy','Tomasian','dtomasiana6@com.com','ObJ4owW'),(368,'clapennaa7','Consalve','Lapenna','clapennaa7@csmonitor.com','nOSIVBkTP'),(369,'jcranmera8','Jonis','Cranmer','jcranmera8@dell.com','k6NEjQADO'),(370,'beaggera9','Bank','Eagger','beaggera9@mit.edu','lUCOswR7COB'),(371,'mcolvilleaa','Morten','Colville','mcolvilleaa@mit.edu','53PRdnS'),(372,'klosebyab','Kinsley','Loseby','klosebyab@is.gd','2XD6Fw8Hg'),(373,'ksamwaysac','Keen','Samways','ksamwaysac@un.org','ikqrEW1XE'),(374,'achastagnierad','Arri','Chastagnier','achastagnierad@uol.com.br','5vFcsox'),(375,'cmagarrellae','Connor','Magarrell','cmagarrellae@goodreads.com','fIYFxqojNXN'),(376,'elagaduaf','Earle','Lagadu','elagaduaf@mapy.cz','4G96RVi3V'),(377,'cfrenchumag','Celinka','Frenchum','cfrenchumag@yale.edu','YTLhn9'),(378,'cmckinlayah','Cirilo','McKinlay','cmckinlayah@nasa.gov','QrREih'),(379,'mregelousai','Marleah','Regelous','mregelousai@google.it','p9NnzNuMFe'),(380,'pcrasswelleraj','Panchito','Crassweller','pcrasswelleraj@google.ca','E54eha'),(381,'dhamnerak','Diarmid','Hamner','dhamnerak@last.fm','MCWOx8pUG1Q'),(382,'klambinal','Kittie','Lambin','klambinal@amazon.de','uw1Xcf'),(383,'ofranzmanam','Orrin','Franzman','ofranzmanam@chronoengine.com','Od2nFDixOl'),(384,'ppaulian','Patsy','Pauli','ppaulian@edublogs.org','FRgxgpzdOrBv'),(385,'ejedrzejewiczao','Ediva','Jedrzejewicz','ejedrzejewiczao@uol.com.br','B1xvQvHQ'),(386,'lnormantonap','Luz','Normanton','lnormantonap@latimes.com','pORhzz'),(387,'dshirtcliffeaq','Donielle','Shirtcliffe','dshirtcliffeaq@engadget.com','5iUrh6ZK'),(388,'canchorar','Celie','Anchor','canchorar@yandex.ru','WiRPS4ON'),(389,'pluetyas','Peadar','Luety','pluetyas@godaddy.com','hoQx6pQ1tH0N'),(390,'oboogat','Ortensia','Boog','oboogat@jigsy.com','XnJrWXbR'),(391,'htythertonau','Hildegarde','Tytherton','htythertonau@mtv.com','iIvGK9q9HIXR'),(392,'jdunkinsonav','Jannel','Dunkinson','jdunkinsonav@tiny.cc','lwccfGrd'),(393,'hdoggettaw','Hanson','Doggett','hdoggettaw@google.es','Q9nRnfN8Q'),(394,'drisboroughax','Dimitri','Risborough','drisboroughax@wufoo.com','eRmKqc'),(395,'laronovay','Lane','Aronov','laronovay@eepurl.com','ELL5ADRfE'),(396,'gangroveaz','Gaston','Angrove','gangroveaz@marriott.com','5X6uPv'),(397,'kjendasb0','Kelila','Jendas','kjendasb0@sohu.com','CGNgf8'),(398,'trawlisonb1','Thomasin','Rawlison','trawlisonb1@fc2.com','z1wHZQO8EG'),(399,'rwoodersonb2','Reinold','Wooderson','rwoodersonb2@opera.com','EDI9jK6CrE'),(400,'pedgeworthb3','Philipa','Edgeworth','pedgeworthb3@nyu.edu','JF6AP7dpXJUl'),(401,'caneleyb4','Carlen','Aneley','caneleyb4@netlog.com','ilKKvnlCxoF'),(402,'sburwinb5','Sullivan','BURWIN','sburwinb5@admin.ch','pUED4g93o'),(403,'mfollib6','Mommy','Folli','mfollib6@ebay.com','C6d7L12QWa1'),(404,'cbarthelemyb7','Cornie','Barthelemy','cbarthelemyb7@ox.ac.uk','MiWn9SvkI'),(405,'gbodocsb8','Gerhardine','Bodocs','gbodocsb8@devhub.com','njXnDYb'),(406,'qorumb9','Queenie','Orum','qorumb9@yahoo.com','cDKOxtSb'),(407,'ntiddemanba','Norton','Tiddeman','ntiddemanba@blogtalkradio.com','Yi8OZL6uMl'),(408,'gzorzinibb','Gretchen','Zorzini','gzorzinibb@marketwatch.com','JzFD7q9a'),(409,'vpetrillobc','Vanny','Petrillo','vpetrillobc@chicagotribune.com','haHwgv'),(410,'acamachobd','Astrid','Camacho','acamachobd@cbslocal.com','t697uthcG1O'),(411,'gstorrbe','Gwenny','Storr','gstorrbe@china.com.cn','temOmcr'),(412,'amessagebf','Ann','Message','amessagebf@dell.com','VpJN9sXCM7nb'),(413,'dsaillbg','Darci','Saill','dsaillbg@trellian.com','FGp4EM0IxC'),(414,'djanawaybh','Dav','Janaway','djanawaybh@nature.com','oDm0lP4i9s'),(415,'aplumbbi','Aluin','Plumb','aplumbbi@histats.com','NXpXShuTDBw'),(416,'ahalheadbj','Anatola','Halhead','ahalheadbj@wiley.com','kUYRzrXN'),(417,'fsturridgebk','Fields','Sturridge','fsturridgebk@msu.edu','v5jWEAVV'),(418,'bcavanaughbl','Briana','Cavanaugh','bcavanaughbl@rambler.ru','cvDTRjI'),(419,'cventurabm','Chiquia','Ventura','cventurabm@psu.edu','AqhuU9Y'),(420,'ncamockbn','Nerte','Camock','ncamockbn@eventbrite.com','XwyLnZI'),(421,'rschoolcroftbo','Roseanne','Schoolcroft','rschoolcroftbo@zimbio.com','kqTfacBQ'),(422,'ddeamerbp','Doro','Deamer','ddeamerbp@ustream.tv','Bh2rQDqc2'),(423,'awhetnallbq','Arlyn','Whetnall','awhetnallbq@multiply.com','SspgMR7'),(424,'greavellbr','Gottfried','Reavell','greavellbr@1688.com','QMO7oRd3'),(425,'fbeauchampbs','Frazer','Beauchamp','fbeauchampbs@gov.uk','o78Z7D3vY8kK'),(426,'lkytebt','Luca','Kyte','lkytebt@zimbio.com','kKkyfWh9Y9Y'),(427,'eflemmingbu','Ezri','Flemming','eflemmingbu@tinyurl.com','cd5QpU'),(428,'tcominsbv','Tiffi','Comins','tcominsbv@people.com.cn','Dd0Pkin'),(429,'sohearnbw','Shandra','O\'Hearn','sohearnbw@tripod.com','oyDWrc3f'),(430,'jbonnettbx','Jorgan','Bonnett','jbonnettbx@sciencedirect.com','xmgWgXiyNPD'),(431,'lyakuntzovby','Lorri','Yakuntzov','lyakuntzovby@amazonaws.com','erHRV373R'),(432,'crossiterbz','Clarita','Rossiter','crossiterbz@stanford.edu','jBAfWqjK2'),(433,'sknevetc0','Sean','Knevet','sknevetc0@independent.co.uk','vZJ9M0Z6'),(434,'laberchirderc1','Lettie','Aberchirder','laberchirderc1@google.com','8JCFfr6'),(435,'vabbisonc2','Vallie','Abbison','vabbisonc2@nymag.com','C6fDD1Lgo4It'),(436,'lbiltc3','Louis','Bilt','lbiltc3@furl.net','lZDa0Q2uqo'),(437,'nmeritonc4','Nelli','Meriton','nmeritonc4@yelp.com','YKy0UAYkQRZw'),(438,'mcombec5','Maximilianus','Combe','mcombec5@state.tx.us','lHEbxx'),(439,'mmonetic6','Marjory','Moneti','mmonetic6@opera.com','6fnfbzEpiugk'),(440,'vlansdownc7','Vanda','Lansdown','vlansdownc7@miibeian.gov.cn','sZfEvn'),(441,'ahogbournec8','Arlyne','Hogbourne','ahogbournec8@chronoengine.com','gZD0zO'),(442,'mmiguelc9','Martita','Miguel','mmiguelc9@narod.ru','xmOaTrlDr2X'),(443,'xsheersca','Xavier','Sheers','xsheersca@ox.ac.uk','rhgivB3FDp2u'),(444,'kwomackcb','Kimmi','Womack','kwomackcb@hibu.com','ppSUMRCG'),(445,'wmcgettigancc','Ware','McGettigan','wmcgettigancc@dion.ne.jp','5N49OhYkfF9'),(446,'gelrickcd','Giuseppe','Elrick','gelrickcd@constantcontact.com','DjP2vLwNY8'),(447,'bvittorece','Boycey','Vittore','bvittorece@cnn.com','7tQqWJ01'),(448,'gkulvercf','Giffer','Kulver','gkulvercf@ucla.edu','J9GmQBi9Jtd'),(449,'mtorbettcg','Monty','Torbett','mtorbettcg@spiegel.de','8HOA5xaK4Q'),(450,'ndowlingch','Nat','Dowling','ndowlingch@shinystat.com','ThftT5MSb'),(451,'gchastangci','Gale','Chastang','gchastangci@so-net.ne.jp','Wh7wpauFZWN8'),(452,'stissingtoncj','Sally','Tissington','stissingtoncj@thetimes.co.uk','1LUkiK9p'),(453,'tsavageck','Teddie','Savage','tsavageck@csmonitor.com','8SQTMEz'),(454,'lellingsworthcl','Leisha','Ellingsworth','lellingsworthcl@mit.edu','wqrTxpJB9P'),(455,'ekettscm','Elisabetta','Ketts','ekettscm@berkeley.edu','Gq0Cfw'),(456,'ahuscroftcn','Alix','Huscroft','ahuscroftcn@cyberchimps.com','XLxhaC3GvbyK'),(457,'nperratco','Natalina','Perrat','nperratco@apache.org','iQQ0erU'),(458,'arawetcp','Alexi','Rawet','arawetcp@123-reg.co.uk','eVoL9kNKe'),(459,'shorleycq','Siffre','Horley','shorleycq@drupal.org','9UZys9HNU'),(460,'bleelcr','Bengt','Leel','bleelcr@ox.ac.uk','7oNaZozWLF'),(461,'garckollcs','Gabriellia','Arckoll','garckollcs@state.gov','bKHtGMz'),(462,'fmcilheranct','Flori','McIlheran','fmcilheranct@bizjournals.com','TXP2Ub6jsv'),(463,'jwarsopcu','Judy','Warsop','jwarsopcu@comcast.net','ybw5wVgW'),(464,'hgahancv','Hermia','Gahan','hgahancv@abc.net.au','gVb0ZSAQ4Aga'),(465,'stumininicw','Sheila','Tuminini','stumininicw@about.com','ttrlA2qF'),(466,'tgrascx','Tommi','Gras','tgrascx@t.co','tBb9Cc8yNViK'),(467,'cjoinceycy','Clem','Joincey','cjoinceycy@google.com','m99OKsaN'),(468,'cgaskellcz','Chrysa','Gaskell','cgaskellcz@devhub.com','CmWAfTT2izP0'),(469,'ipoadd0','Ingeberg','Poad','ipoadd0@diigo.com','56kOtgKSz'),(470,'rstallworthd1','Rena','Stallworth','rstallworthd1@oakley.com','4uXWvHAe'),(471,'avassed2','Adelaida','Vasse','avassed2@slate.com','R6Mlo5'),(472,'bshanklandd3','Brant','Shankland','bshanklandd3@yandex.ru','cDWlBh4My'),(473,'tcastelletd4','Tonye','Castellet','tcastelletd4@pagesperso-orange.fr','1OqaSp'),(474,'rcockrend5','Rosetta','Cockren','rcockrend5@harvard.edu','ad35FxPA'),(475,'dhosierd6','Danyette','Hosier','dhosierd6@networkadvertising.org','7uT7fnj'),(476,'mkuzemkad7','Mercie','Kuzemka','mkuzemkad7@exblog.jp','631GuXBR3j0'),(477,'alodderd8','Ailene','Lodder','alodderd8@barnesandnoble.com','upvmb2A'),(478,'mcecered9','Mathew','Cecere','mcecered9@com.com','FAOnAv0PVR'),(479,'emccutcheonda','Eugine','McCutcheon','emccutcheonda@comsenz.com','f7CanwhpGnBo'),(480,'cfaulldb','Cyrille','Faull','cfaulldb@usatoday.com','qk5Kwl'),(481,'ccovetdc','Cassie','Covet','ccovetdc@google.it','7iUiSWK'),(482,'arosenqvistdd','Allistir','Rosenqvist','arosenqvistdd@ted.com','smiaZdSeEX'),(483,'bfleade','Bridgette','Flea','bfleade@vinaora.com','9y6vYnsDLtb'),(484,'hwalisiakdf','Harold','Walisiak','hwalisiakdf@wikia.com','4GpYQ2S'),(485,'ajacopdg','Analise','Jacop','ajacopdg@wufoo.com','S5sGep'),(486,'jhurdissdh','Jule','Hurdiss','jhurdissdh@fc2.com','fpSfpHFIla'),(487,'ayaxleydi','Aldus','Yaxley','ayaxleydi@howstuffworks.com','z6QLV0yZ'),(488,'cjacobovitchdj','Calla','Jacobovitch','cjacobovitchdj@cmu.edu','vByAdb'),(489,'jlippittdk','Jessamyn','Lippitt','jlippittdk@netscape.com','7Hv7Nm2dUgO'),(490,'acorbiedl','Ashleigh','Corbie','acorbiedl@ocn.ne.jp','xkLmZXLSc'),(491,'cfursedm','Clemence','Furse','cfursedm@vkontakte.ru','JwfqZnqdEsJ'),(492,'rcharkerdn','Raye','Charker','rcharkerdn@purevolume.com','EM9tIIF'),(493,'ababbedo','Augy','Babbe','ababbedo@ezinearticles.com','Teh2R0'),(494,'jmclenaghandp','Jose','McLenaghan','jmclenaghandp@themeforest.net','sSQ1XKhu'),(495,'thuntdq','Tiphany','Hunt','thuntdq@wunderground.com','arpBAuwkah'),(496,'ubuchamdr','Uri','Bucham','ubuchamdr@sourceforge.net','ZqB2o5K'),(497,'afaichneyds','Aubert','Faichney','afaichneyds@youtu.be','qWGeLkF7'),(498,'bpoxondt','Blair','Poxon','bpoxondt@hhs.gov','092dww'),(499,'mbarnicottdu','Marylee','Barnicott','mbarnicottdu@toplist.cz','ORjjw34Vec'),(500,'cdunniomdv','Clarissa','Dunniom','cdunniomdv@goo.gl','bO7JRqn7A'),(501,'msoggeedw','Mandi','Soggee','msoggeedw@miitbeian.gov.cn','L5kr0sGqH4E'),(502,'mcampiondx','Mariya','Campion','mcampiondx@dailymotion.com','QaXi1yQhm'),(503,'jropkesdy','Jaquelyn','Ropkes','jropkesdy@pen.io','vhJzoC5OFH'),(504,'cmactrustriedz','Cesare','MacTrustrie','cmactrustriedz@howstuffworks.com','zF2xCsc28C82'),(505,'dpopove0','Dalston','Popov','dpopove0@godaddy.com','YXs8IX'),(506,'fstuttee1','Federico','Stutte','fstuttee1@icq.com','wSHV0Dc'),(507,'relstube2','Rock','Elstub','relstube2@cloudflare.com','k4yZtlb7O'),(508,'vjephcotte3','Vivyanne','Jephcott','vjephcotte3@virginia.edu','wXY8u9'),(509,'aloxleye4','Ailsun','Loxley','aloxleye4@sbwire.com','rHJ7sgijeU2E'),(510,'igreenleye5','Issi','Greenley','igreenleye5@nydailynews.com','lD8tuBPooMMx'),(511,'oodoghestye6','Orson','O\'Doghesty','oodoghestye6@indiatimes.com','O7fMcss7'),(512,'jpoulglaise7','Jodi','Poulglais','jpoulglaise7@eepurl.com','GFeunaMxE8'),(513,'rhughsone8','Regina','Hughson','rhughsone8@woothemes.com','trIKchVNM'),(514,'awinchcombe9','Augustus','Winchcomb','awinchcombe9@weather.com','FRsmWX73nml1'),(515,'mwattonea','Matthaeus','Watton','mwattonea@alibaba.com','9VeB4nRTSUjR'),(516,'setoneb','Sheilakathryn','Eton','setoneb@army.mil','fsa4ayRZ'),(517,'specheec','Sula','Peche','specheec@comsenz.com','eWGYKp'),(518,'ggabottied','Glen','Gabotti','ggabottied@pcworld.com','hWFhtU31K'),(519,'wgougeee','Walker','Gouge','wgougeee@xinhuanet.com','ukdoWkU'),(520,'ewoodcraftef','Emmet','Woodcraft','ewoodcraftef@hc360.com','F8qgDsPl4FIb'),(521,'bdanelseg','Blondelle','Danels','bdanelseg@dell.com','o1Mmbhpp'),(522,'ycartmereh','Yorgos','Cartmer','ycartmereh@ning.com','g9ILykJRCU'),(523,'bpabloei','Burty','Pablo','bpabloei@disqus.com','5XuX4XrYJeGu'),(524,'pcrumptonej','Pammie','Crumpton','pcrumptonej@devhub.com','Z26Fao9IXa'),(525,'ahucquartek','Aron','Hucquart','ahucquartek@behance.net','VxshaGaP'),(526,'ayorkel','Avigdor','York','ayorkel@usda.gov','LXGx1oRaV9Qf'),(527,'lhaithwaiteem','Lian','Haithwaite','lhaithwaiteem@youtube.com','DUoZe0fH0dZV'),(528,'cheibelen','Cordell','Heibel','cheibelen@ow.ly','VF5bPd99P'),(529,'ulacknoreo','Urbain','Lacknor','ulacknoreo@twitter.com','VzhXBCtsKE'),(530,'btowheyep','Brent','Towhey','btowheyep@ucla.edu','YbAF239dbjo'),(531,'cgrogeq','Correy','Grog','cgrogeq@gov.uk','hDhYqSkY'),(532,'nnanuccioier','Nels','Nanuccioi','nnanuccioier@indiatimes.com','nGN421D6KxE'),(533,'kfidgees','Kristal','Fidge','kfidgees@paginegialle.it','syh6uY'),(534,'mshimonyet','Monica','Shimony','mshimonyet@msu.edu','rJAgDn8'),(535,'lleforteu','Ludovico','Lefort','lleforteu@wikimedia.org','NXSIIl43w'),(536,'mgooseyev','Maris','Goosey','mgooseyev@google.de','uALv0cb8'),(537,'sswiftew','Sam','Swift','sswiftew@imdb.com','jCYH4d'),(538,'bnickollex','Bengt','Nickoll','bnickollex@nasa.gov','9nwXc08UTvdt'),(539,'nscreatoney','Noby','Screaton','nscreatoney@soundcloud.com','fYyOxucT1'),(540,'wrzehorzez','Wilfred','Rzehorz','wrzehorzez@technorati.com','JoL0SJwO'),(541,'bgirthf0','Bethany','Girth','bgirthf0@cnet.com','XwkoBqOKs'),(542,'mfruchterf1','Marie','Fruchter','mfruchterf1@ow.ly','DOJWQS2q3f7d'),(543,'eboytonf2','Emmy','Boyton','eboytonf2@harvard.edu','3DWI2HrpF'),(544,'bpikhnof3','Bonita','Pikhno','bpikhnof3@soundcloud.com','RecNN1'),(545,'ahabornf4','Asher','Haborn','ahabornf4@springer.com','3WwAh6bg7je2'),(546,'ghairf5','Gale','Hair','ghairf5@imdb.com','xtUL6LAt'),(547,'apuckrinf6','Alana','Puckrin','apuckrinf6@taobao.com','UjnnRDp6TP5a'),(548,'acottisf7','Artemas','Cottis','acottisf7@foxnews.com','Uhkq7EGGHr'),(549,'bmilmoef8','Bessie','Milmoe','bmilmoef8@gnu.org','uURYZ5o'),(550,'bprosef9','Bond','Prose','bprosef9@uol.com.br','1Qsw8hSmYaJx'),(551,'kainsleyfa','Kathy','Ainsley','kainsleyfa@marketwatch.com','jOSD63'),(552,'mlampaertfb','Megan','Lampaert','mlampaertfb@nps.gov','MjvpT3Gp'),(553,'hsedenfc','Hetti','Seden','hsedenfc@fema.gov','UaSTR6DUF'),(554,'hkinverfd','Hallsy','Kinver','hkinverfd@webeden.co.uk','Z2nNTe96Hnwl'),(555,'apaulssonfe','Allys','Paulsson','apaulssonfe@slashdot.org','Ld9TY5G1A'),(556,'glocockff','Gay','Locock','glocockff@ft.com','CDHpXf0mwr94'),(557,'adulyfg','Althea','Duly','adulyfg@cnn.com','lCNqhb1E'),(558,'vsobieskifh','Vite','Sobieski','vsobieskifh@eventbrite.com','Kc8wdnU8dA'),(559,'spantingfi','Si','Panting','spantingfi@marriott.com','L7rNug3Txem'),(560,'lhunterfj','Lorita','Hunter','lhunterfj@netscape.com','6x3nq7QQC'),(561,'dloftsfk','Darleen','Lofts','dloftsfk@symantec.com','9Ulvij'),(562,'nedlestonefl','Neal','Edlestone','nedlestonefl@mashable.com','qZ1yoxXE'),(563,'ekayefm','Elsinore','Kaye','ekayefm@delicious.com','26iRFa'),(564,'mrowberryfn','Monica','Rowberry','mrowberryfn@irs.gov','ayIiQZOa4w'),(565,'stucknottfo','Sergent','Tucknott','stucknottfo@state.gov','BKlpgvFC'),(566,'kswainsfp','Kissie','Swains','kswainsfp@networksolutions.com','k9pnoKIMAGL'),(567,'apeterafq','Adrea','Petera','apeterafq@auda.org.au','eKRQD5o'),(568,'krosellfr','Kris','Rosell','krosellfr@smugmug.com','HrtBp9V'),(569,'kmcgifffs','Kamilah','McGiff','kmcgifffs@yellowpages.com','mCdWSPUu4r'),(570,'tmcnairft','Tana','McNair','tmcnairft@slideshare.net','sIxHNkxAK4yr'),(571,'rlansburyfu','Rosa','Lansbury','rlansburyfu@123-reg.co.uk','qy895PTm3XS'),(572,'rbennedickfv','Rufus','Bennedick','rbennedickfv@about.me','scnDKX6WLpf'),(573,'msavegefw','Mirabella','Savege','msavegefw@dyndns.org','iGFicyJ0IR'),(574,'elehrfx','Evie','Lehr','elehrfx@mtv.com','Xb9tChDMkjK'),(575,'olethleyfy','Otha','Lethley','olethleyfy@businessinsider.com','lOe20Beuh'),(576,'lfinchamfz','Lanny','Fincham','lfinchamfz@diigo.com','jTYAkEx'),(577,'scarthyg0','Sonnnie','Carthy','scarthyg0@hhs.gov','Vp2Dr115nv'),(578,'scraigmyleg1','Savina','Craigmyle','scraigmyleg1@51.la','D1FA8z07GJn4'),(579,'tpickervanceg2','Thor','Pickervance','tpickervanceg2@about.com','EuKvsRfp7x'),(580,'rpeattieg3','Rourke','Peattie','rpeattieg3@devhub.com','lDNnCBTF'),(581,'rdainterg4','Rowe','Dainter','rdainterg4@netvibes.com','Rjc5NcPS'),(582,'rhoofeg5','Rex','Hoofe','rhoofeg5@cisco.com','vU2qcWt7M'),(583,'tbrennekeg6','Tyler','Brenneke','tbrennekeg6@furl.net','j68i0qK6Onz'),(584,'sbauchopg7','Sandi','Bauchop','sbauchopg7@cloudflare.com','Ye3GbR'),(585,'vmonckmang8','Vivianne','Monckman','vmonckmang8@cnbc.com','66Gghj3R7'),(586,'gwitchardg9','Grantham','Witchard','gwitchardg9@phoca.cz','NKAKE5kF'),(587,'nferronetga','Netti','Ferronet','nferronetga@hc360.com','Wt8y3TA'),(588,'lbeautymangb','Letisha','Beautyman','lbeautymangb@sciencedirect.com','65rmJLGhk'),(589,'cvandalegc','Catarina','Van Dale','cvandalegc@columbia.edu','ZfiJnRk4iEYv'),(590,'jreadiegd','Janette','Readie','jreadiegd@cocolog-nifty.com','TcOERW'),(591,'sreddlege','Sabrina','Reddle','sreddlege@ocn.ne.jp','hpnsTlXT4z'),(592,'mbenoeygf','Martguerita','Benoey','mbenoeygf@umn.edu','mTgwYD'),(593,'utregentgg','Ulrikaumeko','Tregent','utregentgg@whitehouse.gov','jdUJror'),(594,'cwaplintongh','Cyndia','Waplinton','cwaplintongh@paginegialle.it','3mvSPQc'),(595,'ewalthallgi','Ezmeralda','Walthall','ewalthallgi@addtoany.com','Z9E2a0'),(596,'nahernegj','Nisse','Aherne','nahernegj@europa.eu','vYw0mi'),(597,'sawdrygk','Sidonnie','Awdry','sawdrygk@weebly.com','dsc3qg1EK'),(598,'mokennavaingl','Magdalena','O\'Kennavain','mokennavaingl@elegantthemes.com','qP8VY1'),(599,'bbickerstethgm','Brice','Bickersteth','bbickerstethgm@unblog.fr','45JgkVSuVv'),(600,'agiddonsgn','Andeee','Giddons','agiddonsgn@flavors.me','DSppwEh54UQ'),(601,'mdicksgo','Marty','Dicks','mdicksgo@wordpress.com','vPSwuT'),(602,'ncodnergp','Nina','Codner','ncodnergp@washingtonpost.com','zPD2erynl6YR'),(603,'lbollettigq','Lawton','Bolletti','lbollettigq@who.int','O8hA9eDv'),(604,'koffellgr','Karee','Offell','koffellgr@linkedin.com','ocuoyYphfC7g'),(605,'knickolesgs','Kylie','Nickoles','knickolesgs@slideshare.net','4XgfBaI6'),(606,'lfeldfishergt','Lisbeth','Feldfisher','lfeldfishergt@xing.com','WkqT5jiz'),(607,'ilammertgu','Indira','Lammert','ilammertgu@cam.ac.uk','34LarCEZ'),(608,'cholwellgv','Cris','Holwell','cholwellgv@topsy.com','FoJMFbgkjygr'),(609,'fcollerangw','Frederique','Colleran','fcollerangw@time.com','ugv60tC4XI7'),(610,'iflegggx','Ivory','Flegg','iflegggx@washington.edu','tayvtF9UdbG'),(611,'sbirchettgy','Sayre','Birchett','sbirchettgy@zimbio.com','4qaOFWXdU'),(612,'apavisgz','Aubry','Pavis','apavisgz@yellowbook.com','mDaG0daAJh6'),(613,'pkeffordh0','Pammie','Kefford','pkeffordh0@furl.net','pluB6JjbsjSf'),(614,'cpyburnh1','Cozmo','Pyburn','cpyburnh1@ucoz.ru','PDv0m0'),(615,'mtabramh2','Maddie','Tabram','mtabramh2@hhs.gov','mI1yiEWRWY5r'),(616,'gtobiash3','Glennie','Tobias','gtobiash3@scribd.com','2LWYJq'),(617,'ispilsteadh4','Ingeborg','Spilstead','ispilsteadh4@instagram.com','WMu9wsbnnk'),(618,'kmacgraghh5','Kimberli','MacGragh','kmacgraghh5@wikipedia.org','E4N1lQa'),(619,'cphelpsh6','Christoph','Phelps','cphelpsh6@youtu.be','hMVw9udw'),(620,'fboutellierh7','Frederic','Boutellier','fboutellierh7@wunderground.com','hpsruLCuJ'),(621,'slegath8','Saxon','Legat','slegath8@ft.com','lOcGcxK'),(622,'wtommenh9','Wolf','Tommen','wtommenh9@miitbeian.gov.cn','HiGftz'),(623,'celsayha','Camel','Elsay','celsayha@mtv.com','65DQjOBzo2'),(624,'ayurlovhb','Alli','Yurlov','ayurlovhb@woothemes.com','aApUWvJl'),(625,'kcopnallhc','Kippy','Copnall','kcopnallhc@google.co.uk','iZQFD7nhg9k'),(626,'lmoncrieffehd','Lillian','Moncrieffe','lmoncrieffehd@umich.edu','zLCBHtL2FJmO'),(627,'ffrangohe','Francisco','Frango','ffrangohe@nature.com','CPKp4z6b5'),(628,'kdamarellhf','Kinna','Damarell','kdamarellhf@soundcloud.com','VCtxj8b'),(629,'hsheftonhg','Helen','Shefton','hsheftonhg@craigslist.org','x0Ry3PX'),(630,'emordantihh','Elga','Mordanti','emordantihh@pagesperso-orange.fr','P4w6vYpVrYTC'),(631,'jantyukhinhi','Jania','Antyukhin','jantyukhinhi@adobe.com','mtjBXM'),(632,'wcumpstyhj','Winn','Cumpsty','wcumpstyhj@un.org','bH57VeHtCfk'),(633,'abancrofthk','Adrianna','Bancroft','abancrofthk@networksolutions.com','dqbLAU7KdoB'),(634,'wlaityhl','Wiley','Laity','wlaityhl@fc2.com','NSMtRbc'),(635,'ccullimorehm','Carmelle','Cullimore','ccullimorehm@oaic.gov.au','Ags0jdJCum'),(636,'wcasbournehn','Waylon','Casbourne','wcasbournehn@nba.com','OOYQm5'),(637,'mdalessioho','Mable','D\'Alessio','mdalessioho@china.com.cn','wvIYJQWR'),(638,'lspellmanhp','Lorilyn','Spellman','lspellmanhp@illinois.edu','Xvh1Jpw3'),(639,'mdougillhq','Martica','Dougill','mdougillhq@dell.com','wTRhurjEkr2'),(640,'dlamkehr','Daron','Lamke','dlamkehr@1688.com','ycRIQI'),(641,'lmossomhs','Liesa','Mossom','lmossomhs@toplist.cz','PDCM0kL'),(642,'ksawdonht','Kristin','Sawdon','ksawdonht@dailymail.co.uk','iaDPOef'),(643,'gmacpikehu','Gill','MacPike','gmacpikehu@sourceforge.net','8PqsPIE9k'),(644,'slotheanhv','Susan','Lothean','slotheanhv@hugedomains.com','FwIKuz0pAqAh'),(645,'sscrutonhw','Shadow','Scruton','sscrutonhw@shinystat.com','ltQVjhX2NPVR'),(646,'dloachheadhx','Davine','Loachhead','dloachheadhx@dion.ne.jp','EuGdgus'),(647,'clutherhy','Charmion','Luther','clutherhy@typepad.com','yf70Xsr5Q5HQ'),(648,'gtwiggehz','Gregorio','Twigge','gtwiggehz@jimdo.com','GSY4laxo'),(649,'cspelleri0','Carmina','Speller','cspelleri0@dailymail.co.uk','SHK059'),(650,'alarrawayi1','Alfreda','Larraway','alarrawayi1@tinyurl.com','TmMU3kX0Dk'),(651,'kdionisiii2','Karon','Dionisii','kdionisiii2@dailymail.co.uk','9mKODNk'),(652,'tmcgillreichi3','Torie','McGillreich','tmcgillreichi3@so-net.ne.jp','tvLBo03OHpb'),(653,'ptonkini4','Paulita','Tonkin','ptonkini4@tmall.com','84MIkU'),(654,'lpeizeri5','Letty','Peizer','lpeizeri5@blogs.com','raZfglocFMUl'),(655,'rwheali6','Robbi','Wheal','rwheali6@ebay.co.uk','oIE0OfUjuF'),(656,'pbeckmanni7','Pauly','Beckmann','pbeckmanni7@amazon.co.jp','Eh3A6oo0g'),(657,'lturveyi8','Lynn','Turvey','lturveyi8@storify.com','ZrPhaoLw2X'),(658,'fkingswoldi9','Farlee','Kingswold','fkingswoldi9@geocities.jp','qYdY4F1T6kc'),(659,'hsoansia','Hestia','Soans','hsoansia@hostgator.com','7vQVb9Oo4'),(660,'lalfwyib','Lib','Alfwy','lalfwyib@skyrock.com','xXTBFHO0nJhW'),(661,'gmohammadic','Gregorio','Mohammad','gmohammadic@answers.com','7yt7Bpz'),(662,'dturfinid','Delaney','Turfin','dturfinid@sina.com.cn','MHcKdf9fBVd'),(663,'cbaynomie','Cort','Baynom','cbaynomie@ucoz.com','WSPWrlOoDB'),(664,'asanchezif','Astrix','Sanchez','asanchezif@ucoz.ru','gCRc7rK'),(665,'odenisig','Obadiah','Denis','odenisig@sciencedirect.com','8nbNdT90HksP'),(666,'ltrappeih','Lauretta','Trappe','ltrappeih@irs.gov','s6uc32Ci'),(667,'klargenii','Karalee','Largen','klargenii@arstechnica.com','wZtzPy'),(668,'wvickarij','Wang','Vickar','wvickarij@bloglovin.com','tNSDYM'),(669,'pfurmongerik','Pansie','Furmonger','pfurmongerik@unesco.org','7LdB5j'),(670,'elamdenil','Ervin','Lamden','elamdenil@google.cn','MofJRxb'),(671,'koveyim','Kesley','Ovey','koveyim@cnet.com','Wmvt3w3FB9'),(672,'rbiertonin','Rolf','Bierton','rbiertonin@abc.net.au','rw1bF15Vr8xc'),(673,'mpaddickio','Margalo','Paddick','mpaddickio@tmall.com','SXaD90p'),(674,'tbonnickip','Tally','Bonnick','tbonnickip@xinhuanet.com','OoJWpLkGDQe'),(675,'mlismoreiq','Morrie','Lismore','mlismoreiq@telegraph.co.uk','EAtCNsJRSr'),(676,'mzuppair','Martie','Zuppa','mzuppair@example.com','hQcL6UXgatp'),(677,'asimlais','Arel','Simla','asimlais@nationalgeographic.com','LVybtOt3RIq2'),(678,'wjonssonit','Winnie','Jonsson','wjonssonit@prweb.com','tOsQYr'),(679,'hosmondiu','Helen-elizabeth','Osmond','hosmondiu@123-reg.co.uk','RjCo0ip'),(680,'bmcvieiv','Berky','McVie','bmcvieiv@usa.gov','rk7GSaJX1Cr'),(681,'lnecoldsiw','Leigha','Necolds','lnecoldsiw@delicious.com','CKKTU7Q'),(682,'ggeibelix','Gerri','Geibel','ggeibelix@dmoz.org','aIGc3aqwC'),(683,'zdyosiy','Zane','Dyos','zdyosiy@bloglovin.com','YnuJQpP'),(684,'dgilbertiz','Dorey','Gilbert','dgilbertiz@cafepress.com','ctQK7d'),(685,'sbromleyj0','Suzanna','Bromley','sbromleyj0@about.com','0cq71KA'),(686,'gedmeadj1','Glyn','Edmead','gedmeadj1@examiner.com','rRkYwWF1U8GN'),(687,'ebenedidickj2','Emylee','Benedidick','ebenedidickj2@woothemes.com','Vh6cefYG'),(688,'psutcliffej3','Pen','Sutcliffe','psutcliffej3@virginia.edu','FiIkHZ'),(689,'gtukelyj4','Galvan','Tukely','gtukelyj4@rambler.ru','YHNW1f5O5u'),(690,'ahildredj5','Ave','Hildred','ahildredj5@furl.net','S2kZJrC5N'),(691,'mgibbenj6','Maribelle','Gibben','mgibbenj6@walmart.com','yH2otFN'),(692,'lantoniouj7','Leif','Antoniou','lantoniouj7@wisc.edu','51F9zWLLa6L5'),(693,'bvanyj8','Butch','Vany','bvanyj8@earthlink.net','VRBqrOIlQN'),(694,'gskillingsj9','Gabbie','Skillings','gskillingsj9@altervista.org','iDzPreOkN'),(695,'sashbrookja','Stanly','Ashbrook','sashbrookja@sphinn.com','JeiLG1I2ol'),(696,'kkilcoynejb','Karla','Kilcoyne','kkilcoynejb@bloglovin.com','tboUvzqo3f9y'),(697,'iedridgejc','Ian','Edridge','iedridgejc@blogs.com','FDzgnAvPE0'),(698,'hezzlejd','Hilly','Ezzle','hezzlejd@amazon.de','NTF0QFzFeNnZ'),(699,'dknokje','Deena','Knok','dknokje@gmpg.org','sKowAQ7'),(700,'ssudronjf','Shawna','Sudron','ssudronjf@ning.com','nJkb5v'),(701,'bmcandrewjg','Brent','McAndrew','bmcandrewjg@yahoo.com','A3T2sQzg4b'),(702,'gmeighjh','Gillan','Meigh','gmeighjh@fastcompany.com','ew4b7on'),(703,'llagoji','Larissa','Lago','llagoji@scientificamerican.com','mrONJm'),(704,'lmatthisjj','Lori','Matthis','lmatthisjj@google.co.jp','JPhm9atw'),(705,'ssaketjk','Sheri','Saket','ssaketjk@google.co.uk','AygmT5hZ'),(706,'lbougourdjl','Levi','Bougourd','lbougourdjl@wp.com','AUVxz6Cc'),(707,'cximenezjm','Coriss','Ximenez','cximenezjm@alexa.com','cNM4TDDspxu'),(708,'mrosenblattjn','Milena','Rosenblatt','mrosenblattjn@reference.com','ckz2S7'),(709,'hmcpaikjo','Hiram','McPaik','hmcpaikjo@mozilla.com','bH5oPf4dff0'),(710,'rticksalljp','Ranice','Ticksall','rticksalljp@upenn.edu','p6UFGYkXU'),(711,'rvaulkhardjq','Rupert','Vaulkhard','rvaulkhardjq@shareasale.com','YJT7wH'),(712,'liacomettiijr','Lyle','Iacomettii','liacomettiijr@theguardian.com','F9Vkb5N'),(713,'aleebeterjs','Ardis','Leebeter','aleebeterjs@wikimedia.org','wxgBxH'),(714,'gwinchcombejt','Griffin','Winchcombe','gwinchcombejt@discovery.com','sawbK31jpw'),(715,'kmehewju','Kristina','Mehew','kmehewju@pinterest.com','NeAKNCc'),(716,'sskottlejv','Sandra','Skottle','sskottlejv@examiner.com','I4H0kZgvKY'),(717,'ssearchjw','Sofia','Search','ssearchjw@exblog.jp','a70A8MTu'),(718,'qshearjx','Quillan','Shear','qshearjx@baidu.com','UB4V5BnNfFQR'),(719,'kcardwelljy','Ki','Cardwell','kcardwelljy@lulu.com','6zHugi3'),(720,'amurtjz','Annissa','Murt','amurtjz@forbes.com','zmskZLQ'),(721,'dlebarrek0','Delmor','Le Barre','dlebarrek0@go.com','9dEaPLVbek'),(722,'carrank1','Carmelia','Arran','carrank1@npr.org','BYu6i9Ov'),(723,'rricketsk2','Raynell','Rickets','rricketsk2@reverbnation.com','4fhBKApXo'),(724,'tlebromk3','Teodorico','Le Brom','tlebromk3@tuttocitta.it','QBbpQYNcFnpu'),(725,'cespositak4','Cazzie','Esposita','cespositak4@stumbleupon.com','1Bo2b9OD8Q'),(726,'ariefk5','Abie','Rief','ariefk5@businessweek.com','g3xygXyUt'),(727,'ladamovitchk6','Lind','Adamovitch','ladamovitchk6@timesonline.co.uk','hsHb5VR'),(728,'wbathok7','Winona','Batho','wbathok7@trellian.com','mVwrobj2'),(729,'ebernardk8','Elfie','Bernard','ebernardk8@businesswire.com','O6qvgMqx1'),(730,'dlohrensenk9','Dorelia','Lohrensen','dlohrensenk9@vinaora.com','9vv9V4'),(731,'kcolreinka','Katusha','Colrein','kcolreinka@icio.us','t5kiMMyZkv'),(732,'dhansemannkb','Dyann','Hansemann','dhansemannkb@bbb.org','F7LVy54Q0SIu'),(733,'mcarrutherskc','Millard','Carruthers','mcarrutherskc@slate.com','AcCMaTTTqYlj'),(734,'nhanleykd','Natalie','Hanley','nhanleykd@dmoz.org','yDEeGlvauR'),(735,'kmacsporranke','Karim','MacSporran','kmacsporranke@deliciousdays.com','axGu7lPtDd'),(736,'mmakerkf','Mortimer','Maker','mmakerkf@ustream.tv','cUankyzcc1zu'),(737,'ebutkg','Ebeneser','But','ebutkg@fotki.com','8YQ2BXi'),(738,'lhickinkh','Lindy','Hickin','lhickinkh@europa.eu','J30M1PX'),(739,'cgannicottki','Carleen','Gannicott','cgannicottki@live.com','2QXH5Orwk7C'),(740,'ncarnoghankj','Nestor','Carnoghan','ncarnoghankj@irs.gov','qX1XgujN'),(741,'nmontgomerykk','Niles','Montgomery','nmontgomerykk@hhs.gov','6x464LcEV'),(742,'mmccallumkl','Mehetabel','McCallum','mmccallumkl@adobe.com','TiFGF33LVxWv'),(743,'mslingerkm','Marchall','Slinger','mslingerkm@webnode.com','XfRWjiL'),(744,'tgosalvezkn','Turner','Gosalvez','tgosalvezkn@example.com','YSqwd87'),(745,'ehousonko','Emera','Houson','ehousonko@mtv.com','2CWCS42bIQ'),(746,'pstevenkp','Perry','Steven','pstevenkp@wiley.com','GaKeXZ'),(747,'ctiddkq','Carmine','Tidd','ctiddkq@japanpost.jp','fBzBDGFF'),(748,'nbowlaskr','Nana','Bowlas','nbowlaskr@forbes.com','uBP2B4'),(749,'itredgetks','Isabeau','Tredget','itredgetks@chicagotribune.com','fRzDUZ9Wf'),(750,'dhaviskt','Daryl','Havis','dhaviskt@1688.com','AYX233vggzLt'),(751,'ecornuku','Elyssa','Cornu','ecornuku@jugem.jp','2F1kyAnRHNx'),(752,'praubheimkv','Pamelina','Raubheim','praubheimkv@a8.net','oVVBYzUZ'),(753,'ldehnkw','Langston','Dehn','ldehnkw@vimeo.com','Uwd7g8Jc71V'),(754,'sbeckerlegkx','Stephanus','Beckerleg','sbeckerlegkx@php.net','3oLARdBChaP'),(755,'abluesky','Antonio','Blues','abluesky@upenn.edu','lIJgLOlmo'),(756,'lstangelkz','Lesley','St Angel','lstangelkz@utexas.edu','mXj5sv'),(757,'iramagel0','Irene','Ramage','iramagel0@cocolog-nifty.com','kFxQGq1IjA'),(758,'mbalcombel1','Miranda','Balcombe','mbalcombel1@ocn.ne.jp','ZUEjiOM14kbR'),(759,'agarkenl2','Aliza','Garken','agarkenl2@feedburner.com','WzioBey'),(760,'dchaferl3','Darius','Chafer','dchaferl3@woothemes.com','ivf8uK'),(761,'rodulchontal4','Ralph','O\'Dulchonta','rodulchontal4@jigsy.com','O7nyNVmtZMi'),(762,'tmouncherl5','Teador','Mouncher','tmouncherl5@mashable.com','ph0IHF'),(763,'laucockl6','Lindon','Aucock','laucockl6@tripod.com','cF6KnPMQ'),(764,'lwarsapl7','Louise','Warsap','lwarsapl7@about.com','RtIZNFilB'),(765,'clebrunl8','Clarice','Lebrun','clebrunl8@wikispaces.com','tatw54A2o'),(766,'mgladdolphl9','Melantha','Gladdolph','mgladdolphl9@umich.edu','eUZ6wAU'),(767,'gblasela','Gan','Blase','gblasela@woothemes.com','Kpqynf5KOxlD'),(768,'egilkeslb','Eloisa','Gilkes','egilkeslb@example.com','sAx7k2K'),(769,'alangelc','Avram','Lange','alangelc@reverbnation.com','PFfaQshQu'),(770,'cbakerld','Curry','Baker','cbakerld@diigo.com','eBsOX21Ep'),(771,'malfonsettole','Mitzi','Alfonsetto','malfonsettole@gizmodo.com','jmemu31Q8'),(772,'arogetlf','Arline','Roget','arogetlf@uol.com.br','f6h7B4BS6'),(773,'fhaldenelg','Friederike','Haldene','fhaldenelg@dyndns.org','0dPtpWKA4zvE'),(774,'scamidgelh','Sella','Camidge','scamidgelh@privacy.gov.au','MqR41wYf'),(775,'gferruzzili','Garland','Ferruzzi','gferruzzili@cyberchimps.com','mNxOA9Fz'),(776,'cyannonilj','Cleon','Yannoni','cyannonilj@noaa.gov','KlAp7s'),(777,'wantonopouloslk','Web','Antonopoulos','wantonopouloslk@spiegel.de','iQbNgmZQp'),(778,'rdecreuzell','Randall','Decreuze','rdecreuzell@123-reg.co.uk','zP5yZi2g'),(779,'swolfendalelm','Sidnee','Wolfendale','swolfendalelm@domainmarket.com','wGxOrP'),(780,'atidyln','Alisun','Tidy','atidyln@ft.com','JAsVtIPFz'),(781,'aminigolo','Alphonse','Minigo','aminigolo@twitter.com','KFmf6jaG'),(782,'crubinovitchlp','Curcio','Rubinovitch','crubinovitchlp@foxnews.com','e68PSOV'),(783,'bstorrielq','Benoite','Storrie','bstorrielq@mail.ru','gro4p7hP'),(784,'ymayeslr','Yul','Mayes','ymayeslr@pen.io','diDtQEy2Q'),(785,'hmottershawls','Hortense','Mottershaw','hmottershawls@columbia.edu','aiffBE'),(786,'lmosslt','Lucho','Moss','lmosslt@about.me','YO060hqrE'),(787,'rjoffelu','Rhiamon','Joffe','rjoffelu@prweb.com','Qu6HNRnX'),(788,'bkardoslv','Batsheva','Kardos','bkardoslv@cdc.gov','K9VuyoEk'),(789,'szywickilw','Suellen','Zywicki','szywickilw@comsenz.com','1uSW0b4crpx'),(790,'emaltmanlx','Eziechiele','Maltman','emaltmanlx@economist.com','exepHxRGV086'),(791,'gminithorpely','Gerhardine','Minithorpe','gminithorpely@photobucket.com','KcdbebUV8qX'),(792,'fkrikorianlz','Fae','Krikorian','fkrikorianlz@issuu.com','cTPI7r'),(793,'jkeechm0','Jaquelin','Keech','jkeechm0@fc2.com','Qg6yJKUTxC'),(794,'rlygom1','Rosa','Lygo','rlygom1@opensource.org','H81lGzTSyDv'),(795,'ssparrowem2','Scarlet','Sparrowe','ssparrowem2@phoca.cz','NDsOR2P3duC'),(796,'llishmundm3','Loni','Lishmund','llishmundm3@canalblog.com','F5TtycP'),(797,'afurphym4','Armand','Furphy','afurphym4@virginia.edu','h8MF1NeTGuy'),(798,'sfishleym5','Sunshine','Fishley','sfishleym5@wordpress.com','iSo99mk'),(799,'omcalisterm6','Onfroi','McAlister','omcalisterm6@etsy.com','A4cwLu1d6CV'),(800,'dballem7','Dalia','Balle','dballem7@usgs.gov','RabORYHT3y6'),(801,'nfrossellm8','Nickey','Frossell','nfrossellm8@aol.com','FtPu6UKc5X'),(802,'tshakshaftm9','Thea','Shakshaft','tshakshaftm9@jigsy.com','JJJoQlm60'),(803,'lsummersbyma','Lottie','Summersby','lsummersbyma@liveinternet.ru','eotpikf'),(804,'dquestmb','Dulciana','Quest','dquestmb@scientificamerican.com','PTubFekrxE'),(805,'tlabamc','Tabbatha','Laba','tlabamc@yandex.ru','i5xRChwFeaYq'),(806,'bshervingtonmd','Burg','Shervington','bshervingtonmd@wordpress.org','qe40mW6'),(807,'scerithme','Susanna','Cerith','scerithme@live.com','Q0XqgKge'),(808,'dmcpeckmf','Damita','McPeck','dmcpeckmf@nbcnews.com','O5f0pZ'),(809,'hvoasemg','Herminia','Voase','hvoasemg@lycos.com','4TXr4MamrSZ'),(810,'lchithammh','Leonardo','Chitham','lchithammh@paginegialle.it','K6yBFY897r'),(811,'adudsonmi','Anthe','Dudson','adudsonmi@sina.com.cn','GA1xNGsrJ3iu'),(812,'schinamj','Stern','China','schinamj@latimes.com','mIuGzH0fJP'),(813,'mellesworthemk','Mitch','Ellesworthe','mellesworthemk@stanford.edu','2CiCHNuI23'),(814,'anealeyml','Abram','Nealey','anealeyml@paginegialle.it','L3UWqYyu5Xu5'),(815,'smaccombemm','Seumas','MacCombe','smaccombemm@wired.com','7ZosWMKU'),(816,'awarbeysmn','Ashton','Warbeys','awarbeysmn@usnews.com','bKs2a6'),(817,'dfrewermo','Desiri','Frewer','dfrewermo@mapy.cz','e4Gx8uWk5hx'),(818,'trettermp','Tomkin','Retter','trettermp@nature.com','Y7rm7uGxF2cQ'),(819,'ngossonmq','Nicholas','Gosson','ngossonmq@mtv.com','8vWpx9lMt'),(820,'djirkamr','Demetris','Jirka','djirkamr@youtube.com','MEn9D85S'),(821,'sivettsms','Sebastian','Ivetts','sivettsms@ed.gov','kQJ7VyfsWhy'),(822,'cscarmanmt','Carlyn','Scarman','cscarmanmt@yellowbook.com','mcRWO10EvS'),(823,'mjurnmu','Melantha','Jurn','mjurnmu@latimes.com','sG7VvB'),(824,'pstoilemv','Papageno','Stoile','pstoilemv@reference.com','gCUxtcGPRC'),(825,'cwoodruffmw','Curr','Woodruff','cwoodruffmw@whitehouse.gov','H80ilFp'),(826,'xdelberguemx','Xenos','Delbergue','xdelberguemx@elegantthemes.com','7XzeDLiR0R'),(827,'hovershottmy','Hagen','Overshott','hovershottmy@instagram.com','xFA7RXYeLY'),(828,'golyffmz','Gladi','Olyff','golyffmz@google.ru','wUIPAhI4jW'),(829,'chrusn0','Cecil','Hrus','chrusn0@mapquest.com','10WDwIfTU'),(830,'agresten1','Alvira','Greste','agresten1@simplemachines.org','p6StNoS'),(831,'clestorn2','Corette','Lestor','clestorn2@mapy.cz','Edpqmuwo'),(832,'dschofflern3','Dionne','Schoffler','dschofflern3@slashdot.org','3clglMAtz6f'),(833,'jbastien4','Janie','Bastie','jbastien4@geocities.jp','99IprLo6lb7'),(834,'slevettn5','Saw','Levett','slevettn5@live.com','FdnLNQlAS'),(835,'jaronsteinn6','Jojo','Aronstein','jaronsteinn6@yahoo.com','dWcAXUSQEYO'),(836,'rdeathn7','Rodge','De Ath','rdeathn7@answers.com','2h1lqI0f'),(837,'nsimoensn8','Nell','Simoens','nsimoensn8@phpbb.com','xnqYYT'),(838,'dpeskinn9','Darnell','Peskin','dpeskinn9@tmall.com','ofzecfM'),(839,'mpickthornena','Mateo','Pickthorne','mpickthornena@ftc.gov','bwoc2LUVT5n'),(840,'bmadrenb','Brianna','Madre','bmadrenb@technorati.com','sK3OeFP7cd'),(841,'iheliotnc','Isabelle','Heliot','iheliotnc@wufoo.com','LzALtDSWIS'),(842,'pweekesnd','Pippo','Weekes','pweekesnd@microsoft.com','pDgOKvB9bPC'),(843,'jstorckene','Justin','Storcke','jstorckene@mediafire.com','LHYxv5H'),(844,'aroutledgenf','Adriena','Routledge','aroutledgenf@simplemachines.org','sxohKM0s6Tz'),(845,'nrennardng','Neall','Rennard','nrennardng@google.com.hk','nMXVBxRVbd1b'),(846,'eteressenh','Enos','Teresse','eteressenh@usda.gov','ozB3tFGU'),(847,'mkeedyni','Madlen','Keedy','mkeedyni@home.pl','7I4Y1b'),(848,'mredolfinj','Mureil','Redolfi','mredolfinj@tumblr.com','QMR9YBLu'),(849,'dscawennk','Daria','Scawen','dscawennk@ebay.com','NMCJUxu'),(850,'elitsternl','Elnar','Litster','elitsternl@booking.com','7PPNdVCm8my0'),(851,'dhacunnm','Devinne','Hacun','dhacunnm@unesco.org','t27VQgolRf'),(852,'lpacenn','Luca','Pace','lpacenn@vimeo.com','DigipyEYpZ5n'),(853,'mwitchellno','Millard','Witchell','mwitchellno@google.com.hk','N4if4rVdI4z'),(854,'gglencrossnp','Gregor','Glencross','gglencrossnp@merriam-webster.com','z3ATfkY7k'),(855,'rpickvancenq','Renelle','Pickvance','rpickvancenq@facebook.com','UQEMs2ksIk60'),(856,'tbirkmyrnr','Tiffani','Birkmyr','tbirkmyrnr@storify.com','xUanWg62'),(857,'vlaitens','Vannie','Laite','vlaitens@deviantart.com','Zs7PfOyGqep'),(858,'mphalpnt','Murdoch','Phalp','mphalpnt@gizmodo.com','Ck5MqN'),(859,'mmaccolgannu','Margalit','MacColgan','mmaccolgannu@moonfruit.com','EqqoWr6bVIam'),(860,'jpostannv','Jannel','Postan','jpostannv@ibm.com','y28Y5JGmD0'),(861,'lscogingsnw','Leeanne','Scogings','lscogingsnw@cloudflare.com','3KjvhlKU8GzJ'),(862,'nkleslnx','Noelle','Klesl','nkleslnx@uiuc.edu','7EW5MXVtI'),(863,'tganfortheny','Tyrus','Ganforthe','tganfortheny@myspace.com','TuwiylV'),(864,'ghowatnz','Gabriel','Howat','ghowatnz@exblog.jp','CaMDdh'),(865,'ahakeno0','Anastasia','Haken','ahakeno0@noaa.gov','OTYHktMiX'),(866,'cavrahamofo1','Charil','Avrahamof','cavrahamofo1@home.pl','gbtwp1'),(867,'mwilsdono2','Marvin','Wilsdon','mwilsdono2@nba.com','wMjpSmFi'),(868,'ceastburyo3','Chicky','Eastbury','ceastburyo3@tiny.cc','3giXLdNU5Jyi'),(869,'ldaelmano4','Libbie','Daelman','ldaelmano4@about.me','DoM6Edoi'),(870,'gcapeyo5','Glynnis','Capey','gcapeyo5@amazonaws.com','X8bQezcGYDc'),(871,'mbutlando6','Melony','Butland','mbutlando6@boston.com','uwNml0OgHhUb'),(872,'kmedcalfo7','Kaila','Medcalf','kmedcalfo7@unblog.fr','8x6sVDd9'),(873,'astaigo8','Armando','Staig','astaigo8@theglobeandmail.com','NukQQi86j'),(874,'lkingabyo9','Loralee','Kingaby','lkingabyo9@google.es','DlrAOVdpyal'),(875,'odayshoa','Odo','Daysh','odayshoa@vk.com','UWyqTXVQu'),(876,'spawelsob','Stace','Pawels','spawelsob@miibeian.gov.cn','lKMMK0'),(877,'vpoveleoc','Vanda','Povele','vpoveleoc@dmoz.org','C5QgGpDghjCd'),(878,'calbinsonod','Cosimo','Albinson','calbinsonod@t.co','qHldyz0'),(879,'agamlynoe','Annaliese','Gamlyn','agamlynoe@homestead.com','qxBjpJPfET'),(880,'alempertzof','Ado','Lempertz','alempertzof@engadget.com','oLTdt2WTL'),(881,'fbrittonog','Flora','Britton','fbrittonog@devhub.com','EOWkPGCOPetz'),(882,'ddrummeroh','Dav','Drummer','ddrummeroh@prlog.org','D6zM8jg9b47'),(883,'ibrandsmaoi','Ignazio','Brandsma','ibrandsmaoi@addtoany.com','9It0x9IM7LXj'),(884,'ppablosoj','Phillis','Pablos','ppablosoj@imdb.com','vj6wh2K9q'),(885,'toxleeok','Towney','Oxlee','toxleeok@foxnews.com','WFb7Ch0R'),(886,'ohurdedgeol','Orella','Hurdedge','ohurdedgeol@spiegel.de','dKT9N7oueG'),(887,'dpymarom','Dianna','Pymar','dpymarom@usda.gov','d5MkGKN8J'),(888,'garchanbaulton','Gnni','Archanbault','garchanbaulton@last.fm','3z8e2X8nC'),(889,'flabbetoo','Faun','LAbbet','flabbetoo@nbcnews.com','TdnRvXa5'),(890,'hburgumop','Hedy','Burgum','hburgumop@storify.com','onGMOOcIS'),(891,'bgarnhamoq','Burt','Garnham','bgarnhamoq@com.com','mgUQnBMtvk86'),(892,'rmaskallor','Randolph','Maskall','rmaskallor@go.com','nanuDpul'),(893,'rdogertyos','Ruben','Dogerty','rdogertyos@house.gov','owDXi9u'),(894,'eandraschot','Emogene','Andrasch','eandraschot@sogou.com','3UVzVce'),(895,'cmccaghanou','Correna','McCaghan','cmccaghanou@nba.com','ZnwOMYfXJTi'),(896,'fcornfordov','Filbert','Cornford','fcornfordov@bloglines.com','Thw5EQoKaU6'),(897,'zgreenlessow','Zorah','Greenless','zgreenlessow@umn.edu','jL4sTaE'),(898,'kcokelyox','Kathy','Cokely','kcokelyox@behance.net','iYGgw7KIi8s6'),(899,'bcadeoy','Baryram','Cade','bcadeoy@theglobeandmail.com','waKKcK7sfdd'),(900,'afeitosaoz','Adelind','Feitosa','afeitosaoz@goo.ne.jp','gMxDZK62xl'),(901,'pkenafaquep0','Paco','Kenafaque','pkenafaquep0@apache.org','jq9Gcw'),(902,'mahrendsenp1','Marguerite','Ahrendsen','mahrendsenp1@macromedia.com','SWoskjw'),(903,'gswaingerp2','Gates','Swainger','gswaingerp2@quantcast.com','nBjApR'),(904,'ewitherupp3','Ediva','Witherup','ewitherupp3@smugmug.com','C7rKRO'),(905,'redmondsonp4','Riki','Edmondson','redmondsonp4@auda.org.au','Dl3DtCJ6c9'),(906,'dweddeburnscrimgeourp5','Denice','Weddeburn - Scrimgeour','dweddeburnscrimgeourp5@theguardian.com','ni8m6GFP5UA'),(907,'ydickonsp6','Yehudit','Dickons','ydickonsp6@admin.ch','9uUrwUjR'),(908,'tbrunap7','Tab','Bruna','tbrunap7@comcast.net','VuJ4J9fWw'),(909,'eyerlettp8','Emylee','Yerlett','eyerlettp8@woothemes.com','6fYloKbhtVs'),(910,'mchadwenp9','Mahalia','Chadwen','mchadwenp9@sakura.ne.jp','QwazOnNQH'),(911,'selstubpa','Seth','Elstub','selstubpa@google.it','l7EAmqVm5fD4'),(912,'echattertonpb','Etta','Chatterton','echattertonpb@reverbnation.com','z4OLwsLAUgM'),(913,'egorrissenpc','Eden','Gorrissen','egorrissenpc@feedburner.com','3OzaYKC'),(914,'hfarlhampd','Hobey','Farlham','hfarlhampd@europa.eu','Yx94bI5TA2Aa'),(915,'jhucpe','Justinn','Huc','jhucpe@soup.io','bvf6yKJNyS'),(916,'tberringtonpf','Tonye','Berrington','tberringtonpf@clickbank.net','JHt70V9GgwX'),(917,'rtweddlepg','Ray','Tweddle','rtweddlepg@columbia.edu','8jnYnr6JD8G'),(918,'vpechacekph','Van','Pechacek','vpechacekph@last.fm','sNh8lAeG'),(919,'pvaudpi','Petronia','Vaud','pvaudpi@soundcloud.com','vdW0Vaq9Hwy'),(920,'mimasonpj','Mikael','Imason','mimasonpj@blog.com','Ho5qMvDktis'),(921,'aosheapk','Arvie','O\' Shea','aosheapk@auda.org.au','BcSAhICfqjz'),(922,'cvereypl','Cherye','Verey','cvereypl@umn.edu','3nH9WkB'),(923,'mcoccipm','Madelin','Cocci','mcoccipm@deviantart.com','2Lh8qSrz5'),(924,'lkelbypn','Lannie','Kelby','lkelbypn@xinhuanet.com','Ufe3Te'),(925,'sspensleypo','Sherwin','Spensley','sspensleypo@umn.edu','nRChOWP0y'),(926,'gstorrarpp','Gunther','Storrar','gstorrarpp@free.fr','TNExHzXMc76'),(927,'swanklinpq','Sharon','Wanklin','swanklinpq@mlb.com','jjx8kRC'),(928,'dkornespr','Dianne','Kornes','dkornespr@jalbum.net','PSA1z5SxN'),(929,'astotherps','Aloisia','Stother','astotherps@xing.com','GpvHXu01'),(930,'jcolvinept','Joannes','Colvine','jcolvinept@sakura.ne.jp','4nh9zt6'),(931,'dcraikpu','Dean','Craik','dcraikpu@reuters.com','3TmITv6s'),(932,'estensonpv','Ericha','Stenson','estensonpv@skype.com','H9BlWBakr'),(933,'fwheeldonpw','Friedrich','Wheeldon','fwheeldonpw@about.com','2OfMjWEGdjr'),(934,'aroocroftpx','Albert','Roocroft','aroocroftpx@zdnet.com','8PksWlDerHF'),(935,'ssnelgrovepy','Stafford','Snelgrove','ssnelgrovepy@baidu.com','BLcKG8cdLQad'),(936,'jvobespz','Joey','Vobes','jvobespz@msn.com','OV70CJQ'),(937,'alysteq0','Adara','Lyste','alysteq0@statcounter.com','A60JHRqEbs'),(938,'hscyoneq1','Horace','Scyone','hscyoneq1@example.com','E1XGaGKIkL'),(939,'dprinneq2','Dana','Prinne','dprinneq2@wikipedia.org','Xa6eAXieK6Yx'),(940,'jclackersq3','Jermaine','Clackers','jclackersq3@cloudflare.com','XEYskCPMeX'),(941,'tsandhillq4','Tabbitha','Sandhill','tsandhillq4@state.tx.us','6C3YFq2xr2Cr'),(942,'csnazleq5','Coleman','Snazle','csnazleq5@ask.com','GwF9Y5beADw'),(943,'awolfendenq6','Alvan','Wolfenden','awolfendenq6@scientificamerican.com','tW5asch4Fi32'),(944,'wcolicotq7','Warner','Colicot','wcolicotq7@goo.gl','asUN3i0dc8'),(945,'pcrawcourq8','Philomena','Crawcour','pcrawcourq8@jalbum.net','GJLkyksb'),(946,'frapiq9','Francois','Rapi','frapiq9@gov.uk','Y70cTDlm'),(947,'tpratchettqa','Tait','Pratchett','tpratchettqa@facebook.com','zUPSoXsGWGi'),(948,'nlammimanqb','Nanon','Lammiman','nlammimanqb@prweb.com','EaOeDs2'),(949,'sridgeqc','Sheelah','Ridge','sridgeqc@salon.com','yegUyF'),(950,'browanqd','Bertrando','Rowan','browanqd@soup.io','Dw9uSrtpNv'),(951,'ashawdforthqe','Alessandra','Shawdforth','ashawdforthqe@redcross.org','y4ncOokwl'),(952,'tsybeqf','Tarrance','Sybe','tsybeqf@aboutads.info','E0qFam'),(953,'rozanneqg','Rose','Ozanne','rozanneqg@4shared.com','QAjqsk'),(954,'dgregineqh','Davina','Gregine','dgregineqh@nih.gov','m1fpYgNCwx'),(955,'pdunbabinqi','Percival','Dunbabin','pdunbabinqi@businessinsider.com','RL1vQ9f'),(956,'zscoughqj','Zora','Scough','zscoughqj@people.com.cn','pS5ZSUryZGj'),(957,'voxladeqk','Vlad','Oxlade','voxladeqk@washingtonpost.com','Og2Wkupi'),(958,'hdinneenql','Hannah','Dinneen','hdinneenql@opera.com','NRKEmge'),(959,'rhasneyqm','Roderich','Hasney','rhasneyqm@go.com','2dp1DkONj3b'),(960,'dgowdieqn','Davita','Gowdie','dgowdieqn@jalbum.net','rZRgI1TNx1'),(961,'esmitherqo','Ernestine','Smither','esmitherqo@nature.com','9lVGKE4AT5cG'),(962,'bjemmettqp','Bebe','Jemmett','bjemmettqp@senate.gov','FMusp2acOb'),(963,'cmuslimqq','Cara','Muslim','cmuslimqq@feedburner.com','xurxNXFlw'),(964,'rclaweqr','Rebeka','Clawe','rclaweqr@github.com','s2uSyHB1'),(965,'acrangleqs','Arel','Crangle','acrangleqs@reuters.com','HqghsOitP'),(966,'ibolteqt','Isac','Bolte','ibolteqt@nih.gov','9qHQirAAHhc'),(967,'cdandiequ','Catlee','Dandie','cdandiequ@discuz.net','pQMLWmspz'),(968,'rgunstonqv','Rosabel','Gunston','rgunstonqv@yahoo.com','A9HXq39dYne'),(969,'akeeltaghqw','Ashli','Keeltagh','akeeltaghqw@telegraph.co.uk','InFgcUjnj7lc'),(970,'efowlestoneqx','Eddi','Fowlestone','efowlestoneqx@altervista.org','mZ7yKAf9'),(971,'ccohenqy','Carrie','Cohen','ccohenqy@1und1.de','sZbp1U'),(972,'sstidstonqz','Sarah','Stidston','sstidstonqz@cisco.com','zZFLGD7UGz4a'),(973,'lminearr0','Liz','Minear','lminearr0@phoca.cz','U98L0MY'),(974,'mdoakr1','Mabel','Doak','mdoakr1@list-manage.com','Ae9EGg1m'),(975,'pcantuar2','Pietra','Cantua','pcantuar2@hubpages.com','VpPz50I'),(976,'areastr3','Anette','Reast','areastr3@foxnews.com','Z3v8N4mK'),(977,'omcgeochr4','Ora','McGeoch','omcgeochr4@myspace.com','HpwTqFQEs'),(978,'hmaywoodr5','Hollie','Maywood','hmaywoodr5@nytimes.com','v0n6wZ'),(979,'vhallittr6','Vincent','Hallitt','vhallittr6@wix.com','AAqJIN'),(980,'rseeneyr7','Raphaela','Seeney','rseeneyr7@delicious.com','9PY7hz'),(981,'dmoggachr8','Dacie','Moggach','dmoggachr8@arizona.edu','nbBFlFX'),(982,'gnovacekr9','Gray','Novacek','gnovacekr9@fotki.com','T6cWrbTh7'),(983,'tnuttenra','Tabbitha','Nutten','tnuttenra@yahoo.co.jp','4WcMDG3F52'),(984,'kmaccaffertyrb','Karin','MacCafferty','kmaccaffertyrb@ibm.com','5cOIUH'),(985,'krubanenkorc','Kathlin','Rubanenko','krubanenkorc@disqus.com','c0Aok236Op'),(986,'bearlamrd','Broderick','Earlam','bearlamrd@illinois.edu','VUkA63inW'),(987,'oeichmannre','Olia','Eichmann','oeichmannre@examiner.com','ZYB1cSLY'),(988,'mdomelrf','Millard','Domel','mdomelrf@cornell.edu','T0j8vhi'),(989,'llallyrg','Ludovika','Lally','llallyrg@forbes.com','9iNhJ1j'),(990,'ihackneyrh','Isak','Hackney','ihackneyrh@twitter.com','0XC1PJ3'),(991,'cmarfellri','Corina','Marfell','cmarfellri@google.ru','x8qXbHwD'),(992,'lcheethamrj','Larisa','Cheetham','lcheethamrj@nbcnews.com','jbJdJOkU5'),(993,'bgeroldirk','Birgit','Geroldi','bgeroldirk@archive.org','r5Ikxn1nRxSZ'),(994,'afryrl','Arturo','Fry','afryrl@woothemes.com','Owu37S'),(995,'arubinowiczrm','Albina','Rubinowicz','arubinowiczrm@google.cn','W4TQJ7Y0A1'),(996,'ktheoboldrn','Kira','Theobold','ktheoboldrn@liveinternet.ru','hh1vxiph'),(997,'wtreacherro','Wally','Treacher','wtreacherro@noaa.gov','kS3CDLOy'),(998,'dryderrp','Devlin','Ryder','dryderrp@webeden.co.uk','nhJPuS'),(999,'rslarkerq','Ricki','Slarke','rslarkerq@photobucket.com','BP5AYFF5wq5'),(1000,'apaxefordrr','Alma','Paxeford','apaxefordrr@house.gov','MtJ244RIP'),(1002,'test2','test','test','test@test.pl','test');
/*!40000 ALTER TABLE `app_logins` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `posts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `login` varchar(45) DEFAULT NULL,
  `text` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `posts`
--

LOCK TABLES `posts` WRITE;
/*!40000 ALTER TABLE `posts` DISABLE KEYS */;
INSERT INTO `posts` VALUES (1,'test','to jest moja notatka'),(2,'test','to jest moja druga notatka'),(3,'test','inna notatka'),(4,'lkobieriecki0','Notatak prywatna: Pin do karty to 6666'),(5,'lkobieriecki0','Drogi pamietniczku'),(6,'lkobieriecki0','Drogi pamietniczku'),(7,'lkobieriecki0','Drogi pamietniczku'),(8,'test','Drogi pamietniczku'),(9,'test','Drogi pamietniczku2'),(10,'test','Place your note here...\r\n         '),(11,'lkobieriecki0','you mada faka you mada faka\r\n         '),(12,'test','<b>  haahahaha </b>'),(13,'test','ala ma kota a miriam ma ptaka '),(15,'lkobieriecki0','to jest ktos z rodziny '),(16,'test','to jest ktos z rodziny ');
/*!40000 ALTER TABLE `posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `trans_data`
--

DROP TABLE IF EXISTS `trans_data`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `trans_data` (
  `trans_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `card` varchar(50) DEFAULT NULL,
  `card_type` varchar(50) DEFAULT NULL,
  `currency` varchar(50) DEFAULT NULL,
  `money` varchar(50) DEFAULT NULL,
  `stock` varchar(50) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `trans_data`
--

LOCK TABLES `trans_data` WRITE;
/*!40000 ALTER TABLE `trans_data` DISABLE KEYS */;
INSERT INTO `trans_data` VALUES (1,82,'4911899560957456701','switch','CAD','$0.57','NASDAQ'),(2,20,'5020928115410661','maestro','MAD','$4.75','NYSE'),(3,20,'4917185963421576','visa-electron','CNY','$1.35','NYSE'),(4,67,'4175005423160175','visa-electron','PHP','$9.69','NASDAQ'),(5,10,'374622796441987','americanexpress','RUB','$5.70','NASDAQ'),(6,93,'374622872244156','americanexpress','CZK','$6.67','NYSE'),(7,19,'349024247954514','americanexpress','CNY','$9.59','NYSE'),(8,64,'6759457597860528478','switch','CZK','$0.56','NYSE'),(9,76,'201421182603824','diners-club-enroute','CNY','$4.16','NYSE'),(10,96,'3536334258882364','jcb','CNY','$0.64','NASDAQ'),(11,42,'5108756486124768','mastercard','CNY','$7.92','NYSE'),(12,91,'3538839689381040','jcb','CNY','$3.79','NASDAQ'),(13,73,'0604362827875463','maestro','IDR','$9.01','NASDAQ'),(14,59,'589381321617599775','maestro','IDR','$3.47','NASDAQ'),(15,18,'3533548674833080','jcb','MXN','$4.05','NYSE'),(16,16,'677173914150393609','laser','PEN','$2.71','NASDAQ'),(17,26,'3573869216564939','jcb','ILS','$8.18','NYSE'),(18,39,'4905893109959118709','switch','AMD','$7.03','NASDAQ'),(19,28,'56022404615227105','china-unionpay','RUB','$7.50','NYSE'),(20,73,'201701501085237','diners-club-enroute','BAM','$3.59','NASDAQ'),(21,39,'67592949133937988','maestro','MXN','$9.40','NASDAQ'),(22,88,'5007666789377900','mastercard','THB','$7.14','NYSE'),(23,74,'3571553189852446','jcb','BGN','$8.03','NASDAQ'),(24,81,'30426557893832','diners-club-carte-blanche','CNY','$3.63','NYSE'),(25,53,'3542081613073930','jcb','VND','$0.09','NYSE'),(26,18,'3535257173181417','jcb','EUR','$1.39','NYSE'),(27,53,'3576648023133956','jcb','EUR','$0.46','NYSE'),(28,49,'493624248501020646','switch','CNY','$8.42','NYSE'),(29,96,'4905318780955567','switch','EUR','$7.04','NYSE'),(30,76,'337941781936470','americanexpress','USD','$7.68','NYSE'),(31,21,'3573952038406347','jcb','AUD','$6.17','NYSE'),(32,96,'374622428778129','americanexpress','BGN','$7.40','NASDAQ'),(33,22,'3535787984550855','jcb','CNY','$3.05','NYSE'),(34,60,'3550385070480119','jcb','SEK','$0.03','NYSE'),(35,91,'4913401969520368','visa-electron','ILS','$7.21','NASDAQ'),(36,20,'5602259810621261','china-unionpay','LTL','$5.18','NASDAQ'),(37,72,'5581836763563759','diners-club-us-ca','CNY','$1.24','NASDAQ'),(38,63,'3566330704301309','jcb','EUR','$4.86','NYSE'),(39,86,'3537185178625625','jcb','EUR','$6.49','NASDAQ'),(40,87,'30057192336646','diners-club-carte-blanche','CNY','$5.37','NYSE'),(41,29,'3533082632053177','jcb','AZN','$3.95','NASDAQ'),(42,43,'3563899334040563','jcb','PLN','$6.20','NASDAQ'),(43,2,'3546235989555963','jcb','RSD','$6.16','NASDAQ'),(44,37,'3549310461796588','jcb','PLN','$4.00','NYSE'),(45,66,'5100179971365150','mastercard','CNY','$7.65','NASDAQ'),(46,76,'4041593711323045','visa','SYP','$3.65','NYSE'),(47,50,'374283743652059','americanexpress','EUR','$3.03','NASDAQ'),(48,81,'3528070642458038','jcb','MKD','$3.67','NYSE'),(49,66,'56022443092164282','china-unionpay','CNY','$5.46','NYSE'),(50,93,'3552902579282909','jcb','CNY','$7.42','NYSE'),(51,61,'3574580914736997','jcb','CZK','$6.24','NASDAQ'),(52,93,'3532575006798484','jcb','BRL','$1.18','NASDAQ'),(53,15,'564182175252659102','switch','USD','$7.99','NYSE'),(54,99,'56022212448674892','china-unionpay','CNY','$2.99','NASDAQ'),(55,55,'3534074467850834','jcb','PLN','$5.27','NASDAQ'),(56,3,'3564786346322320','jcb','CNY','$3.85','NYSE'),(57,28,'374288902018109','americanexpress','IDR','$7.12','NASDAQ'),(58,99,'5602238164764216','bankcard','CAD','$9.27','NASDAQ'),(59,39,'30346813580371','diners-club-carte-blanche','MMK','$8.41','NASDAQ'),(60,89,'4917528323069124','visa-electron','EGP','$0.63','NYSE'),(61,1,'3550833015259759','jcb','EGP','$7.99','NASDAQ'),(62,63,'3556583598733183','jcb','PEN','$5.21','NASDAQ'),(63,10,'3560250558484611','jcb','JPY','$1.35','NYSE'),(64,99,'3547599503996972','jcb','MKD','$6.51','NYSE'),(65,89,'3584429921649199','jcb','ZAR','$9.83','NASDAQ'),(66,8,'3577308753989080','jcb','CNY','$6.94','NASDAQ'),(67,78,'560221467898745259','china-unionpay','CNY','$6.91','NYSE'),(68,78,'5610280182059013','bankcard','CNY','$9.44','NYSE'),(69,60,'6304077212698470183','maestro','RUB','$4.48','NASDAQ'),(70,90,'564182903842162877','switch','UAH','$3.59','NASDAQ'),(71,47,'6759160442088037','maestro','ILS','$2.58','NASDAQ'),(72,26,'372301041642291','americanexpress','RSD','$0.97','NASDAQ'),(73,2,'3573302303252879','jcb','XCD','$3.93','NASDAQ'),(74,73,'3543269265841840','jcb','IDR','$1.93','NYSE'),(75,22,'3550844760067503','jcb','KGS','$9.47','NASDAQ'),(76,32,'5602217433753598','china-unionpay','IDR','$0.79','NASDAQ'),(77,79,'67714375457855486','laser','PHP','$1.88','NASDAQ'),(78,17,'6383382969027909','instapayment','TJS','$0.50','NYSE'),(79,42,'676712477663722391','solo','EGP','$4.79','NASDAQ'),(80,76,'3568147892503134','jcb','PHP','$1.24','NYSE'),(81,49,'3549222787175720','jcb','CNY','$8.56','NASDAQ'),(82,41,'5602220708653915','bankcard','ZMW','$9.80','NYSE'),(83,3,'374288459888334','americanexpress','XOF','$0.91','NASDAQ'),(84,100,'3574499631639121','jcb','KES','$7.20','NASDAQ'),(85,47,'67596450771936487','maestro','XOF','$6.74','NYSE'),(86,6,'3569925335256678','jcb','CNY','$7.23','NYSE'),(87,58,'3546661449394273','jcb','AMD','$2.06','NYSE'),(88,2,'5610954427416689','bankcard','PKR','$3.13','NASDAQ'),(89,31,'201874475272774','diners-club-enroute','RUB','$6.10','NYSE'),(90,60,'4844101396598383','visa-electron','CNY','$9.07','NYSE'),(91,71,'5602228259579842960','china-unionpay','BRL','$6.40','NASDAQ'),(92,63,'201773702609073','diners-club-enroute','EUR','$7.17','NYSE'),(93,85,'201941316501461','diners-club-enroute','EUR','$8.49','NYSE'),(94,21,'201900761282357','diners-club-enroute','COP','$7.52','NYSE'),(95,97,'5602230557982042','bankcard','MKD','$5.48','NASDAQ'),(96,94,'5100174142089979','mastercard','SEK','$1.01','NASDAQ'),(97,74,'3571128610846059','jcb','COP','$7.56','NASDAQ'),(98,55,'3576504584871858','jcb','USD','$0.05','NYSE'),(99,29,'5641824233568585290','switch','BRL','$5.25','NYSE'),(100,35,'3581610143571120','jcb','CNY','$8.33','NYSE'),(101,52,'201884719598009','diners-club-enroute','IDR','$7.35','NYSE'),(102,47,'3532232261071724','jcb','RUB','$3.44','NYSE'),(103,32,'3563143245983516','jcb','CNY','$0.99','NYSE'),(104,23,'560224097438312182','china-unionpay','EGP','$9.64','NASDAQ'),(105,11,'6385452676928513','instapayment','UGX','$2.10','NYSE'),(106,45,'3530655617992775','jcb','RUB','$7.42','NYSE'),(107,29,'3535977561541134','jcb','IDR','$3.31','NASDAQ'),(108,91,'30080835302858','diners-club-carte-blanche','CNY','$9.18','NYSE'),(109,55,'4917188809106609','visa-electron','JOD','$1.64','NYSE'),(110,63,'5893838835328420286','maestro','CNY','$0.53','NYSE'),(111,85,'3573523795273863','jcb','IDR','$5.05','NYSE'),(112,68,'6391308837493767','instapayment','YER','$8.01','NYSE'),(113,9,'4913759713737533','visa-electron','MNT','$2.13','NYSE'),(114,4,'3528989460597561','jcb','SEK','$9.44','NASDAQ'),(115,7,'3529647639268246','jcb','EUR','$7.35','NYSE'),(116,1,'6709456489094651','laser','CNY','$2.27','NASDAQ'),(117,71,'5602227868489550','bankcard','RUB','$3.95','NYSE'),(118,78,'3534556191101831','jcb','IDR','$5.91','NASDAQ'),(119,44,'5426064238009980','mastercard','VND','$8.11','NASDAQ'),(120,45,'6331106395288477','switch','VND','$5.49','NYSE'),(121,79,'501822324697668157','maestro','IDR','$2.46','NASDAQ'),(122,27,'5610247957765561','bankcard','CZK','$1.86','NYSE'),(123,73,'3538181773454684','jcb','IDR','$4.37','NASDAQ'),(124,34,'06046991276262303','maestro','BRL','$6.48','NASDAQ'),(125,30,'5164381413028353','mastercard','USD','$2.13','NYSE'),(126,21,'201518166657260','diners-club-enroute','CNY','$4.27','NASDAQ'),(127,10,'676374619679338352','maestro','EUR','$7.60','NYSE'),(128,49,'3569422480918989','jcb','PHP','$7.04','NYSE'),(129,93,'3543988041784392','jcb','SEK','$4.52','NYSE'),(130,18,'63043145190036640','laser','UAH','$8.37','NYSE'),(131,14,'30335631764952','diners-club-carte-blanche','HNL','$1.71','NASDAQ'),(132,100,'5641824907181108','switch','CNY','$1.50','NASDAQ'),(133,20,'3561004909545086','jcb','CNY','$7.42','NASDAQ'),(134,100,'3582388569177487','jcb','BRL','$7.02','NYSE'),(135,34,'5002359281447646','mastercard','UAH','$8.52','NASDAQ'),(136,22,'3579628358851874','jcb','CNY','$1.22','NASDAQ'),(137,52,'5100175957543695','mastercard','PHP','$8.58','NASDAQ'),(138,97,'3529491835350007','jcb','CNY','$6.55','NASDAQ'),(139,17,'6759516577846276227','switch','CAD','$2.21','NYSE'),(140,15,'3533817009008852','jcb','CNY','$6.95','NASDAQ'),(141,78,'30233215178394','diners-club-carte-blanche','HRK','$0.45','NASDAQ'),(142,38,'5602225006596039','china-unionpay','CZK','$9.28','NYSE'),(143,43,'3576597146659647','jcb','PHP','$0.18','NASDAQ'),(144,14,'67627385247529156','maestro','USD','$0.06','NYSE'),(145,78,'201572792367992','diners-club-enroute','RUB','$9.31','NYSE'),(146,41,'5602258282468169','china-unionpay','MMK','$1.45','NYSE'),(147,96,'4041590307781','visa','CNY','$9.00','NASDAQ'),(148,6,'30096417426162','diners-club-carte-blanche','BZD','$0.24','NYSE'),(149,40,'6397206521253717','instapayment','CNY','$2.46','NYSE'),(150,28,'3581220323954987','jcb','IDR','$4.07','NASDAQ'),(151,52,'3570400929514673','jcb','CNY','$0.67','NYSE'),(152,16,'30297884255320','diners-club-carte-blanche','PHP','$1.28','NYSE'),(153,31,'3579404738155471','jcb','CNY','$3.06','NASDAQ'),(154,20,'6304113108029234122','laser','EUR','$1.61','NYSE'),(155,99,'3541731156212524','jcb','LKR','$0.18','NASDAQ'),(156,41,'3575501670504873','jcb','ALL','$1.91','NYSE'),(157,51,'201876951853126','diners-club-enroute','PLN','$8.19','NASDAQ'),(158,40,'560223277360466799','china-unionpay','EUR','$1.29','NASDAQ'),(159,17,'3570999074475440','jcb','SEK','$7.44','NASDAQ'),(160,7,'3529203362954600','jcb','PLN','$7.34','NYSE'),(161,10,'675963418842802611','maestro','CNY','$5.70','NYSE'),(162,1,'3546552686598173','jcb','PKR','$7.87','NYSE'),(163,78,'3562068469571971','jcb','CNY','$1.80','NASDAQ'),(164,59,'4905520816881390','switch','CNY','$1.90','NASDAQ'),(165,99,'3529014826944149','jcb','CNY','$7.62','NASDAQ'),(166,10,'67637727939261069','maestro','SEK','$6.75','NYSE'),(167,18,'3539016700380884','jcb','PHP','$3.88','NYSE'),(168,44,'56022308875787858','china-unionpay','THB','$8.88','NYSE'),(169,93,'56022414101485125','china-unionpay','CNY','$2.58','NYSE'),(170,14,'4041599982238','visa','SEK','$3.84','NASDAQ'),(171,43,'30312195631265','diners-club-carte-blanche','PLN','$8.06','NYSE'),(172,38,'3549500004991411','jcb','ZAR','$7.93','NYSE'),(173,56,'5602230921576157','bankcard','RUB','$2.92','NYSE'),(174,27,'3564674620539027','jcb','PHP','$3.42','NYSE'),(175,2,'5038535629655937','maestro','SEK','$2.30','NYSE'),(176,12,'30471735820109','diners-club-carte-blanche','PEN','$1.19','NASDAQ'),(177,94,'6383512200801098','instapayment','CNY','$2.08','NASDAQ'),(178,100,'3573074224737854','jcb','MXN','$6.57','NASDAQ'),(179,70,'5020711940372045','maestro','PKR','$4.52','NASDAQ'),(180,32,'3565208030158091','jcb','RUB','$6.27','NASDAQ'),(181,41,'3584205486809646','jcb','PLN','$5.80','NYSE'),(182,17,'3563215182584836','jcb','CNY','$4.49','NASDAQ'),(183,94,'5567310618488784','diners-club-us-ca','JPY','$8.68','NYSE'),(184,98,'5002354082951961','mastercard','USD','$0.16','NASDAQ'),(185,6,'6398538879326185','instapayment','RUB','$9.12','NYSE'),(186,67,'6706649955742935','laser','EUR','$4.21','NASDAQ'),(187,53,'3579177496383085','jcb','AZN','$7.67','NYSE'),(188,23,'4508218030670613','visa-electron','CAD','$9.79','NASDAQ'),(189,88,'5602245724385804','bankcard','CNY','$2.85','NYSE'),(190,45,'5018237733361783','maestro','BWP','$9.58','NYSE'),(191,86,'3538442138966246','jcb','IDR','$6.93','NYSE'),(192,89,'3588898766421714','jcb','IDR','$1.86','NASDAQ'),(193,1,'4917128279306982','visa-electron','JPY','$7.89','NYSE'),(194,90,'3578871442120424','jcb','SYP','$4.71','NYSE'),(195,54,'30133750046313','diners-club-carte-blanche','SDG','$7.84','NYSE'),(196,37,'3538802269561662','jcb','CLP','$3.94','NASDAQ'),(197,95,'5597873361769928','mastercard','CNY','$6.55','NYSE'),(198,58,'633351596209992270','switch','MMK','$4.27','NYSE'),(199,65,'3538568079558624','jcb','PHP','$2.26','NASDAQ'),(200,11,'201724858138946','diners-club-enroute','CNY','$9.71','NYSE'),(201,61,'5100131109389354','mastercard','GBP','$7.57','NYSE'),(202,7,'5602235913389857','bankcard','IDR','$1.23','NASDAQ'),(203,96,'3540524915807770','jcb','EUR','$5.92','NYSE'),(204,97,'3559888083635778','jcb','BRL','$7.10','NYSE'),(205,2,'4175007897564346','visa-electron','IDR','$5.53','NYSE'),(206,25,'3564270897273661','jcb','CNY','$9.21','NYSE'),(207,79,'3542306673635397','jcb','CNY','$5.72','NASDAQ'),(208,59,'30226500049320','diners-club-carte-blanche','CNY','$0.61','NYSE'),(209,8,'30235548111877','diners-club-carte-blanche','EUR','$0.63','NASDAQ'),(210,64,'3538312566917633','jcb','CZK','$5.92','NASDAQ'),(211,3,'3546353038669675','jcb','IDR','$2.16','NYSE'),(212,52,'5360469928857176','mastercard','CNY','$4.96','NYSE'),(213,49,'4903586696632872543','switch','KGS','$3.38','NASDAQ'),(214,28,'3528083164632070','jcb','BRL','$5.71','NASDAQ'),(215,73,'4041593520737','visa','MAD','$1.77','NYSE'),(216,14,'201760913892168','diners-club-enroute','RUB','$4.39','NASDAQ'),(217,47,'56102130374121733','china-unionpay','CNY','$4.65','NASDAQ'),(218,80,'5007665610208862','mastercard','PHP','$2.73','NYSE'),(219,41,'3534651784734781','jcb','IDR','$9.26','NYSE'),(220,2,'5602213810708974','bankcard','EUR','$6.51','NASDAQ'),(221,35,'5100143600599910','mastercard','IDR','$0.73','NYSE'),(222,67,'4041596641977','visa','EUR','$0.60','NASDAQ'),(223,83,'3530088317871828','jcb','USD','$9.93','NASDAQ'),(224,48,'3569368296490806','jcb','BYR','$3.79','NASDAQ'),(225,34,'5002355558312877','mastercard','THB','$4.76','NYSE'),(226,39,'3535612575746813','jcb','CNY','$6.32','NYSE'),(227,41,'3588630383279450','jcb','UAH','$5.63','NASDAQ'),(228,5,'5602251274550128','bankcard','EUR','$6.12','NYSE'),(229,54,'5007660766324191','mastercard','CNY','$9.88','NYSE'),(230,26,'3578252434798156','jcb','CNY','$0.36','NYSE'),(231,100,'3544321084305488','jcb','ILS','$5.41','NYSE'),(232,32,'3550778305181348','jcb','IDR','$0.40','NASDAQ'),(233,94,'5291487951316229','mastercard','CNY','$6.55','NYSE'),(234,52,'3581344611057624','jcb','RUB','$8.72','NYSE'),(235,64,'5602226191892290','bankcard','EUR','$4.50','NASDAQ'),(236,9,'3536959741620086','jcb','EUR','$8.05','NYSE'),(237,1,'3587126741757783','jcb','MXN','$5.33','NYSE'),(238,45,'5383898657857978','mastercard','UAH','$3.41','NASDAQ'),(239,15,'3578843808739618','jcb','CNY','$0.67','NASDAQ'),(240,3,'3533754568727988','jcb','IDR','$1.19','NASDAQ'),(241,71,'5610885657579228','bankcard','VND','$5.97','NYSE'),(242,91,'5602216229845287','bankcard','USD','$5.73','NASDAQ'),(243,56,'5387723976584440','mastercard','PHP','$5.51','NASDAQ'),(244,27,'56022189062904476','china-unionpay','EUR','$5.29','NASDAQ'),(245,82,'30038618959047','diners-club-carte-blanche','CNY','$5.45','NYSE'),(246,22,'3588250708173104','jcb','IDR','$2.70','NASDAQ'),(247,30,'3552745168918569','jcb','CNY','$5.11','NASDAQ'),(248,69,'676127931458477545','maestro','CNY','$3.48','NYSE'),(249,49,'3562539113846936','jcb','IDR','$5.53','NYSE'),(250,100,'3546344149940519','jcb','EUR','$5.58','NYSE'),(251,67,'3577351347622304','jcb','RUB','$4.48','NYSE'),(252,42,'3572964461043571','jcb','ILS','$9.93','NYSE'),(253,85,'633389056291122878','switch','EUR','$8.09','NASDAQ'),(254,11,'337941678587097','americanexpress','BOB','$0.46','NYSE'),(255,83,'4508856991100359','visa-electron','SEK','$2.99','NASDAQ'),(256,20,'5100170579120584','mastercard','CRC','$8.75','NASDAQ'),(257,79,'3579746923463064','jcb','IDR','$6.12','NYSE'),(258,34,'3531554214412858','jcb','IRR','$9.16','NASDAQ'),(259,97,'374622888269619','americanexpress','CNY','$7.44','NASDAQ'),(260,95,'5418726023683860','mastercard','IRR','$4.62','NASDAQ'),(261,66,'3561782148163932','jcb','IDR','$6.69','NYSE'),(262,25,'5602211736136817','bankcard','EUR','$4.65','NASDAQ'),(263,72,'3587331076840978','jcb','EUR','$7.04','NYSE'),(264,93,'56103907712372436','china-unionpay','EUR','$8.67','NYSE'),(265,50,'501867984396802922','maestro','CNY','$2.49','NASDAQ'),(266,31,'3583336412158310','jcb','UAH','$4.19','NASDAQ'),(267,3,'4175004466699249','visa-electron','CNY','$8.48','NASDAQ'),(268,63,'3533840341955812','jcb','IDR','$6.00','NYSE'),(269,35,'5002358780904180','mastercard','CNY','$7.40','NASDAQ'),(270,8,'633489302721275962','solo','BRL','$0.95','NASDAQ'),(271,75,'5187765638028649','mastercard','IDR','$1.28','NASDAQ'),(272,14,'201436730176701','diners-club-enroute','SEK','$3.20','NASDAQ'),(273,29,'3553322932888376','jcb','BRL','$5.57','NASDAQ'),(274,51,'201694833535237','diners-club-enroute','CNY','$1.32','NYSE'),(275,12,'3578208377866467','jcb','SEK','$9.69','NYSE'),(276,20,'560225838879890866','china-unionpay','RUB','$0.26','NASDAQ'),(277,42,'5602232349451534','bankcard','NGN','$8.01','NYSE'),(278,31,'3543382752572875','jcb','SDG','$7.87','NYSE'),(279,15,'3572716467472992','jcb','THB','$5.57','NYSE'),(280,12,'201446557894807','diners-club-enroute','BRL','$9.60','NYSE'),(281,90,'201437238834494','diners-club-enroute','RUB','$0.26','NASDAQ'),(282,24,'58935213162206749','maestro','PHP','$2.25','NASDAQ'),(283,74,'4917715078575708','visa-electron','LAK','$6.14','NASDAQ'),(284,56,'3586230935208032','jcb','EUR','$7.86','NASDAQ'),(285,20,'372301210455459','americanexpress','CZK','$1.24','NASDAQ'),(286,37,'6382392782723577','instapayment','VND','$9.72','NASDAQ'),(287,57,'372301723488195','americanexpress','SEK','$2.00','NYSE'),(288,18,'5010121508862142','mastercard','CZK','$4.61','NASDAQ'),(289,92,'676128676994446905','maestro','CNY','$6.19','NYSE'),(290,95,'6397338742987607','instapayment','IDR','$6.79','NASDAQ'),(291,30,'493605687571032523','switch','IDR','$3.58','NYSE'),(292,37,'3586852106025471','jcb','HTG','$1.75','NYSE'),(293,18,'3572925631164274','jcb','EUR','$7.85','NASDAQ'),(294,96,'5252954658813250','mastercard','PEN','$1.64','NASDAQ'),(295,48,'4041593049786','visa','CNY','$1.09','NYSE'),(296,41,'67717793147491107','laser','CNY','$8.48','NASDAQ'),(297,94,'6759340445345523','maestro','TZS','$8.28','NASDAQ'),(298,5,'3549238784387068','jcb','EUR','$6.96','NASDAQ'),(299,13,'5166657711898763','mastercard','IDR','$3.41','NYSE'),(300,60,'201705029472702','diners-club-enroute','RUB','$9.13','NYSE'),(301,100,'3588386677193499','jcb','USD','$2.19','NASDAQ'),(302,18,'6759635712700643','maestro','AMD','$2.37','NASDAQ'),(303,74,'5602225939691709','china-unionpay','MXN','$3.10','NASDAQ'),(304,38,'4903256780066906','switch','MYR','$7.40','NYSE'),(305,73,'201606079187481','diners-club-enroute','BRL','$5.69','NASDAQ'),(306,58,'374283802741934','americanexpress','CNY','$1.54','NASDAQ'),(307,79,'5585124480152016','diners-club-us-ca','CNY','$8.93','NYSE'),(308,91,'5602227528587801','bankcard','DOP','$6.70','NYSE'),(309,47,'201891816243298','diners-club-enroute','CNY','$7.67','NYSE'),(310,93,'3539844114855476','jcb','PHP','$7.97','NASDAQ'),(311,31,'3533881383617589','jcb','JPY','$7.51','NASDAQ'),(312,4,'377528652155982','americanexpress','PEN','$7.48','NYSE'),(313,13,'5307501609142696','mastercard','MAD','$8.10','NASDAQ'),(314,70,'67626564679087450','maestro','COP','$9.20','NYSE'),(315,6,'3575071710720285','jcb','RSD','$2.25','NASDAQ'),(316,31,'4175000054568663','visa-electron','CNY','$3.14','NYSE'),(317,85,'5158116583101855','mastercard','USD','$1.45','NYSE'),(318,52,'6373467359410898','instapayment','JPY','$6.22','NASDAQ'),(319,93,'5602252854583596','bankcard','PHP','$2.80','NASDAQ'),(320,44,'3589761789984762','jcb','PHP','$4.90','NYSE'),(321,90,'3588365880973590','jcb','CNY','$6.55','NYSE'),(322,46,'3584331912392385','jcb','IRR','$7.25','NYSE'),(323,99,'5602238302631863','china-unionpay','CNY','$8.10','NYSE'),(324,11,'493617253213376020','switch','CNY','$2.83','NASDAQ'),(325,98,'6333176197472445','switch','TZS','$9.16','NYSE'),(326,85,'3550648659557957','jcb','EUR','$9.09','NYSE'),(327,72,'3550462208130849','jcb','CNY','$8.65','NYSE'),(328,12,'3567665170541543','jcb','GEL','$3.61','NASDAQ'),(329,71,'5010126922836002','mastercard','PHP','$8.81','NASDAQ'),(330,55,'3580309226923123','jcb','BDT','$2.20','NASDAQ'),(331,22,'5418074042996298','mastercard','NIO','$9.20','NYSE'),(332,16,'5602252809523572','bankcard','BRL','$9.94','NYSE'),(333,1,'3529531420390254','jcb','PHP','$6.22','NASDAQ'),(334,98,'3551531134733097','jcb','SEK','$7.12','NYSE'),(335,84,'5232239962163294','mastercard','SEK','$9.85','NASDAQ'),(336,66,'3545784942618385','jcb','TZS','$3.56','NYSE'),(337,80,'63048725769004262','laser','RUB','$1.39','NYSE'),(338,48,'3551794427503235','jcb','CZK','$3.90','NASDAQ'),(339,26,'5641829286997575121','switch','EUR','$9.11','NYSE'),(340,76,'5100171088166027','mastercard','PHP','$6.87','NYSE'),(341,42,'3567005576472714','jcb','RUB','$3.43','NYSE'),(342,34,'3539769568569655','jcb','IRR','$7.49','NASDAQ'),(343,57,'6374629077174549','instapayment','IDR','$3.26','NYSE'),(344,77,'3563171658551462','jcb','CZK','$1.28','NASDAQ'),(345,99,'6759584022646114168','maestro','ARS','$5.90','NASDAQ'),(346,12,'3537506184626515','jcb','VND','$9.99','NYSE'),(347,99,'3543381052572924','jcb','CNY','$5.32','NASDAQ'),(348,6,'3562425307341993','jcb','BRL','$3.18','NASDAQ'),(349,42,'633110516931038137','switch','CAD','$7.83','NYSE'),(350,21,'3563860085355832','jcb','CNY','$0.58','NYSE'),(351,71,'5602243013077697652','china-unionpay','RUB','$3.98','NASDAQ'),(352,56,'3554217166634794','jcb','HTG','$8.33','NASDAQ'),(353,78,'4911646835923673506','switch','EGP','$3.39','NASDAQ'),(354,92,'67613826267822191','maestro','EUR','$0.35','NYSE'),(355,81,'3544743518661220','jcb','THB','$9.52','NASDAQ'),(356,76,'3531494216972650','jcb','CNY','$7.47','NYSE'),(357,20,'5602259642812419','bankcard','BRL','$0.02','NASDAQ'),(358,2,'374288986841236','americanexpress','PLN','$1.11','NYSE'),(359,94,'5199658757809301','mastercard','EUR','$8.48','NYSE'),(360,95,'5610730450744811','bankcard','HNL','$5.80','NYSE'),(361,3,'3553052830951659','jcb','IDR','$7.88','NYSE'),(362,60,'5602215758549203','bankcard','CNY','$2.49','NYSE'),(363,99,'5154364803518805','mastercard','BRL','$7.51','NYSE'),(364,51,'3564272260357527','jcb','IDR','$9.23','NYSE'),(365,38,'4913486742248171','visa-electron','RUB','$5.57','NASDAQ'),(366,13,'3547214195991154','jcb','USD','$8.11','NASDAQ'),(367,52,'337941673005434','americanexpress','IDR','$5.28','NYSE'),(368,96,'3568684950587203','jcb','RUB','$3.61','NASDAQ'),(369,9,'6706990055373670','laser','RUB','$3.06','NYSE'),(370,90,'374288369115596','americanexpress','KZT','$5.16','NASDAQ'),(371,40,'3529070343244876','jcb','CNY','$4.07','NASDAQ'),(372,13,'201452932908171','diners-club-enroute','SEK','$9.86','NYSE'),(373,32,'337941978702024','americanexpress','USD','$6.91','NYSE'),(374,48,'493655779146235605','switch','EUR','$5.66','NYSE'),(375,84,'4911202385619525','switch','CRC','$9.52','NYSE'),(376,80,'3544441598757253','jcb','SEK','$7.66','NYSE'),(377,27,'4017955271879','visa','EUR','$2.64','NYSE'),(378,2,'201416949157023','diners-club-enroute','BTN','$9.83','NYSE'),(379,89,'5247275580773356','mastercard','CAD','$9.96','NASDAQ'),(380,68,'3552537024766732','jcb','PEN','$9.01','NASDAQ'),(381,41,'3529489005970430','jcb','COP','$4.81','NASDAQ'),(382,94,'50180968917738192','maestro','EUR','$0.02','NYSE'),(383,49,'5610254051022931','bankcard','THB','$5.40','NYSE'),(384,27,'6762173189616709','maestro','JPY','$6.77','NASDAQ'),(385,9,'201488849558527','diners-club-enroute','TZS','$2.04','NYSE'),(386,83,'3567584809206032','jcb','CNY','$6.44','NASDAQ'),(387,98,'3584719948489482','jcb','EUR','$4.15','NASDAQ'),(388,66,'201927232989211','diners-club-enroute','DZD','$2.95','NASDAQ'),(389,46,'3588333043161339','jcb','IDR','$5.52','NYSE'),(390,88,'201524777219219','diners-club-enroute','MNT','$5.59','NASDAQ'),(391,94,'67710814704250285','laser','KES','$4.98','NASDAQ'),(392,27,'3544617933056382','jcb','CNY','$8.51','NASDAQ'),(393,75,'374283565230364','americanexpress','IDR','$5.54','NYSE'),(394,94,'201684108028646','diners-club-enroute','BRL','$1.34','NASDAQ'),(395,96,'5100149560611009','mastercard','RSD','$6.21','NASDAQ'),(396,73,'3573641019873159','jcb','ILS','$1.08','NASDAQ'),(397,16,'3570795533247754','jcb','NGN','$3.51','NASDAQ'),(398,90,'560222125645290552','china-unionpay','IDR','$0.14','NYSE'),(399,31,'30344130041904','diners-club-carte-blanche','ARS','$6.36','NASDAQ'),(400,82,'6389583764823277','instapayment','PHP','$6.72','NYSE'),(401,25,'5602212441000557205','china-unionpay','NGN','$7.05','NASDAQ'),(402,89,'6763969048970537','maestro','EUR','$3.82','NASDAQ'),(403,96,'3533384852803640','jcb','CNY','$0.59','NASDAQ'),(404,37,'3567797063812002','jcb','RUB','$3.51','NYSE'),(405,33,'5602217534771184','bankcard','IDR','$9.71','NASDAQ'),(406,19,'4903790540786137786','switch','EUR','$7.62','NASDAQ'),(407,80,'3571354202795732','jcb','PLN','$2.27','NASDAQ'),(408,77,'5100138389562956','mastercard','IDR','$1.87','NYSE'),(409,27,'4844634211890692','visa-electron','PLN','$6.85','NYSE'),(410,85,'5020533503991557259','maestro','YER','$9.95','NYSE'),(411,17,'3538961149382580','jcb','RUB','$5.73','NYSE'),(412,57,'5602241516374023','bankcard','CRC','$1.01','NASDAQ'),(413,99,'3563622535540425','jcb','ZAR','$7.09','NASDAQ'),(414,11,'3573935460601923','jcb','EUR','$6.63','NYSE'),(415,10,'3537170294350316','jcb','CNY','$2.71','NYSE'),(416,69,'5602239264918512','bankcard','NGN','$6.91','NYSE'),(417,37,'5010128419601063','mastercard','CNY','$5.10','NYSE'),(418,1,'3571043912830539','jcb','PHP','$4.37','NASDAQ'),(419,50,'201520192483992','diners-club-enroute','BRL','$2.55','NYSE'),(420,13,'677144246823437869','laser','CZK','$2.90','NASDAQ'),(421,89,'5038770201505325420','maestro','JPY','$0.67','NASDAQ'),(422,68,'201789277479072','diners-club-enroute','CNY','$2.28','NASDAQ'),(423,49,'3581443088234151','jcb','CNY','$5.02','NYSE'),(424,99,'3568017329472338','jcb','IDR','$4.88','NYSE'),(425,24,'670982389493448970','laser','UGX','$1.03','NASDAQ'),(426,3,'3547117595906781','jcb','USD','$5.74','NYSE'),(427,96,'5893930577133540448','maestro','KHR','$9.05','NASDAQ'),(428,67,'5048374363948912','mastercard','EUR','$6.29','NASDAQ'),(429,104,'5276581602602364','VISA','PLN','$5.58','NASDAQ'),(430,43,'4041371575127','visa','CNY','$4.58','NASDAQ'),(431,37,'372049475429475','americanexpress','PHP','$5.88','NASDAQ'),(432,37,'3558289778205236','jcb','RUB','$2.60','NYSE'),(433,95,'3532447998158707','jcb','ALL','$0.04','NASDAQ'),(434,8,'201455651134135','diners-club-enroute','CNY','$8.87','NYSE'),(435,49,'5532762237165866','diners-club-us-ca','MKD','$9.29','NYSE'),(436,11,'630472596887736411','maestro','IDR','$9.23','NASDAQ'),(437,13,'6762233168007245','maestro','MXN','$2.48','NASDAQ'),(438,26,'4026345555645481','visa-electron','IDR','$8.90','NYSE'),(439,50,'3531506129337364','jcb','EUR','$6.50','NYSE'),(440,71,'4026223978984896','visa-electron','XOF','$6.51','NYSE'),(441,31,'3562789834836308','jcb','CNY','$6.25','NYSE'),(442,87,'3553809879918950','jcb','CNY','$2.14','NASDAQ'),(443,88,'677116648370520290','laser','USD','$4.23','NASDAQ'),(444,30,'3556811260641719','jcb','EUR','$6.55','NASDAQ'),(445,8,'3532151833197959','jcb','BGN','$4.03','NASDAQ'),(446,64,'201503744685512','diners-club-enroute','EUR','$6.92','NYSE'),(447,73,'675907743602871988','switch','PEN','$8.74','NASDAQ'),(448,36,'4917390417207999','visa-electron','IDR','$5.09','NASDAQ'),(449,75,'30328682208110','diners-club-carte-blanche','BOB','$5.08','NASDAQ'),(450,84,'3564448139815180','jcb','IDR','$1.64','NYSE'),(451,9,'5602256545403973','bankcard','EUR','$8.05','NYSE'),(452,96,'3543411372579018','jcb','IDR','$5.20','NASDAQ'),(453,28,'3543970973267612','jcb','CNY','$6.47','NYSE'),(454,52,'3583152874021692','jcb','RUB','$5.52','NASDAQ'),(455,82,'3563041466975247','jcb','CNY','$6.10','NYSE'),(456,96,'3537411847018285','jcb','IDR','$3.55','NASDAQ'),(457,64,'5194920179165810','mastercard','CZK','$5.76','NASDAQ'),(458,4,'5602250585468723','bankcard','CNY','$8.49','NASDAQ'),(459,91,'4026345408580679','visa-electron','CNY','$9.80','NASDAQ'),(460,85,'3530859554473985','jcb','BRL','$1.44','NYSE'),(461,39,'3538502783604739','jcb','CNY','$1.80','NASDAQ'),(462,86,'30070621505541','diners-club-carte-blanche','EUR','$0.18','NYSE'),(463,52,'5002358040885948','mastercard','CNY','$2.47','NYSE'),(464,26,'30109312969911','diners-club-carte-blanche','IDR','$5.17','NYSE'),(465,33,'6767153599284167420','solo','IDR','$8.70','NASDAQ'),(466,18,'5354640590375790','mastercard','PLN','$4.31','NYSE'),(467,22,'63048140715154288','laser','BRL','$2.51','NASDAQ'),(468,63,'3562658072294910','jcb','GNF','$0.01','NASDAQ'),(469,89,'3532512173126520','jcb','USD','$1.96','NASDAQ'),(470,98,'676735442602263496','solo','CHF','$7.70','NYSE'),(471,94,'201967978128558','diners-club-enroute','ILS','$5.83','NASDAQ'),(472,73,'3560328140905481','jcb','THB','$8.53','NASDAQ'),(473,26,'6763142424009654037','maestro','EUR','$7.21','NASDAQ'),(474,54,'3561406201584970','jcb','ILS','$1.52','NYSE'),(475,42,'3560398670877715','jcb','IDR','$5.24','NASDAQ'),(476,16,'3549399939707707','jcb','EUR','$3.39','NASDAQ'),(477,63,'3534729505010937','jcb','EUR','$8.08','NASDAQ'),(478,58,'3545324367554003','jcb','SEK','$6.80','NYSE'),(479,94,'3572556154235645','jcb','CRC','$2.94','NASDAQ'),(480,87,'5602247244093850','china-unionpay','CNY','$2.92','NYSE'),(481,80,'5610409806680413','bankcard','CZK','$9.31','NASDAQ'),(482,23,'5400801527661702','mastercard','IDR','$6.72','NYSE'),(483,1,'5108753154301695','mastercard','COP','$1.56','NYSE'),(484,64,'374622441130506','americanexpress','RUB','$9.59','NYSE'),(485,5,'3572825098554647','jcb','PLN','$5.65','NASDAQ'),(486,92,'5002350740739608','mastercard','COP','$9.35','NYSE'),(487,66,'0604549028024495697','maestro','IDR','$4.73','NASDAQ'),(488,53,'3545440047553387','jcb','IDR','$8.15','NASDAQ'),(489,27,'3563915200640730','jcb','IDR','$4.41','NASDAQ'),(490,10,'3581017512545398','jcb','CNY','$5.14','NASDAQ'),(491,10,'201900830847057','diners-club-enroute','IDR','$2.97','NYSE'),(492,64,'5602210198634236','bankcard','CNY','$6.78','NASDAQ'),(493,3,'201909471475607','diners-club-enroute','IDR','$2.29','NASDAQ'),(494,80,'5610748605906119','bankcard','CNY','$3.65','NYSE'),(495,100,'5602245708033230','bankcard','CNY','$6.06','NASDAQ'),(496,27,'5893094394901805322','maestro','PLN','$4.46','NYSE'),(497,62,'3564861063721671','jcb','CNY','$5.29','NYSE'),(498,40,'3536006717162444','jcb','LTL','$6.43','NYSE'),(499,26,'3564231296947370','jcb','COP','$4.28','NASDAQ'),(500,88,'3530738130954074','jcb','EUR','$0.66','NYSE'),(501,54,'348899640851354','americanexpress','RUB','$8.79','NYSE'),(502,83,'342455199456412','americanexpress','CNY','$3.08','NYSE'),(503,69,'50187266950628617','maestro','CUP','$5.36','NASDAQ'),(504,14,'5610589660247621','bankcard','THB','$8.64','NASDAQ'),(505,40,'3567108753718360','jcb','RUB','$3.34','NYSE'),(506,47,'5602242750225933536','china-unionpay','ETB','$7.66','NYSE'),(507,67,'3548437556968979','jcb','CZK','$1.06','NYSE'),(508,64,'5524884340659450','diners-club-us-ca','BRL','$2.73','NASDAQ'),(509,71,'3570020650945837','jcb','IDR','$2.57','NYSE'),(510,52,'373092013320292','americanexpress','TJS','$1.23','NASDAQ'),(511,2,'30428977702569','diners-club-carte-blanche','ARS','$4.57','NASDAQ'),(512,6,'6771146299660471122','laser','XOF','$8.76','NYSE'),(513,86,'3562918134712436','jcb','EUR','$2.13','NYSE'),(514,35,'3548356481188893','jcb','EUR','$3.69','NYSE'),(515,70,'4405697393557489','visa-electron','EUR','$0.73','NASDAQ'),(516,43,'374288273339159','americanexpress','IDR','$6.80','NYSE'),(517,96,'3542081489185982','jcb','PHP','$9.57','NASDAQ'),(518,100,'3561441799324281','jcb','CNY','$1.17','NYSE'),(519,77,'3551436286156677','jcb','IDR','$8.23','NASDAQ'),(520,91,'4936694011468235881','switch','THB','$4.09','NASDAQ'),(521,68,'377521114873367','americanexpress','SDG','$3.39','NASDAQ'),(522,25,'30286250575890','diners-club-carte-blanche','XCD','$4.60','NASDAQ'),(523,75,'6397614002360663','instapayment','PLN','$1.78','NYSE'),(524,77,'3556204489797514','jcb','RUB','$1.04','NYSE'),(525,92,'5602223892876110','bankcard','CNY','$8.25','NASDAQ'),(526,56,'3577662175037740','jcb','PHP','$4.16','NYSE'),(527,33,'5407046730456044','diners-club-us-ca','IDR','$7.19','NYSE'),(528,8,'30029590452812','diners-club-carte-blanche','CNY','$5.52','NYSE'),(529,41,'3588137601674546','jcb','BDT','$3.26','NASDAQ'),(530,83,'3542440620319647','jcb','USD','$3.19','NASDAQ'),(531,63,'5893616197953722652','maestro','THB','$7.56','NYSE'),(532,27,'3543691105647626','jcb','EUR','$2.14','NYSE'),(533,1,'30530123385189','diners-club-carte-blanche','IDR','$1.95','NYSE'),(534,11,'3545522351787618','jcb','BRL','$5.40','NYSE'),(535,23,'374283607934171','americanexpress','IDR','$5.43','NASDAQ'),(536,84,'3574549966836252','jcb','EUR','$1.88','NYSE'),(537,11,'501852638420478425','maestro','IRR','$0.28','NYSE'),(538,23,'3575557477464174','jcb','CNY','$6.24','NYSE'),(539,84,'201755902048269','diners-club-enroute','PLN','$8.03','NYSE'),(540,60,'6771630220990139380','laser','SEK','$5.61','NASDAQ'),(541,66,'201670845108429','diners-club-enroute','BRL','$3.27','NYSE'),(542,76,'337941528801169','americanexpress','RUB','$8.99','NASDAQ'),(543,48,'564182762664977410','switch','BRL','$1.73','NYSE'),(544,92,'3530471266912639','jcb','EUR','$0.88','NASDAQ'),(545,7,'5100174874917736','mastercard','VND','$2.76','NYSE'),(546,42,'3532069840228940','jcb','CNY','$9.15','NYSE'),(547,34,'372301377376787','americanexpress','IDR','$4.34','NYSE'),(548,13,'30472567755454','diners-club-carte-blanche','IDR','$0.79','NASDAQ'),(549,41,'3574770553370022','jcb','PHP','$5.30','NYSE'),(550,7,'4844480659653808','visa-electron','ZAR','$6.01','NASDAQ'),(551,72,'3544373021294135','jcb','CNY','$7.30','NASDAQ'),(552,28,'3529532291670048','jcb','RUB','$1.89','NYSE'),(553,84,'4917512294503915','visa-electron','RUB','$9.46','NASDAQ'),(554,10,'3533340649853074','jcb','EUR','$5.38','NYSE'),(555,3,'670997715698771076','laser','PHP','$1.34','NYSE'),(556,98,'630477988359120304','maestro','JPY','$6.42','NYSE'),(557,4,'3580129020872726','jcb','UAH','$8.94','NASDAQ'),(558,26,'201711326772174','diners-club-enroute','EUR','$5.48','NYSE'),(559,13,'3556954188356398','jcb','MXN','$9.56','NYSE'),(560,99,'4508167536882737','visa-electron','EUR','$2.58','NASDAQ'),(561,65,'3561045900187758','jcb','YER','$0.86','NYSE'),(562,90,'670671100387533058','laser','RUB','$1.37','NASDAQ'),(563,12,'3548031066635168','jcb','EUR','$7.80','NYSE'),(564,29,'4905455499308728','switch','EUR','$3.88','NYSE'),(565,48,'3579583194289534','jcb','IRR','$5.40','NASDAQ'),(566,16,'4405872074832606','visa-electron','PKR','$2.88','NYSE'),(567,39,'4041371846758868','visa','MXN','$7.52','NYSE'),(568,11,'3548745314365977','jcb','GTQ','$3.62','NYSE'),(569,60,'3562323772497657','jcb','CNY','$7.07','NASDAQ'),(570,20,'5048371934371301','mastercard','EUR','$0.55','NYSE'),(571,100,'374288757456222','americanexpress','EUR','$6.79','NASDAQ'),(572,55,'3581374620098988','jcb','UYU','$1.18','NYSE'),(573,25,'374622650872533','americanexpress','EUR','$0.04','NASDAQ'),(574,67,'4100258865983','visa','HRK','$0.81','NYSE'),(575,40,'5641827952277911','switch','RUB','$9.89','NASDAQ'),(576,11,'3583708637489920','jcb','CNY','$6.32','NASDAQ'),(577,76,'5537360857371529','diners-club-us-ca','CNY','$2.32','NASDAQ'),(578,22,'3546809347437815','jcb','LTL','$7.77','NASDAQ'),(579,39,'3536386867019820','jcb','CNY','$5.16','NASDAQ'),(580,89,'633353033934699176','switch','UAH','$0.78','NYSE'),(581,93,'3583515540996739','jcb','PLN','$4.36','NYSE'),(582,27,'3554052521319967','jcb','PHP','$6.17','NYSE'),(583,1,'3558021505468161','jcb','CNY','$8.47','NASDAQ'),(584,44,'337941885373141','americanexpress','ARS','$1.47','NASDAQ'),(585,81,'6331108986071395','switch','CNY','$4.46','NYSE'),(586,36,'201666421144689','diners-club-enroute','BRL','$6.83','NASDAQ'),(587,81,'5100131653260217','mastercard','IDR','$0.68','NASDAQ'),(588,13,'3534552595594697','jcb','IDR','$5.07','NYSE'),(589,17,'3532869544438335','jcb','SEK','$5.17','NASDAQ'),(590,59,'374622263034117','americanexpress','CLP','$4.16','NASDAQ'),(591,7,'3533427544782175','jcb','CNY','$0.28','NYSE'),(592,84,'560225776412635143','china-unionpay','RUB','$0.92','NASDAQ'),(593,100,'5002357336557138','mastercard','VEF','$6.21','NYSE'),(594,23,'3573095354836380','jcb','UAH','$2.93','NYSE'),(595,18,'372301409737519','americanexpress','RUB','$9.86','NYSE'),(596,35,'3538266008552541','jcb','CNY','$8.67','NYSE'),(597,65,'501806457600226455','maestro','BRL','$5.45','NYSE'),(598,98,'373115608028796','americanexpress','EUR','$0.26','NASDAQ'),(599,21,'4017950268128','visa','PEN','$7.73','NYSE'),(600,36,'4026408200442454','visa-electron','EUR','$5.06','NASDAQ'),(601,11,'4041594856692','visa','RUB','$9.18','NASDAQ'),(602,68,'6763371118864890775','maestro','RSD','$1.46','NYSE'),(603,35,'3552156534550815','jcb','PHP','$1.40','NASDAQ'),(604,35,'3536625147338942','jcb','CNY','$1.06','NYSE'),(605,26,'6709980885407765476','laser','RUB','$2.37','NASDAQ'),(606,58,'3557406073998312','jcb','CNY','$5.49','NYSE'),(607,87,'5602243354933126','bankcard','IDR','$5.43','NYSE'),(608,70,'3555761785301938','jcb','CNY','$4.32','NYSE'),(609,33,'371145537229811','americanexpress','CNY','$0.97','NYSE'),(610,99,'5893106537032581404','maestro','EUR','$9.85','NYSE'),(611,20,'3557746772294046','jcb','EUR','$0.41','NYSE'),(612,7,'3546785687638289','jcb','TJS','$1.10','NYSE'),(613,59,'343796812782711','americanexpress','CNY','$7.90','NASDAQ'),(614,97,'3557605730820971','jcb','CNY','$2.24','NYSE'),(615,13,'676735377271512262','solo','CNY','$9.04','NYSE'),(616,77,'3555815587459565','jcb','MXN','$9.16','NYSE'),(617,46,'4175005411805351','visa-electron','KMF','$4.07','NYSE'),(618,21,'374288094437414','americanexpress','TZS','$5.21','NYSE'),(619,19,'3571216277612128','jcb','PHP','$2.09','NASDAQ'),(620,68,'30543818485933','diners-club-carte-blanche','IDR','$6.57','NYSE'),(621,29,'3540852683252618','jcb','BRL','$0.68','NASDAQ'),(622,93,'3556891295294494','jcb','VND','$2.58','NASDAQ'),(623,99,'30350623568964','diners-club-carte-blanche','UAH','$6.28','NASDAQ'),(624,14,'5100140993293028','mastercard','CNY','$5.28','NYSE'),(625,71,'374288494026452','americanexpress','SEK','$9.78','NASDAQ'),(626,66,'060441104316324186','maestro','CZK','$7.76','NASDAQ'),(627,82,'3571854434138361','jcb','PHP','$7.22','NASDAQ'),(628,84,'5641822271294002','switch','IDR','$2.23','NASDAQ'),(629,90,'3574708539665453','jcb','IDR','$2.27','NASDAQ'),(630,58,'67715061833636845','laser','PEN','$6.85','NYSE'),(631,70,'3563389074043399','jcb','IDR','$6.99','NASDAQ'),(632,43,'676772065058876836','solo','THB','$1.39','NYSE'),(633,98,'201465885865701','diners-club-enroute','PLN','$2.69','NYSE'),(634,74,'30398254748967','diners-club-carte-blanche','CNY','$9.40','NYSE'),(635,42,'30001942682503','diners-club-carte-blanche','IDR','$6.51','NYSE'),(636,96,'58935145316645309','maestro','PEN','$4.18','NYSE'),(637,75,'3556650733534980','jcb','USD','$9.53','NASDAQ'),(638,25,'6388367703850349','instapayment','IRR','$6.97','NYSE'),(639,16,'5203863664985137','mastercard','CZK','$1.01','NASDAQ'),(640,88,'374622463222330','americanexpress','EUR','$8.37','NYSE'),(641,98,'5641822125514571','switch','IDR','$1.56','NYSE'),(642,26,'4905514984150068914','switch','MXN','$2.16','NYSE'),(643,3,'50389234355884801','maestro','BRL','$2.80','NASDAQ'),(644,63,'560224941971222482','china-unionpay','MWK','$3.72','NYSE'),(645,83,'5155687925560589','mastercard','IDR','$0.72','NYSE'),(646,65,'340892748590469','americanexpress','PEN','$4.63','NASDAQ'),(647,31,'4508605832275940','visa-electron','PHP','$2.20','NASDAQ'),(648,18,'633110743480181320','switch','USD','$6.18','NYSE'),(649,49,'490528085689227699','switch','EUR','$4.94','NASDAQ'),(650,28,'3567881467643708','jcb','CNY','$7.48','NYSE'),(651,83,'3533637762592326','jcb','IRR','$7.49','NASDAQ'),(652,61,'3545086103642950','jcb','CNY','$0.38','NASDAQ'),(653,99,'6761616732710469938','maestro','IDR','$6.29','NYSE'),(654,25,'4913862727293301','visa-electron','CNY','$2.46','NYSE'),(655,19,'633110776702061367','switch','EUR','$7.35','NASDAQ'),(656,11,'30511028479475','diners-club-carte-blanche','IDR','$0.08','NASDAQ'),(657,22,'3539499775502972','jcb','CNY','$3.22','NASDAQ'),(658,42,'3546069950792267','jcb','CNY','$0.02','NYSE'),(659,60,'3566332223104784','jcb','CNY','$3.74','NASDAQ'),(660,77,'3550050286660520','jcb','CNY','$5.17','NYSE'),(661,3,'670987168410878989','laser','CNY','$0.17','NASDAQ'),(662,64,'3557727720176766','jcb','ARS','$1.26','NYSE'),(663,48,'56022577580616665','china-unionpay','THB','$5.60','NASDAQ'),(664,35,'3562995001417505','jcb','PEN','$4.59','NASDAQ'),(665,58,'30044809346655','diners-club-carte-blanche','EUR','$4.60','NASDAQ'),(666,67,'3576253907028404','jcb','EUR','$5.72','NASDAQ'),(667,78,'5602237261055015','bankcard','CNY','$9.26','NYSE'),(668,25,'3570830927242853','jcb','IDR','$4.14','NASDAQ'),(669,91,'30111961108866','diners-club-carte-blanche','USD','$6.93','NYSE'),(670,63,'3538902507709899','jcb','CNY','$2.44','NASDAQ'),(671,40,'5602255131922669','bankcard','PAB','$9.44','NYSE'),(672,59,'67633252158576448','maestro','SEK','$6.12','NYSE'),(673,70,'3585850765645697','jcb','CNY','$9.08','NASDAQ'),(674,6,'3560329499292596','jcb','IDR','$6.73','NASDAQ'),(675,57,'3587228695742454','jcb','CNY','$0.34','NASDAQ'),(676,42,'3576133910700969','jcb','PLN','$0.34','NASDAQ'),(677,60,'5602249929341406','bankcard','XCD','$2.73','NYSE'),(678,39,'3537171867680279','jcb','PLN','$0.91','NASDAQ'),(679,72,'36668237519485','diners-club-international','SEK','$7.22','NASDAQ'),(680,15,'5100138486040666','mastercard','AED','$7.25','NYSE'),(681,18,'3588779114784120','jcb','HNL','$6.17','NASDAQ'),(682,3,'560223716883638806','china-unionpay','NOK','$9.70','NYSE'),(683,59,'3588447766308297','jcb','CZK','$0.53','NYSE'),(684,14,'493623997708357521','switch','NGN','$5.65','NYSE'),(685,74,'5282967152585012','mastercard','EUR','$0.55','NASDAQ'),(686,4,'3536528256642692','jcb','VEF','$1.07','NASDAQ'),(687,42,'5602237732881627','bankcard','VND','$4.84','NYSE'),(688,24,'3555328925430884','jcb','IDR','$4.34','NASDAQ'),(689,98,'4041371894763729','visa','CZK','$2.86','NASDAQ'),(690,39,'3530468801688443','jcb','IDR','$3.25','NASDAQ'),(691,67,'5223759912314334','mastercard','EUR','$1.73','NASDAQ'),(692,9,'67636490644803276','maestro','RUB','$3.13','NYSE'),(693,26,'3546407160562312','jcb','CNY','$5.08','NYSE'),(694,19,'3586177612791311','jcb','CNY','$6.98','NYSE'),(695,77,'67068129216500673','laser','CLP','$4.67','NASDAQ'),(696,30,'3542446830713149','jcb','IDR','$6.62','NYSE'),(697,39,'6304592791608977342','maestro','CNY','$1.36','NASDAQ'),(698,45,'5602246600477855','bankcard','BAM','$7.83','NYSE'),(699,69,'5641823267256871175','switch','CAD','$9.74','NYSE'),(700,50,'6331103426572623','switch','LTL','$2.90','NYSE'),(701,4,'3536293951416328','jcb','CZK','$1.87','NYSE'),(702,87,'6759807757493836','switch','CUP','$5.09','NASDAQ'),(703,53,'3559467330770405','jcb','BYR','$9.78','NYSE'),(704,11,'201974097651346','diners-club-enroute','BRL','$6.23','NYSE'),(705,20,'30322862326677','diners-club-carte-blanche','SEK','$8.81','NYSE'),(706,92,'374288208622778','americanexpress','CNY','$7.55','NYSE'),(707,36,'374283775415342','americanexpress','EUR','$8.81','NYSE'),(708,36,'5002353727625683','mastercard','EUR','$7.26','NASDAQ'),(709,49,'3534168511862066','jcb','CNY','$4.90','NASDAQ'),(710,48,'374622336796890','americanexpress','CNY','$7.83','NASDAQ'),(711,7,'374622007565657','americanexpress','IDR','$7.59','NYSE'),(712,90,'5602211073319005047','china-unionpay','IDR','$3.86','NYSE'),(713,70,'5602210003476450','china-unionpay','PLN','$7.48','NASDAQ'),(714,94,'6304718478791229405','laser','CZK','$8.86','NASDAQ'),(715,24,'3569544680862848','jcb','CNY','$3.68','NYSE'),(716,81,'3582866579935994','jcb','CNY','$4.35','NASDAQ'),(717,71,'3565948974851009','jcb','THB','$0.89','NASDAQ'),(718,4,'6370623077581260','instapayment','IDR','$1.41','NASDAQ'),(719,6,'3563584166200846','jcb','CNY','$4.89','NASDAQ'),(720,87,'6331100517316852','switch','CNY','$5.11','NYSE'),(721,47,'374622974737636','americanexpress','CNY','$9.01','NYSE'),(722,72,'3558608931267124','jcb','PLN','$5.21','NYSE'),(723,44,'3567339185644094','jcb','PHP','$7.92','NYSE'),(724,98,'5007664997710327','mastercard','EUR','$6.45','NYSE'),(725,55,'3552795683223797','jcb','UAH','$8.86','NASDAQ'),(726,31,'3563502573021688','jcb','CNY','$5.28','NASDAQ'),(727,29,'5100138727855682','mastercard','PHP','$9.41','NYSE'),(728,33,'6767891678433303','solo','USD','$4.99','NASDAQ'),(729,93,'3554046212217456','jcb','PKR','$2.42','NASDAQ'),(730,38,'3581965574506106','jcb','CNY','$7.00','NASDAQ'),(731,10,'5602255321829203','china-unionpay','PLN','$2.94','NYSE'),(732,78,'4026677357704185','visa-electron','IDR','$6.93','NYSE'),(733,98,'3561360728415178','jcb','IDR','$5.51','NASDAQ'),(734,54,'3583123815382626','jcb','RUB','$2.10','NYSE'),(735,25,'5641826015777594','switch','CNY','$0.33','NASDAQ'),(736,46,'6761283298350310214','maestro','EUR','$4.63','NYSE'),(737,40,'3532721513083966','jcb','PHP','$4.21','NYSE'),(738,74,'5602238806024573','bankcard','CLP','$3.67','NYSE'),(739,54,'3550591001007836','jcb','IDR','$2.83','NYSE'),(740,70,'3588377776238764','jcb','BSD','$9.85','NASDAQ'),(741,11,'561011596461096476','china-unionpay','RUB','$6.98','NYSE'),(742,100,'4911590580169745214','switch','MMK','$4.40','NYSE'),(743,78,'3589974090311415','jcb','YER','$1.32','NASDAQ'),(744,66,'4844205105145475','visa-electron','PLN','$2.32','NYSE'),(745,71,'676382703849983048','maestro','EUR','$7.35','NYSE'),(746,93,'201456524929065','diners-club-enroute','PLN','$6.33','NYSE'),(747,61,'5165165764163748','mastercard','PKR','$8.33','NYSE'),(748,32,'5602259506967998065','china-unionpay','DKK','$7.56','NYSE'),(749,68,'5543050629777135','diners-club-us-ca','CNY','$7.80','NYSE'),(750,96,'3584004404322364','jcb','CNY','$6.54','NASDAQ'),(751,83,'30337883853558','diners-club-carte-blanche','AOA','$2.02','NASDAQ'),(752,27,'5020999694709106179','maestro','XAF','$9.03','NYSE'),(753,1,'5602243927200227','bankcard','BRL','$2.26','NASDAQ'),(754,73,'3574996955835813','jcb','SEK','$7.54','NASDAQ'),(755,45,'201891644417494','diners-club-enroute','CNY','$8.43','NYSE'),(756,5,'3586727410264745','jcb','MUR','$1.35','NASDAQ'),(757,87,'3563896328248772','jcb','UYU','$1.21','NYSE'),(758,65,'36003584508867','diners-club-international','EUR','$0.42','NASDAQ'),(759,61,'490519959118870272','switch','KGS','$7.87','NASDAQ'),(760,7,'3535919797708673','jcb','CNY','$5.00','NYSE'),(761,46,'5389595037414223','mastercard','IDR','$4.81','NYSE'),(762,42,'3541151267607118','jcb','PHP','$8.81','NYSE'),(763,9,'677107231746112661','laser','CNY','$3.78','NASDAQ'),(764,72,'4508596107220341','visa-electron','EUR','$9.24','NASDAQ'),(765,92,'3528520390470783','jcb','VEF','$6.07','NASDAQ'),(766,14,'5610067406299321','bankcard','CNY','$3.77','NYSE'),(767,91,'6709749114055104512','laser','IRR','$1.46','NASDAQ'),(768,77,'3531378736182728','jcb','JPY','$6.38','NYSE'),(769,11,'201929627130237','diners-club-enroute','CNY','$3.80','NYSE'),(770,24,'3583602341591792','jcb','KES','$4.46','NYSE'),(771,61,'3571963427100955','jcb','CNY','$6.08','NASDAQ'),(772,62,'6759335731863908','maestro','IDR','$6.93','NYSE'),(773,98,'5602240374193384','china-unionpay','VND','$4.64','NYSE'),(774,11,'3533453097207410','jcb','BRL','$0.70','NYSE'),(775,42,'375974504596225','americanexpress','PLN','$5.82','NASDAQ'),(776,99,'3564083369391303','jcb','MKD','$1.94','NYSE'),(777,79,'3587357204931843','jcb','GTQ','$6.90','NASDAQ'),(778,77,'3548475585687624','jcb','CNY','$2.93','NASDAQ'),(779,83,'3531184800972196','jcb','USD','$4.46','NYSE'),(780,88,'3589853690619023','jcb','PLN','$4.16','NASDAQ'),(781,34,'3553105607802172','jcb','HRK','$0.12','NASDAQ'),(782,12,'3574565313576409','jcb','CNY','$7.17','NASDAQ'),(783,14,'3564773047218510','jcb','IDR','$1.09','NASDAQ'),(784,5,'4913683522804542','visa-electron','BRL','$8.19','NASDAQ'),(785,83,'374283893977025','americanexpress','IDR','$3.82','NYSE'),(786,73,'3582261015588831','jcb','PHP','$9.30','NASDAQ'),(787,95,'3555451169582606','jcb','PLN','$3.06','NYSE'),(788,86,'374622807425482','americanexpress','DKK','$0.03','NYSE'),(789,17,'4508914357478214','visa-electron','SEK','$4.80','NYSE'),(790,92,'3529168105067970','jcb','SEK','$8.90','NASDAQ'),(791,95,'630426757945669286','laser','VEF','$3.30','NASDAQ'),(792,2,'560225965124081387','china-unionpay','RUB','$4.42','NASDAQ'),(793,50,'5602236866826994','bankcard','PLN','$7.48','NYSE'),(794,32,'3545003393326251','jcb','USD','$3.92','NASDAQ'),(795,79,'201460533813682','diners-club-enroute','CNY','$1.36','NYSE'),(796,26,'5100142294526262','mastercard','CNY','$1.98','NASDAQ'),(797,46,'5498544986915416','mastercard','PHP','$6.80','NASDAQ'),(798,44,'675978863560705533','switch','RUB','$5.58','NASDAQ'),(799,10,'6333525002679729','switch','CNY','$7.90','NASDAQ'),(800,59,'3577855090722848','jcb','ALL','$0.05','NYSE'),(801,35,'6304981275432541','maestro','EUR','$4.48','NYSE'),(802,78,'3577166911829188','jcb','RUB','$5.28','NYSE'),(803,59,'5100139936055049','mastercard','IDR','$1.32','NYSE'),(804,11,'4913934951726999','visa-electron','IDR','$2.25','NASDAQ'),(805,48,'5610004469837713','bankcard','CZK','$6.23','NYSE'),(806,39,'3557229200068381','jcb','RUB','$3.81','NASDAQ'),(807,26,'677111835729164343','laser','JPY','$9.64','NYSE'),(808,77,'5103082335516665','mastercard','CNY','$4.77','NYSE'),(809,93,'5602257110798359','bankcard','PLN','$8.79','NASDAQ'),(810,30,'490383853083651481','switch','EUR','$0.16','NASDAQ'),(811,30,'3529187306036998','jcb','ILS','$2.34','NASDAQ'),(812,97,'4905062406941736910','switch','RUB','$9.63','NYSE'),(813,20,'3552768794390581','jcb','TMT','$0.09','NASDAQ'),(814,29,'3529950347133029','jcb','CAD','$2.28','NASDAQ'),(815,39,'3542720430130221','jcb','BBD','$2.91','NYSE'),(816,60,'4175004242273475','visa-electron','EUR','$1.97','NASDAQ'),(817,15,'3576262693717252','jcb','RUB','$6.85','NYSE'),(818,50,'561075600247137258','china-unionpay','PLN','$8.04','NYSE'),(819,80,'5249976785968257','mastercard','EUR','$0.03','NYSE'),(820,28,'4405236527025590','visa-electron','IDR','$9.60','NYSE'),(821,90,'3538441320176994','jcb','PHP','$5.91','NASDAQ'),(822,14,'4905874239041513220','switch','CNY','$2.62','NASDAQ'),(823,20,'3538964035602053','jcb','RUB','$0.20','NASDAQ'),(824,12,'3548022004662679','jcb','RUB','$2.87','NASDAQ'),(825,1,'201495569165631','diners-club-enroute','PLN','$4.80','NASDAQ'),(826,74,'36229073983341','diners-club-international','COP','$1.51','NASDAQ'),(827,27,'4175000507411198','visa-electron','CNY','$2.58','NYSE'),(828,59,'3565624997904337','jcb','VEF','$6.64','NYSE'),(829,57,'3577163026307697','jcb','CUP','$5.75','NASDAQ'),(830,76,'633390938868407732','switch','CNY','$1.95','NYSE'),(831,57,'5592266468185384','diners-club-us-ca','MYR','$3.88','NYSE'),(832,8,'5100179705684678','mastercard','CZK','$2.89','NASDAQ'),(833,9,'3538955642762710','jcb','CNY','$4.26','NASDAQ'),(834,72,'5610140781334755','bankcard','ALL','$2.07','NYSE'),(835,86,'5602221870401893','china-unionpay','PKR','$4.38','NASDAQ'),(836,79,'201965832064852','diners-club-enroute','IDR','$2.89','NASDAQ'),(837,80,'3540864477585418','jcb','CNY','$5.62','NASDAQ'),(838,39,'5038584321313508268','maestro','MYR','$4.68','NYSE'),(839,61,'3589763369578162','jcb','RUB','$2.08','NYSE'),(840,16,'3589833115122241','jcb','KZT','$7.39','NYSE'),(841,36,'3537214544200580','jcb','CNY','$3.75','NASDAQ'),(842,100,'3561086440106338','jcb','EUR','$2.32','NASDAQ'),(843,37,'374288770162054','americanexpress','PKR','$7.31','NASDAQ'),(844,77,'3548082798664901','jcb','CZK','$0.27','NASDAQ'),(845,99,'4936215274083919','switch','RUB','$3.50','NASDAQ'),(846,66,'5411285275185592','diners-club-us-ca','EGP','$5.05','NASDAQ'),(847,47,'3587207586481513','jcb','BRL','$7.66','NYSE'),(848,12,'3571818417248364','jcb','RUB','$2.65','NASDAQ'),(849,80,'3542105908595495','jcb','CNY','$0.10','NASDAQ'),(850,92,'6383094891923200','instapayment','ETB','$7.40','NASDAQ'),(851,8,'371711091516487','americanexpress','CNY','$5.58','NASDAQ'),(852,60,'3567348133991895','jcb','CNY','$7.65','NASDAQ'),(853,56,'4911187243950495','switch','PHP','$2.86','NASDAQ'),(854,2,'58933978467615586','maestro','CAD','$9.17','NASDAQ'),(855,52,'3557841945086013','jcb','CNY','$7.50','NYSE'),(856,27,'6759075338159695963','maestro','AZN','$2.81','NASDAQ'),(857,95,'3587804063949606','jcb','CNY','$8.55','NYSE'),(858,1,'30291064849176','diners-club-carte-blanche','CNY','$3.88','NYSE'),(859,42,'3537394747767930','jcb','IDR','$5.15','NASDAQ'),(860,55,'5048373939860726','mastercard','BRL','$8.91','NASDAQ'),(861,97,'4508775601154178','visa-electron','CAD','$3.46','NYSE'),(862,59,'3532560713266124','jcb','IDR','$3.95','NYSE'),(863,12,'564182909046555980','switch','BYR','$2.93','NYSE'),(864,38,'5048372201256811','mastercard','EUR','$4.34','NASDAQ'),(865,42,'3562136774848614','jcb','ZAR','$5.07','NASDAQ'),(866,51,'374283737006825','americanexpress','BRL','$4.15','NYSE'),(867,63,'491169991311136913','switch','CNY','$0.17','NYSE'),(868,7,'6759195592098091107','switch','SLL','$8.76','NASDAQ'),(869,78,'5100173244323229','mastercard','CNY','$1.67','NYSE'),(870,35,'3568474960151137','jcb','EUR','$9.59','NASDAQ'),(871,63,'633110641022412593','switch','ARS','$3.01','NYSE'),(872,90,'4405368042445233','visa-electron','SEK','$3.63','NASDAQ'),(873,2,'347313361707200','americanexpress','USD','$4.30','NYSE'),(874,73,'201437382342732','diners-club-enroute','IDR','$1.02','NASDAQ'),(875,22,'30335707206615','diners-club-carte-blanche','XCD','$3.95','NYSE'),(876,82,'3581586747125291','jcb','MAD','$1.44','NYSE'),(877,17,'4913313441477036','visa-electron','ZMW','$6.97','NYSE'),(878,75,'56022433196705346','china-unionpay','CNY','$3.28','NYSE'),(879,19,'30216582697922','diners-club-carte-blanche','PHP','$1.17','NASDAQ'),(880,50,'63049515367742481','laser','CNY','$3.47','NYSE'),(881,77,'4905565693349219803','switch','IDR','$9.27','NASDAQ'),(882,70,'3531675380197633','jcb','EUR','$1.71','NYSE'),(883,44,'6709637636905930444','laser','BRL','$4.84','NYSE'),(884,5,'4017955459251805','visa','KPW','$7.57','NYSE'),(885,76,'50203908591787001','maestro','UAH','$1.43','NYSE'),(886,14,'560222298940520377','china-unionpay','PHP','$1.62','NASDAQ'),(887,25,'5610975287503282','bankcard','CZK','$9.69','NYSE'),(888,13,'3586506359226828','jcb','IDR','$5.44','NASDAQ'),(889,39,'3581075112884955','jcb','IDR','$4.64','NYSE'),(890,80,'3545700054847406','jcb','EUR','$2.44','NASDAQ'),(891,49,'3536170419340201','jcb','ZAR','$3.55','NYSE'),(892,55,'3535702672907721','jcb','CNY','$0.30','NASDAQ'),(893,19,'56022393632702879','china-unionpay','JPY','$0.38','NYSE'),(894,7,'3551471143770238','jcb','IDR','$4.25','NYSE'),(895,36,'3564041392272304','jcb','EUR','$2.90','NYSE'),(896,29,'3533361192839849','jcb','JPY','$2.56','NYSE'),(897,90,'3558337432704456','jcb','ARS','$3.96','NASDAQ'),(898,54,'67629252478422154','maestro','PLN','$8.26','NASDAQ'),(899,94,'3530263351733552','jcb','JPY','$1.20','NASDAQ'),(900,44,'201841071334373','diners-club-enroute','AFN','$7.91','NASDAQ'),(901,5,'3558265865847866','jcb','CNY','$5.51','NASDAQ'),(902,32,'3547919989702043','jcb','USD','$8.75','NASDAQ'),(903,66,'6761295548000800097','maestro','UZS','$6.05','NASDAQ'),(904,23,'3579650891673680','jcb','ARS','$7.05','NASDAQ'),(905,20,'6333020235255353903','switch','IDR','$9.91','NYSE'),(906,46,'6762429038571141177','maestro','CNY','$4.58','NYSE'),(907,31,'5398119761496923','mastercard','LRD','$8.69','NYSE'),(908,18,'3553939250699489','jcb','RUB','$5.41','NYSE'),(909,39,'6385470201983373','instapayment','PHP','$9.57','NYSE'),(910,61,'374283243014156','americanexpress','IDR','$2.39','NASDAQ'),(911,82,'3565362853581143','jcb','CAD','$6.85','NASDAQ'),(912,95,'4041372381699','visa','THB','$3.20','NYSE'),(913,59,'4041593597149','visa','RUB','$3.39','NASDAQ'),(914,32,'3571922293912596','jcb','TZS','$3.48','NASDAQ'),(915,47,'3550136113296909','jcb','CNY','$5.64','NYSE'),(916,18,'4913097917292454','visa-electron','CNY','$3.70','NASDAQ'),(917,17,'4041596511302788','visa','IRR','$1.86','NYSE'),(918,42,'502055486851878124','maestro','AFN','$1.24','NASDAQ'),(919,12,'3553310243574900','jcb','XCD','$6.18','NYSE'),(920,35,'3564441293690598','jcb','BDT','$4.81','NYSE'),(921,18,'560225038016485833','china-unionpay','KHR','$1.92','NASDAQ'),(922,13,'337941310034862','americanexpress','MZN','$8.92','NYSE'),(923,50,'201599957186099','diners-club-enroute','NGN','$6.45','NYSE'),(924,44,'5048378586356688','mastercard','BRL','$1.63','NYSE'),(925,93,'201431320884129','diners-club-enroute','PEN','$1.88','NYSE'),(926,57,'3540533036308550','jcb','JPY','$8.62','NASDAQ'),(927,88,'4017955761804','visa','EUR','$7.09','NASDAQ'),(928,27,'56101363469507737','china-unionpay','EUR','$9.05','NASDAQ'),(929,58,'4508443254127559','visa-electron','NOK','$8.35','NYSE'),(930,80,'3531416447937418','jcb','CNY','$6.20','NYSE'),(931,100,'30055616184204','diners-club-carte-blanche','EUR','$9.58','NYSE'),(932,93,'5157022833418688','mastercard','SOS','$3.08','NYSE'),(933,99,'30131258988127','diners-club-carte-blanche','IDR','$4.55','NASDAQ'),(934,36,'5007669474035379','mastercard','PLN','$1.36','NYSE'),(935,28,'5602213381718898278','china-unionpay','EUR','$6.82','NASDAQ'),(936,52,'4936829592248671','switch','SBD','$3.91','NYSE'),(937,31,'676232114972770727','maestro','IDR','$0.87','NASDAQ'),(938,60,'3565886171110466','jcb','CNY','$7.05','NASDAQ'),(939,7,'4655926620241006','visa','RUB','$5.42','NASDAQ'),(940,97,'6395796871981323','instapayment','RUB','$0.58','NASDAQ'),(941,4,'4175001990085101','visa-electron','NZD','$8.74','NASDAQ'),(942,65,'3544779549669410','jcb','EUR','$6.93','NASDAQ'),(943,61,'3567986174180132','jcb','RUB','$6.43','NASDAQ'),(944,8,'3557101587062032','jcb','PGK','$5.62','NYSE'),(945,28,'5602213083163931','bankcard','PAB','$4.45','NASDAQ'),(946,65,'5100130876763304','mastercard','NPR','$3.91','NASDAQ'),(947,85,'560224710771973457','china-unionpay','JOD','$0.35','NASDAQ'),(948,48,'201845342677247','diners-club-enroute','AMD','$5.97','NYSE'),(949,82,'5184361047529535','mastercard','RUB','$2.68','NYSE'),(950,82,'5416379226466618','mastercard','SEK','$4.12','NYSE'),(951,67,'3548550817590679','jcb','EUR','$1.65','NASDAQ'),(952,74,'3540858731605228','jcb','IDR','$3.68','NYSE'),(953,75,'3541803538062982','jcb','PHP','$8.07','NASDAQ'),(954,8,'560221619890473534','china-unionpay','HRK','$7.84','NASDAQ'),(955,1,'4508602751365521','visa-electron','RUB','$8.72','NYSE'),(956,11,'3560125643321020','jcb','IDR','$5.23','NASDAQ'),(957,37,'3530929465776105','jcb','VND','$8.38','NASDAQ'),(958,48,'374288364609890','americanexpress','CNY','$7.21','NASDAQ'),(959,14,'3554359625211010','jcb','RUB','$0.23','NASDAQ'),(960,83,'3538267016791618','jcb','COP','$3.43','NASDAQ'),(961,4,'6331104302734386','switch','EUR','$6.02','NASDAQ'),(962,85,'3532955720169909','jcb','COP','$6.92','NYSE'),(963,50,'5602217264788895','bankcard','XCD','$5.93','NYSE'),(964,42,'3540982107021537','jcb','EGP','$9.28','NASDAQ'),(965,16,'3555311637803648','jcb','PHP','$5.12','NYSE'),(966,35,'4405792371792461','visa-electron','BAM','$8.82','NYSE'),(967,64,'201526889927464','diners-club-enroute','CNY','$9.14','NYSE'),(968,79,'6709595951296623','laser','COP','$4.23','NASDAQ'),(969,70,'4041599214251','visa','EUR','$4.94','NYSE'),(970,49,'30574412060590','diners-club-carte-blanche','NOK','$6.39','NYSE'),(971,46,'4936398347748799','switch','PEN','$8.17','NASDAQ'),(972,64,'3588881373131363','jcb','ARS','$0.61','NASDAQ'),(973,18,'4231389027304955','visa','IDR','$5.32','NYSE'),(974,68,'3554554273605048','jcb','ARS','$3.72','NASDAQ'),(975,56,'6385930890215593','instapayment','EUR','$6.59','NASDAQ'),(976,46,'3565156222199912','jcb','PLN','$3.74','NYSE'),(977,81,'4917890635543265','visa-electron','CAD','$3.90','NASDAQ'),(978,50,'3565762838511828','jcb','PHP','$7.56','NASDAQ'),(979,20,'3532656879795177','jcb','CNY','$7.69','NYSE'),(980,72,'560224902843282468','china-unionpay','CNY','$7.33','NASDAQ'),(981,39,'5602245544679980','bankcard','PHP','$5.48','NYSE'),(982,91,'3579941886933415','jcb','PLN','$7.30','NYSE'),(983,86,'5602252603936236','bankcard','KPW','$4.43','NASDAQ'),(984,70,'3552857017373670','jcb','CNY','$5.58','NASDAQ'),(985,100,'5610343896307027','china-unionpay','XAF','$0.14','NASDAQ'),(986,59,'4017957250445958','visa','IDR','$1.68','NASDAQ'),(987,91,'3572227658820866','jcb','BRL','$9.90','NASDAQ'),(988,69,'6767976783286702','solo','PEN','$9.16','NYSE'),(989,94,'3588431674867347','jcb','IDR','$7.05','NASDAQ'),(990,26,'30082771144682','diners-club-carte-blanche','RUB','$2.37','NASDAQ'),(991,15,'3572872496779277','jcb','HNL','$2.33','NASDAQ'),(992,59,'490545381845496677','switch','IDR','$8.39','NASDAQ'),(993,59,'374288453386392','americanexpress','UAH','$9.04','NYSE'),(994,86,'3566011759444950','jcb','CNY','$4.85','NYSE'),(995,47,'370894468753700','americanexpress','CNY','$3.92','NASDAQ'),(996,9,'3553969236465952','jcb','CNY','$4.48','NASDAQ'),(997,61,'5412266592300311','diners-club-us-ca','UYU','$8.07','NYSE'),(998,72,'30592569318181','diners-club-carte-blanche','TND','$0.13','NASDAQ'),(999,93,'30002503692824','diners-club-carte-blanche','CNY','$3.38','NASDAQ'),(1000,64,'3538428257738318','jcb','USD','$8.36','NASDAQ'),(2000,89,'4041596720284','visa','BRL','$9.17','NYSE'),(1001,33,'3575280616510977','jcb','ZAR','$6.87','NASDAQ'),(1002,74,'3545866514938091','jcb','EUR','$7.48','NASDAQ'),(1003,83,'56022327264233548','china-unionpay','CNY','$3.47','NYSE'),(1004,32,'5007665419367398','mastercard','MXN','$3.17','NYSE'),(1005,8,'3566521598193535','jcb','PHP','$5.07','NASDAQ'),(1006,25,'30509015453818','diners-club-carte-blanche','THB','$2.85','NASDAQ'),(1007,79,'3573475098470755','jcb','CNY','$6.17','NYSE'),(1008,1,'5048379470931404','mastercard','IDR','$3.24','NASDAQ'),(1009,63,'3553205351096508','jcb','CNY','$8.63','NASDAQ'),(1010,37,'3548558512962507','jcb','YER','$0.26','NASDAQ'),(1011,13,'6304182878974183','laser','CNY','$8.45','NASDAQ'),(1012,10,'5007662032455411','mastercard','PHP','$6.47','NASDAQ'),(1013,45,'4175007041866167','visa-electron','CNY','$4.69','NASDAQ'),(1014,36,'676779115364539363','solo','JPY','$7.77','NASDAQ'),(1015,92,'50186746433096905','maestro','RUB','$7.79','NASDAQ'),(1016,7,'201731077266986','diners-club-enroute','AMD','$8.53','NASDAQ'),(1017,86,'3538366158409862','jcb','RSD','$2.83','NASDAQ'),(1018,46,'3533842885299953','jcb','ZAR','$3.81','NASDAQ'),(1019,51,'3548509742051512','jcb','CNY','$4.94','NASDAQ'),(1020,59,'3586348860185593','jcb','EUR','$0.10','NYSE'),(1021,43,'5577679468599603','mastercard','IDR','$8.41','NYSE'),(1022,98,'5007663671864111','mastercard','SAR','$1.62','NYSE'),(1023,51,'3582252665219165','jcb','ARS','$2.35','NASDAQ'),(1024,41,'4026747758588543','visa-electron','UAH','$3.00','NYSE'),(1025,2,'3546048597523939','jcb','PHP','$4.96','NASDAQ'),(1026,60,'3578499759161011','jcb','CNY','$8.29','NASDAQ'),(1027,94,'3548010767999537','jcb','AFN','$7.62','NYSE'),(1028,9,'6761020053576686','maestro','JOD','$8.14','NASDAQ'),(1029,85,'340414225746660','americanexpress','EUR','$5.38','NYSE'),(1030,94,'5100179019365824','mastercard','EUR','$7.18','NYSE'),(1031,96,'30504325201445','diners-club-carte-blanche','IDR','$5.09','NYSE'),(1032,57,'5602253410586636','bankcard','THB','$7.48','NASDAQ'),(1033,53,'3558066494596357','jcb','MAD','$8.74','NASDAQ'),(1034,47,'3561092808205514','jcb','CAD','$5.50','NASDAQ'),(1035,63,'3588994125648061','jcb','RUB','$9.61','NASDAQ'),(1036,64,'502018701984464311','maestro','KPW','$0.46','NASDAQ'),(1037,60,'3549891330807466','jcb','EUR','$4.82','NASDAQ'),(1038,83,'3541034115212168','jcb','XAF','$1.16','NASDAQ'),(1039,21,'4913027019961722','visa-electron','RUB','$7.22','NASDAQ'),(1040,58,'4759658945388','visa','IDR','$4.96','NASDAQ'),(1041,90,'6376083418426804','instapayment','CNY','$6.60','NASDAQ'),(1042,39,'3578193650487134','jcb','PEN','$1.74','NYSE'),(1043,6,'3588524799148591','jcb','RUB','$6.29','NASDAQ'),(1044,38,'3530342090987172','jcb','CNY','$2.87','NASDAQ'),(1045,25,'201804297779334','diners-club-enroute','RUB','$2.09','NYSE'),(1046,90,'5010123098195446','mastercard','PHP','$8.03','NYSE'),(1047,83,'3573888047029078','jcb','UAH','$1.24','NYSE'),(1048,67,'201492723877714','diners-club-enroute','PHP','$6.58','NYSE'),(1049,53,'5602249859004115','china-unionpay','IDR','$3.84','NASDAQ'),(1050,61,'30278703134631','diners-club-carte-blanche','PEN','$0.69','NASDAQ'),(1051,61,'493645457116448697','switch','CNY','$1.74','NASDAQ'),(1052,5,'36961962998614','diners-club-international','BRL','$8.93','NYSE'),(1053,8,'4936858797320506','switch','BRL','$8.84','NYSE'),(1054,97,'4917108824668235','visa-electron','CNY','$2.67','NYSE'),(1055,38,'370968086023785','americanexpress','EUR','$3.20','NYSE'),(1056,68,'3534760954141592','jcb','RUB','$0.92','NASDAQ'),(1057,16,'633383080969142196','switch','RSD','$8.49','NYSE'),(1058,54,'4041377108976742','visa','IDR','$6.93','NYSE'),(1059,68,'6331105081263059','switch','GTQ','$7.00','NYSE'),(1060,60,'201817634857647','diners-club-enroute','BRL','$0.82','NYSE'),(1061,79,'3588031727050600','jcb','BYR','$2.29','NASDAQ'),(1062,44,'3573853452392221','jcb','EUR','$6.10','NYSE'),(1063,15,'5610204410383052','bankcard','PHP','$9.33','NYSE'),(1064,48,'3553462982266212','jcb','IDR','$4.12','NYSE'),(1065,88,'5038470661461456902','maestro','BRL','$6.72','NASDAQ'),(1066,59,'374283834159451','americanexpress','IRR','$8.48','NYSE'),(1067,81,'3558495789603638','jcb','BRL','$9.79','NASDAQ'),(1068,89,'3531597655428198','jcb','SEK','$2.97','NASDAQ'),(1069,24,'3586136223667773','jcb','EUR','$2.33','NYSE'),(1070,69,'3538027139269540','jcb','NGN','$7.46','NASDAQ'),(1071,24,'6771711834202009009','laser','THB','$6.12','NASDAQ'),(1072,54,'560223752407234699','china-unionpay','IDR','$7.92','NYSE'),(1073,49,'5515444813376982','diners-club-us-ca','EUR','$1.49','NYSE'),(1074,69,'4936541410703403','switch','PLN','$1.63','NASDAQ'),(1075,20,'3545007640720042','jcb','CNY','$5.90','NYSE'),(1076,74,'5641821392026055891','switch','MDL','$1.64','NYSE'),(1077,24,'337941656245130','americanexpress','EUR','$2.90','NYSE'),(1078,35,'6762423897951237731','maestro','IDR','$5.27','NASDAQ'),(1079,10,'5602219592920257','bankcard','CNY','$6.11','NYSE'),(1080,91,'3582408288714632','jcb','IDR','$3.33','NYSE'),(1081,19,'3534373095016747','jcb','PKR','$2.16','NYSE'),(1082,55,'201613352014952','diners-club-enroute','TZS','$2.18','NYSE'),(1083,44,'67598065636488132','maestro','CNY','$9.27','NYSE'),(1084,55,'3542899140337282','jcb','IRR','$0.52','NYSE'),(1085,86,'4913361831715747','visa-electron','RUB','$9.35','NYSE'),(1086,29,'3528993728387252','jcb','IDR','$5.30','NYSE'),(1087,64,'3532521231089513','jcb','RUB','$2.80','NYSE'),(1088,2,'502092860592261763','maestro','EUR','$8.79','NYSE'),(1089,75,'30013730056931','diners-club-carte-blanche','CNY','$9.83','NASDAQ'),(1090,33,'3536899772979110','jcb','EUR','$9.42','NASDAQ'),(1091,73,'3553748448263268','jcb','SEK','$7.78','NASDAQ'),(1092,18,'4913881931910054','visa-electron','CNY','$3.68','NASDAQ'),(1093,41,'675905019164510039','maestro','UAH','$2.57','NASDAQ'),(1094,59,'5048371498529815','mastercard','KZT','$0.34','NASDAQ'),(1095,65,'3538771560528961','jcb','EUR','$0.30','NASDAQ'),(1096,57,'6759130801060060778','switch','ZWL','$9.60','NASDAQ'),(1097,65,'3551131615944857','jcb','BRL','$5.18','NASDAQ'),(1098,40,'6706204042962511640','laser','PHP','$8.44','NASDAQ'),(1099,73,'5108752726343185','mastercard','EUR','$4.33','NASDAQ'),(1100,48,'30031381610939','diners-club-carte-blanche','CNY','$4.48','NASDAQ'),(1101,45,'3554459290759465','jcb','VEF','$3.88','NYSE'),(1102,21,'6767649017294490429','solo','CNY','$1.88','NYSE'),(1103,41,'3558255472301449','jcb','IDR','$5.16','NASDAQ'),(1104,29,'4312328605576','visa','IDR','$7.77','NASDAQ'),(1105,77,'374288254201030','americanexpress','IRR','$4.40','NASDAQ'),(1106,24,'30269196048495','diners-club-carte-blanche','CNY','$8.98','NYSE'),(1107,36,'3528186175831944','jcb','CNY','$7.08','NYSE'),(1108,76,'4026536752080247','visa-electron','ALL','$0.18','NASDAQ'),(1109,43,'5282995171042129','mastercard','CNY','$4.75','NASDAQ'),(1110,100,'3534222040055914','jcb','MXN','$1.88','NYSE'),(1111,64,'3532657096739451','jcb','CNY','$3.98','NASDAQ'),(1112,18,'3584131644427198','jcb','UAH','$1.00','NYSE'),(1113,45,'30105577788889','diners-club-carte-blanche','CZK','$3.15','NYSE'),(1114,23,'3551109063584524','jcb','XOF','$5.42','NYSE'),(1115,13,'4405057008824156','visa-electron','XOF','$6.03','NASDAQ'),(1116,11,'6709332435716905','laser','XOF','$0.91','NYSE'),(1117,85,'670971622840489542','laser','UAH','$7.81','NASDAQ'),(1118,71,'3529837445786354','jcb','CNY','$0.97','NASDAQ'),(1119,74,'5020863658983956503','maestro','PLN','$8.50','NASDAQ'),(1120,93,'5602259168649039','china-unionpay','NGN','$1.36','NYSE'),(1121,96,'3583915502732736','jcb','KMF','$6.54','NASDAQ'),(1122,37,'4508874232726544','visa-electron','ALL','$2.70','NASDAQ'),(1123,52,'4041597316549466','visa','NGN','$2.78','NASDAQ'),(1124,68,'3571089385718537','jcb','JPY','$2.41','NASDAQ'),(1125,99,'372301363483571','americanexpress','NOK','$7.25','NASDAQ'),(1126,14,'3546122584510306','jcb','CNY','$9.53','NASDAQ'),(1127,72,'3577472357310323','jcb','UYU','$0.88','NYSE'),(1128,61,'5100176429774611','mastercard','EUR','$8.91','NYSE'),(1129,41,'3535303305422285','jcb','IDR','$4.59','NASDAQ'),(1130,42,'5002357963928842','mastercard','CNY','$3.40','NASDAQ'),(1131,6,'5602221374913377','bankcard','HRK','$4.81','NYSE'),(1132,38,'30452853033873','diners-club-carte-blanche','CNY','$9.78','NASDAQ'),(1133,83,'3534381940780318','jcb','IDR','$8.72','NYSE'),(1134,53,'3574800077859109','jcb','PHP','$8.78','NYSE'),(1135,30,'6334303066584543','solo','LYD','$0.68','NASDAQ'),(1136,46,'3586047031255984','jcb','IDR','$0.19','NASDAQ'),(1137,4,'3577224514289811','jcb','PLN','$3.09','NASDAQ'),(1138,14,'6304051852778763757','maestro','IDR','$9.89','NASDAQ'),(1139,20,'5602241990896962','bankcard','CNY','$8.14','NYSE'),(1140,3,'5602252476130305','china-unionpay','XAF','$1.28','NASDAQ'),(1141,89,'630431292833770106','laser','PHP','$2.09','NYSE'),(1142,57,'374622053179916','americanexpress','CUP','$6.20','NASDAQ'),(1143,25,'3570131021048647','jcb','PHP','$8.17','NYSE'),(1144,42,'3581330457680215','jcb','RUB','$8.92','NASDAQ'),(1145,10,'50389142984285037','maestro','CNY','$3.30','NASDAQ'),(1146,44,'6771778432684467','laser','IDR','$9.94','NYSE'),(1147,59,'3589511996626940','jcb','THB','$0.22','NASDAQ'),(1148,54,'3552377199914779','jcb','CNY','$4.27','NYSE'),(1149,55,'5602229822786865','bankcard','CNY','$7.63','NYSE'),(1150,11,'3577970030677729','jcb','SEK','$7.15','NASDAQ'),(1151,91,'4566637526902','visa','IDR','$7.75','NASDAQ'),(1152,33,'3579491358307375','jcb','IDR','$2.69','NYSE'),(1153,13,'3585493188607380','jcb','MNT','$2.47','NASDAQ'),(1154,88,'3565221403935698','jcb','RUB','$6.09','NYSE'),(1155,34,'3585868494127621','jcb','ZAR','$1.04','NASDAQ'),(1156,30,'3554766395280969','jcb','CNY','$6.20','NYSE'),(1157,71,'201411841238716','diners-club-enroute','MXN','$7.56','NYSE'),(1158,61,'201415547203270','diners-club-enroute','TZS','$3.62','NASDAQ'),(1159,39,'3580511704990637','jcb','IRR','$0.20','NYSE'),(1160,23,'3563551129288010','jcb','USD','$6.79','NASDAQ'),(1161,90,'3552355139433654','jcb','JPY','$6.35','NASDAQ'),(1162,7,'3557856182954988','jcb','BRL','$9.09','NASDAQ'),(1163,47,'5602224550438277081','china-unionpay','CNY','$5.40','NASDAQ'),(1164,19,'3566030018413879','jcb','CAD','$7.36','NYSE'),(1165,52,'4041374273519969','visa','EUR','$6.32','NASDAQ'),(1166,82,'5100134820056443','mastercard','PHP','$2.57','NYSE'),(1167,48,'3531157425775814','jcb','IDR','$3.08','NASDAQ'),(1168,99,'5100171562082781','mastercard','THB','$9.85','NASDAQ'),(1169,20,'677183523652550927','laser','CNY','$3.89','NASDAQ'),(1170,45,'30248499705324','diners-club-carte-blanche','CNY','$0.92','NYSE'),(1171,50,'56107157820970400','china-unionpay','EUR','$6.76','NASDAQ'),(1172,90,'3549773927131031','jcb','CNY','$3.44','NYSE'),(1173,99,'4911894804581029','switch','ARS','$3.91','NYSE'),(1174,31,'3579046007640095','jcb','RUB','$1.17','NASDAQ'),(1175,33,'5002350830997199','mastercard','ARS','$4.71','NYSE'),(1176,95,'374283315423707','americanexpress','ALL','$4.88','NASDAQ'),(1177,50,'3557741517287645','jcb','RUB','$7.54','NYSE'),(1178,12,'374622955386221','americanexpress','RSD','$8.30','NYSE'),(1179,57,'3571878387773577','jcb','NGN','$3.49','NYSE'),(1180,60,'3562132733807056','jcb','MGA','$4.03','NYSE'),(1181,69,'3574277951946171','jcb','RUB','$0.51','NASDAQ'),(1182,44,'6709524152933810448','laser','ALL','$4.48','NYSE'),(1183,87,'3558471149446646','jcb','IDR','$5.40','NASDAQ'),(1184,88,'30310510543579','diners-club-carte-blanche','CAD','$6.20','NYSE'),(1185,39,'56022212675847864','china-unionpay','EUR','$8.58','NYSE'),(1186,83,'3573818759332477','jcb','THB','$8.33','NASDAQ'),(1187,12,'5435726350321844','diners-club-us-ca','CNY','$6.16','NASDAQ'),(1188,34,'4844791477050641','visa-electron','RUB','$6.41','NYSE'),(1189,22,'3536843392770152','jcb','COP','$3.48','NYSE'),(1190,5,'30501694501371','diners-club-carte-blanche','HNL','$6.73','NYSE'),(1191,90,'5412248601417815','mastercard','CAD','$8.89','NASDAQ'),(1192,60,'201884346554011','diners-club-enroute','CNY','$3.45','NYSE'),(1193,14,'4903074475616566','switch','CNY','$5.76','NASDAQ'),(1194,64,'3574868545632614','jcb','CAD','$1.02','NYSE'),(1195,52,'5002357602482185','mastercard','CNY','$9.05','NASDAQ'),(1196,24,'30217489700439','diners-club-carte-blanche','USD','$0.16','NASDAQ'),(1197,92,'6304515580175056547','maestro','PAB','$0.51','NYSE'),(1198,12,'4903360070463568202','switch','IDR','$1.72','NYSE'),(1199,46,'3588351606699701','jcb','USD','$4.90','NASDAQ'),(1200,15,'3544190740901190','jcb','CZK','$4.69','NASDAQ'),(1201,45,'3541579198419106','jcb','IDR','$9.54','NYSE'),(1202,35,'3585700226252171','jcb','IDR','$6.72','NASDAQ'),(1203,7,'3531104816125167','jcb','PHP','$7.26','NYSE'),(1204,26,'3566537823636171','jcb','CNY','$0.97','NASDAQ'),(1205,28,'676338769205042013','maestro','USD','$8.49','NASDAQ'),(1206,67,'4844179660263496','visa-electron','IDR','$6.45','NASDAQ'),(1207,71,'67714015535486769','laser','EUR','$7.19','NYSE'),(1208,90,'5893992777229698','maestro','USD','$9.92','NYSE'),(1209,26,'201956936940162','diners-club-enroute','IDR','$5.79','NASDAQ'),(1210,65,'4911913865666972175','switch','CNY','$5.60','NASDAQ'),(1211,17,'50186700882844406','maestro','JPY','$4.73','NASDAQ'),(1212,38,'4017959616665','visa','JPY','$8.74','NASDAQ'),(1213,35,'5100131643122535','mastercard','PEN','$9.26','NASDAQ'),(1214,78,'201433573016193','diners-club-enroute','PHP','$3.35','NYSE'),(1215,62,'5010122997292254','mastercard','CNY','$8.73','NYSE'),(1216,19,'3574602754013392','jcb','EUR','$0.36','NASDAQ'),(1217,84,'5534238614618908','mastercard','CNY','$6.19','NASDAQ'),(1218,11,'3529757427830626','jcb','CNY','$6.26','NYSE'),(1219,89,'372301614602201','americanexpress','CZK','$1.28','NYSE'),(1220,53,'3585843607444478','jcb','COP','$0.45','NYSE'),(1221,92,'5270213745021171','mastercard','CNY','$5.29','NYSE'),(1222,4,'5602244247185460','bankcard','IDR','$3.29','NASDAQ'),(1223,71,'3556436447168277','jcb','BRL','$7.47','NYSE'),(1224,55,'3573240100938623','jcb','CNY','$4.62','NYSE'),(1225,88,'36108336130538','diners-club-international','IDR','$6.21','NASDAQ'),(1226,21,'3540663728565348','jcb','IDR','$4.60','NASDAQ'),(1227,99,'5288763774357458','mastercard','ETB','$5.42','NASDAQ'),(1228,44,'374622612059179','americanexpress','CNY','$2.05','NASDAQ'),(1229,85,'5018082760271682178','maestro','ARS','$5.31','NYSE'),(1230,89,'3539335158351514','jcb','CNY','$5.57','NYSE'),(1231,99,'3560278663470050','jcb','RUB','$6.80','NYSE'),(1232,87,'3533701350314756','jcb','IDR','$0.68','NYSE'),(1233,77,'3568975892916793','jcb','RUB','$4.54','NYSE'),(1234,38,'4913091228827645','visa-electron','CZK','$8.07','NASDAQ'),(1235,71,'6398298865334897','instapayment','JOD','$4.41','NASDAQ'),(1236,63,'4485259419359623','visa','EUR','$6.96','NASDAQ'),(1237,51,'3560375033668130','jcb','CNY','$7.51','NYSE'),(1238,55,'3562491239630440','jcb','PHP','$6.30','NASDAQ'),(1239,36,'30530034398701','diners-club-carte-blanche','BRL','$6.64','NYSE'),(1240,64,'3586726361619147','jcb','EUR','$6.97','NASDAQ'),(1241,94,'490389145675922915','switch','PLN','$9.56','NASDAQ'),(1242,74,'6771040535091730','laser','IDR','$6.35','NASDAQ'),(1243,88,'3569469944800709','jcb','EUR','$2.06','NYSE'),(1244,57,'3548987820702679','jcb','IDR','$2.13','NASDAQ'),(1245,94,'30120453118291','diners-club-carte-blanche','USD','$8.33','NASDAQ'),(1246,29,'491169656388068741','switch','CNY','$0.08','NASDAQ'),(1247,4,'4788981238260','visa','RUB','$7.36','NASDAQ'),(1248,91,'3573604252176045','jcb','BRL','$4.00','NYSE'),(1249,44,'5602218236854542','bankcard','CNY','$8.46','NYSE'),(1250,47,'3584060148608096','jcb','PLN','$9.10','NYSE'),(1251,16,'3534185515548426','jcb','EUR','$4.36','NYSE'),(1252,98,'6761819022665944977','maestro','PLN','$7.26','NASDAQ'),(1253,55,'3557539702437367','jcb','CNY','$2.84','NYSE'),(1254,63,'5641829029856001403','switch','CNY','$2.87','NASDAQ'),(1255,34,'3579441009441057','jcb','BRL','$7.90','NYSE'),(1256,27,'3535485764922069','jcb','RUB','$7.20','NYSE'),(1257,84,'377312350052878','americanexpress','VND','$9.67','NYSE'),(1258,57,'4917726279583144','visa-electron','EUR','$7.92','NASDAQ'),(1259,72,'490372769468417970','switch','EUR','$7.01','NASDAQ'),(1260,69,'3581641422329476','jcb','ILS','$4.34','NYSE'),(1261,84,'6331107457638848884','switch','CNY','$5.87','NYSE'),(1262,79,'3583787633337408','jcb','ETB','$1.70','NASDAQ'),(1263,79,'4913941749504737','visa-electron','RUB','$9.37','NASDAQ'),(1264,29,'3554251345992104','jcb','ARS','$8.71','NYSE'),(1265,76,'374622249719831','americanexpress','PEN','$5.33','NASDAQ'),(1266,20,'3528093556814350','jcb','IDR','$7.67','NASDAQ'),(1267,29,'5007660018037716','mastercard','IDR','$7.68','NYSE'),(1268,40,'3550790281534218','jcb','CNY','$8.30','NYSE'),(1269,92,'5010129012283010','mastercard','EUR','$8.82','NASDAQ'),(1270,42,'3569106086447382','jcb','CAD','$3.84','NYSE'),(1271,30,'3538785712130138','jcb','IDR','$4.17','NASDAQ'),(1272,99,'3548528394548625','jcb','COP','$8.39','NASDAQ'),(1273,18,'3535576651286095','jcb','BRL','$1.64','NYSE'),(1274,16,'3567351592823989','jcb','DOP','$4.93','NYSE'),(1275,53,'374283703251553','americanexpress','EGP','$8.71','NYSE'),(1276,72,'4911801700502066','switch','CNY','$0.06','NYSE'),(1277,10,'6331107220478382','switch','BGN','$6.83','NYSE'),(1278,26,'3558070316951535','jcb','PAB','$1.68','NYSE'),(1279,45,'3537879687545148','jcb','PEN','$4.76','NASDAQ'),(1280,7,'3559769566976980','jcb','CUP','$7.92','NYSE'),(1281,80,'3538003755902524','jcb','PLN','$3.02','NYSE'),(1282,40,'201896845563905','diners-club-enroute','XPF','$9.91','NASDAQ'),(1283,80,'5112552751027537','mastercard','UAH','$6.84','NYSE'),(1284,60,'3532428757209428','jcb','BDT','$2.39','NYSE'),(1285,17,'5610447685108023','bankcard','VND','$2.43','NYSE'),(1286,12,'4903070013239852808','switch','PKR','$2.96','NYSE'),(1287,85,'6771014874668242','laser','PHP','$3.89','NASDAQ'),(1288,6,'36460128564782','diners-club-international','MXN','$5.30','NASDAQ'),(1289,20,'3577229416200733','jcb','CNY','$9.25','NYSE'),(1290,55,'5448258438627583','mastercard','BAM','$8.31','NASDAQ'),(1291,83,'4017958276112713','visa','CNY','$2.13','NYSE'),(1292,85,'5048378380486947','mastercard','CZK','$1.66','NASDAQ'),(1293,84,'3569029568558593','jcb','CNY','$4.56','NASDAQ'),(1294,45,'5602225325983660','china-unionpay','CNY','$8.86','NASDAQ'),(1295,38,'3588826564532085','jcb','RUB','$1.85','NYSE'),(1296,36,'5100146263755331','mastercard','CNY','$6.40','NYSE'),(1297,87,'3558211851333842','jcb','IDR','$5.95','NASDAQ'),(1298,30,'4844876109477369','visa-electron','PEN','$9.02','NYSE'),(1299,60,'3563294909857809','jcb','NPR','$5.04','NASDAQ'),(1300,53,'30050514035004','diners-club-carte-blanche','EGP','$8.67','NYSE'),(1301,6,'3542755365567658','jcb','IDR','$0.44','NASDAQ'),(1302,19,'5610303997957054','bankcard','PHP','$1.25','NASDAQ'),(1303,98,'3563349718156395','jcb','CNY','$7.44','NASDAQ'),(1304,45,'3545676460096228','jcb','RUB','$1.95','NASDAQ'),(1305,74,'201664931584791','diners-club-enroute','PLN','$0.74','NYSE'),(1306,26,'3539557603703342','jcb','COP','$4.91','NASDAQ'),(1307,4,'3557274499894592','jcb','CNY','$6.89','NASDAQ'),(1308,18,'3529313861607433','jcb','PEN','$4.11','NASDAQ'),(1309,25,'58931408655399076','maestro','CNY','$4.92','NASDAQ'),(1310,75,'3560368592596156','jcb','USD','$9.12','NASDAQ'),(1311,55,'3554227574414358','jcb','EUR','$6.70','NYSE'),(1312,56,'6761407565700953476','maestro','IRR','$1.47','NYSE'),(1313,28,'3570176493450169','jcb','SEK','$6.93','NYSE'),(1314,58,'6331101260138501','switch','CNY','$1.44','NASDAQ'),(1315,52,'5554495570510413','mastercard','LSL','$7.15','NYSE'),(1316,95,'3586258715201521','jcb','CNY','$5.34','NYSE'),(1317,93,'5007664976941208','mastercard','BRL','$1.31','NYSE'),(1318,78,'3555902427267760','jcb','CAD','$9.10','NYSE'),(1319,12,'201767540801587','diners-club-enroute','PHP','$2.15','NASDAQ'),(1320,16,'3528953648593926','jcb','NOK','$9.02','NYSE'),(1321,61,'5610901225571835','bankcard','PHP','$0.49','NYSE'),(1322,33,'5602251409825874','bankcard','SEK','$8.58','NYSE'),(1323,36,'201778590152748','diners-club-enroute','ZAR','$7.03','NASDAQ'),(1324,91,'3550253421954515','jcb','EUR','$6.37','NYSE'),(1325,56,'374622716350102','americanexpress','RUB','$9.75','NASDAQ'),(1326,33,'5010124607193286','mastercard','GEL','$0.87','NYSE'),(1327,54,'493641936375001481','switch','PLN','$8.80','NYSE'),(1328,51,'3536739836195420','jcb','MGA','$3.84','NYSE'),(1329,42,'4936391343162115','switch','PHP','$0.51','NASDAQ'),(1330,13,'5602249714938374','china-unionpay','EUR','$4.72','NYSE'),(1331,12,'4405290441592854','visa-electron','CNY','$7.18','NYSE'),(1332,77,'3552490449904811','jcb','CNY','$7.17','NASDAQ'),(1333,23,'337941668325383','americanexpress','EUR','$5.13','NYSE'),(1334,69,'5048374450429776','mastercard','IDR','$0.71','NASDAQ'),(1335,84,'5610115770472816','china-unionpay','CNY','$4.30','NYSE'),(1336,8,'36758939327822','diners-club-international','CAD','$5.18','NASDAQ'),(1337,90,'3534510331994258','jcb','BRL','$0.35','NYSE'),(1338,98,'4175003811576292','visa-electron','CNY','$1.98','NASDAQ'),(1339,58,'4905191305228624','switch','RUB','$9.67','NASDAQ'),(1340,98,'5602245357097817','bankcard','IDR','$0.32','NYSE'),(1341,21,'3550598681143864','jcb','RSD','$6.03','NASDAQ'),(1342,62,'3539206114643163','jcb','CNY','$7.91','NYSE'),(1343,4,'4911921638251613482','switch','EUR','$3.72','NYSE'),(1344,95,'6759810912098193','switch','JPY','$9.27','NASDAQ'),(1345,94,'6763950867239212','maestro','USD','$2.16','NYSE'),(1346,17,'3547639509410279','jcb','CNY','$5.23','NYSE'),(1347,70,'3572666248343121','jcb','CNY','$0.72','NASDAQ'),(1348,37,'3581969355016418','jcb','DOP','$7.01','NASDAQ'),(1349,99,'4844346033325126','visa-electron','PKR','$1.46','NASDAQ'),(1350,81,'3566495795433962','jcb','CNY','$3.34','NASDAQ'),(1351,4,'560221820507622923','china-unionpay','EUR','$4.70','NYSE'),(1352,34,'30531327578074','diners-club-carte-blanche','PLN','$4.03','NYSE'),(1353,69,'374622243649000','americanexpress','EUR','$9.87','NYSE'),(1354,80,'5188285972081178','mastercard','ZAR','$7.41','NYSE'),(1355,51,'3585777138299524','jcb','CNY','$6.27','NYSE'),(1356,77,'5100145453993033','mastercard','CZK','$7.89','NASDAQ'),(1357,31,'4041373846963','visa','RUB','$6.20','NASDAQ'),(1358,64,'3557553761570000','jcb','THB','$8.18','NASDAQ'),(1359,100,'4405326695175044','visa-electron','MGA','$1.40','NASDAQ'),(1360,65,'5602230912359043','bankcard','CNY','$9.79','NYSE'),(1361,63,'30067174406523','diners-club-carte-blanche','THB','$1.87','NYSE'),(1362,33,'3568461035909045','jcb','EUR','$2.75','NASDAQ'),(1363,15,'36812247491364','diners-club-international','CNY','$6.97','NASDAQ'),(1364,10,'3559707398722404','jcb','BRL','$4.68','NYSE'),(1365,70,'201843738139500','diners-club-enroute','CNY','$1.70','NYSE'),(1366,79,'5602227535823793','bankcard','PLN','$8.86','NYSE'),(1367,79,'3546876323079051','jcb','BRL','$5.91','NYSE'),(1368,55,'3561182283816990','jcb','CNY','$0.22','NASDAQ'),(1369,67,'3575045547047468','jcb','PHP','$0.25','NYSE'),(1370,26,'3571963115539910','jcb','CNY','$4.87','NASDAQ'),(1371,26,'3568138026282067','jcb','MNT','$4.64','NASDAQ'),(1372,46,'5418709117390675','mastercard','VND','$7.39','NASDAQ'),(1373,94,'374288133262484','americanexpress','PEN','$8.36','NASDAQ'),(1374,91,'3585022891972243','jcb','IDR','$5.13','NASDAQ'),(1375,84,'493685044092803631','switch','BRL','$7.19','NASDAQ'),(1376,26,'3555959634763866','jcb','CNY','$2.74','NASDAQ'),(1377,81,'5610389916942475','bankcard','SEK','$0.32','NASDAQ'),(1378,7,'5100131187999009','mastercard','IDR','$9.42','NYSE'),(1379,27,'56022131097387152','china-unionpay','EGP','$1.61','NASDAQ'),(1380,7,'3585676598942245','jcb','PHP','$1.02','NYSE'),(1381,49,'675952052162717662','switch','CNY','$6.90','NASDAQ'),(1382,58,'374622043794311','americanexpress','RUB','$7.98','NASDAQ'),(1383,77,'5482995454285096','diners-club-us-ca','PLN','$2.14','NYSE'),(1384,93,'3575458126654432','jcb','MYR','$7.00','NASDAQ'),(1385,26,'676293104518008449','maestro','BDT','$7.41','NASDAQ'),(1386,33,'5408570926046029','diners-club-us-ca','EUR','$7.56','NASDAQ'),(1387,92,'5602217056694111','bankcard','UZS','$8.64','NYSE'),(1388,39,'4041377900984787','visa','SEK','$2.35','NASDAQ'),(1389,36,'30345809417820','diners-club-carte-blanche','CAD','$5.10','NASDAQ'),(1390,33,'3565072883418840','jcb','RUB','$4.59','NASDAQ'),(1391,45,'6304656832300924','laser','CNY','$2.82','NYSE'),(1392,30,'3554790559925649','jcb','CNY','$9.27','NASDAQ'),(1393,38,'3582980186843358','jcb','RUB','$8.55','NASDAQ'),(1394,62,'561043429803181529','china-unionpay','CNY','$3.60','NYSE'),(1395,18,'5154446385685654','mastercard','EUR','$8.31','NYSE'),(1396,9,'6767679478282099080','solo','SEK','$4.21','NYSE'),(1397,52,'3531009932371001','jcb','CNY','$0.55','NASDAQ'),(1398,3,'3557706848130400','jcb','CNY','$2.52','NYSE'),(1399,53,'3580592440775250','jcb','BGN','$6.88','NASDAQ'),(1400,24,'3533149703498910','jcb','PKR','$0.80','NYSE'),(1401,57,'340606705487737','americanexpress','CNY','$9.76','NYSE'),(1402,79,'3559664992179376','jcb','CNY','$2.38','NYSE'),(1403,52,'3548838511001014','jcb','ARS','$3.58','NYSE'),(1404,76,'3529006961753723','jcb','KPW','$8.60','NASDAQ'),(1405,25,'5602212425203025','bankcard','JPY','$7.62','NASDAQ'),(1406,75,'3534743139337947','jcb','ILS','$5.50','NASDAQ'),(1407,8,'5002350522377155','mastercard','EUR','$5.04','NYSE'),(1408,68,'3538873530543094','jcb','IDR','$1.48','NASDAQ'),(1409,20,'3568974102318700','jcb','PLN','$1.00','NYSE'),(1410,8,'3558205083284104','jcb','ARS','$4.20','NYSE'),(1411,23,'67094801818934942','laser','SEK','$0.53','NASDAQ'),(1412,11,'3553334878208634','jcb','CNY','$6.92','NYSE'),(1413,29,'6387342413758455','instapayment','PHP','$2.14','NASDAQ'),(1414,26,'3589687340095345','jcb','IDR','$8.70','NASDAQ'),(1415,82,'3558738639717391','jcb','NIO','$1.11','NASDAQ'),(1416,3,'3535461235964253','jcb','SEK','$7.23','NASDAQ'),(1417,25,'3529121577123680','jcb','IDR','$3.39','NASDAQ'),(1418,88,'58938567275760471','maestro','CNY','$2.74','NYSE'),(1419,79,'30152816073475','diners-club-carte-blanche','TJS','$5.91','NYSE'),(1420,42,'5007661875947815','mastercard','BRL','$1.97','NASDAQ'),(1421,5,'6771347308614571197','laser','JPY','$6.18','NYSE'),(1422,22,'4844573799918782','visa-electron','BRL','$9.94','NYSE'),(1423,31,'50207084724652045','maestro','IDR','$5.49','NASDAQ'),(1424,26,'676262806008665390','maestro','BRL','$7.34','NASDAQ'),(1425,33,'3555395679043478','jcb','IDR','$4.35','NASDAQ'),(1426,37,'3564250705381567','jcb','PLN','$5.21','NASDAQ'),(1427,21,'3543558725339571','jcb','USD','$1.61','NYSE'),(1428,100,'3575419664528008','jcb','EUR','$1.12','NYSE'),(1429,21,'3556985432524191','jcb','SEK','$1.42','NASDAQ'),(1430,75,'30143075644700','diners-club-carte-blanche','RUB','$0.84','NYSE'),(1431,70,'5602218136092953','china-unionpay','IDR','$6.85','NASDAQ'),(1432,87,'30082983414477','diners-club-carte-blanche','UAH','$0.78','NYSE'),(1433,63,'4242314992466','visa','EUR','$4.76','NYSE'),(1434,85,'676190989317467430','maestro','IRR','$6.32','NASDAQ'),(1435,84,'5440994705991876','mastercard','PLN','$0.36','NYSE'),(1436,99,'3561333614770717','jcb','JPY','$7.37','NASDAQ'),(1437,49,'4913245966851395','visa-electron','IDR','$5.43','NYSE'),(1438,15,'5602243233685707','bankcard','IDR','$2.00','NASDAQ'),(1439,71,'3583296965922852','jcb','CNY','$5.82','NYSE'),(1440,62,'6706135209494972152','laser','PEN','$8.35','NYSE'),(1441,11,'3560089922267694','jcb','CNY','$5.84','NYSE'),(1442,33,'3568644773550523','jcb','CNY','$7.13','NYSE'),(1443,67,'3558932920958562','jcb','ILS','$7.41','NYSE'),(1444,62,'3584135443576253','jcb','PLN','$2.22','NASDAQ'),(1445,46,'30311346908416','diners-club-carte-blanche','PLN','$9.08','NYSE'),(1446,44,'3567747925881992','jcb','TND','$4.52','NASDAQ'),(1447,27,'3539169539405339','jcb','EUR','$1.18','NYSE'),(1448,4,'5602241559377073','bankcard','CNY','$9.95','NYSE'),(1449,37,'201652612311121','diners-club-enroute','CNY','$6.11','NASDAQ'),(1450,42,'5010120589788739','mastercard','PHP','$3.93','NASDAQ'),(1451,42,'63046151982871738','laser','HNL','$8.97','NYSE'),(1452,45,'3571751192634526','jcb','PHP','$8.54','NASDAQ'),(1453,85,'5641825967471165463','switch','IDR','$1.96','NYSE'),(1454,88,'3585024766827841','jcb','BRL','$0.04','NYSE'),(1455,77,'3583461288143731','jcb','CNY','$8.53','NYSE'),(1456,81,'3537771843441330','jcb','CNY','$1.68','NYSE'),(1457,2,'30351782019260','diners-club-carte-blanche','EUR','$7.68','NYSE'),(1458,24,'30301428594572','diners-club-carte-blanche','PEN','$7.46','NASDAQ'),(1459,58,'5602223320891905','bankcard','CNY','$3.02','NYSE'),(1460,7,'3569456189441844','jcb','PEN','$2.88','NYSE'),(1461,27,'30426350686870','diners-club-carte-blanche','CNY','$2.58','NYSE'),(1462,97,'5020932512460394','maestro','IDR','$2.53','NASDAQ'),(1463,76,'3531583292131106','jcb','XAF','$1.56','NYSE'),(1464,18,'4405766286060388','visa-electron','MXN','$6.22','NYSE'),(1465,67,'3544294085668628','jcb','KWD','$8.44','NYSE'),(1466,98,'30505963175783','diners-club-carte-blanche','RUB','$1.49','NASDAQ'),(1467,24,'5602215292590317','china-unionpay','IDR','$7.39','NASDAQ'),(1468,61,'50383588618137034','maestro','CNY','$8.57','NASDAQ'),(1469,41,'3559143718541722','jcb','SEK','$1.87','NYSE'),(1470,44,'3543528509885768','jcb','PHP','$7.16','NYSE'),(1471,67,'6383676344307591','instapayment','EUR','$3.22','NYSE'),(1472,81,'6771392967508206','laser','CNY','$0.62','NASDAQ'),(1473,41,'3530686954309703','jcb','ALL','$4.84','NYSE'),(1474,62,'3544992584564517','jcb','USD','$4.31','NYSE'),(1475,6,'3542312120758758','jcb','CNY','$5.12','NYSE'),(1476,27,'3578167919920051','jcb','PLN','$7.49','NASDAQ'),(1477,13,'3547031270868432','jcb','ARS','$7.80','NYSE'),(1478,16,'4405603939057364','visa-electron','CNY','$3.28','NYSE'),(1479,56,'5388934472169250','mastercard','PEN','$0.41','NASDAQ'),(1480,82,'4903465017083022031','switch','SEK','$5.75','NASDAQ'),(1481,78,'3583450173977261','jcb','SEK','$7.94','NASDAQ'),(1482,7,'201817455425169','diners-club-enroute','EUR','$1.52','NYSE'),(1483,11,'3577551843736488','jcb','USD','$3.38','NASDAQ'),(1484,15,'3584932573278456','jcb','MYR','$9.30','NYSE'),(1485,62,'5048370427989546','mastercard','BRL','$0.24','NASDAQ'),(1486,9,'337941966495524','americanexpress','CNY','$0.88','NASDAQ'),(1487,53,'6767331345660985091','solo','IDR','$3.44','NYSE'),(1488,19,'3580226232174964','jcb','CNY','$9.94','NYSE'),(1489,21,'30243620241323','diners-club-carte-blanche','CNY','$4.43','NYSE'),(1490,16,'30559713524154','diners-club-carte-blanche','PEN','$2.28','NYSE'),(1491,36,'633110924498796941','switch','IDR','$9.25','NYSE'),(1492,65,'3545469771463380','jcb','EUR','$5.76','NYSE'),(1493,5,'3560297941134940','jcb','MDL','$0.76','NYSE'),(1494,95,'30460826361263','diners-club-carte-blanche','ARS','$5.21','NYSE'),(1495,24,'3570007696093383','jcb','SEK','$6.07','NASDAQ'),(1496,69,'3550786166477465','jcb','IDR','$5.38','NASDAQ'),(1497,4,'3557418446843190','jcb','PHP','$8.49','NASDAQ'),(1498,2,'374622835218024','americanexpress','IDR','$8.19','NASDAQ'),(1499,95,'3545594375285226','jcb','EUR','$3.72','NASDAQ'),(1500,93,'3531875748688741','jcb','EUR','$9.05','NYSE'),(1501,12,'6771646990900903883','laser','CNY','$3.92','NASDAQ'),(1502,45,'3542168565647199','jcb','USD','$0.82','NYSE'),(1503,16,'4936704596602357','switch','PHP','$3.34','NASDAQ'),(1504,90,'3584455656298811','jcb','KRW','$2.03','NYSE'),(1505,4,'201934264139350','diners-club-enroute','SEK','$2.15','NASDAQ'),(1506,71,'201474636218913','diners-club-enroute','CNY','$1.05','NASDAQ'),(1507,63,'3551998176324087','jcb','CNY','$9.06','NASDAQ'),(1508,89,'5602257720686580','bankcard','UAH','$1.01','NASDAQ'),(1509,15,'3589494079620959','jcb','BRL','$9.11','NYSE'),(1510,97,'375389705627853','americanexpress','GBP','$4.91','NYSE'),(1511,50,'3583103335805363','jcb','HRK','$8.43','NYSE'),(1512,37,'3552584404714775','jcb','MAD','$4.63','NYSE'),(1513,79,'4844298019298886','visa-electron','XAF','$6.16','NYSE'),(1514,20,'3573181514860500','jcb','JPY','$9.83','NASDAQ'),(1515,65,'3533154172671138','jcb','IDR','$1.27','NASDAQ'),(1516,46,'3574264098694799','jcb','PLN','$0.40','NASDAQ'),(1517,65,'3577348899935381','jcb','RUB','$7.47','NASDAQ'),(1518,82,'3532643266999828','jcb','RUB','$3.21','NYSE'),(1519,17,'3575601714267535','jcb','EUR','$7.82','NASDAQ'),(1520,104,'5276581602602364','VISA','PLN','$9.96','NASDAQ'),(1521,39,'3531568444060428','jcb','CNY','$4.60','NYSE'),(1522,14,'3585576958910388','jcb','CNY','$3.03','NASDAQ'),(1523,16,'3580239618927269','jcb','CNY','$9.67','NASDAQ'),(1524,4,'4911228271734803940','switch','CNY','$5.70','NYSE'),(1525,11,'5470481280257439','diners-club-us-ca','EUR','$4.91','NASDAQ'),(1526,37,'6380543132334950','instapayment','IDR','$1.27','NYSE'),(1527,34,'3589755295770111','jcb','EUR','$4.09','NASDAQ'),(1528,18,'3579328206145906','jcb','PAB','$5.19','NASDAQ'),(1529,84,'30413203129407','diners-club-carte-blanche','RUB','$0.06','NASDAQ'),(1530,14,'3565592764609845','jcb','PHP','$8.30','NYSE'),(1531,63,'5007660127545831','mastercard','RSD','$9.07','NASDAQ'),(1532,52,'5602241559295045712','china-unionpay','NOK','$0.34','NYSE'),(1533,61,'5048378259850595','mastercard','CNY','$7.20','NYSE'),(1534,2,'5602214348400910','bankcard','EUR','$5.48','NASDAQ'),(1535,10,'4041594914759241','visa','IDR','$8.24','NYSE'),(1536,96,'3561680370438313','jcb','EUR','$8.92','NASDAQ'),(1537,37,'3541847201315300','jcb','THB','$1.76','NYSE'),(1538,58,'3537643613312068','jcb','CNY','$9.00','NASDAQ'),(1539,22,'201711943551167','diners-club-enroute','PLN','$1.97','NYSE'),(1540,98,'5411748896595390','diners-club-us-ca','CNY','$7.05','NASDAQ'),(1541,46,'3538095799240135','jcb','ALL','$3.66','NASDAQ'),(1542,12,'676300168136435012','maestro','CNY','$8.98','NYSE'),(1543,95,'6394921694806546','instapayment','RSD','$2.49','NYSE'),(1544,28,'3561074113522312','jcb','ILS','$1.95','NASDAQ'),(1545,48,'3568382332523737','jcb','JOD','$4.36','NYSE'),(1546,40,'589300575400444428','maestro','EUR','$6.70','NASDAQ'),(1547,54,'30548140185820','diners-club-carte-blanche','IDR','$1.84','NYSE'),(1548,100,'560223473706863753','china-unionpay','IDR','$1.42','NASDAQ'),(1549,95,'3557468870696432','jcb','NGN','$4.50','NASDAQ'),(1550,85,'3546621700859828','jcb','EUR','$3.32','NASDAQ'),(1551,87,'5458850322519079','mastercard','SEK','$5.26','NYSE'),(1552,44,'5002356112317907','mastercard','CNY','$3.86','NASDAQ'),(1553,89,'5020391506402812164','maestro','IDR','$3.85','NYSE'),(1554,9,'342236219975445','americanexpress','CNY','$4.09','NYSE'),(1555,61,'5139550086845614','mastercard','XOF','$7.49','NASDAQ'),(1556,99,'4911389890044552320','switch','PHP','$4.89','NASDAQ'),(1557,61,'3554738448366228','jcb','IDR','$9.76','NYSE'),(1558,74,'5020120389227571','maestro','COP','$7.52','NYSE'),(1559,100,'3558443210992824','jcb','GTQ','$9.04','NYSE'),(1560,21,'4905506393161827','switch','JPY','$6.18','NASDAQ'),(1561,67,'5334876532464210','mastercard','BRL','$7.41','NYSE'),(1562,10,'5100134803659031','mastercard','EUR','$8.92','NASDAQ'),(1563,86,'4017958196289','visa','IDR','$4.37','NYSE'),(1564,23,'5007664627434579','mastercard','CNY','$7.87','NASDAQ'),(1565,66,'3549305596937453','jcb','RUB','$4.50','NYSE'),(1566,29,'3545575346197509','jcb','CNY','$2.50','NASDAQ'),(1567,20,'3538498378965132','jcb','KMF','$2.38','NYSE'),(1568,94,'201765803396774','diners-club-enroute','RUB','$0.21','NYSE'),(1569,92,'5602247607492012','bankcard','TZS','$7.04','NASDAQ'),(1570,21,'3539204590287100','jcb','ALL','$9.39','NASDAQ'),(1571,11,'3580658062975062','jcb','EUR','$6.23','NASDAQ'),(1572,36,'372301914724044','americanexpress','RSD','$9.19','NYSE'),(1573,51,'201472112136583','diners-club-enroute','RUB','$0.57','NASDAQ'),(1574,22,'3553447719198218','jcb','CNY','$1.26','NASDAQ'),(1575,54,'4936399236503550','switch','CAD','$1.06','NYSE'),(1576,67,'6399110930871390','instapayment','EUR','$4.92','NASDAQ'),(1577,91,'3566256883024265','jcb','USD','$5.44','NYSE'),(1578,18,'3570801552305679','jcb','CNY','$6.82','NASDAQ'),(1579,96,'3533854359440708','jcb','COP','$0.07','NYSE'),(1580,57,'3587648715094638','jcb','USD','$3.06','NYSE'),(1581,89,'6331108640800338','switch','CNY','$7.51','NYSE'),(1582,78,'3586088979776466','jcb','PEN','$5.64','NASDAQ'),(1583,89,'5260700459386065','mastercard','CUP','$0.90','NYSE'),(1584,43,'3564702510943882','jcb','BRL','$2.78','NASDAQ'),(1585,91,'3551677859302012','jcb','CNY','$5.89','NASDAQ'),(1586,13,'6304196773744194','laser','CNY','$3.95','NASDAQ'),(1587,77,'6331102984413453296','switch','EUR','$1.86','NYSE'),(1588,51,'3542468557793724','jcb','CNY','$9.32','NYSE'),(1589,59,'5602220923957190','bankcard','IDR','$7.46','NYSE'),(1590,60,'3564850589355825','jcb','CNY','$1.03','NYSE'),(1591,62,'3569194900736123','jcb','PHP','$9.94','NASDAQ'),(1592,68,'4017951107176','visa','PHP','$1.21','NYSE'),(1593,72,'3557212731144491','jcb','ARS','$4.33','NASDAQ'),(1594,85,'3538206683384588','jcb','USD','$8.79','NYSE'),(1595,6,'3542819455909327','jcb','EUR','$4.62','NASDAQ'),(1596,19,'6709614039556105951','laser','ARS','$1.18','NYSE'),(1597,29,'676265084779037747','maestro','RUB','$3.57','NASDAQ'),(1598,39,'676161900497982804','maestro','AZN','$4.83','NYSE'),(1599,94,'4844178611292067','visa-electron','PEN','$0.46','NASDAQ'),(1600,8,'3529946161882527','jcb','RUB','$1.83','NYSE'),(1601,35,'3565277927965413','jcb','ALL','$8.73','NASDAQ'),(1602,28,'4041591039540','visa','IDR','$9.61','NASDAQ'),(1603,60,'3589567824027586','jcb','RUB','$7.94','NASDAQ'),(1604,95,'633327201280320639','switch','CNY','$4.62','NYSE'),(1605,88,'3584947555219716','jcb','IDR','$3.28','NYSE'),(1606,24,'5602231917160790','bankcard','TND','$2.78','NYSE'),(1607,26,'201608031445205','diners-club-enroute','PLN','$0.22','NYSE'),(1608,13,'3587780020732709','jcb','ZAR','$6.43','NASDAQ'),(1609,87,'3554177536717994','jcb','BRL','$8.86','NASDAQ'),(1610,17,'3541663248623386','jcb','VEF','$3.21','NYSE'),(1611,77,'3538549463135799','jcb','CNY','$1.06','NASDAQ'),(1612,77,'3562528816429710','jcb','JPY','$9.62','NASDAQ'),(1613,57,'3547998700251266','jcb','IDR','$0.12','NASDAQ'),(1614,56,'5602258294869396','china-unionpay','CNY','$7.43','NASDAQ'),(1615,18,'3533971782746939','jcb','VND','$6.06','NYSE'),(1616,68,'6333682293949319','switch','CNY','$8.71','NASDAQ'),(1617,70,'3586092237078665','jcb','RUB','$6.59','NYSE'),(1618,61,'4405957990287702','visa-electron','IDR','$8.11','NYSE'),(1619,94,'3541847574372425','jcb','MYR','$5.95','NASDAQ'),(1620,96,'5558026467273884','mastercard','CNY','$7.26','NYSE'),(1621,54,'6388278296080204','instapayment','DKK','$9.05','NYSE'),(1622,84,'589325230209371726','maestro','CNY','$2.82','NYSE'),(1623,94,'6387716446569155','instapayment','CNY','$3.76','NASDAQ'),(1624,55,'3544578431987793','jcb','EUR','$2.81','NASDAQ'),(1625,92,'30595907829413','diners-club-carte-blanche','RUB','$7.64','NASDAQ'),(1626,92,'3566713123833970','jcb','DKK','$4.44','NASDAQ'),(1627,70,'3537917901801101','jcb','IRR','$8.08','NASDAQ'),(1628,60,'201857593049208','diners-club-enroute','EUR','$4.52','NASDAQ'),(1629,47,'4405697390827331','visa-electron','CNY','$2.00','NYSE'),(1630,1,'3573337259936802','jcb','RSD','$9.43','NASDAQ'),(1631,85,'3535523830085139','jcb','VND','$8.07','NASDAQ'),(1632,61,'5602241480229628103','china-unionpay','MNT','$6.09','NASDAQ'),(1633,99,'374288503525676','americanexpress','USD','$4.34','NYSE'),(1634,54,'3558923439337091','jcb','RUB','$3.72','NYSE'),(1635,22,'4844463076107434','visa-electron','PHP','$5.55','NYSE'),(1636,89,'5461494361990373','diners-club-us-ca','CNY','$7.87','NYSE'),(1637,90,'373009156764458','americanexpress','CNY','$1.09','NYSE'),(1638,71,'3554839499542459','jcb','BRL','$3.56','NYSE'),(1639,18,'3569165471506152','jcb','CNY','$3.28','NASDAQ'),(1640,87,'6709899927208450','laser','EUR','$7.50','NASDAQ'),(1641,27,'3572522625984708','jcb','CNY','$4.95','NYSE'),(1642,60,'3584697704115659','jcb','EGP','$8.51','NASDAQ'),(1643,71,'5641820230278980153','switch','PLN','$9.04','NASDAQ'),(1644,100,'3562479447331661','jcb','GHS','$0.30','NASDAQ'),(1645,45,'5602222158242801','bankcard','CNY','$7.80','NASDAQ'),(1646,80,'3574994050343247','jcb','ARS','$7.37','NASDAQ'),(1647,56,'5100175811358314','mastercard','RUB','$4.72','NASDAQ'),(1648,35,'3581389268866587','jcb','JPY','$2.35','NASDAQ'),(1649,10,'3563434958839759','jcb','CNY','$7.30','NASDAQ'),(1650,66,'3537161693471316','jcb','CNY','$3.53','NYSE'),(1651,59,'5531069940642004','diners-club-us-ca','HNL','$4.67','NYSE'),(1652,51,'3563814458327134','jcb','PHP','$2.54','NYSE'),(1653,43,'374288360960420','americanexpress','RUB','$9.25','NASDAQ'),(1654,19,'3563642579022528','jcb','RUB','$8.46','NYSE'),(1655,87,'5602214259925850465','china-unionpay','PLN','$7.43','NASDAQ'),(1656,39,'3537254418292214','jcb','BRL','$2.05','NASDAQ'),(1657,78,'3583741172205849','jcb','EUR','$7.90','NASDAQ'),(1658,53,'3554265496995310','jcb','IDR','$5.87','NYSE'),(1659,52,'5473822137126284','mastercard','EUR','$8.65','NYSE'),(1660,66,'4175004352770955','visa-electron','CNY','$2.57','NYSE'),(1661,85,'3539517988098551','jcb','CNY','$2.39','NASDAQ'),(1662,95,'30550181292945','diners-club-carte-blanche','EUR','$8.75','NYSE'),(1663,93,'6390292867129346','instapayment','CNY','$3.27','NASDAQ'),(1664,50,'3580086798472719','jcb','CNY','$1.69','NYSE'),(1665,60,'374288221816969','americanexpress','PHP','$9.84','NYSE'),(1666,37,'3543311382512654','jcb','CNY','$5.79','NASDAQ'),(1667,11,'3563021069718715','jcb','EUR','$0.38','NASDAQ'),(1668,38,'4913392034991520','visa-electron','UAH','$8.02','NYSE'),(1669,97,'5602212345908992','bankcard','IDR','$2.03','NYSE'),(1670,58,'6334909510647090049','solo','CNY','$1.02','NYSE'),(1671,93,'5610018493387702671','china-unionpay','PLN','$9.20','NYSE'),(1672,95,'3535462064992647','jcb','CNY','$1.51','NASDAQ'),(1673,97,'58934280713233382','maestro','PHP','$1.71','NASDAQ'),(1674,32,'201666069735806','diners-club-enroute','DOP','$1.04','NASDAQ'),(1675,34,'675945895014523757','switch','IDR','$3.24','NYSE'),(1676,46,'060451150594693641','maestro','DOP','$3.48','NASDAQ'),(1677,59,'5610062886526319','bankcard','CNY','$2.39','NASDAQ'),(1678,67,'3543500212491283','jcb','SBD','$3.89','NYSE'),(1679,55,'3574444981867237','jcb','IDR','$9.95','NYSE'),(1680,49,'5893218393527135891','maestro','PEN','$1.29','NASDAQ'),(1681,99,'3531810957844131','jcb','PHP','$3.71','NASDAQ'),(1682,94,'3565155871568427','jcb','LBP','$8.99','NYSE'),(1683,74,'3567586939364045','jcb','RUB','$6.43','NASDAQ'),(1684,64,'3546066161395757','jcb','CNY','$1.60','NYSE'),(1685,39,'3580073048099708','jcb','DOP','$6.24','NASDAQ'),(1686,71,'060482154568310417','maestro','KGS','$8.63','NASDAQ'),(1687,23,'4905454287344162326','switch','HNL','$9.90','NASDAQ'),(1688,92,'5020763679596557364','maestro','RUB','$0.56','NASDAQ'),(1689,52,'4405451942410232','visa-electron','JPY','$0.99','NYSE'),(1690,89,'3551675826226348','jcb','IRR','$4.16','NASDAQ'),(1691,2,'3562959122144729','jcb','USD','$1.73','NYSE'),(1692,79,'5020235960540000','maestro','PYG','$0.75','NYSE'),(1693,85,'3559642070568041','jcb','CUP','$1.73','NASDAQ'),(1694,81,'5020241231715785','maestro','PLN','$8.19','NASDAQ'),(1695,26,'6761881253902497','maestro','RUB','$9.59','NYSE'),(1696,32,'4041598541271926','visa','IDR','$1.39','NYSE'),(1697,49,'377151628138352','americanexpress','CNY','$5.15','NYSE'),(1698,79,'5602221633039592','china-unionpay','CNY','$8.80','NASDAQ'),(1699,1,'3564954971921341','jcb','ALL','$4.53','NASDAQ'),(1700,83,'30206105549429','diners-club-carte-blanche','DOP','$2.27','NYSE'),(1701,35,'3571256922179941','jcb','CRC','$7.86','NASDAQ'),(1702,2,'3580683075454228','jcb','RSD','$8.95','NASDAQ'),(1703,52,'3560519235303141','jcb','UAH','$7.55','NYSE'),(1704,74,'633110776581569290','switch','CNY','$8.11','NYSE'),(1705,28,'4405092604897181','visa-electron','IDR','$3.17','NYSE'),(1706,99,'6304154528756385','maestro','PHP','$8.52','NASDAQ'),(1707,40,'5007661545021488','mastercard','CNY','$5.86','NYSE'),(1708,84,'4917433072834002','visa-electron','CNY','$9.41','NASDAQ'),(1709,55,'3585009870628029','jcb','RSD','$9.48','NASDAQ'),(1710,98,'3565261094127460','jcb','BRL','$1.36','NASDAQ'),(1711,87,'30197256943216','diners-club-carte-blanche','IDR','$0.24','NYSE'),(1712,92,'30012714893368','diners-club-carte-blanche','IDR','$0.34','NASDAQ'),(1713,80,'3568594780855110','jcb','PHP','$9.79','NYSE'),(1714,33,'5363287962235787','mastercard','IDR','$4.47','NASDAQ'),(1715,51,'67633492079260967','maestro','COP','$3.33','NASDAQ'),(1716,3,'30480207560762','diners-club-carte-blanche','EUR','$4.11','NYSE'),(1717,58,'6771116691701979905','laser','CLP','$6.75','NASDAQ'),(1718,62,'5451695176344935','diners-club-us-ca','RUB','$8.92','NYSE'),(1719,58,'3564054947339304','jcb','IDR','$3.24','NYSE'),(1720,60,'4508115838788086','visa-electron','CNY','$3.17','NYSE'),(1721,11,'3560557491867581','jcb','PHP','$7.13','NYSE'),(1722,98,'560225689900683469','china-unionpay','DOP','$4.57','NYSE'),(1723,15,'58937942158839166','maestro','GTQ','$2.70','NASDAQ'),(1724,59,'372301172336242','americanexpress','KZT','$6.17','NYSE'),(1725,68,'3536277198893514','jcb','PHP','$3.21','NYSE'),(1726,20,'5048379988534328','mastercard','BRL','$8.25','NYSE'),(1727,8,'5610786319163551','bankcard','LYD','$8.52','NYSE'),(1728,59,'30505703943441','diners-club-carte-blanche','EUR','$7.76','NASDAQ'),(1729,88,'6389468261787961','instapayment','PHP','$9.46','NYSE'),(1730,26,'3535037901270439','jcb','SEK','$0.39','NASDAQ'),(1731,80,'30197730666383','diners-club-carte-blanche','EUR','$3.12','NASDAQ'),(1732,31,'3564450495382003','jcb','IDR','$9.32','NYSE'),(1733,84,'5602248229768268','china-unionpay','CNY','$3.15','NYSE'),(1734,68,'5002351065656476','mastercard','IDR','$8.75','NYSE'),(1735,67,'3587379470845432','jcb','PEN','$0.61','NASDAQ'),(1736,24,'5602219456047114','china-unionpay','CNY','$3.47','NYSE'),(1737,15,'3569786940779821','jcb','COP','$2.04','NYSE'),(1738,62,'4844123625587201','visa-electron','EUR','$6.42','NYSE'),(1739,46,'3548801657887034','jcb','JPY','$6.94','NYSE'),(1740,48,'560221291230693526','china-unionpay','PHP','$7.58','NYSE'),(1741,94,'5602252544990037','bankcard','RUB','$8.16','NASDAQ'),(1742,83,'564182665894775613','switch','BDT','$9.89','NASDAQ'),(1743,3,'3534770304685008','jcb','IDR','$5.69','NASDAQ'),(1744,87,'5428909518610295','mastercard','PLN','$4.82','NASDAQ'),(1745,100,'3558618944482180','jcb','TZS','$2.89','NYSE'),(1746,41,'5168763985518711','mastercard','IDR','$7.06','NYSE'),(1747,97,'3530685818499767','jcb','PHP','$8.35','NYSE'),(1748,10,'67069938876654847','laser','CNY','$0.67','NASDAQ'),(1749,23,'491167539886265641','switch','JPY','$6.55','NYSE'),(1750,31,'5528290850751024','mastercard','AMD','$3.79','NASDAQ'),(1751,42,'3541172718433771','jcb','CNY','$9.71','NYSE'),(1752,64,'3563116392657372','jcb','KRW','$8.23','NASDAQ'),(1753,59,'3542149057335378','jcb','EUR','$6.77','NASDAQ'),(1754,4,'5602210623103559','bankcard','PHP','$0.70','NASDAQ'),(1755,44,'50209161838557183','maestro','EUR','$9.67','NASDAQ'),(1756,31,'3558442837460215','jcb','CLP','$0.69','NASDAQ'),(1757,11,'3534341960302518','jcb','IDR','$2.46','NASDAQ'),(1758,11,'50389544895123720','maestro','EUR','$7.63','NASDAQ'),(1759,69,'5610124532834990','bankcard','CNY','$0.76','NASDAQ'),(1760,20,'06047262173710508','maestro','BWP','$9.94','NASDAQ'),(1761,16,'5602228333308255362','china-unionpay','CNY','$6.94','NYSE'),(1762,6,'67597844983490441','maestro','KES','$8.60','NASDAQ'),(1763,92,'5100178348620784','mastercard','RUB','$5.70','NASDAQ'),(1764,50,'3565143157309732','jcb','PHP','$3.74','NASDAQ'),(1765,23,'3576320434989133','jcb','HRK','$1.01','NYSE'),(1766,62,'4017950052957619','visa','ALL','$1.04','NYSE'),(1767,38,'3543772200690768','jcb','TZS','$0.69','NASDAQ'),(1768,12,'5326582098929196','mastercard','SEK','$7.33','NASDAQ'),(1769,91,'3529140406776427','jcb','EUR','$3.40','NYSE'),(1770,12,'201875574649192','diners-club-enroute','EUR','$0.83','NYSE'),(1771,45,'3551362227207785','jcb','EUR','$7.34','NYSE'),(1772,62,'5038749253122144','maestro','NGN','$3.53','NYSE'),(1773,90,'3579544241909201','jcb','MDL','$9.26','NYSE'),(1774,38,'5108758624571769','mastercard','CNY','$3.84','NYSE'),(1775,84,'6370876248159081','instapayment','EUR','$4.90','NYSE'),(1776,54,'6388666791643296','instapayment','RUB','$5.98','NYSE'),(1777,72,'3549308840890619','jcb','RUB','$8.79','NASDAQ'),(1778,67,'630449872556853708','maestro','PEN','$4.94','NYSE'),(1779,89,'4508561736963323','visa-electron','GMD','$5.59','NYSE'),(1780,76,'3545812478287737','jcb','EUR','$3.66','NYSE'),(1781,75,'30139265989020','diners-club-carte-blanche','IDR','$4.00','NYSE'),(1782,90,'3536288152844484','jcb','PLN','$7.49','NASDAQ'),(1783,92,'3533290016298611','jcb','PHP','$5.03','NASDAQ'),(1784,40,'3571890577321091','jcb','SYP','$5.93','NASDAQ'),(1785,72,'3554019464608417','jcb','EUR','$7.57','NASDAQ'),(1786,90,'4041375658172654','visa','IDR','$2.06','NYSE'),(1787,84,'3556692617636655','jcb','IDR','$4.11','NYSE'),(1788,21,'3540745715814407','jcb','JPY','$3.57','NASDAQ'),(1789,21,'5048372082256369','mastercard','IDR','$8.76','NYSE'),(1790,4,'4911795785927985514','switch','PHP','$1.38','NYSE'),(1791,37,'5602255185320380','bankcard','JPY','$6.53','NASDAQ'),(1792,76,'3586710991405713','jcb','EGP','$1.14','NASDAQ'),(1793,63,'3568469602969003','jcb','COP','$4.45','NYSE'),(1794,63,'3555410645149935','jcb','SEK','$6.66','NYSE'),(1795,23,'3573393855257135','jcb','MXN','$0.15','NYSE'),(1796,67,'6377606247260231','instapayment','IDR','$4.07','NYSE'),(1797,23,'5602243549053525','bankcard','USD','$6.06','NASDAQ'),(1798,84,'5423762942903165','diners-club-us-ca','MNT','$2.22','NYSE'),(1799,71,'374283577297344','americanexpress','CVE','$6.80','NYSE'),(1800,3,'3535933828816595','jcb','PLN','$1.96','NASDAQ'),(1801,78,'3539440492650819','jcb','PHP','$1.26','NASDAQ'),(1802,84,'3565836739310272','jcb','RSD','$5.45','NASDAQ'),(1803,84,'3547456464674421','jcb','RUB','$4.87','NASDAQ'),(1804,13,'374288851171362','americanexpress','MGA','$0.56','NASDAQ'),(1805,45,'5893525498124192','maestro','IDR','$0.41','NYSE'),(1806,12,'3528020135115215','jcb','IDR','$2.33','NASDAQ'),(1807,37,'349609486169681','americanexpress','DOP','$0.28','NASDAQ'),(1808,88,'201764228970552','diners-club-enroute','CNY','$9.76','NYSE'),(1809,84,'3534601097297190','jcb','IDR','$7.40','NASDAQ'),(1810,61,'341733987485210','americanexpress','EUR','$2.22','NYSE'),(1811,84,'5641825825310265','switch','BDT','$6.54','NASDAQ'),(1812,5,'6761662385228618018','maestro','ARS','$2.14','NYSE'),(1813,55,'3583597346255908','jcb','RUB','$3.57','NASDAQ'),(1814,11,'3545417949842290','jcb','IDR','$8.05','NASDAQ'),(1815,57,'3580050047037467','jcb','BRL','$1.66','NYSE'),(1816,25,'337941196789092','americanexpress','CNY','$9.05','NASDAQ'),(1817,96,'201591557074957','diners-club-enroute','EUR','$6.70','NYSE'),(1818,63,'30048821309823','diners-club-carte-blanche','PLN','$5.20','NYSE'),(1819,45,'3558720447516397','jcb','PLN','$4.29','NASDAQ'),(1820,17,'5602234827730827','bankcard','TZS','$5.04','NYSE'),(1821,31,'3587554851322728','jcb','JOD','$3.00','NASDAQ'),(1822,1,'3556522640601204','jcb','CNY','$0.96','NYSE'),(1823,71,'3588736681137793','jcb','EUR','$0.71','NYSE'),(1824,16,'374622150068392','americanexpress','IDR','$1.84','NYSE'),(1825,80,'6763960410531650','maestro','CZK','$6.31','NYSE'),(1826,4,'5048377351593566','mastercard','CNY','$5.05','NASDAQ'),(1827,36,'3528055918377467','jcb','IDR','$9.26','NYSE'),(1828,58,'5602231402044103','bankcard','PEN','$8.91','NASDAQ'),(1829,28,'4913028163773004','visa-electron','PHP','$2.82','NYSE'),(1830,69,'6334950033311282253','solo','RUB','$4.84','NYSE'),(1831,8,'633403947660108138','solo','BRL','$8.81','NASDAQ'),(1832,93,'3574985322005879','jcb','ALL','$0.10','NYSE'),(1833,79,'3533307177046322','jcb','IDR','$8.37','NASDAQ'),(1834,96,'56022478312642568','china-unionpay','IDR','$5.78','NASDAQ'),(1835,9,'56022370213235115','china-unionpay','CNY','$1.60','NYSE'),(1836,27,'6372365615168899','instapayment','CAD','$4.17','NYSE'),(1837,46,'3552389965500765','jcb','IDR','$9.62','NASDAQ'),(1838,56,'3564725533539809','jcb','SEK','$4.25','NASDAQ'),(1839,95,'3552623987198947','jcb','CNY','$4.74','NYSE'),(1840,81,'5452914388139390','mastercard','EUR','$5.92','NYSE'),(1841,85,'3574112984505217','jcb','MXN','$3.10','NASDAQ'),(1842,17,'5602216795739164674','china-unionpay','UAH','$3.49','NASDAQ'),(1843,57,'3588561716716837','jcb','NGN','$6.22','NYSE'),(1844,4,'3569765823621888','jcb','AUD','$6.30','NASDAQ'),(1845,48,'3553312950725063','jcb','RUB','$2.92','NYSE'),(1846,5,'5610411415450519','bankcard','TZS','$9.73','NASDAQ'),(1847,13,'376148965833737','americanexpress','EUR','$4.48','NYSE'),(1848,86,'3540441856223992','jcb','SEK','$4.58','NASDAQ'),(1849,67,'3534696358430951','jcb','JMD','$6.69','NYSE'),(1850,97,'3532360624042155','jcb','CNY','$0.64','NASDAQ'),(1851,65,'633314947418705456','switch','EUR','$9.26','NASDAQ'),(1852,49,'3568509451755316','jcb','CNY','$3.07','NYSE'),(1853,23,'564182099738319224','switch','CNY','$5.89','NYSE'),(1854,48,'201435289597556','diners-club-enroute','PLN','$0.23','NYSE'),(1855,56,'0604819689313149452','maestro','USD','$6.09','NYSE'),(1856,66,'30209116751885','diners-club-carte-blanche','COP','$4.10','NYSE'),(1857,92,'346287685714772','americanexpress','SEK','$7.12','NYSE'),(1858,28,'201555000753566','diners-club-enroute','PHP','$0.42','NYSE'),(1859,40,'6378402770892726','instapayment','EUR','$3.82','NYSE'),(1860,29,'3570144765587415','jcb','THB','$9.44','NASDAQ'),(1861,8,'3587630691161581','jcb','EUR','$7.93','NYSE'),(1862,55,'3558699982859844','jcb','ISK','$5.59','NASDAQ'),(1863,58,'3551156358894753','jcb','PLN','$4.16','NASDAQ'),(1864,45,'670668574071626672','laser','EUR','$7.14','NYSE'),(1865,63,'340473819231471','americanexpress','RUB','$0.00','NYSE'),(1866,84,'3581895500776715','jcb','IDR','$8.39','NYSE'),(1867,67,'676324587587076599','maestro','IDR','$8.62','NASDAQ'),(1868,2,'3528008722471562','jcb','CNY','$0.18','NYSE'),(1869,15,'3554605766906341','jcb','CNY','$9.87','NYSE'),(1870,12,'3582922914498378','jcb','CNY','$0.40','NYSE'),(1871,31,'5602240252414761','bankcard','VND','$5.10','NASDAQ'),(1872,12,'201928830588884','diners-club-enroute','EUR','$4.96','NYSE'),(1873,96,'5550504019511959','mastercard','BRL','$8.91','NYSE'),(1874,19,'3549994915000687','jcb','GEL','$9.84','NYSE'),(1875,71,'5010128671126023','mastercard','CLP','$9.20','NYSE'),(1876,13,'3535440207561750','jcb','USD','$9.89','NYSE'),(1877,90,'5108752229761784','mastercard','CNY','$4.33','NASDAQ'),(1878,96,'5100131498639179','mastercard','RUB','$0.53','NASDAQ'),(1879,9,'4026181270258049','visa-electron','EUR','$8.25','NYSE'),(1880,59,'3557335410297676','jcb','NGN','$4.85','NYSE'),(1881,48,'5100134461259389','mastercard','THB','$1.63','NASDAQ'),(1882,36,'5100146667811656','mastercard','PHP','$8.15','NYSE'),(1883,47,'3564495373631732','jcb','IDR','$9.23','NASDAQ'),(1884,91,'5038329044734035089','maestro','NGN','$3.78','NYSE'),(1885,81,'3571156726468708','jcb','IQD','$6.87','NYSE'),(1886,1,'670961556870822762','laser','CNY','$4.65','NASDAQ'),(1887,97,'5610561333090314144','china-unionpay','PHP','$6.83','NYSE'),(1888,53,'3550029673803422','jcb','PLN','$2.89','NASDAQ'),(1889,35,'4905543603498541','switch','IQD','$9.97','NYSE'),(1890,81,'3538046615907910','jcb','CNY','$8.27','NYSE'),(1891,94,'5305712437667323','mastercard','EUR','$2.11','NASDAQ'),(1892,4,'3566411046787239','jcb','PLN','$4.15','NASDAQ'),(1893,43,'676153087969495521','maestro','PHP','$1.31','NASDAQ'),(1894,42,'3547801710136891','jcb','MMK','$7.03','NASDAQ'),(1895,78,'3571589684315182','jcb','NIO','$2.12','NYSE'),(1896,73,'3576965683289971','jcb','UGX','$3.85','NASDAQ'),(1897,51,'30443192764880','diners-club-carte-blanche','ALL','$8.68','NASDAQ'),(1898,52,'4903449174680230','switch','EUR','$8.44','NYSE'),(1899,83,'3573154527758060','jcb','IDR','$4.27','NYSE'),(1900,49,'5602256322278978','china-unionpay','RUB','$1.17','NASDAQ'),(1901,50,'5602250705611491','bankcard','UAH','$0.77','NYSE'),(1902,82,'3548166445561287','jcb','IDR','$4.29','NASDAQ'),(1903,90,'3555128395158688','jcb','MNT','$5.65','NYSE'),(1904,100,'4041378017974224','visa','CNY','$6.48','NYSE'),(1905,43,'3578685979510843','jcb','IDR','$0.10','NASDAQ'),(1906,27,'3588755738333692','jcb','RUB','$0.20','NASDAQ'),(1907,70,'3539706744358579','jcb','RUB','$8.19','NASDAQ'),(1908,67,'56022168353048599','china-unionpay','EUR','$7.25','NYSE'),(1909,72,'3575954295912809','jcb','ISK','$8.30','NYSE'),(1910,60,'5565911643315587','mastercard','CNY','$4.44','NASDAQ'),(1911,57,'3566599637716292','jcb','BGN','$3.84','NASDAQ'),(1912,89,'6333612005774981185','switch','PLN','$2.36','NASDAQ'),(1913,50,'3548547369695922','jcb','CNY','$8.59','NYSE'),(1914,46,'4175007982518835','visa-electron','USD','$0.44','NASDAQ'),(1915,20,'374288710000042','americanexpress','THB','$7.68','NASDAQ'),(1916,63,'5602247465404471','china-unionpay','CZK','$7.26','NYSE'),(1917,58,'5610697450758145292','china-unionpay','PHP','$8.52','NASDAQ'),(1918,80,'4041375856064315','visa','IDR','$5.35','NASDAQ'),(1919,25,'3562553023585781','jcb','EUR','$5.02','NASDAQ'),(1920,13,'5602246523427847','bankcard','IDR','$0.73','NASDAQ'),(1921,64,'3588928047267857','jcb','UAH','$5.44','NASDAQ'),(1922,52,'3589119026539180','jcb','GHS','$6.13','NASDAQ'),(1923,93,'4175005247629611','visa-electron','GBP','$0.47','NASDAQ'),(1924,68,'3565830901730516','jcb','EUR','$2.81','NASDAQ'),(1925,28,'5384415573945453','mastercard','THB','$6.09','NASDAQ'),(1926,8,'3529126202281696','jcb','IDR','$6.36','NYSE'),(1927,16,'30387778099627','diners-club-carte-blanche','IDR','$3.81','NYSE'),(1928,25,'3561136765832735','jcb','BRL','$7.40','NASDAQ'),(1929,31,'3531055966430924','jcb','IDR','$7.73','NYSE'),(1930,63,'491134321880209242','switch','PHP','$8.78','NASDAQ'),(1931,67,'4905754572219392','visa','RUB','$5.54','NASDAQ'),(1932,44,'5108759959949786','mastercard','IDR','$0.75','NYSE'),(1933,90,'3555268641637869','jcb','MRO','$2.40','NASDAQ'),(1934,69,'201934038699150','diners-club-enroute','EUR','$3.75','NASDAQ'),(1935,74,'6767614456965738','solo','ETB','$1.23','NASDAQ'),(1936,20,'3551919953463732','jcb','IDR','$7.81','NASDAQ'),(1937,65,'6762649415930707951','maestro','CNY','$2.48','NYSE'),(1938,20,'676347601811708316','maestro','XOF','$2.59','NYSE'),(1939,95,'340337385561977','americanexpress','EUR','$2.09','NASDAQ'),(1940,48,'6331109904679673','switch','XCD','$9.63','NYSE'),(1941,91,'201472770879532','diners-club-enroute','PLN','$1.52','NASDAQ'),(1942,34,'3568089022840400','jcb','PHP','$6.29','NYSE'),(1943,73,'5610841030943037','bankcard','PHP','$5.37','NASDAQ'),(1944,11,'3588831369232899','jcb','CNY','$4.53','NYSE'),(1945,64,'3550553990879096','jcb','ARS','$1.16','NASDAQ'),(1946,62,'5485394319916581','mastercard','USD','$6.48','NASDAQ'),(1947,14,'374283181636234','americanexpress','EUR','$0.29','NASDAQ'),(1948,43,'3543066993509677','jcb','MAD','$6.42','NYSE'),(1949,78,'337941588927052','americanexpress','IDR','$0.49','NYSE'),(1950,16,'501805533162453876','maestro','UAH','$3.06','NASDAQ'),(1951,42,'5641827547392021025','switch','PHP','$9.96','NYSE'),(1952,78,'30082652338148','diners-club-carte-blanche','EUR','$5.33','NASDAQ'),(1953,42,'3586739396192725','jcb','IDR','$1.90','NASDAQ'),(1954,52,'3563620433240965','jcb','ZWL','$8.28','NASDAQ'),(1955,70,'3580811354612170','jcb','PHP','$3.22','NASDAQ'),(1956,5,'3557082620727288','jcb','BRL','$4.96','NYSE'),(1957,69,'3540857504234273','jcb','RUB','$9.75','NYSE'),(1958,76,'5010129478559499','mastercard','RSD','$9.94','NASDAQ'),(1959,9,'5602234675170571','bankcard','PLN','$6.83','NYSE'),(1960,58,'3577963101101844','jcb','RUB','$4.41','NYSE'),(1961,53,'3558712678351271','jcb','CNY','$1.54','NYSE'),(1962,10,'5409660244994569','diners-club-us-ca','CNY','$4.43','NYSE'),(1963,43,'50209619183846741','maestro','PHP','$5.67','NYSE'),(1964,104,'5276581602602364','VISA','PLN','$6.50','NASDAQ'),(1965,44,'337941411708216','americanexpress','NGN','$5.75','NASDAQ'),(1966,23,'0604023702111230','maestro','EUR','$1.73','NASDAQ'),(1967,1,'3539799522343038','jcb','JPY','$0.49','NASDAQ'),(1968,56,'3566874214747642','jcb','COP','$3.24','NYSE'),(1969,46,'3547231418446022','jcb','VND','$9.07','NASDAQ'),(1970,24,'3572654767114263','jcb','CNY','$8.86','NYSE'),(1971,75,'201422460954137','diners-club-enroute','CNY','$8.04','NYSE'),(1972,13,'3560459407513153','jcb','BRL','$4.59','NYSE'),(1973,56,'676191585466966708','maestro','IDR','$1.30','NYSE'),(1974,5,'3586482345557900','jcb','CNY','$0.68','NASDAQ'),(1975,82,'5100137290629052','mastercard','NIO','$9.65','NASDAQ'),(1976,42,'3588620463460575','jcb','LKR','$7.81','NYSE'),(1977,49,'3574951069845083','jcb','EUR','$9.52','NASDAQ'),(1978,43,'3578097374035907','jcb','CNY','$6.02','NYSE'),(1979,76,'3564555802491428','jcb','IDR','$9.28','NASDAQ'),(1980,9,'30082740085370','diners-club-carte-blanche','CNY','$5.29','NYSE'),(1981,66,'3541204415919255','jcb','RUB','$0.60','NYSE'),(1982,94,'3540176541897707','jcb','PLN','$7.00','NYSE'),(1983,95,'67631476987349352','maestro','RUB','$0.96','NYSE'),(1984,38,'372810851655268','americanexpress','BRL','$3.64','NYSE'),(1985,57,'30354133731047','diners-club-carte-blanche','EUR','$1.51','NYSE'),(1986,21,'5602224392963457','bankcard','CNY','$4.78','NYSE'),(1987,34,'060408717526558771','maestro','EUR','$9.81','NASDAQ'),(1988,5,'5170121841511493','mastercard','CNY','$9.50','NYSE'),(1989,38,'564182935399662909','switch','PEN','$7.92','NASDAQ'),(1990,66,'5002357329189618','mastercard','EUR','$7.22','NYSE'),(1991,87,'3547864051701905','jcb','EUR','$0.53','NYSE'),(1992,21,'6331102279268925','switch','CNY','$9.90','NYSE'),(1993,29,'5020587100984713331','maestro','IDR','$1.48','NASDAQ'),(1994,73,'3568488606319429','jcb','BRL','$9.40','NASDAQ'),(1995,83,'3557079830174285','jcb','CZK','$7.21','NYSE'),(1996,12,'3553734256232462','jcb','CNY','$8.95','NYSE'),(1997,26,'3537299402123396','jcb','IDR','$3.50','NASDAQ'),(1998,57,'3564148245963060','jcb','CNY','$2.34','NASDAQ'),(1999,76,'30438684841022','diners-club-carte-blanche','IDR','$9.19','NASDAQ'),(2000,89,'4041596720284','visa','BRL','$9.17','NYSE'),(2001,63,'5547062233700888','mastercard','SEK','$8.01','NYSE'),(2002,3,'3568296164524870','jcb','CNY','$5.60','NYSE'),(2003,77,'3566987885105112','jcb','EUR','$1.95','NASDAQ'),(2004,46,'374622874620833','americanexpress','USD','$2.07','NYSE'),(2005,74,'5602227765272562','bankcard','UAH','$8.10','NYSE'),(2006,86,'3560565221918889','jcb','CNY','$5.16','NYSE'),(2007,22,'3555459455913310','jcb','EGP','$4.10','NASDAQ'),(2008,50,'3571033681983510','jcb','IDR','$9.98','NASDAQ'),(2009,29,'3542733124830105','jcb','RUB','$4.35','NYSE'),(2010,2,'56022343182006353','china-unionpay','EUR','$9.15','NASDAQ'),(2011,60,'3549532180238168','jcb','IQD','$3.61','NYSE'),(2012,19,'3567191235933203','jcb','BYR','$9.54','NYSE'),(2013,27,'4905419654694199','switch','IDR','$7.35','NYSE'),(2014,27,'5007663877931979','mastercard','CNY','$3.92','NASDAQ'),(2015,10,'374288923447675','americanexpress','PHP','$6.01','NASDAQ'),(2016,8,'3546288265887956','jcb','ARS','$1.29','NASDAQ'),(2017,98,'4017958850766900','visa','CZK','$3.82','NASDAQ'),(2018,80,'4936125087999807','switch','HUF','$0.51','NYSE'),(2019,37,'3582812488831742','jcb','EUR','$7.09','NASDAQ'),(2020,10,'4581238974682','visa','EUR','$9.92','NASDAQ'),(2021,58,'3586368334409874','jcb','PLN','$8.45','NASDAQ'),(2022,60,'5602217048193396','china-unionpay','IDR','$1.17','NYSE'),(2023,89,'3536554115241948','jcb','DOP','$0.85','NASDAQ'),(2024,75,'3537815881760356','jcb','PLN','$7.01','NASDAQ'),(2025,6,'3580823639954228','jcb','CNY','$5.07','NYSE'),(2026,54,'3581842967184553','jcb','PAB','$4.31','NYSE'),(2027,94,'3580977105985460','jcb','RUB','$1.30','NASDAQ'),(2028,86,'5002355968587373','mastercard','SEK','$0.33','NYSE'),(2029,59,'3549166922435202','jcb','CNY','$4.57','NYSE'),(2030,46,'5465995877165785','diners-club-us-ca','EUR','$5.31','NASDAQ'),(2031,37,'3535614817265305','jcb','CNY','$7.76','NASDAQ'),(2032,54,'6767151723888237','solo','GTQ','$3.13','NASDAQ'),(2033,38,'374288553641464','americanexpress','CNY','$2.51','NYSE'),(2034,46,'5602252743534941','bankcard','COP','$4.48','NYSE'),(2035,3,'3539092466396513','jcb','CNY','$4.11','NASDAQ'),(2036,25,'3579015961120204','jcb','CNY','$0.84','NASDAQ'),(2037,80,'3585583587692411','jcb','EUR','$1.07','NASDAQ'),(2038,33,'3554453217129019','jcb','BRL','$3.63','NASDAQ'),(2039,21,'3582454706569745','jcb','MGA','$5.69','NYSE'),(2040,4,'201671513124532','diners-club-enroute','CNY','$6.81','NASDAQ'),(2041,90,'5602255155133060','bankcard','JPY','$5.23','NASDAQ'),(2042,9,'5007661320790091','mastercard','EUR','$3.86','NASDAQ'),(2043,47,'3528910182491420','jcb','EUR','$4.54','NASDAQ'),(2044,14,'30210810938661','diners-club-carte-blanche','CNY','$6.07','NYSE'),(2045,13,'374622471027671','americanexpress','PHP','$1.02','NASDAQ'),(2046,18,'3579528881744572','jcb','EUR','$1.58','NASDAQ'),(2047,96,'06048272553868460','maestro','DOP','$8.11','NASDAQ'),(2048,84,'5002358761310647','mastercard','CNY','$8.62','NYSE'),(2049,51,'675992938653045138','maestro','JPY','$0.94','NASDAQ'),(2050,99,'3548296454378966','jcb','CUP','$8.21','NYSE'),(2051,49,'3532259806759026','jcb','EUR','$9.20','NASDAQ'),(2052,45,'3563916846671899','jcb','CNY','$8.15','NASDAQ'),(2053,62,'5602214558453980861','china-unionpay','USD','$4.65','NASDAQ'),(2054,80,'3539027849512063','jcb','BOB','$8.34','NYSE'),(2055,32,'5610821097340343','bankcard','EUR','$5.15','NYSE'),(2056,21,'3541895928842528','jcb','DOP','$4.48','NASDAQ'),(2057,53,'3539745853911042','jcb','EUR','$8.62','NASDAQ'),(2058,45,'5602239918794137','china-unionpay','PHP','$1.53','NASDAQ'),(2059,65,'3586570019003472','jcb','CNY','$2.29','NASDAQ'),(2060,50,'201717884333838','diners-club-enroute','ILS','$1.13','NASDAQ'),(2061,68,'4903717862865283269','switch','CNY','$3.96','NYSE'),(2062,36,'337941546273466','americanexpress','CNY','$5.47','NASDAQ'),(2063,39,'372301768772701','americanexpress','CNY','$6.53','NYSE'),(2064,19,'3535065858184709','jcb','IDR','$8.89','NASDAQ'),(2065,30,'491140567316759851','switch','BRL','$0.65','NASDAQ'),(2066,68,'4175000963263810','visa-electron','CZK','$8.99','NASDAQ'),(2067,82,'3578984323026121','jcb','BOB','$1.70','NYSE'),(2068,75,'36944830936909','diners-club-international','PEN','$3.34','NASDAQ'),(2069,46,'3568594328977384','jcb','IDR','$3.28','NYSE'),(2070,41,'3557966604778699','jcb','CNY','$2.84','NYSE'),(2071,82,'6761496105499375888','maestro','IDR','$8.81','NASDAQ'),(2072,42,'5168256462187795','mastercard','KGS','$6.64','NYSE'),(2073,20,'3534282718130209','jcb','SEK','$0.89','NYSE'),(2074,17,'3568874829679071','jcb','ILS','$9.44','NASDAQ'),(2075,19,'3586341643485307','jcb','RUB','$4.54','NASDAQ'),(2076,43,'4916022533296','visa','CNY','$7.52','NYSE'),(2077,43,'343737822541531','americanexpress','EUR','$5.81','NASDAQ'),(2078,72,'493679077528478808','switch','EUR','$8.20','NYSE'),(2079,4,'3546605849585808','jcb','PHP','$7.90','NYSE'),(2080,100,'201765312572519','diners-club-enroute','CNY','$9.49','NASDAQ'),(2081,65,'3537855858731543','jcb','IDR','$3.29','NYSE'),(2082,69,'5436698829723356','diners-club-us-ca','LYD','$1.94','NYSE'),(2083,35,'3568951019606187','jcb','CNY','$4.28','NYSE'),(2084,95,'50201456198080273','maestro','EUR','$3.76','NASDAQ'),(2085,94,'5100137073025585','mastercard','PHP','$7.40','NASDAQ'),(2086,70,'3530528518708584','jcb','THB','$3.42','NYSE'),(2087,9,'3574637956391980','jcb','EUR','$0.64','NYSE'),(2088,35,'560222200479411788','china-unionpay','NGN','$7.84','NASDAQ'),(2089,69,'3531039526064670','jcb','IDR','$7.63','NYSE'),(2090,83,'5108758714475830','mastercard','IDR','$6.14','NYSE'),(2091,61,'3554281183189703','jcb','IDR','$8.57','NASDAQ'),(2092,37,'30433884534758','diners-club-carte-blanche','EUR','$3.55','NASDAQ'),(2093,13,'4017959724958228','visa','CZK','$3.54','NYSE'),(2094,6,'501889654445475335','maestro','EUR','$1.48','NYSE'),(2095,36,'633110976746434915','switch','THB','$5.95','NASDAQ'),(2096,29,'6372732244593617','instapayment','CNY','$9.43','NASDAQ'),(2097,63,'3557825495362411','jcb','RUB','$3.48','NYSE'),(2098,25,'3555865259578812','jcb','UAH','$2.55','NYSE'),(2099,4,'30054022920145','diners-club-carte-blanche','IDR','$0.79','NASDAQ'),(2100,81,'3537205191594150','jcb','PHP','$5.52','NYSE'),(2101,4,'3584455590070912','jcb','EUR','$3.21','NASDAQ'),(2102,36,'3560477626719245','jcb','CNY','$2.22','NASDAQ'),(2103,17,'5435628883468185','diners-club-us-ca','CNY','$8.16','NASDAQ'),(2104,84,'5610121057398765','bankcard','CNY','$1.48','NYSE'),(2105,6,'4041374051949651','visa','IDR','$2.56','NYSE'),(2106,3,'3546340007803716','jcb','IDR','$8.29','NYSE'),(2107,55,'3544617899412686','jcb','EUR','$0.98','NYSE'),(2108,47,'201434452561523','diners-club-enroute','BWP','$6.67','NYSE'),(2109,86,'5610292150769671','bankcard','CNY','$8.72','NYSE'),(2110,88,'6762966193672351982','maestro','CUP','$2.68','NASDAQ'),(2111,35,'3571201146934853','jcb','DKK','$6.54','NASDAQ'),(2112,43,'30530325602043','diners-club-carte-blanche','EUR','$6.24','NASDAQ'),(2113,59,'3588050084299634','jcb','RUB','$9.42','NASDAQ'),(2114,27,'3536205392732667','jcb','CNY','$3.99','NYSE'),(2115,11,'5602212111634574','bankcard','RUB','$3.69','NASDAQ'),(2116,10,'3550765201879950','jcb','PLN','$2.68','NASDAQ'),(2117,7,'6396885993959579','instapayment','ARS','$1.94','NASDAQ'),(2118,85,'6382111629975624','instapayment','USD','$1.82','NYSE'),(2119,38,'4913075493586861','visa-electron','EUR','$7.60','NYSE'),(2120,80,'5100140955926854','mastercard','CZK','$4.61','NASDAQ'),(2121,7,'5229307996302181','mastercard','MAD','$7.26','NYSE'),(2122,77,'3580484848946156','jcb','HUF','$8.78','NASDAQ'),(2123,3,'201470261023511','diners-club-enroute','PEN','$3.99','NASDAQ'),(2124,36,'6380594376496534','instapayment','ZAR','$1.19','NYSE'),(2125,89,'5007666288031313','mastercard','EUR','$9.82','NYSE'),(2126,41,'3548070844710380','jcb','BRL','$9.86','NASDAQ'),(2127,11,'4936025582591424','switch','IDR','$4.71','NASDAQ'),(2128,28,'201992225116610','diners-club-enroute','PHP','$8.75','NASDAQ'),(2129,54,'3558224063284422','jcb','RUB','$7.83','NASDAQ'),(2130,29,'5641824419550142493','switch','TZS','$7.55','NASDAQ'),(2131,16,'3562088554207729','jcb','IDR','$6.02','NASDAQ'),(2132,68,'5100142429162819','mastercard','CNY','$4.10','NYSE'),(2133,90,'3542728081395522','jcb','CNY','$9.18','NASDAQ'),(2134,94,'6331108935152502','switch','CNY','$8.47','NASDAQ'),(2135,71,'201787197633091','diners-club-enroute','CNY','$5.15','NYSE'),(2136,1,'3528553060340523','jcb','IDR','$4.96','NYSE'),(2137,32,'501814725190275920','maestro','DOP','$0.41','NYSE'),(2138,55,'6761501277623810412','maestro','CNY','$6.49','NASDAQ'),(2139,39,'3578105200194267','jcb','EUR','$5.30','NASDAQ'),(2140,42,'3540649665443722','jcb','BGN','$5.11','NYSE'),(2141,83,'30557558399427','diners-club-carte-blanche','USD','$6.43','NASDAQ'),(2142,6,'3569274164258715','jcb','RUB','$8.03','NYSE'),(2143,34,'374288942694752','americanexpress','IDR','$4.70','NASDAQ'),(2144,35,'3587726812118730','jcb','RUB','$6.40','NASDAQ'),(2145,54,'56022212434553043','china-unionpay','CNY','$1.62','NASDAQ'),(2146,64,'201939961076045','diners-club-enroute','CNY','$8.59','NYSE'),(2147,27,'201742853263840','diners-club-enroute','PLN','$4.81','NYSE'),(2148,58,'3548942714730542','jcb','CNY','$3.94','NYSE'),(2149,98,'50188353824366332','maestro','IDR','$9.82','NASDAQ'),(2150,61,'6706378147245921514','laser','IDR','$1.76','NASDAQ'),(2151,13,'201647379677326','diners-club-enroute','IDR','$6.29','NYSE'),(2152,26,'201862918652538','diners-club-enroute','PHP','$2.78','NYSE'),(2153,51,'3576919637526475','jcb','BGN','$6.52','NASDAQ'),(2154,58,'3564270066879975','jcb','CNY','$7.56','NYSE'),(2155,55,'3576754942197492','jcb','SBD','$4.72','NASDAQ'),(2156,99,'5602255449629634','bankcard','USD','$1.09','NYSE'),(2157,7,'3589909974136082','jcb','BDT','$5.78','NYSE'),(2158,75,'6334980373700365','solo','CNY','$8.45','NYSE'),(2159,26,'3536415408477641','jcb','RUB','$6.14','NASDAQ'),(2160,10,'3583892351096408','jcb','DOP','$5.18','NYSE'),(2161,81,'4041372190411690','visa','ALL','$8.11','NYSE'),(2162,47,'3554896146940791','jcb','CNY','$4.83','NASDAQ'),(2163,74,'3562384593972690','jcb','USD','$0.89','NASDAQ'),(2164,32,'3582551863262939','jcb','CZK','$2.48','NYSE'),(2165,57,'3573555104178193','jcb','RUB','$8.32','NASDAQ'),(2166,67,'3566809650560380','jcb','NOK','$1.45','NASDAQ'),(2167,18,'337941898969158','americanexpress','PHP','$7.82','NYSE'),(2168,10,'3543681120295139','jcb','USD','$4.75','NYSE'),(2169,87,'3576000593193723','jcb','CAD','$4.38','NASDAQ'),(2170,68,'5433454684294833','mastercard','MXN','$0.61','NYSE'),(2171,13,'3528890919109679','jcb','CZK','$0.38','NYSE'),(2172,30,'4917051250264733','visa-electron','PHP','$5.64','NYSE'),(2173,83,'3549970322272036','jcb','VEF','$2.89','NASDAQ'),(2174,12,'3557805297780507','jcb','EUR','$2.61','NASDAQ'),(2175,31,'5602236120715090','bankcard','LTL','$1.95','NYSE'),(2176,4,'3563202778648571','jcb','CNY','$6.18','NASDAQ'),(2177,43,'677177910520365828','laser','CNY','$0.87','NYSE'),(2178,72,'6387610968814471','instapayment','HRK','$3.22','NYSE'),(2179,73,'3583202937575257','jcb','CNY','$4.13','NASDAQ'),(2180,99,'30297905768368','diners-club-carte-blanche','RUB','$0.53','NYSE'),(2181,14,'201735246869000','diners-club-enroute','NGN','$7.92','NYSE'),(2182,64,'3540714017403442','jcb','EUR','$8.65','NYSE'),(2183,54,'5020349792589472757','maestro','KZT','$4.43','NYSE'),(2184,20,'5501690034980822','diners-club-us-ca','RUB','$7.45','NYSE'),(2185,26,'3548716732595974','jcb','CNY','$3.47','NYSE'),(2186,50,'50382164013414039','maestro','IDR','$1.21','NYSE'),(2187,58,'3559981022594402','jcb','CNY','$5.46','NYSE'),(2188,22,'3528548836819107','jcb','MUR','$7.27','NASDAQ'),(2189,8,'3537086090899134','jcb','THB','$7.73','NYSE'),(2190,6,'3542536100405705','jcb','UGX','$8.77','NYSE'),(2191,45,'3552337930293859','jcb','EUR','$9.43','NYSE'),(2192,14,'4041599904950','visa','TND','$0.39','NASDAQ'),(2193,71,'3550126874719074','jcb','LYD','$8.59','NYSE'),(2194,33,'30486150542491','diners-club-carte-blanche','AZN','$7.29','NYSE'),(2195,52,'3557922385135542','jcb','RUB','$8.31','NASDAQ'),(2196,78,'373937117891012','americanexpress','CRC','$2.21','NASDAQ'),(2197,96,'3528648928621328','jcb','CNY','$8.07','NYSE'),(2198,77,'3558669222641997','jcb','IDR','$3.95','NASDAQ'),(2199,62,'3555892669433735','jcb','CNY','$2.15','NASDAQ'),(2200,96,'372301668054044','americanexpress','PAB','$7.89','NYSE'),(2201,2,'3538512811708105','jcb','PLN','$5.64','NYSE'),(2202,82,'633110270690777358','switch','IDR','$0.24','NASDAQ'),(2203,23,'3565404492359687','jcb','CNY','$7.82','NYSE'),(2204,58,'67099826685945825','laser','PLN','$6.99','NYSE'),(2205,8,'5048371587135706','mastercard','CNY','$2.47','NASDAQ'),(2206,29,'4026945669396911','visa-electron','CAD','$7.98','NASDAQ'),(2207,17,'3551752331649114','jcb','EUR','$5.13','NYSE'),(2208,32,'372301267242826','americanexpress','EUR','$5.76','NASDAQ'),(2209,100,'4026571629794068','visa-electron','CNY','$8.16','NASDAQ'),(2210,47,'3561710190891134','jcb','RUB','$6.14','NASDAQ'),(2211,83,'3562947515870802','jcb','IDR','$9.09','NASDAQ'),(2212,32,'6331106070470528281','switch','EUR','$5.50','NASDAQ'),(2213,12,'5007667631373816','mastercard','CAD','$6.22','NASDAQ'),(2214,94,'6304112576248200','maestro','IDR','$1.38','NYSE'),(2215,63,'3548429215420641','jcb','EUR','$7.77','NASDAQ'),(2216,62,'30159967035534','diners-club-carte-blanche','CNY','$9.49','NYSE'),(2217,90,'374622625706527','americanexpress','ARS','$1.25','NYSE'),(2218,54,'4903856380589627','switch','PHP','$8.36','NASDAQ'),(2219,49,'4913374134383345','visa-electron','ARS','$0.20','NASDAQ'),(2220,17,'6383015585479845','instapayment','RUB','$7.14','NASDAQ'),(2221,27,'5602235433972026','china-unionpay','PLN','$9.40','NYSE'),(2222,95,'3543762542587822','jcb','COP','$9.61','NYSE'),(2223,29,'3564382157963335','jcb','PKR','$3.74','NYSE'),(2224,18,'3564872526927060','jcb','CNY','$3.79','NYSE'),(2225,36,'3559667305577392','jcb','JMD','$7.09','NASDAQ'),(2226,87,'30541771092449','diners-club-carte-blanche','PLN','$9.86','NYSE'),(2227,95,'3549770169506912','jcb','EUR','$5.78','NYSE'),(2228,96,'5225388711956521','mastercard','IDR','$7.37','NASDAQ'),(2229,28,'676292856621953370','maestro','CNY','$0.46','NYSE'),(2230,17,'345735784688710','americanexpress','COP','$6.06','NYSE'),(2231,20,'3564318436757825','jcb','RUB','$3.32','NYSE'),(2232,33,'3558891920221159','jcb','EUR','$3.57','NASDAQ'),(2233,32,'56022192710262743','china-unionpay','LYD','$9.30','NASDAQ'),(2234,89,'3554869356055980','jcb','RUB','$5.48','NASDAQ'),(2235,100,'3559719161379668','jcb','RUB','$4.12','NASDAQ'),(2236,53,'3589383250581611','jcb','PHP','$1.34','NASDAQ'),(2237,84,'3540022187798884','jcb','GTQ','$5.55','NASDAQ'),(2238,72,'3577972251380744','jcb','BRL','$5.16','NASDAQ'),(2239,29,'4903189252452845523','switch','BRL','$5.91','NASDAQ'),(2240,62,'6771402633360803995','laser','PLN','$3.37','NYSE'),(2241,18,'3588298672437666','jcb','EUR','$4.24','NASDAQ'),(2242,45,'201580685828160','diners-club-enroute','SEK','$5.82','NYSE'),(2243,13,'3564498759685090','jcb','CNY','$0.62','NASDAQ'),(2244,94,'5602256967929000','bankcard','IDR','$5.41','NASDAQ'),(2245,32,'3547054994636778','jcb','CNY','$9.82','NASDAQ'),(2246,44,'3529748373365592','jcb','IDR','$6.36','NASDAQ'),(2247,4,'201685945125099','diners-club-enroute','USD','$6.35','NASDAQ'),(2248,91,'3574717758762131','jcb','CNY','$6.54','NYSE'),(2249,81,'30432874829897','diners-club-carte-blanche','JPY','$6.60','NASDAQ'),(2250,64,'3533533599949500','jcb','CAD','$9.25','NASDAQ'),(2251,21,'374283504830969','americanexpress','CAD','$8.88','NASDAQ'),(2252,62,'5007666932523046','mastercard','EUR','$6.32','NASDAQ'),(2253,42,'374283762154136','americanexpress','IDR','$2.52','NASDAQ'),(2254,99,'5100148674102566','mastercard','CNY','$4.81','NASDAQ'),(2255,69,'5007667217245727','mastercard','PLN','$9.62','NASDAQ'),(2256,73,'3540115462342707','jcb','CNY','$0.72','NYSE'),(2257,96,'3557147104368485','jcb','CNY','$3.26','NASDAQ'),(2258,74,'3563708608177607','jcb','KMF','$0.80','NYSE'),(2259,28,'6304682906878010563','laser','RUB','$8.29','NASDAQ'),(2260,38,'5602228391143540','china-unionpay','IDR','$9.98','NASDAQ'),(2261,66,'4944985643985','visa','IDR','$0.29','NYSE'),(2262,12,'3580694503727846','jcb','UAH','$0.38','NASDAQ'),(2263,80,'6385303443589379','instapayment','CAD','$5.07','NASDAQ'),(2264,69,'4041599020017467','visa','EUR','$8.54','NYSE'),(2265,84,'3572843772315318','jcb','CNY','$0.33','NASDAQ'),(2266,72,'3567753530292492','jcb','CNY','$1.41','NASDAQ'),(2267,5,'56022140796699551','china-unionpay','MXN','$2.13','NYSE'),(2268,88,'5100178101460949','mastercard','CNY','$4.58','NASDAQ'),(2269,94,'67630944895963607','maestro','IDR','$4.51','NYSE'),(2270,1,'5602255023213771886','china-unionpay','IDR','$9.57','NYSE'),(2271,8,'5548790769889670','diners-club-us-ca','XCD','$0.65','NYSE'),(2272,22,'5100170120807424','mastercard','CNY','$2.74','NYSE'),(2273,86,'3567747228326786','jcb','PLN','$0.27','NASDAQ'),(2274,11,'5010123840682618','mastercard','PLN','$3.44','NASDAQ'),(2275,10,'5602254868699962','bankcard','UAH','$5.41','NASDAQ'),(2276,53,'3556435632393922','jcb','EUR','$0.23','NASDAQ'),(2277,32,'3528561413977685','jcb','PHP','$3.25','NASDAQ'),(2278,55,'5275609334643694','mastercard','EUR','$9.88','NYSE'),(2279,63,'201605528468112','diners-club-enroute','PHP','$6.14','NYSE'),(2280,77,'67628423150307044','maestro','USD','$1.27','NYSE'),(2281,56,'6759991165601378','maestro','IDR','$7.88','NASDAQ'),(2282,95,'633110350731753541','switch','USD','$6.77','NASDAQ'),(2283,51,'374622908578247','americanexpress','ETB','$9.98','NYSE'),(2284,27,'4844224311083487','visa-electron','IDR','$8.59','NASDAQ'),(2285,2,'4041596049352545','visa','IDR','$2.86','NASDAQ'),(2286,7,'6763411865901622957','maestro','CNY','$3.77','NYSE'),(2287,71,'676795616938687224','solo','XPF','$4.95','NASDAQ'),(2288,44,'374622728351833','americanexpress','CNY','$3.45','NASDAQ'),(2289,37,'3569617038549604','jcb','EUR','$8.51','NASDAQ'),(2290,93,'5108750045743390','mastercard','BWP','$5.39','NYSE'),(2291,39,'345509692865003','americanexpress','IDR','$7.00','NASDAQ'),(2292,64,'3563914537030400','jcb','USD','$2.53','NYSE'),(2293,13,'67069873940414235','laser','AFN','$8.29','NYSE'),(2294,41,'3529079994510121','jcb','COP','$2.95','NYSE'),(2295,25,'36981204349244','diners-club-international','CNY','$9.03','NASDAQ'),(2296,89,'3588876276924633','jcb','CDF','$8.86','NASDAQ'),(2297,18,'3570403319286506','jcb','CNY','$3.71','NASDAQ'),(2298,81,'4508821415226933','visa-electron','EUR','$6.77','NASDAQ'),(2299,33,'3572604923378104','jcb','CNY','$5.90','NASDAQ'),(2300,33,'4026134631636114','visa-electron','COP','$0.28','NASDAQ'),(2301,92,'201432216304305','diners-club-enroute','CNY','$7.62','NYSE'),(2302,76,'3586248868711376','jcb','PLN','$4.63','NYSE'),(2303,30,'3582620142843312','jcb','EUR','$2.04','NASDAQ'),(2304,12,'3557017756043696','jcb','EUR','$3.98','NYSE'),(2305,45,'3531308438062753','jcb','DKK','$3.22','NASDAQ'),(2306,18,'3548933139235597','jcb','NGN','$0.13','NASDAQ'),(2307,17,'3534730534968715','jcb','PHP','$3.78','NASDAQ'),(2308,96,'4508296648513383','visa-electron','IDR','$6.69','NASDAQ'),(2309,82,'3582481100629676','jcb','AMD','$6.50','NASDAQ'),(2310,23,'3569891559777379','jcb','USD','$8.04','NASDAQ'),(2311,7,'378599054456582','americanexpress','IDR','$2.10','NASDAQ'),(2312,44,'3562107248064898','jcb','USD','$6.88','NASDAQ'),(2313,65,'3554504636295128','jcb','ILS','$1.23','NYSE'),(2314,96,'4936154239898022','switch','PHP','$4.30','NYSE'),(2315,48,'3545221189752866','jcb','BGN','$7.67','NASDAQ'),(2316,91,'3539725759696269','jcb','IDR','$8.37','NYSE'),(2317,11,'5108755634213564','mastercard','MXN','$1.24','NASDAQ'),(2318,94,'56022284593915172','china-unionpay','IDR','$5.66','NYSE'),(2319,39,'3571907909157983','jcb','UZS','$2.23','NYSE'),(2320,22,'5518917177705554','diners-club-us-ca','EUR','$3.94','NYSE'),(2321,17,'3577784216806758','jcb','CNY','$6.23','NASDAQ'),(2322,5,'3569840114178573','jcb','PLN','$3.81','NASDAQ'),(2323,14,'4508968845627360','visa-electron','EUR','$0.57','NASDAQ'),(2324,53,'50189950745267702','maestro','IDR','$1.31','NYSE'),(2325,79,'3586647960875353','jcb','IDR','$1.70','NYSE'),(2326,55,'6304404748789470','laser','PLN','$4.39','NYSE'),(2327,94,'6759676006207270823','switch','RUB','$2.28','NASDAQ'),(2328,20,'201831279269893','diners-club-enroute','CNY','$1.38','NASDAQ'),(2329,3,'560225226242840422','china-unionpay','IDR','$5.73','NYSE'),(2330,13,'5586845779109726','diners-club-us-ca','EGP','$9.02','NASDAQ'),(2331,28,'5610709795466922887','china-unionpay','CZK','$4.00','NASDAQ'),(2332,2,'3578770934535968','jcb','PLN','$3.36','NASDAQ'),(2333,10,'5893016602471430','maestro','THB','$4.42','NYSE'),(2334,94,'374622140751073','americanexpress','EUR','$2.41','NASDAQ'),(2335,98,'3581096084014405','jcb','CNY','$3.81','NASDAQ'),(2336,10,'201768803982619','diners-club-enroute','CNY','$9.69','NASDAQ'),(2337,8,'36298288544933','diners-club-international','USD','$0.65','NYSE'),(2338,47,'5602252859309963','bankcard','CNY','$9.91','NASDAQ'),(2339,85,'3565075449754111','jcb','PHP','$5.54','NASDAQ'),(2340,18,'5610634627750224','bankcard','BRL','$3.17','NYSE'),(2341,100,'5128677261385497','mastercard','CNY','$9.98','NASDAQ'),(2342,14,'4917435567653417','visa-electron','CNY','$1.57','NYSE'),(2343,97,'3589184337403013','jcb','CZK','$6.59','NASDAQ'),(2344,23,'560224899215128107','china-unionpay','CAD','$3.88','NYSE'),(2345,49,'6304258682488758','maestro','MYR','$2.64','NASDAQ'),(2346,32,'3584481330302050','jcb','RUB','$9.37','NASDAQ'),(2347,23,'5007660552526298','mastercard','BOB','$4.41','NYSE'),(2348,94,'3558729812870511','jcb','CNY','$6.62','NYSE'),(2349,14,'3587486766353383','jcb','IDR','$8.67','NYSE'),(2350,20,'5007662080688616','mastercard','CNY','$7.38','NASDAQ'),(2351,98,'201887381910451','diners-club-enroute','COP','$5.67','NASDAQ'),(2352,100,'3536591573259707','jcb','IDR','$6.10','NASDAQ'),(2353,98,'3566252295620311','jcb','PKR','$9.21','NYSE'),(2354,9,'3574456673741173','jcb','SEK','$3.58','NYSE'),(2355,44,'3583304282347728','jcb','USD','$3.20','NASDAQ'),(2356,77,'3529079855261236','jcb','IDR','$6.65','NASDAQ'),(2357,37,'201556132617471','diners-club-enroute','CNY','$7.45','NASDAQ'),(2358,90,'676709348677894747','solo','USD','$6.03','NYSE'),(2359,34,'3531285575828461','jcb','MXN','$6.41','NYSE'),(2360,34,'3583904497765430','jcb','ARS','$6.55','NASDAQ'),(2361,85,'30108643999167','diners-club-carte-blanche','RUB','$8.16','NYSE'),(2362,15,'3582483798487318','jcb','PHP','$1.42','NASDAQ'),(2363,76,'6304819225782203','laser','CNY','$6.58','NYSE'),(2364,88,'5100138831603473','mastercard','BRL','$7.61','NASDAQ'),(2365,29,'633110862976313773','switch','CNY','$4.82','NASDAQ'),(2366,94,'3585169702455205','jcb','BAM','$1.69','NASDAQ'),(2367,8,'3566794763228291','jcb','BRL','$9.07','NASDAQ'),(2368,91,'5602251515866788','bankcard','PLN','$1.17','NASDAQ'),(2369,97,'5007667797232574','mastercard','ALL','$5.89','NYSE'),(2370,9,'5602252914602642','bankcard','CNY','$8.41','NYSE'),(2371,20,'3561074195077441','jcb','CNY','$6.89','NASDAQ'),(2372,56,'4913682706503615','visa-electron','SEK','$4.10','NASDAQ'),(2373,2,'5602240299757149','china-unionpay','CNY','$0.37','NASDAQ'),(2374,50,'564182642552264990','switch','UAH','$3.74','NYSE'),(2375,69,'3586502658350955','jcb','PEN','$8.27','NYSE'),(2376,70,'201624338019379','diners-club-enroute','IDR','$1.32','NASDAQ'),(2377,59,'374283932535982','americanexpress','PEN','$6.80','NASDAQ'),(2378,53,'3540016141422037','jcb','BRL','$2.56','NYSE'),(2379,46,'3573809361059269','jcb','MYR','$5.95','NYSE'),(2380,100,'30284480771371','diners-club-carte-blanche','MXN','$8.58','NASDAQ'),(2381,97,'4844747908942384','visa-electron','BDT','$7.11','NASDAQ'),(2382,43,'3574260052917416','jcb','PHP','$2.51','NYSE'),(2383,76,'3551490245127071','jcb','IDR','$4.42','NASDAQ'),(2384,25,'3568408924179156','jcb','CNY','$9.77','NYSE'),(2385,11,'630443417661827688','maestro','SEK','$3.20','NYSE'),(2386,69,'4508743501714442','visa-electron','EUR','$3.09','NASDAQ'),(2387,69,'3549236075954414','jcb','SEK','$7.44','NYSE'),(2388,21,'3537548559462183','jcb','VEF','$5.80','NYSE'),(2389,43,'4905490137960077678','switch','IDR','$8.34','NASDAQ'),(2390,52,'3538037424579362','jcb','PHP','$9.53','NASDAQ'),(2391,42,'3546382144636005','jcb','YER','$9.22','NYSE'),(2392,15,'5526704718697783','diners-club-us-ca','MXN','$1.71','NASDAQ'),(2393,74,'5419240364085312','mastercard','IDR','$4.31','NASDAQ'),(2394,70,'3552011498563108','jcb','IDR','$9.73','NYSE'),(2395,23,'6759240467484304387','maestro','MXN','$4.51','NASDAQ'),(2396,5,'3565605850160398','jcb','VEF','$5.87','NYSE'),(2397,82,'3546839260367772','jcb','EUR','$7.99','NASDAQ'),(2398,11,'3540769111726197','jcb','EUR','$5.62','NYSE'),(2399,90,'5100144813013921','mastercard','CNY','$1.36','NASDAQ'),(2400,67,'3566555938472720','jcb','BRL','$10.00','NYSE'),(2401,50,'6333440033956247','switch','LKR','$6.53','NYSE'),(2402,23,'5118766980823409','mastercard','CNY','$0.85','NASDAQ'),(2403,16,'5100174477756861','mastercard','CNY','$8.02','NASDAQ'),(2404,90,'3588569527287468','jcb','IDR','$0.39','NASDAQ'),(2405,31,'6385719740252264','instapayment','ZWL','$3.75','NASDAQ'),(2406,13,'3556515678028209','jcb','IRR','$2.88','NYSE'),(2407,27,'30078754455418','diners-club-carte-blanche','NGN','$1.82','NYSE'),(2408,19,'3581747684183467','jcb','PLN','$4.48','NYSE'),(2409,91,'374283526371612','americanexpress','CNY','$6.76','NASDAQ'),(2410,34,'3561300182354778','jcb','RUB','$7.79','NYSE'),(2411,59,'0604866153943222686','maestro','CNY','$2.56','NYSE'),(2412,96,'561047170024115054','china-unionpay','CNY','$1.25','NASDAQ'),(2413,37,'6304887084137917961','maestro','CZK','$4.88','NASDAQ'),(2414,52,'201463018502549','diners-club-enroute','IDR','$2.22','NASDAQ'),(2415,61,'3546327210877751','jcb','CNY','$6.02','NYSE'),(2416,45,'6759734581047689','switch','RUB','$7.67','NASDAQ'),(2417,90,'3578498664384148','jcb','CNY','$3.73','NYSE'),(2418,48,'3569317020559964','jcb','PHP','$3.89','NYSE'),(2419,63,'6334627361959888963','solo','IDR','$3.13','NYSE'),(2420,50,'3563482585153391','jcb','CNY','$7.72','NASDAQ'),(2421,93,'3566088714783417','jcb','EUR','$7.40','NASDAQ'),(2422,21,'3560774972618140','jcb','BRL','$8.82','NASDAQ'),(2423,69,'633367550352737422','switch','THB','$1.53','NASDAQ'),(2424,94,'561017028892893499','china-unionpay','PHP','$9.00','NYSE'),(2425,84,'3589342079887922','jcb','PHP','$9.81','NYSE'),(2426,75,'5048370425793544','mastercard','TZS','$6.64','NYSE'),(2427,87,'3555343861590674','jcb','PLN','$7.53','NASDAQ'),(2428,17,'36025639186670','diners-club-international','CAD','$8.45','NYSE'),(2429,27,'30080743645877','diners-club-carte-blanche','HRK','$5.65','NASDAQ'),(2430,36,'677172231402699852','laser','UGX','$6.79','NYSE'),(2431,32,'6759777432137621','switch','PHP','$7.66','NASDAQ'),(2432,56,'50203583913186347','maestro','MXN','$7.68','NYSE'),(2433,98,'670918554683202656','laser','PHP','$5.14','NASDAQ'),(2434,57,'3552726124437746','jcb','USD','$6.57','NASDAQ'),(2435,59,'3533491523691401','jcb','LBP','$2.84','NASDAQ'),(2436,96,'3532026713657332','jcb','IDR','$7.32','NASDAQ'),(2437,32,'3540077901101609','jcb','PLN','$1.57','NYSE'),(2438,22,'3569786532731016','jcb','EUR','$2.77','NASDAQ'),(2439,71,'201878294785155','diners-club-enroute','IDR','$7.72','NYSE'),(2440,6,'5602212934344419','china-unionpay','MXN','$3.05','NASDAQ'),(2441,87,'201874822028291','diners-club-enroute','USD','$8.56','NYSE'),(2442,40,'3574058007071515','jcb','PHP','$0.52','NYSE'),(2443,56,'5136453144179907','mastercard','EUR','$8.67','NYSE'),(2444,73,'5610828056403178','bankcard','IDR','$4.57','NASDAQ'),(2445,87,'5435230289180900','mastercard','THB','$8.71','NASDAQ'),(2446,28,'30594784863504','diners-club-carte-blanche','CNY','$9.42','NYSE'),(2447,9,'3584093889262930','jcb','PHP','$1.25','NYSE'),(2448,100,'3574880058468435','jcb','COP','$4.00','NYSE'),(2449,72,'3532558423526217','jcb','RUB','$6.38','NASDAQ'),(2450,77,'5602257710430841','bankcard','XOF','$8.22','NASDAQ'),(2451,2,'5007663338340570','mastercard','PLN','$0.43','NYSE'),(2452,39,'5610751915052509','bankcard','IDR','$4.47','NASDAQ'),(2453,12,'3585168245865755','jcb','USD','$0.13','NYSE'),(2454,41,'67715880997590161','laser','CNY','$1.96','NASDAQ'),(2455,100,'3532623066253949','jcb','SYP','$2.60','NASDAQ'),(2456,86,'3550754863588554','jcb','CNY','$5.24','NYSE'),(2457,71,'633314065751790710','switch','TJS','$6.89','NYSE'),(2458,57,'4405225082834843','visa-electron','JPY','$4.82','NYSE'),(2459,53,'4041596645614','visa','SEK','$6.69','NASDAQ'),(2460,54,'5602223616999339','bankcard','PLN','$8.48','NYSE'),(2461,85,'3539676582115557','jcb','PLN','$1.61','NASDAQ'),(2462,28,'3581237402070543','jcb','ALL','$2.34','NYSE'),(2463,44,'63041453865887392','maestro','IDR','$1.48','NYSE'),(2464,67,'3543178542731015','jcb','RUB','$7.71','NASDAQ'),(2465,22,'337941100278364','americanexpress','IDR','$9.04','NYSE'),(2466,69,'30502219316444','diners-club-carte-blanche','CNY','$7.61','NYSE'),(2467,32,'4913341718782853','visa-electron','PHP','$4.08','NASDAQ'),(2468,95,'670601718857404883','laser','IDR','$7.88','NASDAQ'),(2469,98,'36349018560788','diners-club-international','IDR','$9.51','NYSE'),(2470,77,'3546823729008383','jcb','XAF','$6.21','NYSE'),(2471,100,'675942504367043503','maestro','EUR','$0.94','NASDAQ'),(2472,13,'630457149308958732','laser','EUR','$6.46','NYSE'),(2473,19,'3532365476500051','jcb','CNY','$2.28','NYSE'),(2474,99,'6372755679867727','instapayment','UAH','$8.66','NASDAQ'),(2475,42,'3542352389597893','jcb','IDR','$7.10','NYSE'),(2476,16,'3588222697294530','jcb','USD','$1.81','NYSE'),(2477,22,'5100130844544166','mastercard','PHP','$3.21','NASDAQ'),(2478,81,'493619255541609335','switch','BRL','$7.40','NASDAQ'),(2479,35,'3560086102598278','jcb','IDR','$8.66','NYSE'),(2480,92,'3585032933578395','jcb','IDR','$0.11','NYSE'),(2481,87,'201695893675508','diners-club-enroute','IDR','$6.35','NYSE'),(2482,67,'4175008702988381','visa-electron','PLN','$0.68','NYSE'),(2483,52,'0604172112845647688','maestro','GEL','$9.41','NYSE'),(2484,54,'3577486415187473','jcb','PHP','$0.78','NYSE'),(2485,5,'501887945531810548','maestro','BRL','$7.03','NYSE'),(2486,80,'4844331589963165','visa-electron','RUB','$5.28','NYSE'),(2487,26,'67634963371323470','maestro','IDR','$6.62','NASDAQ'),(2488,42,'5238818817905472','mastercard','IRR','$0.37','NASDAQ'),(2489,8,'377601427429733','americanexpress','ILS','$8.05','NASDAQ'),(2490,17,'3566260674499520','jcb','PKR','$7.11','NASDAQ'),(2491,99,'4017951499557','visa','EUR','$5.49','NYSE'),(2492,66,'3535694313563650','jcb','BRL','$3.10','NASDAQ'),(2493,99,'3532346000378081','jcb','EUR','$8.35','NYSE'),(2494,53,'4026058827257874','visa-electron','CNY','$0.18','NASDAQ'),(2495,2,'560223793842293932','china-unionpay','XAF','$9.99','NYSE'),(2496,89,'3589662386192942','jcb','PHP','$6.74','NASDAQ'),(2497,75,'3581569614928864','jcb','JPY','$1.75','NYSE'),(2498,30,'4662047609007440','visa','LTL','$2.52','NASDAQ'),(2499,67,'5602224402164211','bankcard','JPY','$9.29','NASDAQ'),(2500,8,'5610136675127396','bankcard','CZK','$9.45','NASDAQ'),(2501,90,'3533897329394125','jcb','EUR','$5.82','NYSE'),(2502,48,'201572834389053','diners-club-enroute','USD','$0.19','NYSE'),(2503,15,'5100148811879357','mastercard','EUR','$4.71','NYSE'),(2504,1,'5553971586575120','mastercard','CNY','$7.68','NYSE'),(2505,51,'3578137225018247','jcb','RUB','$1.42','NASDAQ'),(2506,72,'3588617980738822','jcb','BRL','$0.48','NASDAQ'),(2507,49,'3543688745014647','jcb','UAH','$9.96','NASDAQ'),(2508,89,'36469191110324','diners-club-international','CNY','$4.17','NYSE'),(2509,94,'201451660817406','diners-club-enroute','EUR','$0.23','NASDAQ'),(2510,91,'5108751440893129','mastercard','EUR','$7.33','NYSE'),(2511,24,'201516535613493','diners-club-enroute','PLN','$0.93','NYSE'),(2512,23,'3572244708696303','jcb','NGN','$3.60','NYSE'),(2513,52,'3576006008159449','jcb','RUB','$6.65','NASDAQ'),(2514,24,'3566588234160236','jcb','MNT','$6.49','NYSE'),(2515,99,'5602228383402458','china-unionpay','VND','$1.76','NASDAQ'),(2516,41,'4903104188472010668','switch','RUB','$8.02','NYSE'),(2517,84,'6388845667782764','instapayment','VND','$3.47','NYSE'),(2518,82,'5409940835991764','mastercard','EUR','$5.67','NYSE'),(2519,88,'5602249618603678','china-unionpay','MXN','$7.82','NYSE'),(2520,10,'3528858996022321','jcb','EUR','$5.05','NASDAQ'),(2521,46,'5602251275236115','bankcard','CUP','$8.54','NYSE'),(2522,56,'3580211481932833','jcb','CLP','$9.82','NYSE'),(2523,9,'30568239410681','diners-club-carte-blanche','IDR','$5.59','NYSE'),(2524,79,'201588697228659','diners-club-enroute','AMD','$7.20','NYSE'),(2525,28,'4508591632255953','visa-electron','CNY','$7.59','NYSE'),(2526,61,'337941485511470','americanexpress','CNY','$3.68','NASDAQ'),(2527,96,'4026840523264720','visa-electron','PLN','$4.52','NYSE'),(2528,88,'3548932422084100','jcb','CNY','$2.34','NYSE'),(2529,5,'3584267474144048','jcb','CZK','$5.07','NYSE'),(2530,60,'378555110755326','americanexpress','IDR','$2.62','NASDAQ'),(2531,59,'6304655083162483626','laser','VND','$8.99','NASDAQ'),(2532,60,'67715357949594815','laser','IDR','$0.29','NYSE'),(2533,98,'5602256672342762','china-unionpay','EUR','$1.02','NASDAQ'),(2534,1,'5002354494172669','mastercard','JPY','$0.17','NYSE'),(2535,8,'3537087034758451','jcb','XAF','$9.57','NASDAQ'),(2536,65,'3577933527897168','jcb','THB','$9.94','NASDAQ'),(2537,90,'3559451623955626','jcb','PLN','$8.68','NASDAQ'),(2538,83,'3545703223054698','jcb','BRL','$4.01','NYSE'),(2539,67,'3579712470508362','jcb','SEK','$1.16','NYSE'),(2540,17,'3588461978705406','jcb','EUR','$6.37','NYSE'),(2541,15,'3550854031237751','jcb','CNY','$2.66','NASDAQ'),(2542,62,'5002353149997157','mastercard','MXN','$4.76','NASDAQ'),(2543,2,'3576288520455584','jcb','SEK','$8.64','NYSE'),(2544,82,'677126244403858499','laser','PLN','$2.99','NASDAQ'),(2545,26,'374283473204329','americanexpress','THB','$8.42','NYSE'),(2546,25,'6761570653489616703','maestro','MXN','$3.00','NYSE'),(2547,42,'3569009860993300','jcb','EUR','$8.53','NYSE'),(2548,56,'3531732514385608','jcb','IDR','$8.29','NASDAQ'),(2549,67,'6384292956744508','instapayment','PHP','$5.54','NASDAQ'),(2550,23,'201947671506631','diners-club-enroute','VND','$6.92','NYSE'),(2551,51,'3536403345610326','jcb','IDR','$7.94','NASDAQ'),(2552,4,'3584305749308939','jcb','CNY','$2.29','NASDAQ'),(2553,49,'5007661998704598','mastercard','AMD','$5.63','NYSE'),(2554,11,'3547198913211765','jcb','UAH','$4.73','NASDAQ'),(2555,6,'337941472391670','americanexpress','SYP','$3.25','NYSE'),(2556,82,'5389362776067195','mastercard','CNY','$1.22','NYSE'),(2557,29,'3553957109233862','jcb','EUR','$5.66','NASDAQ'),(2558,31,'6762589399813409970','maestro','CNY','$3.44','NYSE'),(2559,39,'6375214802005141','instapayment','CNY','$4.96','NYSE'),(2560,12,'6771027050888574','laser','IDR','$8.56','NASDAQ'),(2561,34,'3571422632297403','jcb','IDR','$4.87','NASDAQ'),(2562,22,'6376077220020839','instapayment','CNY','$4.06','NYSE'),(2563,4,'6334694938108167973','solo','CNY','$3.61','NYSE'),(2564,46,'3569131725344022','jcb','YER','$9.86','NYSE'),(2565,87,'337941706600417','americanexpress','BRL','$5.24','NYSE'),(2566,22,'30515594706609','diners-club-carte-blanche','SEK','$1.91','NYSE'),(2567,12,'5602229024457851','bankcard','CNY','$2.12','NYSE'),(2568,67,'56022561782018268','china-unionpay','EUR','$5.18','NASDAQ'),(2569,90,'5462141605468943','mastercard','IDR','$8.83','NYSE'),(2570,17,'5010126962875720','mastercard','PHP','$8.91','NASDAQ'),(2571,51,'3565636284564228','jcb','COP','$9.73','NASDAQ'),(2572,75,'675954698485820480','switch','VND','$8.11','NYSE'),(2573,19,'3574553646675601','jcb','CNY','$7.42','NYSE'),(2574,27,'633301504680414138','switch','EUR','$9.86','NASDAQ'),(2575,36,'3565736057212367','jcb','CNY','$7.56','NASDAQ'),(2576,45,'4041593939324593','visa','XAF','$9.03','NASDAQ'),(2577,91,'56022316006262717','china-unionpay','RUB','$4.22','NYSE'),(2578,83,'4508619980267369','visa-electron','IDR','$7.64','NYSE'),(2579,25,'3556635284148264','jcb','USD','$9.86','NASDAQ'),(2580,37,'4903337148525294','switch','PLN','$2.79','NYSE'),(2581,77,'3561378109159983','jcb','EUR','$2.80','NYSE'),(2582,36,'5610757222563104','bankcard','UGX','$7.98','NYSE'),(2583,30,'5610400765942092','bankcard','SEK','$7.50','NYSE'),(2584,69,'3550940128746554','jcb','EUR','$9.27','NYSE'),(2585,84,'3582847223110960','jcb','CNY','$3.90','NYSE'),(2586,70,'3552462774485757','jcb','NIO','$8.97','NYSE'),(2587,19,'5610317881150444','bankcard','CNY','$2.73','NASDAQ'),(2588,15,'3567966408976778','jcb','MAD','$4.37','NASDAQ'),(2589,12,'30398826947584','diners-club-carte-blanche','MMK','$3.13','NYSE'),(2590,57,'4017959788423','visa','CLP','$4.55','NASDAQ'),(2591,30,'3532013596268213','jcb','NIO','$9.46','NASDAQ'),(2592,75,'201453455582302','diners-club-enroute','RUB','$5.62','NASDAQ'),(2593,24,'3566295065241263','jcb','AZN','$0.69','NASDAQ'),(2594,33,'3589497129806460','jcb','PHP','$0.70','NASDAQ'),(2595,82,'3558021298437498','jcb','CZK','$0.94','NYSE'),(2596,43,'4017950044719','visa','BZD','$6.84','NASDAQ'),(2597,31,'5108758488051163','mastercard','CNY','$6.41','NYSE'),(2598,92,'4041591891529316','visa','JPY','$0.92','NASDAQ'),(2599,20,'490568972173268498','switch','CNY','$1.68','NASDAQ'),(2600,80,'3579850994189903','jcb','EUR','$0.01','NASDAQ'),(2601,54,'3530444100952517','jcb','IDR','$7.73','NASDAQ'),(2602,5,'3585349128882568','jcb','CNY','$6.52','NYSE'),(2603,81,'502098881115760507','maestro','IRR','$2.04','NYSE'),(2604,40,'3570778868848099','jcb','VND','$7.36','NASDAQ'),(2605,94,'67710113828791757','laser','HTG','$8.23','NYSE'),(2606,87,'5020390449601594971','maestro','BRL','$3.48','NYSE'),(2607,32,'3585680730596927','jcb','PHP','$9.87','NYSE'),(2608,80,'4905044649176043','switch','RUB','$0.52','NASDAQ'),(2609,37,'3570106219951729','jcb','EUR','$3.60','NASDAQ'),(2610,23,'30355060422062','diners-club-carte-blanche','CNY','$0.19','NASDAQ'),(2611,39,'3584679701438391','jcb','KRW','$7.98','NASDAQ'),(2612,72,'6706567435565028718','laser','EUR','$0.46','NYSE'),(2613,14,'633496462975778243','solo','MKD','$9.20','NASDAQ'),(2614,77,'30154730403838','diners-club-carte-blanche','EUR','$6.79','NYSE'),(2615,94,'379478366095439','americanexpress','EUR','$5.16','NYSE'),(2616,88,'4913942073100746','visa-electron','CNY','$5.28','NASDAQ'),(2617,48,'374622852290583','americanexpress','IDR','$0.02','NASDAQ'),(2618,10,'3555690773101515','jcb','EGP','$3.56','NASDAQ'),(2619,6,'3573483725744089','jcb','BRL','$5.42','NYSE'),(2620,94,'3580261408890028','jcb','PKR','$4.68','NASDAQ'),(2621,97,'3589381622454145','jcb','IDR','$1.68','NYSE'),(2622,59,'3534408439741533','jcb','KZT','$3.32','NYSE'),(2623,85,'4627868714219','visa','PHP','$4.03','NASDAQ'),(2624,46,'6372810249608695','instapayment','IDR','$0.05','NASDAQ'),(2625,41,'3565174908981453','jcb','PHP','$7.24','NASDAQ'),(2626,99,'3545774465249569','jcb','CNY','$4.18','NYSE'),(2627,57,'50186286105486142','maestro','CNY','$7.33','NASDAQ'),(2628,30,'36414654999748','diners-club-international','EUR','$0.87','NASDAQ'),(2629,54,'5010124093560790','mastercard','CNY','$9.83','NASDAQ'),(2630,34,'3534906337451428','jcb','CNY','$7.71','NASDAQ'),(2631,87,'6761568635596481','maestro','EUR','$8.44','NASDAQ'),(2632,88,'5137107384052393','mastercard','CLP','$7.60','NASDAQ'),(2633,94,'5602245821585413','bankcard','RUB','$5.78','NYSE'),(2634,78,'6767468510436719','solo','EUR','$1.11','NYSE'),(2635,73,'670903267114549358','laser','CNY','$7.03','NASDAQ'),(2636,80,'36810939818365','diners-club-international','SYP','$9.23','NYSE'),(2637,90,'5602230758315039977','china-unionpay','BRL','$6.57','NYSE'),(2638,82,'6372811978685227','instapayment','PHP','$1.52','NASDAQ'),(2639,27,'5186182152910312','mastercard','UAH','$6.82','NASDAQ'),(2640,2,'5263396503475710','mastercard','EUR','$1.46','NYSE'),(2641,94,'374288757176952','americanexpress','LYD','$2.59','NASDAQ'),(2642,80,'3537164892812140','jcb','PHP','$6.10','NYSE'),(2643,56,'3528712845671038','jcb','NZD','$3.35','NASDAQ'),(2644,4,'3544453821735337','jcb','RUB','$7.69','NASDAQ'),(2645,55,'3551216835199794','jcb','CNY','$2.92','NASDAQ'),(2646,5,'5007667682867922','mastercard','EUR','$2.85','NASDAQ'),(2647,38,'3543824628022676','jcb','PLN','$2.48','NYSE'),(2648,46,'3546014951331335','jcb','CNY','$9.93','NYSE'),(2649,95,'3534217250582011','jcb','IDR','$4.23','NYSE'),(2650,41,'5602217543042635','bankcard','PHP','$8.71','NASDAQ'),(2651,1,'5002351109299465','mastercard','XOF','$2.15','NYSE'),(2652,99,'3557852144389678','jcb','USD','$1.45','NYSE'),(2653,7,'343605092278474','americanexpress','YER','$5.86','NYSE'),(2654,104,'5276581602602364','VISA','PLN','$2.05','NASDAQ'),(2655,88,'5010128641556622','mastercard','RUB','$3.13','NASDAQ'),(2656,33,'342990368132741','americanexpress','HRK','$0.16','NYSE'),(2657,71,'5431371314651772','diners-club-us-ca','BRL','$7.87','NASDAQ'),(2658,59,'3531840749370608','jcb','EUR','$1.81','NYSE'),(2659,51,'4903756132387527425','switch','BRL','$6.25','NASDAQ'),(2660,48,'5002354322340652','mastercard','BRL','$4.44','NASDAQ'),(2661,69,'67710920033684829','laser','CNY','$9.09','NYSE'),(2662,9,'58936663293928067','maestro','EUR','$3.92','NYSE'),(2663,37,'30261561885551','diners-club-carte-blanche','KGS','$4.98','NASDAQ'),(2664,76,'3560098393719984','jcb','CNY','$2.81','NASDAQ'),(2665,38,'5002355387115947','mastercard','EUR','$7.35','NASDAQ'),(2666,14,'5002354692050592','mastercard','RUB','$2.86','NYSE'),(2667,4,'3543546430111906','jcb','NGN','$1.98','NASDAQ'),(2668,69,'3552526521648352','jcb','CNY','$7.10','NYSE'),(2669,70,'3557336603878686','jcb','BDT','$7.90','NASDAQ'),(2670,11,'3584844646323351','jcb','PEN','$1.79','NYSE'),(2671,26,'6382504037093651','instapayment','JPY','$8.30','NASDAQ'),(2672,69,'201621528283567','diners-club-enroute','IDR','$7.55','NASDAQ'),(2673,84,'5641826893521063566','switch','EUR','$3.28','NYSE'),(2674,56,'3585300229785895','jcb','UAH','$5.57','NYSE'),(2675,77,'4917083510750839','visa-electron','EGP','$4.90','NYSE'),(2676,63,'3547158887226843','jcb','USD','$0.47','NYSE'),(2677,33,'5165723351581415','mastercard','RUB','$1.63','NYSE'),(2678,17,'5285788961188120','mastercard','PHP','$6.73','NASDAQ'),(2679,11,'3532030461540815','jcb','CNY','$2.84','NYSE'),(2680,86,'3538335773040303','jcb','IDR','$7.67','NASDAQ'),(2681,77,'30350808651437','diners-club-carte-blanche','CZK','$0.17','NYSE'),(2682,59,'30282394876013','diners-club-carte-blanche','NOK','$0.97','NASDAQ'),(2683,91,'3532906813862595','jcb','RWF','$7.11','NASDAQ'),(2684,36,'3549473714472025','jcb','PLN','$1.91','NASDAQ'),(2685,87,'30163786649764','diners-club-carte-blanche','THB','$0.14','NASDAQ'),(2686,8,'6762779525378133','maestro','JPY','$4.58','NASDAQ'),(2687,93,'3587452518577356','jcb','PHP','$9.54','NYSE'),(2688,49,'3557590422179946','jcb','PHP','$9.99','NASDAQ'),(2689,23,'3538543551959327','jcb','IDR','$1.31','NASDAQ'),(2690,35,'3577279336901779','jcb','EUR','$3.53','NYSE'),(2691,31,'4844088427451668','visa-electron','EUR','$8.16','NYSE'),(2692,66,'6334395127466397','solo','PLN','$3.02','NASDAQ'),(2693,89,'3563169055964486','jcb','PLN','$1.02','NASDAQ'),(2694,94,'3532139304927590','jcb','BOB','$0.82','NASDAQ'),(2695,12,'4905453331906583080','switch','KZT','$0.70','NYSE'),(2696,29,'4903346369749111','switch','SYP','$2.63','NYSE'),(2697,100,'374283598736551','americanexpress','TZS','$9.53','NYSE'),(2698,84,'4041370816956288','visa','PHP','$8.28','NASDAQ'),(2699,13,'3587663806471132','jcb','CNY','$1.09','NASDAQ'),(2700,77,'5505800450646163','mastercard','PEN','$5.74','NASDAQ'),(2701,40,'5100176865595462','mastercard','NPR','$4.48','NYSE'),(2702,7,'5010124162825355','mastercard','PLN','$2.84','NYSE'),(2703,93,'67610059477107251','maestro','USD','$7.50','NYSE'),(2704,55,'3536637306486206','jcb','BRL','$6.45','NASDAQ'),(2705,65,'5010127791247271','mastercard','CNY','$4.64','NASDAQ'),(2706,36,'30431525265527','diners-club-carte-blanche','IDR','$8.16','NYSE'),(2707,39,'3562558329702873','jcb','USD','$1.05','NYSE'),(2708,59,'3589961658374059','jcb','PHP','$7.75','NYSE'),(2709,26,'3571739774259259','jcb','SEK','$4.12','NASDAQ'),(2710,16,'6761689048539494','maestro','CNY','$4.42','NYSE'),(2711,84,'5581264400988166','mastercard','RUB','$3.87','NASDAQ'),(2712,94,'3560306203625188','jcb','SYP','$7.00','NYSE'),(2713,73,'3555452128960180','jcb','ILS','$10.00','NASDAQ'),(2714,6,'50205481993478213','maestro','BRL','$2.15','NASDAQ'),(2715,36,'5100171570298825','mastercard','CNY','$9.20','NYSE'),(2716,28,'201496382704283','diners-club-enroute','KRW','$4.25','NASDAQ'),(2717,58,'5018354618628343772','maestro','IDR','$5.44','NASDAQ'),(2718,36,'3557539312163221','jcb','IDR','$0.81','NASDAQ'),(2719,88,'5602250059443491','bankcard','HNL','$3.71','NASDAQ'),(2720,19,'4508854980097512','visa-electron','GTQ','$4.66','NASDAQ'),(2721,79,'3553817881793055','jcb','IDR','$9.66','NASDAQ'),(2722,23,'5602253440236418','bankcard','IDR','$2.57','NASDAQ'),(2723,59,'3558615749093246','jcb','EUR','$9.67','NYSE'),(2724,86,'4936705451074603782','switch','BRL','$8.05','NYSE'),(2725,96,'4844421604090944','visa-electron','BRL','$6.28','NASDAQ'),(2726,39,'3589931709256381','jcb','CNY','$7.68','NASDAQ'),(2727,15,'5602222930427151392','china-unionpay','EUR','$7.53','NYSE'),(2728,5,'3555688973403699','jcb','BGN','$2.28','NYSE'),(2729,53,'374283500203971','americanexpress','SEK','$7.03','NASDAQ'),(2730,8,'201935884462353','diners-club-enroute','PHP','$8.88','NYSE'),(2731,71,'36380635000817','diners-club-international','SLL','$7.70','NYSE'),(2732,26,'5602247385617806','bankcard','CNY','$7.03','NASDAQ'),(2733,74,'3579561608029159','jcb','GNF','$7.34','NYSE'),(2734,54,'3566683307446255','jcb','CNY','$8.52','NYSE'),(2735,39,'374283362416273','americanexpress','RUB','$5.44','NASDAQ'),(2736,39,'374622334948311','americanexpress','RUB','$3.25','NASDAQ'),(2737,16,'6333390838788164242','switch','CAD','$2.59','NYSE'),(2738,49,'372301067819534','americanexpress','ISK','$4.64','NASDAQ'),(2739,63,'5100175408534590','mastercard','IDR','$2.08','NASDAQ'),(2740,97,'3577329266228576','jcb','PLN','$9.29','NASDAQ'),(2741,4,'4508398287177320','visa-electron','EUR','$5.99','NYSE'),(2742,37,'3559023344629002','jcb','PLN','$6.42','NASDAQ'),(2743,67,'5602231426247856','bankcard','IDR','$8.50','NYSE'),(2744,12,'3580951785233699','jcb','PEN','$1.07','NYSE'),(2745,53,'5602243825495671','bankcard','RUB','$4.95','NASDAQ'),(2746,22,'5519054510555717','mastercard','TZS','$2.30','NYSE'),(2747,43,'3577049812864530','jcb','EUR','$9.56','NASDAQ'),(2748,55,'560223284429248440','china-unionpay','PLN','$3.03','NYSE'),(2749,57,'3532092909365924','jcb','CNY','$8.05','NASDAQ'),(2750,76,'5100143040035913','mastercard','PEN','$1.38','NASDAQ'),(2751,85,'3530865770046620','jcb','EUR','$6.48','NYSE'),(2752,7,'3548527459482381','jcb','CNY','$3.95','NYSE'),(2753,90,'3543701738798736','jcb','PHP','$0.87','NYSE'),(2754,21,'630422975339083195','laser','PYG','$2.91','NASDAQ'),(2755,32,'3532537144396225','jcb','IDR','$1.37','NYSE'),(2756,68,'56022340593274257','china-unionpay','PLN','$1.36','NYSE'),(2757,30,'3528536805240009','jcb','SEK','$2.56','NYSE'),(2758,34,'3537117871019723','jcb','IDR','$1.21','NASDAQ'),(2759,86,'374283358147585','americanexpress','RUB','$5.36','NASDAQ'),(2760,51,'5602230487469938','bankcard','CZK','$1.15','NYSE'),(2761,91,'5215800217889487','mastercard','IDR','$1.98','NASDAQ'),(2762,24,'50204410847873700','maestro','PLN','$6.83','NYSE'),(2763,96,'3579986807073379','jcb','BRL','$5.07','NASDAQ'),(2764,94,'493678259605722784','switch','PLN','$0.33','NASDAQ'),(2765,31,'30087239538060','diners-club-carte-blanche','BRL','$2.50','NASDAQ'),(2766,39,'5100172329057371','mastercard','IDR','$7.25','NASDAQ'),(2767,29,'345738849013460','americanexpress','BGN','$1.36','NYSE'),(2768,78,'3531734533677403','jcb','CNY','$2.21','NYSE'),(2769,75,'5441681738488488','diners-club-us-ca','BGN','$8.29','NYSE'),(2770,12,'3540981958017065','jcb','PHP','$4.80','NYSE'),(2771,53,'633324788091179900','switch','CNY','$0.39','NASDAQ'),(2772,41,'201726425137830','diners-club-enroute','CNY','$9.69','NASDAQ'),(2773,19,'5596603513433045','diners-club-us-ca','CZK','$6.13','NASDAQ'),(2774,21,'3537220958185829','jcb','PHP','$5.46','NASDAQ'),(2775,59,'3531565168780488','jcb','AFN','$9.82','NASDAQ'),(2776,45,'3529879100192445','jcb','RUB','$4.84','NYSE'),(2777,1,'5100134622969827','mastercard','YER','$9.72','NASDAQ'),(2778,11,'5893868820016060','maestro','THB','$8.50','NYSE'),(2779,73,'67090510919678704','laser','JPY','$4.70','NYSE'),(2780,46,'371714189702357','americanexpress','PHP','$6.27','NYSE'),(2781,54,'6767758756437057945','solo','IDR','$1.22','NYSE'),(2782,30,'201624037281569','diners-club-enroute','CNY','$8.21','NASDAQ'),(2783,8,'30223494387410','diners-club-carte-blanche','AFN','$1.63','NASDAQ'),(2784,56,'4844062405217003','visa-electron','UAH','$4.61','NYSE'),(2785,73,'670900039780813985','laser','CNY','$7.15','NYSE'),(2786,69,'36120599576398','diners-club-international','BRL','$6.71','NYSE'),(2787,81,'5100149452544789','mastercard','PLN','$1.54','NYSE'),(2788,50,'676301893479465677','maestro','LTL','$1.88','NYSE'),(2789,96,'3561430572481855','jcb','SLL','$9.71','NYSE'),(2790,37,'3563651996686559','jcb','CNY','$1.86','NASDAQ'),(2791,70,'3551693885644814','jcb','EUR','$2.61','NYSE'),(2792,62,'5610446055361717','china-unionpay','ILS','$3.64','NYSE'),(2793,9,'6759433216319709857','maestro','IDR','$6.41','NYSE'),(2794,68,'5641822288672893','switch','MMK','$7.71','NYSE'),(2795,19,'4911380761219039030','switch','IDR','$4.18','NASDAQ'),(2796,66,'5602238370946540','bankcard','SEK','$5.53','NYSE'),(2797,40,'3550490226563402','jcb','CNY','$0.84','NASDAQ'),(2798,20,'6389193025332785','instapayment','CNY','$1.74','NASDAQ'),(2799,23,'3540385328962986','jcb','EUR','$1.31','NASDAQ'),(2800,42,'5007661251586252','mastercard','UAH','$8.65','NASDAQ'),(2801,91,'560224211747050512','china-unionpay','IDR','$2.54','NASDAQ'),(2802,60,'3585992984413315','jcb','EUR','$5.88','NYSE'),(2803,30,'4405275432517903','visa-electron','PLN','$6.14','NYSE'),(2804,34,'374283312021611','americanexpress','CNY','$6.24','NYSE'),(2805,56,'5100140893975492','mastercard','SEK','$0.48','NASDAQ'),(2806,46,'63046269463559190','maestro','BRL','$9.05','NASDAQ'),(2807,6,'3582566576696454','jcb','IDR','$0.06','NYSE'),(2808,69,'6334222181965637','solo','JPY','$1.06','NASDAQ'),(2809,62,'30341629764129','diners-club-carte-blanche','IDR','$6.85','NYSE'),(2810,83,'3537659665771712','jcb','CNY','$5.33','NASDAQ'),(2811,76,'3570822481948207','jcb','SEK','$2.48','NASDAQ'),(2812,75,'5100173172491428','mastercard','EUR','$2.27','NYSE'),(2813,96,'6763234798380527972','maestro','CNY','$6.41','NASDAQ'),(2814,99,'30139485757462','diners-club-carte-blanche','BRL','$3.41','NYSE'),(2815,30,'3585800361179559','jcb','CNY','$7.17','NYSE'),(2816,87,'374622781651129','americanexpress','CZK','$2.96','NYSE'),(2817,34,'3578975430044270','jcb','RUB','$5.44','NASDAQ'),(2818,78,'4844906940550312','visa-electron','MXN','$2.61','NYSE'),(2819,68,'4844671394693378','visa-electron','CNY','$9.77','NASDAQ'),(2820,31,'6761933010892212','maestro','IDR','$8.89','NASDAQ'),(2821,84,'3553291798838751','jcb','UAH','$8.63','NASDAQ'),(2822,98,'3566440999958190','jcb','EUR','$0.65','NYSE'),(2823,89,'201604326073851','diners-club-enroute','HKD','$3.10','NASDAQ'),(2824,60,'3538465277276671','jcb','IRR','$8.56','NYSE'),(2825,33,'5101220250725513','mastercard','NOK','$8.16','NASDAQ'),(2826,92,'5602219884437366','bankcard','EUR','$1.87','NASDAQ'),(2827,71,'6333140346780421','switch','IDR','$5.86','NASDAQ'),(2828,31,'3586325635309336','jcb','KZT','$4.69','NYSE'),(2829,91,'5602235151120329','bankcard','IDR','$8.82','NASDAQ'),(2830,97,'3584012208715055','jcb','EUR','$6.38','NASDAQ'),(2831,43,'3588272930451041','jcb','CNY','$7.92','NYSE'),(2832,54,'5602214715668230','bankcard','LTL','$6.09','NASDAQ'),(2833,5,'5100147184116140','mastercard','RWF','$0.69','NYSE'),(2834,69,'3532964694820026','jcb','NGN','$3.96','NYSE'),(2835,4,'3574141256071129','jcb','SEK','$9.67','NASDAQ'),(2836,90,'3554543172321955','jcb','CNY','$3.28','NASDAQ'),(2837,47,'3587370470726250','jcb','RUB','$5.78','NYSE'),(2838,90,'3545071276366892','jcb','SEK','$0.84','NYSE'),(2839,100,'3532186872452964','jcb','CNY','$2.55','NASDAQ'),(2840,55,'3564634021383227','jcb','CAD','$0.04','NASDAQ'),(2841,50,'3537082514386618','jcb','PHP','$6.27','NYSE'),(2842,87,'5100179072771173','mastercard','IDR','$1.67','NASDAQ'),(2843,73,'4017959696469','visa','BRL','$1.37','NYSE'),(2844,30,'3545846910996695','jcb','CNY','$5.07','NASDAQ'),(2845,81,'3587111249944273','jcb','ETB','$3.40','NASDAQ'),(2846,10,'348190005268602','americanexpress','PHP','$2.09','NASDAQ'),(2847,85,'3579589448728847','jcb','CNY','$9.88','NASDAQ'),(2848,12,'6304170507537737','laser','IDR','$3.02','NASDAQ'),(2849,92,'3542699353635509','jcb','NZD','$4.03','NYSE'),(2850,95,'201558658226430','diners-club-enroute','BRL','$9.42','NASDAQ'),(2851,88,'3541409059928807','jcb','CNY','$8.22','NYSE'),(2852,62,'67714887163895135','laser','THB','$1.99','NASDAQ'),(2853,60,'3542784025352665','jcb','IDR','$0.55','NASDAQ'),(2854,13,'201419495004326','diners-club-enroute','IDR','$2.34','NYSE'),(2855,59,'3556960321912286','jcb','EUR','$7.03','NASDAQ'),(2856,12,'3569333746092032','jcb','NPR','$9.08','NYSE'),(2857,77,'3545314266235218','jcb','THB','$7.39','NASDAQ'),(2858,68,'5602232667316632','bankcard','COP','$9.42','NASDAQ'),(2859,41,'6759908991728307867','switch','PLN','$9.12','NASDAQ'),(2860,65,'3532513810206188','jcb','CNY','$0.99','NYSE'),(2861,6,'6381835027679468','instapayment','PLN','$0.70','NASDAQ'),(2862,60,'5602236105898721','bankcard','SEK','$5.77','NASDAQ'),(2863,28,'5010121034387309','mastercard','BRL','$9.36','NYSE'),(2864,80,'67712110446119922','laser','PLN','$5.15','NASDAQ'),(2865,6,'348034862108164','americanexpress','CNY','$6.30','NYSE'),(2866,12,'3548601767782731','jcb','IDR','$7.26','NYSE'),(2867,92,'5018355360411517184','maestro','VND','$5.80','NYSE'),(2868,9,'201977471765947','diners-club-enroute','UAH','$4.95','NYSE'),(2869,38,'3579526892670067','jcb','CUP','$9.56','NASDAQ'),(2870,66,'30519453128020','diners-club-carte-blanche','CNY','$1.66','NYSE'),(2871,84,'6304640410075736','laser','CNY','$9.03','NYSE'),(2872,62,'4911233623576298840','switch','UGX','$4.87','NYSE'),(2873,23,'3571360034232323','jcb','JOD','$9.31','NASDAQ'),(2874,92,'3561402572148362','jcb','COP','$5.15','NASDAQ'),(2875,45,'3579983264738966','jcb','EUR','$5.92','NYSE'),(2876,80,'5007660422840978','mastercard','JPY','$4.81','NYSE'),(2877,86,'374288889921069','americanexpress','ILS','$2.94','NYSE'),(2878,30,'6395704221629329','instapayment','NGN','$5.49','NYSE'),(2879,83,'4175007468540410','visa-electron','BRL','$6.64','NYSE'),(2880,4,'5602252618691757647','china-unionpay','PLN','$6.35','NASDAQ'),(2881,89,'5610334975382536','bankcard','CAD','$4.54','NYSE'),(2882,53,'5313917131064632','mastercard','IDR','$6.49','NASDAQ'),(2883,26,'5602226659309738','bankcard','BYR','$4.56','NASDAQ'),(2884,16,'5236553821078642','mastercard','EUR','$9.33','NYSE'),(2885,79,'3577276431163636','jcb','XOF','$6.80','NYSE'),(2886,97,'3538266230775209','jcb','SDG','$7.61','NYSE'),(2887,12,'3533805744860554','jcb','AMD','$7.36','NYSE'),(2888,82,'3534912031576700','jcb','CNY','$4.89','NASDAQ'),(2889,44,'3537373644485499','jcb','CZK','$0.84','NYSE'),(2890,8,'3540914327963149','jcb','CNY','$9.62','NASDAQ'),(2891,38,'30382365703889','diners-club-carte-blanche','PLN','$7.40','NASDAQ'),(2892,45,'3577856257575920','jcb','CNY','$3.13','NYSE'),(2893,57,'3582947230857841','jcb','CAD','$2.58','NASDAQ'),(2894,35,'589374314877993472','maestro','CRC','$7.26','NYSE'),(2895,81,'30276647120708','diners-club-carte-blanche','EUR','$0.11','NYSE'),(2896,66,'3568005084143640','jcb','USD','$9.14','NASDAQ'),(2897,19,'5108755346781015','mastercard','USD','$4.61','NASDAQ'),(2898,61,'201995866630393','diners-club-enroute','PHP','$6.88','NASDAQ'),(2899,21,'67717775445858046','laser','PLN','$5.05','NYSE'),(2900,33,'6383630690220700','instapayment','XOF','$4.41','NASDAQ'),(2901,16,'4844443822056036','visa-electron','SEK','$8.75','NYSE'),(2902,39,'372301613110800','americanexpress','CNY','$4.91','NASDAQ'),(2903,13,'3575982859620005','jcb','CNY','$9.25','NASDAQ'),(2904,10,'3574804783474781','jcb','BRL','$6.47','NYSE'),(2905,98,'676152399027224806','maestro','USD','$6.83','NASDAQ'),(2906,60,'675926943842757032','switch','AZN','$6.66','NASDAQ'),(2907,94,'3565025880292337','jcb','PEN','$6.31','NYSE'),(2908,34,'3578246743147261','jcb','SEK','$1.06','NYSE'),(2909,35,'3589907235975405','jcb','KRW','$8.15','NYSE'),(2910,62,'3545281417342880','jcb','PLN','$0.49','NYSE'),(2911,96,'3569031027864976','jcb','CNY','$0.34','NASDAQ'),(2912,69,'3589098806435837','jcb','MXN','$4.01','NYSE'),(2913,20,'67712065805244572','laser','IDR','$6.44','NASDAQ'),(2914,95,'5602244606021926','bankcard','CNY','$8.90','NYSE'),(2915,49,'633343711836673802','switch','CNY','$9.17','NASDAQ'),(2916,83,'3550640263578990','jcb','PHP','$5.11','NASDAQ'),(2917,5,'56022390215589053','china-unionpay','BRL','$6.74','NASDAQ'),(2918,63,'6388826094635395','instapayment','EUR','$7.88','NASDAQ'),(2919,86,'5534587467923355','mastercard','EUR','$1.12','NYSE'),(2920,83,'201924704417649','diners-club-enroute','ARS','$4.49','NASDAQ'),(2921,64,'633342962048868216','switch','IDR','$4.05','NASDAQ'),(2922,12,'3563109233328014','jcb','CNY','$5.50','NYSE'),(2923,27,'63044408626460092','laser','RUB','$7.97','NASDAQ'),(2924,62,'3535609175280508','jcb','CNY','$8.74','NASDAQ'),(2925,75,'3581935875985606','jcb','MUR','$5.06','NYSE'),(2926,84,'3576428735342157','jcb','CNY','$9.44','NYSE'),(2927,69,'5007661830985546','mastercard','EUR','$8.12','NYSE'),(2928,13,'3561644796485522','jcb','IDR','$2.43','NYSE'),(2929,14,'3547159901977478','jcb','CNY','$9.11','NASDAQ'),(2930,48,'3558762753027767','jcb','EUR','$8.24','NASDAQ'),(2931,48,'3582365125004678','jcb','PKR','$4.67','NYSE'),(2932,13,'5106620495306901','mastercard','CNY','$7.90','NYSE'),(2933,61,'3529436158351900','jcb','VEF','$3.68','NASDAQ'),(2934,40,'5243279282379789','mastercard','CNY','$0.20','NYSE'),(2935,89,'3580861918038065','jcb','PLN','$0.96','NYSE'),(2936,64,'374630618204343','americanexpress','MXN','$8.80','NASDAQ'),(2937,39,'3575898605055124','jcb','LYD','$7.37','NYSE'),(2938,86,'5100148144863961','mastercard','CNY','$2.20','NASDAQ'),(2939,83,'3554078609741822','jcb','SAR','$2.19','NASDAQ'),(2940,71,'5602244706458655','bankcard','IDR','$0.57','NASDAQ'),(2941,44,'6304134960879010','maestro','RUB','$6.37','NYSE'),(2942,22,'5156041443797357','mastercard','EUR','$3.21','NASDAQ'),(2943,56,'4017959131806','visa','HRK','$9.49','NYSE'),(2944,19,'3584611639656588','jcb','CNY','$4.12','NASDAQ'),(2945,27,'4508397291843000','visa-electron','TND','$2.61','NYSE'),(2946,9,'3556129369634596','jcb','EUR','$1.00','NASDAQ'),(2947,76,'3570288392033713','jcb','USD','$9.39','NASDAQ'),(2948,70,'6761994718182354981','maestro','MAD','$5.68','NASDAQ'),(2949,44,'5002352520870546','mastercard','ALL','$9.59','NASDAQ'),(2950,67,'3539253606460698','jcb','NPR','$1.01','NASDAQ'),(2951,4,'5020758032944934','maestro','PHP','$4.33','NASDAQ'),(2952,69,'5610630261439900','china-unionpay','THB','$8.58','NYSE'),(2953,21,'3558486076812768','jcb','PLN','$6.29','NYSE'),(2954,95,'3548625534313546','jcb','GTQ','$6.90','NASDAQ'),(2955,95,'5048370117610980','mastercard','PKR','$9.58','NYSE'),(2956,12,'676767358176521260','solo','MAD','$7.79','NASDAQ'),(2957,18,'5348217018926881','mastercard','IDR','$6.72','NASDAQ'),(2958,71,'4405627233474785','visa-electron','UAH','$3.22','NYSE'),(2959,63,'3578518631260079','jcb','CNY','$6.77','NYSE'),(2960,11,'3559428210265973','jcb','MAD','$7.06','NASDAQ'),(2961,98,'374720685615420','americanexpress','CNY','$4.14','NASDAQ'),(2962,77,'3545471782848740','jcb','PKR','$3.33','NYSE'),(2963,90,'3541641601509319','jcb','EUR','$1.81','NASDAQ'),(2964,51,'3563286024645812','jcb','EUR','$9.83','NASDAQ'),(2965,4,'201730429224396','diners-club-enroute','HUF','$3.45','NYSE'),(2966,98,'30032573980148','diners-club-carte-blanche','RUB','$0.25','NASDAQ'),(2967,63,'633110294854807405','switch','KES','$9.04','NASDAQ'),(2968,15,'3547323255034183','jcb','IDR','$8.12','NYSE'),(2969,35,'3562690642687141','jcb','EUR','$5.79','NASDAQ'),(2970,32,'6759363619155007','switch','PLN','$9.47','NYSE'),(2971,62,'4917205416272879','visa-electron','ILS','$4.91','NASDAQ'),(2972,53,'3555600183297613','jcb','EUR','$7.61','NYSE'),(2973,67,'3564582590715685','jcb','IDR','$3.07','NYSE'),(2974,100,'3546728656691988','jcb','CNY','$5.58','NYSE'),(2975,26,'5602245813944602','bankcard','CNY','$1.74','NYSE'),(2976,55,'3574708207633775','jcb','BDT','$2.99','NYSE'),(2977,76,'4017953652260','visa','COP','$9.91','NASDAQ'),(2978,29,'67627488477834419','maestro','NIO','$0.41','NASDAQ'),(2979,55,'3582946548383979','jcb','XAF','$2.39','NYSE'),(2980,95,'670657040909535884','laser','MYR','$8.10','NASDAQ'),(2981,17,'4041594823379','visa','IDR','$3.48','NYSE'),(2982,88,'3542995582409348','jcb','THB','$5.54','NASDAQ'),(2983,25,'3577212638437473','jcb','CNY','$1.65','NYSE'),(2984,88,'3560311320578427','jcb','EUR','$2.41','NYSE'),(2985,54,'372301597427535','americanexpress','EUR','$3.49','NASDAQ'),(2986,91,'676180322635574277','maestro','SYP','$1.48','NYSE'),(2987,88,'5893762770048878','maestro','BRL','$8.41','NASDAQ'),(2988,6,'201862348637356','diners-club-enroute','EUR','$0.86','NYSE'),(2989,8,'3588583037358420','jcb','RUB','$8.82','NASDAQ'),(2990,81,'3545446509505443','jcb','CNY','$9.65','NASDAQ'),(2991,26,'4905290424831762072','switch','ARS','$1.08','NASDAQ'),(2992,3,'560225382126237068','china-unionpay','SZL','$7.34','NYSE'),(2993,97,'3546705590973185','jcb','EUR','$9.86','NYSE'),(2994,61,'3553389148562012','jcb','CNY','$2.57','NASDAQ'),(2995,42,'5602214188918195','bankcard','IDR','$7.88','NYSE'),(2996,55,'3554166011678615','jcb','NZD','$0.88','NYSE'),(2997,8,'3572365961232328','jcb','SEK','$0.72','NASDAQ'),(2998,52,'6759057689402028762','switch','JOD','$3.31','NYSE'),(2999,60,'630422522787304341','maestro','RUB','$1.96','NASDAQ'),(3000,26,'3544352256953219','jcb','JPY','$4.20','NYSE'),(3001,86,'3562338440683777','jcb','CAD','$9.98','NASDAQ'),(3002,56,'490538035946981024','switch','CNY','$4.83','NASDAQ'),(3003,24,'6709886627935565','laser','UAH','$3.75','NASDAQ'),(3004,3,'374622759142200','americanexpress','CZK','$4.09','NASDAQ'),(3005,85,'5231384252618689','mastercard','AZN','$2.49','NASDAQ'),(3006,74,'344911237832145','americanexpress','CNY','$4.12','NASDAQ'),(3007,18,'3531529946602042','jcb','CNY','$0.16','NASDAQ'),(3008,68,'3556748741802983','jcb','TZS','$0.83','NASDAQ'),(3009,45,'5602247807730005','china-unionpay','MVR','$1.40','NASDAQ'),(3010,45,'6399213311756295','instapayment','BND','$8.48','NYSE'),(3011,75,'3570980405384493','jcb','IDR','$0.24','NASDAQ'),(3012,98,'3568172633819185','jcb','SEK','$0.63','NYSE'),(3013,70,'374288260848287','americanexpress','PLN','$7.86','NASDAQ'),(3014,48,'3560932033000266','jcb','RUB','$7.96','NYSE'),(3015,22,'3535325162259989','jcb','SEK','$4.69','NASDAQ'),(3016,37,'4041374944999','visa','CNY','$9.50','NYSE'),(3017,19,'3578994841487663','jcb','SEK','$6.95','NASDAQ'),(3018,80,'374283600886469','americanexpress','EUR','$6.52','NASDAQ'),(3019,38,'5038306109517470','maestro','PEN','$8.05','NYSE'),(3020,69,'3537853845044393','jcb','GMD','$9.78','NYSE'),(3021,51,'3539280935406407','jcb','PHP','$5.09','NASDAQ'),(3022,36,'3529560216682632','jcb','IDR','$9.82','NASDAQ'),(3023,98,'6333740279905832600','switch','CNY','$8.29','NASDAQ'),(3024,79,'3537982443705731','jcb','CNY','$3.18','NYSE'),(3025,1,'502041289530009443','maestro','PLN','$4.02','NASDAQ'),(3026,24,'3586787648619540','jcb','IDR','$3.43','NASDAQ'),(3027,84,'0604357745263792','maestro','IDR','$4.06','NYSE'),(3028,35,'374288975027854','americanexpress','KPW','$7.98','NYSE'),(3029,41,'3539532807277971','jcb','PLN','$2.70','NYSE'),(3030,5,'201711644336314','diners-club-enroute','THB','$5.72','NYSE'),(3031,79,'3569726891442607','jcb','ETB','$7.85','NYSE'),(3032,76,'3543144617264704','jcb','BRL','$9.64','NYSE'),(3033,44,'3572887972207247','jcb','CNY','$2.53','NYSE'),(3034,85,'50389230628664582','maestro','PHP','$4.56','NASDAQ'),(3035,95,'5048372650326941','mastercard','CNY','$2.68','NASDAQ'),(3036,19,'676147532703906365','maestro','IDR','$3.65','NYSE'),(3037,73,'3548290347803587','jcb','DOP','$7.41','NASDAQ'),(3038,8,'5602247127421950306','china-unionpay','ARS','$0.11','NASDAQ'),(3039,19,'201716080117730','diners-club-enroute','AFN','$8.22','NYSE'),(3040,49,'3568055357653965','jcb','EUR','$6.19','NYSE'),(3041,78,'6372354879699500','instapayment','EUR','$2.13','NASDAQ'),(3042,4,'4026051390411796','visa-electron','USD','$4.32','NYSE'),(3043,40,'3571684373961188','jcb','EUR','$2.53','NASDAQ'),(3044,58,'6771021670868066','laser','RUB','$4.17','NYSE'),(3045,41,'4405463728681209','visa-electron','IDR','$4.32','NASDAQ'),(3046,20,'5256197109755045','mastercard','VEF','$5.80','NYSE'),(3047,44,'3572251103902939','jcb','EUR','$1.54','NYSE'),(3048,40,'4844249657688276','visa-electron','THB','$8.10','NYSE'),(3049,49,'3558758399844565','jcb','ARS','$9.23','NASDAQ'),(3050,104,'5276581602602364','VISA','PLN','$6.32','NYSE'),(3051,74,'5602253988965469','bankcard','CNY','$4.51','NYSE'),(3052,11,'5602222732018610','bankcard','EUR','$5.77','NYSE'),(3053,12,'3546399271093495','jcb','PHP','$1.86','NYSE'),(3054,81,'3589205061654404','jcb','CNY','$7.08','NASDAQ'),(3055,73,'5100133766133216','mastercard','IDR','$9.67','NASDAQ'),(3056,60,'3531559261018086','jcb','ILS','$6.91','NYSE'),(3057,18,'3575453607300324','jcb','BRL','$0.87','NYSE'),(3058,93,'6767407901010923','solo','PYG','$0.18','NYSE'),(3059,80,'3536524834508927','jcb','CNY','$1.47','NASDAQ'),(3060,17,'3540566696821108','jcb','NGN','$7.52','NASDAQ'),(3061,90,'3564188800518347','jcb','TRY','$2.62','NASDAQ'),(3062,77,'5602254078105735','bankcard','CNY','$9.01','NYSE'),(3063,85,'5125919704376615','mastercard','TZS','$3.70','NASDAQ'),(3064,85,'6304111745714571','laser','CAD','$4.70','NYSE'),(3065,62,'3555241014911799','jcb','MYR','$6.12','NASDAQ'),(3066,41,'4017950946616','visa','CZK','$5.89','NASDAQ'),(3067,4,'5602251502529514','bankcard','HNL','$9.70','NASDAQ'),(3068,11,'5602258934737474','bankcard','NOK','$3.26','NASDAQ'),(3069,51,'5255955855184855','mastercard','THB','$6.28','NASDAQ'),(3070,13,'3534745911166014','jcb','CAD','$9.66','NYSE'),(3071,93,'3563622802829881','jcb','PEN','$6.11','NYSE'),(3072,94,'5002352948237831','mastercard','RUB','$3.54','NYSE'),(3073,31,'3538982621472103','jcb','BRL','$4.48','NYSE'),(3074,58,'3563905042114689','jcb','CNY','$6.42','NASDAQ'),(3075,37,'676100229433064749','maestro','IDR','$2.46','NASDAQ'),(3076,78,'3582163043218524','jcb','CNY','$5.86','NYSE'),(3077,64,'06046905103095322','maestro','UAH','$4.68','NYSE'),(3078,59,'491164444948135036','switch','PHP','$3.22','NYSE'),(3079,23,'3528073539011852','jcb','SEK','$8.85','NYSE'),(3080,16,'5602229446764215','bankcard','CNY','$2.56','NYSE'),(3081,30,'3575032932153655','jcb','COP','$5.94','NASDAQ'),(3082,54,'3530986501821360','jcb','PLN','$6.74','NYSE'),(3083,6,'30492039602530','diners-club-carte-blanche','EUR','$9.38','NASDAQ'),(3084,76,'3543362070520970','jcb','GTQ','$1.05','NASDAQ'),(3085,13,'3577872776380510','jcb','CNY','$9.26','NYSE'),(3086,21,'5641822349529278049','switch','PLN','$4.92','NYSE'),(3087,40,'3538448324162367','jcb','CNY','$8.74','NYSE'),(3088,55,'30404110267828','diners-club-carte-blanche','CNY','$6.71','NYSE'),(3089,94,'3588766144637386','jcb','IDR','$4.87','NYSE'),(3090,71,'3582252845429130','jcb','ARS','$5.83','NYSE'),(3091,18,'3576876992616871','jcb','IDR','$5.04','NYSE'),(3092,76,'3535661406104882','jcb','EUR','$3.90','NYSE'),(3093,34,'3574968468599194','jcb','RUB','$4.55','NASDAQ'),(3094,8,'5007666295216428','mastercard','USD','$7.14','NYSE'),(3095,14,'3558208030694201','jcb','PLN','$9.17','NYSE'),(3096,81,'5518679238108521','mastercard','IDR','$7.49','NYSE'),(3097,45,'4911837276612327','switch','CZK','$8.36','NASDAQ'),(3098,11,'3580729646640116','jcb','YER','$5.54','NASDAQ'),(3099,35,'6771689872052317526','laser','EUR','$3.67','NYSE'),(3100,63,'3555465512065002','jcb','IDR','$1.17','NYSE'),(3101,65,'3569592628088380','jcb','EUR','$2.53','NYSE'),(3102,79,'3572162711438762','jcb','RSD','$9.90','NYSE'),(3103,37,'4041599883982518','visa','XAF','$8.07','NYSE'),(3104,9,'4041379875347','visa','MXN','$2.38','NASDAQ'),(3105,86,'36296168958959','diners-club-international','KZT','$6.15','NYSE'),(3106,49,'5311897721645861','mastercard','ARS','$6.24','NASDAQ'),(3107,14,'4041374288889126','visa','RUB','$6.35','NYSE'),(3108,17,'3574980650553756','jcb','ILS','$7.59','NYSE'),(3109,84,'3561426657794493','jcb','EUR','$5.80','NASDAQ'),(3110,49,'3535104824272023','jcb','IDR','$0.82','NYSE'),(3111,45,'201438437742934','diners-club-enroute','ZAR','$8.05','NYSE'),(3112,58,'372301139786646','americanexpress','LTL','$9.00','NYSE'),(3113,33,'5400700358927861','mastercard','XAF','$0.90','NYSE'),(3114,27,'6381924489019338','instapayment','RUB','$0.11','NASDAQ'),(3115,26,'676711235477204704','solo','BRL','$2.84','NYSE'),(3116,63,'36940227439390','diners-club-international','ILS','$7.87','NASDAQ'),(3117,69,'3544252849253459','jcb','IDR','$7.29','NYSE'),(3118,68,'3530352224319150','jcb','PHP','$7.17','NYSE'),(3119,26,'30177591849161','diners-club-carte-blanche','BRL','$7.48','NASDAQ'),(3120,87,'3532961853738981','jcb','MNT','$1.94','NASDAQ'),(3121,83,'3556021650959511','jcb','UGX','$2.73','NASDAQ'),(3122,9,'56022108134854485','china-unionpay','BRL','$0.65','NASDAQ'),(3123,6,'5207115463128310','mastercard','PLN','$8.43','NASDAQ'),(3124,58,'67716071075893649','laser','EUR','$8.48','NYSE'),(3125,51,'3575384869041902','jcb','PHP','$3.30','NASDAQ'),(3126,42,'5138583241763712','mastercard','PLN','$6.34','NASDAQ'),(3127,43,'3586135665331419','jcb','CNY','$8.44','NYSE'),(3128,23,'6384359101404559','instapayment','XOF','$4.18','NYSE'),(3129,15,'3538809618050834','jcb','CAD','$4.83','NASDAQ'),(3130,59,'3543930219721798','jcb','EUR','$5.04','NYSE'),(3131,50,'3568833146284999','jcb','PLN','$1.87','NYSE'),(3132,25,'6771915330739853914','laser','UAH','$8.25','NYSE'),(3133,80,'5893901564373692','maestro','EUR','$6.30','NASDAQ'),(3134,90,'6333856582880530','switch','EUR','$1.38','NYSE'),(3135,87,'5442814483058342','mastercard','CNY','$1.18','NASDAQ'),(3136,47,'30055588633469','diners-club-carte-blanche','IDR','$3.81','NYSE'),(3137,1,'201423413497208','diners-club-enroute','CNY','$4.89','NASDAQ'),(3138,26,'372301682854312','americanexpress','CNY','$9.94','NYSE'),(3139,35,'6377810938414491','instapayment','PHP','$5.13','NYSE'),(3140,26,'4041595081219588','visa','JPY','$6.52','NASDAQ'),(3141,29,'4405716697818528','visa-electron','RUB','$9.23','NASDAQ'),(3142,78,'5018688755320911444','maestro','EUR','$6.46','NASDAQ'),(3143,21,'3569512306028995','jcb','EUR','$1.61','NYSE'),(3144,4,'675994286181890213','maestro','CNY','$4.98','NYSE'),(3145,48,'3570171079000595','jcb','MDL','$3.12','NYSE'),(3146,73,'3555893384542867','jcb','CNY','$8.96','NASDAQ'),(3147,74,'6759532041380975','switch','BAM','$7.32','NYSE'),(3148,50,'374622648671336','americanexpress','CZK','$0.77','NYSE'),(3149,51,'6762735976402673','maestro','MXN','$1.30','NASDAQ'),(3150,96,'3582313237797094','jcb','RSD','$9.69','NASDAQ'),(3151,42,'3544200546047609','jcb','CAD','$2.75','NYSE'),(3152,4,'374210784865878','americanexpress','CNY','$5.66','NASDAQ'),(3153,37,'676784773159423806','solo','PEN','$7.91','NASDAQ'),(3154,11,'4903502095475831','switch','IDR','$7.46','NASDAQ'),(3155,74,'6761446485335179','maestro','PHP','$4.63','NYSE'),(3156,83,'201716177042288','diners-club-enroute','MUR','$3.65','NYSE'),(3157,44,'4041372172916','visa','CNY','$7.29','NASDAQ'),(3158,49,'201561814092423','diners-club-enroute','IDR','$0.69','NYSE'),(3159,47,'3586196806005361','jcb','IDR','$0.75','NASDAQ'),(3160,38,'3529243414398703','jcb','PLN','$6.64','NASDAQ'),(3161,58,'3566566326340452','jcb','IDR','$1.79','NYSE'),(3162,28,'337941572582251','americanexpress','PEN','$0.57','NYSE'),(3163,89,'4026783084480709','visa-electron','BGN','$7.98','NYSE'),(3164,37,'30286014143381','diners-club-carte-blanche','VEF','$4.27','NASDAQ'),(3165,53,'3559032488694052','jcb','CNY','$4.97','NYSE'),(3166,76,'30496604336572','diners-club-carte-blanche','IDR','$9.48','NASDAQ'),(3167,50,'5602237626049306405','china-unionpay','IDR','$3.06','NASDAQ'),(3168,25,'3576876299427832','jcb','RUB','$9.49','NYSE'),(3169,3,'0604832327633711','maestro','BRL','$4.37','NASDAQ'),(3170,53,'5582867896195903','mastercard','EUR','$1.65','NASDAQ'),(3171,79,'3554476630164701','jcb','RUB','$7.64','NASDAQ'),(3172,42,'3540116382181233','jcb','RUB','$9.44','NYSE'),(3173,54,'30392469474055','diners-club-carte-blanche','EUR','$9.21','NASDAQ'),(3174,3,'30366226527140','diners-club-carte-blanche','SEK','$3.89','NASDAQ'),(3175,86,'4913136398960559','visa-electron','IDR','$1.53','NYSE'),(3176,38,'5048377479781937','mastercard','CNY','$3.67','NASDAQ'),(3177,5,'374288682522668','americanexpress','PLN','$3.17','NASDAQ'),(3178,3,'3565583638841581','jcb','SEK','$6.78','NYSE'),(3179,58,'6393517608281239','instapayment','EUR','$8.17','NYSE'),(3180,13,'3550919750328121','jcb','IDR','$8.47','NYSE'),(3181,64,'3547120087335840','jcb','IDR','$1.36','NASDAQ'),(3182,8,'5602220229445833','bankcard','IDR','$2.91','NYSE'),(3183,32,'3555699866276910','jcb','BGN','$5.46','NYSE'),(3184,35,'3583822004114571','jcb','EUR','$7.75','NASDAQ'),(3185,56,'3546510239411369','jcb','CNY','$7.47','NYSE'),(3186,18,'6373258228361952','instapayment','CNY','$4.39','NYSE'),(3187,68,'3541072223654947','jcb','IDR','$6.23','NASDAQ'),(3188,56,'201432192302604','diners-club-enroute','PHP','$5.12','NYSE'),(3189,61,'560221473418461872','china-unionpay','PHP','$4.12','NYSE'),(3190,5,'5602233348728229','bankcard','MUR','$5.77','NYSE'),(3191,55,'201621683895577','diners-club-enroute','DOP','$5.68','NYSE'),(3192,98,'5501914140274015','mastercard','CNY','$4.41','NYSE'),(3193,97,'3539191905489556','jcb','MUR','$6.60','NYSE'),(3194,78,'6762142571965807645','maestro','CNY','$8.83','NASDAQ'),(3195,8,'337941112686638','americanexpress','USD','$3.52','NASDAQ'),(3196,68,'3549321783440326','jcb','CNY','$2.52','NASDAQ'),(3197,76,'3580462131145421','jcb','IDR','$6.58','NYSE'),(3198,24,'676786161479095546','solo','CNY','$6.95','NASDAQ'),(3199,1,'4903881986193004','switch','PLN','$0.74','NASDAQ'),(3200,12,'4041374809523','visa','PLN','$8.35','NASDAQ'),(3201,70,'4911550696491244425','switch','EUR','$8.81','NASDAQ'),(3202,48,'3565006397554526','jcb','COP','$4.11','NYSE'),(3203,29,'4175004281793557','visa-electron','COP','$7.99','NASDAQ'),(3204,40,'201673659524848','diners-club-enroute','CNY','$0.77','NYSE'),(3205,19,'3567033617706288','jcb','CNY','$3.12','NASDAQ'),(3206,82,'3571832490023685','jcb','NZD','$6.12','NASDAQ'),(3207,93,'060437009598977930','maestro','CNY','$4.22','NYSE'),(3208,22,'3589564680328042','jcb','SEK','$3.81','NASDAQ'),(3209,53,'5602210499314034982','china-unionpay','IDR','$4.20','NYSE'),(3210,77,'4026027520100533','visa-electron','IDR','$7.71','NYSE'),(3211,72,'3568767397574767','jcb','RUB','$4.31','NASDAQ'),(3212,89,'4405774776309786','visa-electron','RSD','$2.12','NYSE'),(3213,77,'3552040607491190','jcb','EUR','$8.42','NYSE'),(3214,73,'3537219825161666','jcb','EUR','$8.21','NYSE'),(3215,36,'5193508059340164','mastercard','SEK','$6.17','NYSE'),(3216,4,'3577071526563513','jcb','JMD','$3.09','NYSE'),(3217,90,'3563371306487008','jcb','CNY','$8.65','NASDAQ'),(3218,66,'5100138201996754','mastercard','PLN','$6.42','NYSE'),(3219,59,'3539194739169543','jcb','PHP','$0.37','NYSE'),(3220,94,'3577602919665836','jcb','USD','$5.63','NASDAQ'),(3221,69,'5048373071726719','mastercard','KES','$4.52','NASDAQ'),(3222,56,'5007663366783774','mastercard','BRL','$1.68','NYSE'),(3223,33,'3532286548335062','jcb','BRL','$1.06','NASDAQ'),(3224,67,'5602229628324333','bankcard','USD','$6.92','NASDAQ'),(3225,35,'67639588789210657','maestro','SEK','$2.36','NYSE'),(3226,51,'4508054994985923','visa-electron','VND','$9.51','NYSE'),(3227,99,'3562898322172074','jcb','PLN','$2.26','NYSE'),(3228,8,'3574090166402793','jcb','CNY','$3.08','NASDAQ'),(3229,48,'6763210958291604124','maestro','BRL','$7.20','NYSE'),(3230,87,'5048373021134550','mastercard','THB','$7.33','NASDAQ'),(3231,21,'3555818501732588','jcb','PHP','$5.25','NYSE'),(3232,43,'5048373817069515','mastercard','EUR','$5.96','NASDAQ'),(3233,37,'3579524473926297','jcb','IDR','$8.12','NASDAQ'),(3234,62,'3543683373860023','jcb','THB','$8.86','NYSE'),(3235,49,'6334593989187190578','solo','PHP','$1.86','NYSE'),(3236,67,'4043206215689','visa','CAD','$7.43','NASDAQ'),(3237,77,'3587777300521927','jcb','UZS','$5.42','NYSE'),(3238,99,'3586246032330289','jcb','GBP','$1.55','NYSE'),(3239,37,'3563519992916868','jcb','CNY','$9.45','NYSE'),(3240,26,'6384883619884275','instapayment','CNY','$7.42','NYSE'),(3241,58,'3548182986712007','jcb','CNY','$2.62','NASDAQ'),(3242,39,'3559368580949238','jcb','BRL','$9.24','NYSE'),(3243,82,'3545665264171980','jcb','CNY','$8.00','NASDAQ'),(3244,42,'3584390723267434','jcb','EUR','$9.37','NYSE'),(3245,29,'3555239777522449','jcb','CNY','$3.47','NYSE'),(3246,100,'337941694577098','americanexpress','EUR','$5.15','NYSE'),(3247,49,'5108758745246754','mastercard','PKR','$6.21','NASDAQ'),(3248,57,'3533754454377021','jcb','USD','$1.53','NASDAQ'),(3249,77,'676318712146897123','maestro','USD','$5.95','NASDAQ'),(3250,36,'5521786635055448','mastercard','BSD','$3.45','NYSE'),(3251,31,'30160184055180','diners-club-carte-blanche','DKK','$9.15','NASDAQ'),(3252,80,'337941616510342','americanexpress','PAB','$2.52','NASDAQ'),(3253,36,'6759261101494001','maestro','CNY','$7.01','NASDAQ'),(3254,5,'372301339612261','americanexpress','IDR','$3.92','NASDAQ'),(3255,4,'5506276140941000','diners-club-us-ca','CNY','$4.00','NASDAQ'),(3256,5,'5602231128624816','bankcard','IDR','$2.51','NYSE'),(3257,48,'30346970798725','diners-club-carte-blanche','CNY','$6.58','NASDAQ'),(3258,5,'5602212294851453036','china-unionpay','RUB','$2.60','NASDAQ'),(3259,24,'3561489418122024','jcb','COP','$2.90','NASDAQ'),(3260,54,'3589525305084591','jcb','EUR','$5.34','NASDAQ'),(3261,20,'0604889170360669','maestro','HNL','$7.66','NYSE'),(3262,69,'5602227412856605805','china-unionpay','CNY','$1.02','NASDAQ'),(3263,50,'560222952559264384','china-unionpay','EUR','$8.27','NYSE'),(3264,61,'6377701644893948','instapayment','CNY','$9.52','NASDAQ'),(3265,87,'3556933303562338','jcb','KZT','$4.33','NYSE'),(3266,27,'3584849258126083','jcb','EUR','$4.00','NASDAQ'),(3267,25,'6709889998126114132','laser','RUB','$9.95','NASDAQ'),(3268,45,'3528892926206944','jcb','IDR','$9.87','NASDAQ'),(3269,26,'4577649575929970','visa','PHP','$8.52','NYSE'),(3270,20,'589382784460501801','maestro','VEF','$7.84','NYSE'),(3271,37,'4175001924914426','visa-electron','PEN','$3.37','NYSE'),(3272,23,'6767940550806795','solo','CAD','$9.88','NASDAQ'),(3273,2,'3534444032180142','jcb','CNY','$1.42','NASDAQ'),(3274,49,'5641820717048339','switch','PHP','$4.15','NYSE'),(3275,77,'3587245428949073','jcb','EUR','$4.43','NYSE'),(3276,24,'493620517776834038','switch','PEN','$6.25','NASDAQ'),(3277,99,'3541002181489044','jcb','NAD','$8.79','NASDAQ'),(3278,78,'3546432146385034','jcb','USD','$6.99','NASDAQ'),(3279,15,'503803300499304406','maestro','USD','$3.34','NYSE'),(3280,3,'3584018579909524','jcb','RUB','$7.16','NYSE'),(3281,49,'4175001515041852','visa-electron','JPY','$5.46','NYSE'),(3282,94,'56022222827896487','china-unionpay','NGN','$6.02','NASDAQ'),(3283,6,'3548038595209068','jcb','VND','$3.72','NYSE'),(3284,32,'560223988656486230','china-unionpay','CNY','$9.20','NYSE'),(3285,15,'3588208720248940','jcb','COP','$1.72','NASDAQ'),(3286,58,'3567872479163314','jcb','EUR','$6.71','NYSE'),(3287,51,'4905981111006598','switch','LKR','$9.85','NASDAQ'),(3288,76,'67063444995326678','laser','SLL','$7.52','NASDAQ'),(3289,6,'676180105547456810','maestro','ARS','$9.45','NYSE'),(3290,28,'677122961901622325','laser','EUR','$8.24','NYSE'),(3291,60,'3587696746516145','jcb','BRL','$7.40','NASDAQ'),(3292,27,'3532666563274033','jcb','GEL','$6.23','NASDAQ'),(3293,95,'4405244289101666','visa-electron','EUR','$8.27','NASDAQ'),(3294,15,'5552888514527364','diners-club-us-ca','PEN','$9.47','NASDAQ'),(3295,41,'3543411193734529','jcb','EUR','$7.31','NYSE'),(3296,26,'4041593896332696','visa','CNY','$7.24','NASDAQ'),(3297,11,'30036211355290','diners-club-carte-blanche','CNY','$3.02','NASDAQ'),(3298,50,'060442395672420712','maestro','IDR','$7.64','NASDAQ'),(3299,29,'6334389090656860','solo','IDR','$5.00','NYSE'),(3300,38,'3551747212624004','jcb','CNY','$9.66','NYSE'),(3301,77,'6763051376930118','maestro','PLN','$6.38','NYSE'),(3302,70,'3580070464478317','jcb','BRL','$7.48','NYSE'),(3303,48,'56109361826418327','china-unionpay','EUR','$1.94','NYSE'),(3304,17,'3575624669575728','jcb','BRL','$0.50','NYSE'),(3305,82,'3562348214741016','jcb','ARS','$7.66','NASDAQ'),(3306,83,'201667813568287','diners-club-enroute','EUR','$9.37','NASDAQ'),(3307,62,'3581280321166638','jcb','IDR','$5.77','NASDAQ'),(3308,18,'3582826468530421','jcb','ZAR','$4.76','NYSE'),(3309,55,'4903289452470262','switch','PHP','$9.43','NASDAQ'),(3310,20,'4786635786254','visa','CNY','$2.02','NYSE'),(3311,41,'3554226782950583','jcb','SEK','$9.05','NASDAQ'),(3312,59,'6376785620368430','instapayment','IDR','$2.63','NASDAQ'),(3313,93,'337941967822254','americanexpress','RSD','$8.76','NASDAQ'),(3314,34,'3551644127963603','jcb','IDR','$9.78','NYSE'),(3315,95,'3566911869777415','jcb','UAH','$0.77','NYSE'),(3316,74,'3533638252212284','jcb','KZT','$0.47','NASDAQ'),(3317,24,'589389341274740183','maestro','CNY','$4.60','NYSE'),(3318,20,'6767391169354761','solo','RUB','$9.34','NYSE'),(3319,93,'374622796724234','americanexpress','NOK','$3.48','NASDAQ'),(3320,24,'5007664943405675','mastercard','CZK','$4.81','NASDAQ'),(3321,53,'3577529515136880','jcb','JPY','$0.91','NYSE'),(3322,13,'5100173636386727','mastercard','UAH','$6.24','NASDAQ'),(3323,73,'3577224291549080','jcb','IDR','$3.09','NASDAQ'),(3324,7,'3555713466274850','jcb','MYR','$4.68','NASDAQ'),(3325,82,'30385216395060','diners-club-carte-blanche','CNY','$8.53','NASDAQ'),(3326,62,'4905460326289562','switch','CNY','$3.92','NASDAQ'),(3327,75,'491184191145414302','switch','IDR','$8.36','NYSE'),(3328,34,'3568042157975632','jcb','KES','$7.57','NYSE'),(3329,11,'67628187876886470','maestro','GEL','$3.49','NYSE'),(3330,67,'3572943027113763','jcb','BWP','$3.56','NYSE'),(3331,28,'3587227373727456','jcb','PYG','$6.14','NYSE'),(3332,61,'3557617131178313','jcb','PHP','$3.16','NYSE'),(3333,97,'5002350745643672','mastercard','EUR','$7.15','NYSE'),(3334,59,'4026021054022023','visa-electron','PLN','$7.51','NYSE'),(3335,45,'30487586162250','diners-club-carte-blanche','EGP','$8.36','NYSE'),(3336,34,'3579448832418756','jcb','SEK','$5.02','NASDAQ'),(3337,3,'4938895360615','visa','MYR','$2.14','NYSE'),(3338,23,'633110427046940045','switch','BDT','$5.97','NYSE'),(3339,64,'5641829531043330108','switch','IDR','$6.05','NASDAQ'),(3340,23,'675924611868060050','maestro','PEN','$8.99','NASDAQ'),(3341,62,'4405294643072772','visa-electron','SEK','$5.32','NASDAQ'),(3342,81,'3531187340140034','jcb','GBP','$4.73','NYSE'),(3343,96,'6331107549122236756','switch','CNY','$8.50','NASDAQ'),(3344,1,'5108750054318399','mastercard','PLN','$4.38','NYSE'),(3345,55,'3535066875203464','jcb','IDR','$4.46','NYSE'),(3346,50,'560221974835397243','china-unionpay','COP','$0.79','NASDAQ'),(3347,76,'5048372135797112','mastercard','CNY','$9.51','NASDAQ'),(3348,70,'30194852063291','diners-club-carte-blanche','ARS','$9.71','NYSE'),(3349,73,'3573575225144320','jcb','EUR','$3.58','NYSE'),(3350,24,'561094551514994862','china-unionpay','IDR','$5.89','NASDAQ'),(3351,29,'3545106351951737','jcb','IDR','$6.12','NASDAQ'),(3352,18,'3565637910007301','jcb','BRL','$5.75','NASDAQ'),(3353,21,'67093848259198173','laser','CNY','$2.06','NYSE'),(3354,38,'56101467716444956','china-unionpay','PEN','$9.17','NASDAQ'),(3355,100,'373250935091983','americanexpress','CNY','$5.99','NASDAQ'),(3356,18,'676188993440558143','maestro','TTD','$5.64','NYSE'),(3357,24,'67097402634679964','laser','CNY','$9.89','NYSE'),(3358,94,'3531117784250064','jcb','EUR','$1.14','NASDAQ'),(3359,93,'3585383399421939','jcb','PHP','$8.58','NASDAQ'),(3360,98,'6771765316396896','laser','GTQ','$7.66','NASDAQ'),(3361,62,'201836822524041','diners-club-enroute','BRL','$2.47','NYSE'),(3362,98,'3555020134025759','jcb','IDR','$4.79','NYSE'),(3363,10,'201964478500097','diners-club-enroute','EUR','$3.95','NASDAQ'),(3364,92,'3531334641425108','jcb','PHP','$4.68','NASDAQ'),(3365,63,'5524835600981497','mastercard','JPY','$9.13','NYSE'),(3366,49,'3559078561271573','jcb','EUR','$8.29','NASDAQ'),(3367,57,'3538834324756573','jcb','IDR','$5.90','NASDAQ'),(3368,52,'564182828190648245','switch','UAH','$5.21','NASDAQ'),(3369,9,'3557688283434788','jcb','CNY','$2.51','NASDAQ'),(3370,4,'3566805680642784','jcb','CNY','$2.17','NASDAQ'),(3371,59,'4936645759920690495','switch','CNY','$1.70','NASDAQ'),(3372,67,'374288147255458','americanexpress','RUB','$0.90','NYSE'),(3373,82,'374622655003068','americanexpress','KGS','$2.09','NASDAQ'),(3374,25,'6304815929727239','maestro','CNY','$4.24','NASDAQ'),(3375,26,'374622999213027','americanexpress','CNY','$5.50','NASDAQ'),(3376,24,'3547264477155572','jcb','MXN','$2.26','NYSE'),(3377,49,'3553048408735862','jcb','ARS','$5.68','NYSE'),(3378,23,'4913253554236789','visa-electron','PLN','$2.47','NASDAQ'),(3379,7,'4041375945362134','visa','PKR','$6.68','NASDAQ'),(3380,58,'30599061562653','diners-club-carte-blanche','PLN','$6.78','NYSE'),(3381,20,'3567745225387488','jcb','IDR','$1.74','NASDAQ'),(3382,72,'493624049118080035','switch','BRL','$1.38','NASDAQ'),(3383,33,'4017955405640556','visa','CNY','$2.10','NASDAQ'),(3384,25,'3538963027235062','jcb','CNY','$8.11','NYSE'),(3385,86,'6390761629964307','instapayment','NOK','$1.64','NYSE'),(3386,26,'6761262902332590844','maestro','RUB','$2.85','NASDAQ'),(3387,62,'3546105218861005','jcb','CNY','$0.13','NASDAQ'),(3388,23,'5020714817704993','maestro','UYU','$0.91','NASDAQ'),(3389,50,'3586263815826235','jcb','CNY','$5.36','NYSE'),(3390,12,'201402766090844','diners-club-enroute','IDR','$3.23','NYSE'),(3391,100,'201857139361448','diners-club-enroute','RUB','$5.88','NASDAQ'),(3392,62,'3563801384547372','jcb','NGN','$5.53','NYSE'),(3393,35,'5893858370781270','maestro','IDR','$2.13','NASDAQ'),(3394,36,'3576068710820445','jcb','BGN','$8.89','NASDAQ'),(3395,84,'3564056015856796','jcb','USD','$1.80','NYSE'),(3396,19,'4936532740975829','switch','IDR','$9.45','NYSE'),(3397,27,'5602217145834710','china-unionpay','PLN','$7.71','NYSE'),(3398,56,'201511913997626','diners-club-enroute','THB','$1.95','NYSE'),(3399,78,'3575839631914066','jcb','CNY','$4.22','NYSE'),(3400,9,'374283726038870','americanexpress','MNT','$3.22','NYSE'),(3401,21,'3547789613032715','jcb','GTQ','$0.39','NYSE'),(3402,80,'3543524954444433','jcb','CNY','$6.40','NASDAQ'),(3403,83,'3560846842442164','jcb','BRL','$2.44','NASDAQ'),(3404,94,'5117197723236983','mastercard','VEF','$1.07','NYSE'),(3405,14,'3578810929338224','jcb','BRL','$5.70','NASDAQ'),(3406,49,'3550642575589707','jcb','PHP','$7.27','NYSE'),(3407,12,'5311219093888658','mastercard','EUR','$1.87','NASDAQ'),(3408,84,'3549136432446668','jcb','ARS','$2.16','NYSE'),(3409,53,'3542649938922690','jcb','CNY','$4.38','NASDAQ'),(3410,22,'3543162708141078','jcb','CZK','$0.97','NASDAQ'),(3411,73,'341378333820916','americanexpress','BOB','$8.87','NASDAQ'),(3412,85,'5466113407101671','diners-club-us-ca','CNY','$3.66','NASDAQ'),(3413,71,'3566578072146603','jcb','SYP','$7.23','NASDAQ'),(3414,54,'30116353763012','diners-club-carte-blanche','USD','$2.99','NASDAQ'),(3415,24,'4017951518448','visa','CNY','$4.48','NYSE'),(3416,47,'346375499892262','americanexpress','RSD','$0.75','NYSE'),(3417,67,'201783584833766','diners-club-enroute','SEK','$3.50','NASDAQ'),(3418,31,'36825485977936','diners-club-international','USD','$5.95','NASDAQ'),(3419,80,'3558599773729711','jcb','SEK','$7.67','NYSE'),(3420,66,'337941427463897','americanexpress','PLN','$4.03','NASDAQ'),(3421,53,'201470171825054','diners-club-enroute','IDR','$8.32','NYSE'),(3422,8,'5168316753548020','mastercard','IDR','$6.03','NASDAQ'),(3423,25,'3558753882593886','jcb','CNY','$8.54','NYSE'),(3424,52,'3562863933049475','jcb','SEK','$5.15','NYSE'),(3425,85,'201530748343848','diners-club-enroute','AFN','$2.93','NYSE'),(3426,46,'3568749473462083','jcb','UAH','$8.81','NYSE'),(3427,82,'50203561486393797','maestro','PHP','$8.47','NASDAQ'),(3428,64,'5100146991642165','mastercard','PHP','$3.04','NASDAQ'),(3429,93,'3557339192535048','jcb','ALL','$3.40','NASDAQ'),(3430,55,'3588809314611516','jcb','BRL','$0.68','NASDAQ'),(3431,43,'3583459610357755','jcb','EUR','$9.59','NASDAQ'),(3432,43,'3537879013334035','jcb','MYR','$2.86','NYSE'),(3433,35,'5519251576083267','mastercard','SEK','$1.69','NASDAQ'),(3434,43,'6334248010090529','solo','PHP','$0.02','NASDAQ'),(3435,86,'675919234527528933','maestro','CNY','$7.38','NASDAQ'),(3436,98,'3539974454702390','jcb','RUB','$8.14','NYSE'),(3437,29,'4017956882350677','visa','PYG','$5.59','NASDAQ'),(3438,5,'3547307909997077','jcb','KWD','$4.82','NYSE'),(3439,19,'6383333000283142','instapayment','RUB','$1.47','NYSE'),(3440,45,'3576958180453380','jcb','BGN','$6.53','NYSE'),(3441,63,'6759851143436706793','maestro','IDR','$4.73','NASDAQ'),(3442,76,'5007662649197521','mastercard','CNY','$8.22','NASDAQ'),(3443,99,'4905747714436683833','switch','EUR','$4.51','NYSE'),(3444,34,'3567332051628267','jcb','UAH','$7.16','NYSE'),(3445,100,'3550838442873056','jcb','PHP','$1.36','NYSE'),(3446,92,'3575195123647601','jcb','CNY','$9.49','NASDAQ'),(3447,74,'3589791586507060','jcb','EUR','$7.66','NASDAQ'),(3448,71,'6767041337754443336','solo','MXN','$3.10','NASDAQ'),(3449,19,'5144129257825441','mastercard','IDR','$2.11','NYSE'),(3450,44,'5010127152341242','mastercard','IDR','$0.19','NYSE'),(3451,75,'6382470786697706','instapayment','BYR','$4.39','NYSE'),(3452,76,'3528426583271329','jcb','THB','$6.81','NYSE'),(3453,77,'3573091995396504','jcb','EUR','$5.23','NASDAQ'),(3454,96,'3560631767838830','jcb','GTQ','$7.03','NYSE'),(3455,74,'4041370802118','visa','JPY','$7.14','NASDAQ'),(3456,64,'3561710956617442','jcb','CNY','$7.06','NASDAQ'),(3457,87,'5602229886383300667','china-unionpay','BRL','$9.51','NASDAQ'),(3458,99,'4917577184975192','visa-electron','ZAR','$6.55','NASDAQ'),(3459,35,'3541443434380327','jcb','IDR','$7.03','NASDAQ'),(3460,29,'201865190381775','diners-club-enroute','LKR','$3.29','NASDAQ'),(3461,43,'5569983790804735','mastercard','PHP','$1.91','NASDAQ'),(3462,17,'3550194351918213','jcb','MXN','$6.41','NASDAQ'),(3463,89,'5506341247473891','diners-club-us-ca','PHP','$7.82','NASDAQ'),(3464,9,'5373576680424675','mastercard','EUR','$6.65','NASDAQ'),(3465,6,'5454314512128385','mastercard','VND','$1.68','NYSE'),(3466,100,'372301681768158','americanexpress','CNY','$4.07','NASDAQ'),(3467,38,'3551375506400137','jcb','RUB','$2.69','NASDAQ'),(3468,73,'5048371956963340','mastercard','CLP','$1.49','NYSE'),(3469,96,'3589313685892879','jcb','BGN','$4.45','NYSE'),(3470,70,'3530604661945537','jcb','EUR','$2.12','NASDAQ'),(3471,80,'3570015135916197','jcb','EUR','$7.83','NASDAQ'),(3472,18,'5007668585856996','mastercard','CNY','$5.70','NYSE'),(3473,43,'3557716259229609','jcb','BRL','$7.59','NYSE'),(3474,85,'5602257469422288','bankcard','CNY','$0.60','NASDAQ'),(3475,96,'5602250226130047','bankcard','ZAR','$0.93','NYSE'),(3476,69,'5551022311360222','diners-club-us-ca','ALL','$9.64','NYSE'),(3477,26,'3545286896802130','jcb','IDR','$6.21','NYSE'),(3478,60,'5100147472892287','mastercard','AZN','$3.10','NYSE'),(3479,63,'3564313326247649','jcb','MNT','$0.51','NYSE'),(3480,75,'3579064459649241','jcb','CNY','$8.57','NYSE'),(3481,41,'3531461053785982','jcb','VEF','$7.25','NYSE'),(3482,27,'4017954713011261','visa','RUB','$4.51','NASDAQ'),(3483,28,'50205824428556188','maestro','IDR','$7.57','NYSE'),(3484,11,'5010120444203122','mastercard','PLN','$4.06','NYSE'),(3485,55,'67591685871465235','maestro','CNY','$4.64','NASDAQ'),(3486,98,'30405389698536','diners-club-carte-blanche','RUB','$2.73','NYSE'),(3487,65,'5466810018014074','diners-club-us-ca','CNY','$1.73','NASDAQ'),(3488,21,'3577255381035317','jcb','PHP','$1.76','NASDAQ'),(3489,12,'5108755397118984','mastercard','PLN','$0.69','NASDAQ'),(3490,63,'4844427170015918','visa-electron','CNY','$8.91','NASDAQ'),(3491,88,'372301167599002','americanexpress','CNY','$4.07','NYSE'),(3492,21,'50388026357429630','maestro','JPY','$4.50','NASDAQ'),(3493,62,'5602255006591086035','china-unionpay','HRK','$1.10','NYSE'),(3494,15,'3535568221787413','jcb','USD','$9.49','NYSE'),(3495,33,'3569838423452945','jcb','JPY','$5.53','NYSE'),(3496,70,'56022327126626178','china-unionpay','CNY','$1.11','NYSE'),(3497,41,'6304090020062761951','maestro','CNY','$9.87','NYSE'),(3498,26,'5893658739622086','maestro','IDR','$6.63','NASDAQ'),(3499,96,'4017958875973','visa','PHP','$4.15','NASDAQ'),(3500,92,'3583676463991394','jcb','SYP','$3.21','NYSE'),(3501,43,'374622805239190','americanexpress','ZWL','$3.87','NASDAQ'),(3502,97,'3570982044453994','jcb','BRL','$9.62','NASDAQ'),(3503,17,'3529684874419614','jcb','IDR','$5.36','NYSE'),(3504,44,'4041597197805','visa','LKR','$8.54','NASDAQ'),(3505,87,'3586143405821699','jcb','CNY','$4.73','NASDAQ'),(3506,19,'3543810612422196','jcb','PLN','$1.93','NASDAQ'),(3507,27,'4017957255714','visa','VND','$7.40','NASDAQ'),(3508,28,'3576552813225875','jcb','ARS','$8.64','NYSE'),(3509,90,'3543486886824936','jcb','CNY','$6.01','NASDAQ'),(3510,46,'5602237285922620','china-unionpay','CNY','$2.62','NYSE'),(3511,77,'30025603079261','diners-club-carte-blanche','IDR','$5.83','NYSE'),(3512,92,'491124372975567418','switch','CNY','$5.72','NASDAQ'),(3513,22,'5610228967501910738','china-unionpay','USD','$0.14','NYSE'),(3514,6,'5010122187122071','mastercard','IDR','$7.14','NYSE'),(3515,25,'3559163417625972','jcb','IDR','$4.78','NYSE'),(3516,47,'3542185879108189','jcb','IDR','$6.22','NASDAQ'),(3517,100,'3579193986451118','jcb','CNY','$10.00','NYSE'),(3518,34,'30260476597269','diners-club-carte-blanche','MKD','$5.50','NYSE'),(3519,20,'3577864551029305','jcb','YER','$6.80','NYSE'),(3520,82,'3567943936195817','jcb','EUR','$4.64','NASDAQ'),(3521,65,'3535105483953035','jcb','MYR','$6.92','NYSE'),(3522,46,'3574899950798046','jcb','SEK','$9.89','NYSE'),(3523,14,'491144525547206270','switch','CNY','$8.75','NASDAQ'),(3524,72,'5422582593665777','mastercard','CNY','$9.48','NYSE'),(3525,28,'3544289577757178','jcb','EUR','$0.12','NYSE'),(3526,18,'3577628304286037','jcb','RUB','$0.44','NASDAQ'),(3527,34,'3589937672078108','jcb','IDR','$8.43','NYSE'),(3528,15,'4041594717423','visa','COP','$9.94','NASDAQ'),(3529,78,'3587220402969223','jcb','MNT','$8.75','NASDAQ'),(3530,36,'5602210467750002','china-unionpay','SEK','$6.42','NASDAQ'),(3531,77,'201938372832178','diners-club-enroute','PEN','$9.29','NASDAQ'),(3532,6,'5100137270869819','mastercard','CNY','$6.38','NYSE'),(3533,91,'0604594974183443446','maestro','IDR','$6.01','NYSE'),(3534,44,'4041373934911391','visa','EUR','$1.32','NYSE'),(3535,47,'5465227137670143','mastercard','JPY','$5.97','NASDAQ'),(3536,16,'5018528942042994','maestro','IDR','$9.94','NASDAQ'),(3537,28,'337941409469268','americanexpress','CAD','$3.07','NYSE'),(3538,4,'3535990521867697','jcb','KRW','$8.10','NYSE'),(3539,12,'3556081464103912','jcb','CNY','$7.21','NASDAQ'),(3540,93,'3550823720650665','jcb','RUB','$5.97','NYSE'),(3541,50,'3588908159406451','jcb','CAD','$8.69','NYSE'),(3542,25,'3576689624242903','jcb','LYD','$6.54','NASDAQ'),(3543,12,'3565391787751811','jcb','PAB','$2.16','NASDAQ'),(3544,61,'3584030071912468','jcb','IDR','$8.75','NYSE'),(3545,44,'3538945378227921','jcb','CNY','$3.83','NYSE'),(3546,4,'374283761552876','americanexpress','CNY','$6.48','NASDAQ'),(3547,62,'6761879436444012061','maestro','USD','$8.46','NASDAQ'),(3548,56,'374283234881647','americanexpress','EUR','$8.52','NASDAQ'),(3549,96,'5007667477850976','mastercard','CNY','$1.34','NYSE'),(3550,90,'5602222414158544','bankcard','CNY','$9.05','NASDAQ'),(3551,89,'3561112680921408','jcb','CNY','$7.44','NASDAQ'),(3552,3,'6386929342330025','instapayment','GTQ','$4.27','NASDAQ'),(3553,69,'3548233660859380','jcb','CNY','$1.82','NASDAQ'),(3554,5,'630448147091745011','maestro','IDR','$7.65','NYSE'),(3555,69,'5610450612031524','bankcard','CNY','$7.73','NASDAQ'),(3556,59,'6706730937940538453','laser','CNY','$4.28','NASDAQ'),(3557,31,'4911721006451372','switch','EUR','$2.50','NASDAQ'),(3558,99,'5610270539811885','bankcard','XAF','$5.95','NYSE'),(3559,54,'3554259344158015','jcb','BOB','$4.65','NASDAQ'),(3560,77,'3573540062009291','jcb','NGN','$4.52','NASDAQ'),(3561,54,'3574812043848330','jcb','AFN','$5.29','NYSE'),(3562,2,'3564104306867674','jcb','PHP','$4.57','NASDAQ'),(3563,95,'3577335868492619','jcb','UAH','$2.69','NYSE'),(3564,6,'503803502360284076','maestro','IDR','$8.66','NASDAQ'),(3565,45,'3562321728819362','jcb','PLN','$6.14','NASDAQ'),(3566,26,'6762132080347376','maestro','USD','$6.00','NYSE'),(3567,100,'3528794873524529','jcb','CNY','$5.76','NASDAQ'),(3568,41,'5010127828834562','mastercard','EUR','$4.21','NYSE'),(3569,42,'6397831022552406','instapayment','KMF','$5.49','NYSE'),(3570,72,'3579517696075223','jcb','PLN','$2.52','NASDAQ'),(3571,86,'4041377529394749','visa','USD','$2.48','NASDAQ'),(3572,43,'4017953727845714','visa','BAM','$2.96','NASDAQ'),(3573,4,'491132218965145915','switch','PHP','$2.68','NASDAQ'),(3574,4,'5560755756267563','mastercard','EUR','$0.14','NASDAQ'),(3575,19,'374288291184439','americanexpress','CNY','$5.31','NASDAQ'),(3576,84,'3563508992556238','jcb','IDR','$5.82','NASDAQ'),(3577,24,'4017954639039016','visa','CZK','$7.32','NASDAQ'),(3578,93,'3579622651870046','jcb','EUR','$0.70','NASDAQ'),(3579,75,'50384563655921748','maestro','RUB','$8.33','NASDAQ'),(3580,34,'4844656335365384','visa-electron','VEF','$3.47','NYSE'),(3581,85,'3546577068509944','jcb','CNY','$6.88','NASDAQ'),(3582,76,'4026728087119861','visa-electron','IDR','$9.35','NYSE'),(3583,47,'6761208101898166','maestro','RUB','$9.27','NASDAQ'),(3584,30,'3538581255893715','jcb','BDT','$8.87','NASDAQ'),(3585,25,'374283760671065','americanexpress','ZWL','$7.09','NASDAQ'),(3586,43,'4905148262666469','switch','IDR','$5.79','NASDAQ'),(3587,93,'3572123617306230','jcb','MNT','$6.55','NASDAQ'),(3588,99,'3586062524477078','jcb','UAH','$4.75','NASDAQ'),(3589,87,'3530937383385107','jcb','BRL','$6.17','NYSE'),(3590,42,'5602257254591909','china-unionpay','CNY','$9.18','NASDAQ'),(3591,93,'5010124366708316','mastercard','AZN','$4.24','NASDAQ'),(3592,31,'3547887888936907','jcb','IDR','$4.96','NYSE'),(3593,75,'201560585173701','diners-club-enroute','GTQ','$1.27','NASDAQ'),(3594,61,'30417259332450','diners-club-carte-blanche','IDR','$2.80','NYSE'),(3595,64,'3535666485259689','jcb','IDR','$4.25','NYSE'),(3596,77,'5100173643585915','mastercard','YER','$9.45','NYSE'),(3597,37,'5602247607483185','bankcard','CUP','$5.49','NYSE'),(3598,31,'3568779173965101','jcb','CNY','$5.60','NYSE'),(3599,22,'3532498879798624','jcb','SEK','$9.29','NYSE'),(3600,63,'5588977938322847','diners-club-us-ca','UYU','$6.03','NASDAQ'),(3601,84,'3534203317478146','jcb','GYD','$9.65','NYSE'),(3602,47,'67091805707993698','laser','CNY','$4.77','NYSE'),(3603,19,'201837778517468','diners-club-enroute','PHP','$2.92','NYSE'),(3604,46,'3586880856969663','jcb','CNY','$2.48','NYSE'),(3605,24,'3554782853460068','jcb','CNY','$3.38','NASDAQ'),(3606,71,'5100174940574735','mastercard','NGN','$3.64','NYSE'),(3607,33,'340867494593321','americanexpress','CNY','$6.17','NASDAQ'),(3608,12,'5100134103044595','mastercard','CZK','$6.24','NYSE'),(3609,22,'3536848261844194','jcb','CNY','$7.25','NASDAQ'),(3610,100,'374283548771005','americanexpress','CNY','$2.60','NASDAQ'),(3611,85,'3557866427278655','jcb','CNY','$0.89','NASDAQ'),(3612,71,'374283920045150','americanexpress','PLN','$6.38','NYSE'),(3613,43,'675942024238606735','maestro','CNY','$2.44','NYSE'),(3614,36,'560221734344070313','china-unionpay','YER','$0.77','NASDAQ'),(3615,90,'201426735540332','diners-club-enroute','PKR','$6.06','NASDAQ'),(3616,88,'3550325515840089','jcb','EUR','$6.03','NYSE'),(3617,63,'060487469721208851','maestro','PLN','$0.81','NASDAQ'),(3618,87,'67613371888837294','maestro','IDR','$5.39','NYSE'),(3619,100,'50384079577040426','maestro','RUB','$8.39','NASDAQ'),(3620,43,'4017957882806','visa','EUR','$5.59','NASDAQ'),(3621,91,'3583699417003512','jcb','NGN','$4.71','NYSE'),(3622,2,'3567766523802390','jcb','BGN','$7.24','NASDAQ'),(3623,15,'3588854989130178','jcb','GNF','$9.67','NASDAQ'),(3624,62,'3533894200564595','jcb','ARS','$1.38','NYSE'),(3625,76,'5602223068206340','bankcard','CNY','$8.38','NASDAQ'),(3626,16,'201585447581353','diners-club-enroute','THB','$6.50','NYSE'),(3627,77,'3561865083678350','jcb','RUB','$3.19','NASDAQ'),(3628,20,'6761816605038999711','maestro','CNY','$8.88','NASDAQ'),(3629,27,'4041374740883295','visa','GHS','$8.93','NASDAQ'),(3630,94,'5602250088082914','bankcard','CNY','$6.23','NASDAQ'),(3631,22,'3559559033901558','jcb','IDR','$5.72','NASDAQ'),(3632,69,'5209208853969563','mastercard','CNY','$6.25','NASDAQ'),(3633,83,'3539566281418115','jcb','PHP','$1.41','NASDAQ'),(3634,99,'3562394228917655','jcb','AFN','$6.44','NASDAQ'),(3635,84,'4905508504920653','switch','RUB','$1.44','NASDAQ'),(3636,24,'4905719314891521109','switch','IDR','$2.89','NYSE'),(3637,81,'3542643669014926','jcb','PHP','$2.78','NASDAQ'),(3638,87,'5038433445317115417','maestro','CNY','$8.05','NASDAQ'),(3639,53,'6334520387406113083','solo','AOA','$9.88','NASDAQ'),(3640,87,'5010126006971063','mastercard','CNY','$0.21','NYSE'),(3641,57,'3548354700399409','jcb','ZWL','$9.63','NASDAQ'),(3642,18,'3561933070984205','jcb','RUB','$8.88','NASDAQ'),(3643,57,'5602253830926909','bankcard','UAH','$4.49','NYSE'),(3644,69,'5602251821559382','bankcard','BDT','$8.45','NYSE'),(3645,71,'560221711634205775','china-unionpay','IDR','$9.64','NASDAQ'),(3646,23,'3538138835760748','jcb','NAD','$1.75','NYSE'),(3647,57,'3561996158258404','jcb','CZK','$5.35','NASDAQ'),(3648,76,'3534382931009295','jcb','IDR','$7.75','NYSE'),(3649,94,'4508988750873528','visa-electron','CNY','$0.32','NYSE'),(3650,78,'3557154153856279','jcb','BGN','$2.77','NASDAQ'),(3651,49,'58935298625613136','maestro','CZK','$3.93','NYSE'),(3652,90,'5010125648947861','mastercard','CNY','$7.83','NASDAQ'),(3653,67,'3530062282052177','jcb','IDR','$1.07','NYSE'),(3654,48,'6771541985868023217','laser','IDR','$2.40','NYSE'),(3655,68,'36360073193340','diners-club-international','IDR','$0.98','NASDAQ'),(3656,97,'3561740375226202','jcb','EUR','$5.30','NYSE'),(3657,89,'201573289418371','diners-club-enroute','CNY','$9.19','NASDAQ'),(3658,77,'5010125343353100','mastercard','EUR','$9.98','NASDAQ'),(3659,14,'3552253497182841','jcb','SEK','$6.46','NYSE'),(3660,15,'3568796537927494','jcb','CNY','$2.22','NYSE'),(3661,19,'3548058120289815','jcb','CNY','$9.62','NASDAQ'),(3662,48,'6759074162892648050','maestro','GBP','$4.26','NYSE'),(3663,5,'06040500375338363','maestro','CNY','$9.11','NASDAQ'),(3664,97,'5444712039619864','diners-club-us-ca','RUB','$1.28','NYSE'),(3665,6,'5108754169960673','mastercard','RUB','$5.26','NASDAQ'),(3666,58,'3552323573293828','jcb','CNY','$6.12','NASDAQ'),(3667,96,'3573088371672870','jcb','BOB','$7.54','NYSE'),(3668,39,'5100148860677629','mastercard','RUB','$9.12','NASDAQ'),(3669,86,'5602234507871842','bankcard','GTQ','$9.83','NASDAQ'),(3670,95,'5602249137322120089','china-unionpay','CNY','$0.54','NYSE'),(3671,91,'30045919138999','diners-club-carte-blanche','PHP','$9.47','NYSE'),(3672,7,'3577085085642062','jcb','CNY','$0.71','NYSE'),(3673,10,'3587835801797675','jcb','CNY','$0.62','NASDAQ'),(3674,57,'3558932418772566','jcb','CNY','$4.57','NASDAQ'),(3675,9,'201491966649491','diners-club-enroute','RSD','$8.31','NASDAQ'),(3676,5,'5359981395085464','mastercard','EUR','$3.53','NASDAQ'),(3677,18,'3554846876098815','jcb','CNY','$9.71','NASDAQ'),(3678,9,'3578322516765645','jcb','PHP','$5.72','NYSE'),(3679,78,'36208265932084','diners-club-international','CNY','$1.57','NYSE'),(3680,89,'201963235101843','diners-club-enroute','JPY','$5.68','NASDAQ'),(3681,19,'3534905388927104','jcb','JPY','$0.22','NYSE'),(3682,34,'30193253757691','diners-club-carte-blanche','CNY','$8.60','NASDAQ'),(3683,67,'6762665538564185878','maestro','CLP','$5.49','NASDAQ'),(3684,9,'56022200561527278','china-unionpay','MXN','$0.61','NASDAQ'),(3685,6,'5641823462874289559','switch','CNY','$3.08','NASDAQ'),(3686,36,'4405492796845834','visa-electron','IRR','$2.52','NYSE'),(3687,29,'201601756419547','diners-club-enroute','CNY','$1.85','NASDAQ'),(3688,70,'201902960842486','diners-club-enroute','IDR','$7.08','NYSE'),(3689,37,'3588140671387874','jcb','SEK','$9.66','NASDAQ'),(3690,8,'6371978621613210','instapayment','IDR','$3.36','NYSE'),(3691,89,'3587412475672368','jcb','CNY','$7.86','NYSE'),(3692,1,'4844315152909168','visa-electron','BRL','$4.31','NASDAQ'),(3693,64,'564182107171837204','switch','CNY','$9.76','NASDAQ'),(3694,82,'6388333817650843','instapayment','IDR','$8.49','NYSE'),(3695,29,'3530015764085750','jcb','EUR','$7.12','NASDAQ'),(3696,6,'5048379074674871','mastercard','CNY','$7.30','NASDAQ'),(3697,48,'3577169819444803','jcb','KZT','$3.34','NYSE'),(3698,19,'3530706541678673','jcb','PHP','$7.00','NYSE'),(3699,14,'3554652074128408','jcb','HRK','$9.24','NYSE'),(3700,14,'4844406617931614','visa-electron','CNY','$1.39','NASDAQ'),(3701,2,'5893361323745871253','maestro','EUR','$6.44','NYSE'),(3702,5,'5602210554407896','china-unionpay','RUB','$9.74','NASDAQ'),(3703,94,'6759991470780966','switch','IDR','$9.31','NYSE'),(3704,42,'0604544408035076','maestro','CNY','$6.43','NASDAQ'),(3705,76,'5602232689193308','china-unionpay','KES','$9.12','NYSE'),(3706,27,'6392305270948017','instapayment','THB','$9.09','NYSE'),(3707,13,'201925094990905','diners-club-enroute','EUR','$3.42','NASDAQ'),(3708,86,'374622543037336','americanexpress','IDR','$3.02','NYSE'),(3709,57,'201961082115577','diners-club-enroute','UZS','$8.61','NASDAQ'),(3710,90,'5100146205737470','mastercard','RUB','$3.48','NYSE'),(3711,99,'5108754489064172','mastercard','PEN','$7.45','NYSE'),(3712,46,'3587890396549726','jcb','JPY','$3.23','NASDAQ'),(3713,15,'3549822457995776','jcb','CAD','$9.13','NASDAQ'),(3714,65,'5402087236108387','mastercard','CNY','$8.98','NYSE'),(3715,29,'4252969724270','visa','PLN','$2.51','NASDAQ'),(3716,88,'30071594287786','diners-club-carte-blanche','CNY','$8.15','NYSE'),(3717,65,'3568400590981627','jcb','CNY','$4.33','NYSE'),(3718,93,'3554565561377330','jcb','BRL','$1.88','NASDAQ'),(3719,20,'5002352536154810','mastercard','CNY','$6.16','NASDAQ'),(3720,54,'3570168646786870','jcb','EUR','$0.55','NASDAQ'),(3721,81,'630461144311240636','maestro','CZK','$0.54','NASDAQ'),(3722,3,'3558169814576081','jcb','EUR','$1.67','NYSE'),(3723,48,'3548603093377178','jcb','VEF','$9.70','NYSE'),(3724,70,'3571256248419492','jcb','SEK','$4.75','NYSE'),(3725,37,'5602234428838128','china-unionpay','PEN','$0.48','NYSE'),(3726,7,'3572327770304342','jcb','CNY','$6.36','NYSE'),(3727,99,'56107472847889792','china-unionpay','BGN','$8.98','NYSE'),(3728,98,'3541462784804769','jcb','IDR','$9.56','NYSE'),(3729,74,'3533819162655453','jcb','IDR','$1.64','NASDAQ'),(3730,26,'4041376747424320','visa','EUR','$5.72','NYSE'),(3731,27,'490394175856790800','switch','PLN','$5.50','NASDAQ'),(3732,25,'3588281180961450','jcb','RUB','$4.36','NYSE'),(3733,2,'6767754662400005826','solo','GTQ','$9.86','NASDAQ'),(3734,98,'201624648036717','diners-club-enroute','IDR','$4.02','NYSE'),(3735,40,'3539490991331569','jcb','IDR','$0.06','NASDAQ'),(3736,22,'337941606680048','americanexpress','ALL','$2.14','NASDAQ'),(3737,37,'491126342739711105','switch','PLN','$2.72','NASDAQ'),(3738,25,'3589850208949579','jcb','IDR','$0.87','NYSE'),(3739,41,'0604066712595793','maestro','PHP','$6.95','NYSE'),(3740,86,'5007669868817200','mastercard','RUB','$7.31','NYSE'),(3741,49,'4917201441146287','visa-electron','CNY','$3.49','NYSE'),(3742,96,'56022328740592689','china-unionpay','EUR','$5.82','NYSE'),(3743,99,'6759086449014900','switch','RUB','$6.19','NYSE'),(3744,82,'374288875842907','americanexpress','PHP','$7.36','NYSE'),(3745,9,'67091510556724307','laser','CNY','$6.34','NASDAQ'),(3746,3,'50207935902880361','maestro','PLN','$2.61','NASDAQ'),(3747,15,'3546097413630311','jcb','AFN','$7.49','NYSE'),(3748,80,'30252253387485','diners-club-carte-blanche','UYU','$5.78','NASDAQ'),(3749,11,'4017953169272500','visa','MXN','$0.14','NYSE'),(3750,5,'3550480355026305','jcb','COP','$0.31','NASDAQ'),(3751,13,'5002357438208184','mastercard','VND','$7.27','NASDAQ'),(3752,9,'6759814411425527','switch','CNY','$4.19','NASDAQ'),(3753,39,'3530798632145241','jcb','BAM','$6.63','NASDAQ'),(3754,90,'5100174872529442','mastercard','VND','$9.56','NYSE'),(3755,38,'3534090145253431','jcb','NZD','$0.45','NYSE'),(3756,59,'3554709738058072','jcb','ALL','$8.12','NYSE'),(3757,13,'30520982302136','diners-club-carte-blanche','EUR','$2.54','NASDAQ'),(3758,17,'3553737218510396','jcb','IDR','$2.85','NASDAQ'),(3759,10,'5100149686397244','mastercard','JMD','$4.08','NYSE'),(3760,89,'201444697160783','diners-club-enroute','JPY','$1.52','NASDAQ'),(3761,91,'4508782157922743','visa-electron','CNY','$4.03','NYSE'),(3762,63,'30213928303166','diners-club-carte-blanche','PLN','$1.24','NASDAQ'),(3763,95,'3528482662486841','jcb','LKR','$4.63','NYSE'),(3764,43,'3585383721468830','jcb','ARS','$5.04','NASDAQ'),(3765,64,'3586023110519103','jcb','EUR','$4.30','NASDAQ'),(3766,67,'4917649618938508','visa-electron','HTG','$8.74','NYSE'),(3767,10,'4405404786507696','visa-electron','CRC','$1.82','NYSE'),(3768,82,'3555891451047844','jcb','JPY','$9.61','NASDAQ'),(3769,19,'501819466584665799','maestro','BRL','$7.49','NYSE'),(3770,48,'5206575008628721','mastercard','JPY','$5.87','NASDAQ'),(3771,8,'50380551054321473','maestro','BRL','$2.61','NYSE'),(3772,77,'6767026223183182','solo','JPY','$9.74','NYSE'),(3773,58,'5602239133015938','bankcard','CNY','$9.50','NYSE'),(3774,78,'3563435329916861','jcb','MNT','$9.81','NYSE'),(3775,77,'201825993793618','diners-club-enroute','PLN','$0.98','NYSE'),(3776,83,'3580365842984006','jcb','IDR','$9.59','NASDAQ'),(3777,59,'5598134654050230','mastercard','ALL','$1.71','NYSE'),(3778,1,'670916441292448916','laser','RUB','$2.63','NYSE'),(3779,47,'3539085853752082','jcb','SEK','$7.81','NASDAQ'),(3780,91,'3582468588008150','jcb','THB','$1.30','NYSE'),(3781,34,'3546623573818840','jcb','CNY','$3.93','NASDAQ'),(3782,29,'3552055392476693','jcb','CAD','$2.62','NASDAQ'),(3783,36,'5100141427849344','mastercard','AFN','$4.07','NASDAQ'),(3784,100,'3538672105765664','jcb','GEL','$0.44','NYSE'),(3785,28,'3544331812309389','jcb','CNY','$2.52','NYSE'),(3786,25,'5202771483655677','mastercard','MAD','$7.97','NASDAQ'),(3787,17,'3575903294840107','jcb','EUR','$3.05','NASDAQ'),(3788,81,'374283845009299','americanexpress','PLN','$9.34','NASDAQ'),(3789,46,'564182734286304414','switch','RUB','$7.26','NYSE'),(3790,62,'3538847419223911','jcb','IDR','$5.46','NYSE'),(3791,23,'3564219843284181','jcb','EUR','$7.54','NYSE'),(3792,61,'58936981057651109','maestro','CLP','$6.09','NASDAQ'),(3793,87,'3575520639196928','jcb','RUB','$5.09','NASDAQ'),(3794,67,'3578444675551481','jcb','CNY','$4.60','NASDAQ'),(3795,83,'3532551189283321','jcb','IDR','$7.92','NASDAQ'),(3796,89,'5602215069284706','bankcard','ZAR','$1.56','NYSE'),(3797,65,'4017950474627','visa','JPY','$6.30','NASDAQ'),(3798,38,'5446144402681883','diners-club-us-ca','ALL','$9.55','NYSE'),(3799,71,'3530042069374192','jcb','HRK','$1.92','NYSE'),(3800,25,'5602226809033126194','china-unionpay','BDT','$8.38','NYSE'),(3801,30,'3553668133963545','jcb','PHP','$4.81','NYSE'),(3802,65,'3568182304080033','jcb','CNY','$0.17','NYSE'),(3803,51,'30030236940624','diners-club-carte-blanche','EUR','$4.47','NYSE'),(3804,24,'3576554631158494','jcb','EUR','$5.77','NYSE'),(3805,88,'3560206513230556','jcb','SEK','$0.97','NYSE'),(3806,33,'3580203916875992','jcb','PHP','$1.00','NASDAQ'),(3807,90,'4913813825431731','visa-electron','IDR','$6.63','NASDAQ'),(3808,98,'676111647580698372','maestro','IDR','$2.24','NYSE'),(3809,50,'30358049376847','diners-club-carte-blanche','UAH','$8.89','NYSE'),(3810,91,'3553044717675535','jcb','IDR','$7.68','NYSE'),(3811,27,'201484242358847','diners-club-enroute','EUR','$6.58','NASDAQ'),(3812,51,'5588292284137504','mastercard','CNY','$5.71','NYSE'),(3813,52,'5297675956557714','mastercard','BTN','$9.58','NASDAQ'),(3814,23,'5020225506294808','maestro','PHP','$3.26','NASDAQ'),(3815,74,'3589368237011626','jcb','VND','$4.45','NASDAQ'),(3816,65,'5602217503518921','bankcard','KWD','$1.46','NASDAQ'),(3817,5,'3532031798799967','jcb','THB','$3.30','NYSE'),(3818,70,'3583287462833031','jcb','THB','$5.97','NASDAQ'),(3819,31,'3577093032466957','jcb','EUR','$2.86','NYSE'),(3820,17,'3587959075613804','jcb','EUR','$7.27','NYSE'),(3821,48,'3529963978852700','jcb','USD','$6.77','NYSE'),(3822,40,'3572799171559551','jcb','CNY','$5.49','NYSE'),(3823,3,'58939365502046239','maestro','CNY','$6.00','NASDAQ'),(3824,57,'5484836161357406','diners-club-us-ca','IDR','$3.01','NASDAQ'),(3825,68,'30435044879312','diners-club-carte-blanche','IDR','$3.67','NASDAQ'),(3826,38,'30317046008365','diners-club-carte-blanche','NIO','$5.64','NASDAQ'),(3827,54,'4017957126079882','visa','IDR','$7.53','NASDAQ'),(3828,28,'3529197878438845','jcb','CAD','$1.14','NYSE'),(3829,29,'30186933716137','diners-club-carte-blanche','EUR','$6.71','NYSE'),(3830,32,'201571081575927','diners-club-enroute','RUB','$1.15','NASDAQ'),(3831,3,'3580733185392253','jcb','PHP','$2.26','NASDAQ'),(3832,29,'4026905568069282','visa-electron','CNY','$1.39','NYSE'),(3833,39,'201403073661509','diners-club-enroute','EUR','$3.92','NASDAQ'),(3834,3,'4508303484046716','visa-electron','CNY','$7.89','NASDAQ'),(3835,73,'4917300679658193','visa-electron','RUB','$4.24','NASDAQ'),(3836,56,'3572471000585070','jcb','CNY','$8.72','NASDAQ'),(3837,55,'3545026925181365','jcb','HUF','$4.72','NYSE'),(3838,1,'5100175855412431','mastercard','IDR','$2.25','NASDAQ'),(3839,34,'6771293329685192634','laser','EGP','$5.43','NASDAQ'),(3840,95,'3542202917478555','jcb','VND','$0.26','NASDAQ'),(3841,100,'503851303686081085','maestro','CRC','$9.30','NASDAQ'),(3842,44,'3564803553939074','jcb','EUR','$4.84','NASDAQ'),(3843,20,'3559741442849103','jcb','JOD','$8.59','NYSE'),(3844,25,'560225473504581225','china-unionpay','COP','$1.50','NASDAQ'),(3845,58,'3537660170923889','jcb','CZK','$1.52','NASDAQ'),(3846,38,'3543337157501382','jcb','IDR','$7.86','NASDAQ'),(3847,14,'3586344823625312','jcb','IDR','$9.42','NYSE'),(3848,27,'372301524370964','americanexpress','CNY','$6.54','NYSE'),(3849,100,'30318616449815','diners-club-carte-blanche','PHP','$8.04','NASDAQ'),(3850,81,'3576168943308513','jcb','NIO','$4.98','NASDAQ'),(3851,67,'3541383677049157','jcb','EUR','$7.85','NYSE'),(3852,32,'561068455407600655','china-unionpay','COP','$1.25','NASDAQ'),(3853,4,'503830038735265638','maestro','PHP','$3.42','NYSE'),(3854,77,'3567316005522916','jcb','MAD','$6.68','NYSE'),(3855,43,'201905428453010','diners-club-enroute','BRL','$3.60','NYSE'),(3856,88,'3549936916607093','jcb','IDR','$9.26','NYSE'),(3857,11,'3575549888607525','jcb','EUR','$9.45','NYSE'),(3858,6,'5048372764891285','mastercard','IDR','$1.12','NYSE'),(3859,42,'67094128682768135','laser','CNY','$3.66','NYSE'),(3860,48,'56107004838096945','china-unionpay','CNY','$0.56','NASDAQ'),(3861,71,'3534516704029408','jcb','PHP','$3.04','NASDAQ'),(3862,83,'3588036579376193','jcb','RSD','$3.45','NASDAQ'),(3863,59,'670993706686915324','laser','GEL','$5.04','NYSE'),(3864,89,'3537710597839539','jcb','IDR','$9.75','NYSE'),(3865,51,'3566667699188542','jcb','MAD','$4.37','NYSE'),(3866,41,'3537574949595664','jcb','SEK','$1.70','NYSE'),(3867,82,'4041379068716563','visa','LTL','$0.97','NASDAQ'),(3868,58,'56022439362915874','china-unionpay','CNY','$8.18','NYSE'),(3869,89,'4911135296407465182','switch','RUB','$7.91','NASDAQ'),(3870,81,'4041591720693','visa','TND','$6.55','NYSE'),(3871,50,'3555989181948263','jcb','RUB','$3.86','NYSE'),(3872,78,'3545513139059198','jcb','CNY','$5.85','NYSE'),(3873,6,'490518809364806432','switch','CNY','$9.44','NASDAQ'),(3874,88,'5175181490034804','mastercard','IDR','$3.61','NYSE'),(3875,93,'3559137549900289','jcb','AUD','$8.00','NASDAQ'),(3876,20,'3557943306665623','jcb','SEK','$4.95','NYSE'),(3877,87,'201562742003508','diners-club-enroute','IDR','$5.61','NASDAQ'),(3878,40,'670976703221306987','laser','PHP','$1.89','NASDAQ'),(3879,25,'5602228241793136403','china-unionpay','PLN','$5.38','NASDAQ'),(3880,10,'3586214784973268','jcb','IDR','$6.75','NASDAQ'),(3881,41,'5610827409774681','china-unionpay','MKD','$1.39','NYSE'),(3882,15,'340730687243692','americanexpress','BRL','$8.76','NASDAQ'),(3883,41,'30080756559049','diners-club-carte-blanche','IDR','$7.74','NASDAQ'),(3884,66,'5641823345257835637','switch','USD','$2.89','NASDAQ'),(3885,74,'3543312836130507','jcb','RUB','$0.60','NYSE'),(3886,22,'5602222821150951','bankcard','BRL','$1.19','NYSE'),(3887,69,'6333445402179784','switch','PEN','$0.94','NYSE'),(3888,17,'5100138125019436','mastercard','USD','$4.74','NYSE'),(3889,16,'3536237357096325','jcb','CNY','$1.14','NYSE'),(3890,26,'337941531387339','americanexpress','JPY','$2.63','NYSE'),(3891,11,'676354229244773366','maestro','ARS','$0.18','NASDAQ'),(3892,11,'630498091641560901','laser','BRL','$6.99','NASDAQ'),(3893,55,'3549541622671464','jcb','IDR','$0.38','NASDAQ'),(3894,4,'201861068729864','diners-club-enroute','MAD','$2.52','NYSE'),(3895,20,'5175910286524119','mastercard','CNY','$5.15','NASDAQ'),(3896,81,'5038960632684536','maestro','ZAR','$8.78','NASDAQ'),(3897,24,'3584534275554935','jcb','PLN','$6.23','NYSE'),(3898,12,'201789429205987','diners-club-enroute','JPY','$7.62','NASDAQ'),(3899,71,'3554839395964013','jcb','PLN','$7.95','NASDAQ'),(3900,46,'6389055026593865','instapayment','MKD','$8.60','NASDAQ'),(3901,3,'3554422226702439','jcb','CNY','$5.90','NYSE'),(3902,25,'3567786675372455','jcb','CNY','$10.00','NYSE'),(3903,17,'3537077826364444','jcb','RUB','$1.88','NYSE'),(3904,27,'56022307585776201','china-unionpay','BRL','$2.61','NYSE'),(3905,60,'3540972565063394','jcb','CZK','$2.76','NYSE'),(3906,31,'3561195884982128','jcb','CNY','$8.21','NASDAQ'),(3907,52,'3533668722695222','jcb','MNT','$5.94','NASDAQ'),(3908,11,'5602236636711922','china-unionpay','RSD','$2.82','NYSE'),(3909,5,'372301854285493','americanexpress','IDR','$6.81','NYSE'),(3910,38,'3530881591554692','jcb','BRL','$5.94','NYSE'),(3911,96,'503873651678397297','maestro','CNY','$6.28','NASDAQ'),(3912,62,'4913852750750327','visa-electron','CNY','$1.55','NYSE'),(3913,91,'5602220823871830','bankcard','USD','$8.94','NYSE'),(3914,93,'56022558233192916','china-unionpay','CNY','$1.92','NYSE'),(3915,46,'5007668028091581','mastercard','CNY','$6.72','NYSE'),(3916,62,'5641829082831849','switch','RUB','$4.44','NYSE'),(3917,25,'3564200115459032','jcb','RUB','$6.88','NASDAQ'),(3918,78,'4017957881859171','visa','KZT','$7.44','NYSE'),(3919,78,'4041597478806977','visa','JPY','$8.17','NASDAQ'),(3920,78,'4017951541688278','visa','PHP','$7.88','NASDAQ'),(3921,80,'3589175977326076','jcb','PLN','$9.37','NASDAQ'),(3922,71,'633413074857222701','solo','RUB','$5.62','NYSE'),(3923,54,'6304980139989610415','maestro','IDR','$9.53','NASDAQ'),(3924,63,'36814005313491','diners-club-international','RUB','$5.52','NYSE'),(3925,52,'5466976400698376','diners-club-us-ca','DJF','$1.68','NASDAQ'),(3926,15,'3563441207038307','jcb','EUR','$0.69','NYSE'),(3927,27,'6380618665299299','instapayment','CNY','$4.61','NASDAQ'),(3928,64,'4405686108214452','visa-electron','IDR','$5.22','NASDAQ'),(3929,66,'3567689789302337','jcb','EUR','$7.25','NASDAQ'),(3930,14,'5267944951712880','mastercard','IDR','$7.83','NASDAQ'),(3931,35,'3541739253091733','jcb','CZK','$8.00','NYSE'),(3932,43,'503878759287575149','maestro','CNY','$2.88','NYSE'),(3933,62,'6333574461830555','switch','EUR','$7.92','NYSE'),(3934,50,'3588828051441143','jcb','HRK','$8.04','NYSE'),(3935,62,'5259721206841114','mastercard','RUB','$5.53','NASDAQ'),(3936,7,'6331105440702020228','switch','IQD','$3.52','NASDAQ'),(3937,16,'3577533466461925','jcb','CUP','$9.83','NASDAQ'),(3938,87,'0604447084950602','maestro','CNY','$7.32','NASDAQ'),(3939,48,'5002353292694577','mastercard','CNY','$0.26','NYSE'),(3940,95,'5602244904968026','bankcard','USD','$8.12','NYSE'),(3941,99,'30083753125558','diners-club-carte-blanche','CUP','$5.92','NYSE'),(3942,88,'3539373723619420','jcb','EUR','$7.81','NASDAQ'),(3943,52,'3536796640444550','jcb','AUD','$1.45','NASDAQ'),(3944,75,'6767029379211293025','solo','SEK','$1.61','NYSE'),(3945,13,'3588829361289636','jcb','CNY','$5.29','NASDAQ'),(3946,39,'3529209127421579','jcb','JPY','$2.60','NYSE'),(3947,99,'3554111821826798','jcb','JOD','$9.46','NYSE'),(3948,25,'3584189174466036','jcb','EUR','$3.84','NASDAQ'),(3949,57,'374288285662101','americanexpress','RUB','$8.05','NYSE'),(3950,58,'3539337986378966','jcb','IDR','$3.19','NASDAQ'),(3951,85,'3538797533729410','jcb','IRR','$2.22','NYSE'),(3952,66,'5602243071799818','china-unionpay','ZAR','$1.62','NASDAQ'),(3953,2,'348017219203713','americanexpress','PHP','$0.63','NYSE'),(3954,50,'5310895833327908','mastercard','EUR','$6.79','NASDAQ'),(3955,92,'5402829171578326','diners-club-us-ca','PHP','$7.39','NYSE'),(3956,61,'3581117071449071','jcb','CUP','$9.94','NYSE'),(3957,39,'3546108949789776','jcb','JPY','$4.55','NASDAQ'),(3958,76,'341166748090609','americanexpress','PAB','$1.73','NASDAQ'),(3959,63,'3535468908299198','jcb','CNY','$5.93','NASDAQ'),(3960,94,'5534878696182545','mastercard','CAD','$6.36','NASDAQ'),(3961,21,'30060361421751','diners-club-carte-blanche','CAD','$8.78','NASDAQ'),(3962,9,'060482419190367105','maestro','PHP','$1.80','NASDAQ'),(3963,74,'56022424487048371','china-unionpay','LTL','$0.83','NYSE'),(3964,91,'374622485316862','americanexpress','CNY','$3.58','NYSE'),(3965,47,'3549053473480508','jcb','PHP','$1.16','NASDAQ'),(3966,30,'5641827013451460331','switch','ZAR','$8.84','NYSE'),(3967,6,'3534764821037454','jcb','IDR','$6.67','NASDAQ'),(3968,33,'3574697684027496','jcb','CNY','$2.86','NASDAQ'),(3969,68,'6763517577713081','maestro','CNY','$9.83','NYSE'),(3970,9,'5100131990308893','mastercard','ARS','$2.74','NYSE'),(3971,20,'3586678707168885','jcb','PHP','$9.87','NYSE'),(3972,99,'30099639006457','diners-club-carte-blanche','CNY','$1.27','NYSE'),(3973,86,'201450134206618','diners-club-enroute','RUB','$9.30','NASDAQ'),(3974,59,'30559171063901','diners-club-carte-blanche','CRC','$7.68','NYSE'),(3975,35,'3568121056260286','jcb','CNY','$6.77','NASDAQ'),(3976,60,'5490069998086293','mastercard','IDR','$1.62','NASDAQ'),(3977,63,'4017958648939421','visa','HNL','$4.58','NASDAQ'),(3978,17,'374622485229503','americanexpress','SEK','$6.36','NYSE'),(3979,25,'67615038121432120','maestro','CNY','$5.11','NASDAQ'),(3980,18,'6761457874133224','maestro','RUB','$6.15','NASDAQ'),(3981,46,'3565407449094497','jcb','CNY','$6.29','NYSE'),(3982,7,'6395729935264543','instapayment','CNY','$6.91','NYSE'),(3983,89,'50387461419836871','maestro','BYR','$7.18','NYSE'),(3984,25,'3556561988790872','jcb','IDR','$4.29','NASDAQ'),(3985,88,'4913609692877216','visa-electron','CNY','$6.64','NASDAQ'),(3986,44,'3543260421773001','jcb','RUB','$5.01','NASDAQ'),(3987,95,'5007660739926080','mastercard','MXN','$4.31','NASDAQ'),(3988,10,'3563907665009519','jcb','JPY','$9.34','NASDAQ'),(3989,28,'201439004550940','diners-club-enroute','SYP','$7.78','NASDAQ'),(3990,10,'493606006937198614','switch','PHP','$0.34','NYSE'),(3991,71,'5602251059920652','bankcard','IDR','$5.67','NYSE'),(3992,55,'337941068651495','americanexpress','EUR','$6.81','NASDAQ'),(3993,37,'3576613012728844','jcb','SEK','$3.08','NASDAQ'),(3994,19,'30396436445734','diners-club-carte-blanche','PLN','$0.53','NYSE'),(3995,73,'372301615831064','americanexpress','EUR','$6.84','NASDAQ'),(3996,5,'4041593051063','visa','CNY','$1.87','NYSE'),(3997,9,'4175004836837164','visa-electron','CNY','$2.02','NASDAQ'),(3998,59,'3537176418935569','jcb','RUB','$6.19','NASDAQ'),(3999,47,'3564181345936934','jcb','ILS','$3.99','NASDAQ'),(4000,81,'5440694148621870','mastercard','PLN','$7.50','NYSE'),(4001,4,'3550912022376739','jcb','CNY','$3.70','NYSE'),(4002,19,'3538613559721936','jcb','PHP','$6.73','NYSE'),(4003,25,'5602250248331995','bankcard','COP','$6.40','NYSE'),(4004,41,'5048377460222438','mastercard','AMD','$1.24','NYSE'),(4005,39,'3588799655923770','jcb','EUR','$8.20','NYSE'),(4006,22,'374288953674768','americanexpress','THB','$8.06','NYSE'),(4007,6,'4041374296059779','visa','EUR','$9.94','NASDAQ'),(4008,62,'5100171860769857','mastercard','CNY','$9.97','NASDAQ'),(4009,36,'3528597772228997','jcb','CNY','$5.17','NASDAQ'),(4010,58,'5602227411923533628','china-unionpay','COP','$4.35','NYSE'),(4011,10,'3551487600194514','jcb','JPY','$6.45','NYSE'),(4012,74,'30216437391713','diners-club-carte-blanche','IDR','$2.64','NYSE'),(4013,12,'3542591069120951','jcb','IDR','$0.29','NASDAQ'),(4014,69,'3559787809746648','jcb','IDR','$1.18','NASDAQ'),(4015,13,'374283759104284','americanexpress','USD','$2.79','NASDAQ'),(4016,48,'3589263734821637','jcb','CLP','$6.63','NASDAQ'),(4017,73,'3558532220360434','jcb','PLN','$5.57','NASDAQ'),(4018,99,'5414416395682013','mastercard','EUR','$4.56','NYSE'),(4019,62,'6396600339639862','instapayment','PLN','$5.06','NASDAQ'),(4020,72,'6395895475401199','instapayment','IDR','$7.35','NYSE'),(4021,77,'6304052731078911853','laser','DOP','$0.67','NYSE'),(4022,4,'3588093367601837','jcb','CNY','$8.57','NASDAQ'),(4023,2,'5602243530584405','bankcard','CNY','$5.67','NYSE'),(4024,95,'3529737401109163','jcb','MMK','$5.05','NYSE'),(4025,53,'67066932481228157','laser','EUR','$1.57','NASDAQ'),(4026,10,'5602256496491609250','china-unionpay','PEN','$4.26','NYSE'),(4027,29,'3558917320539054','jcb','CNY','$2.19','NYSE'),(4028,37,'30325904680530','diners-club-carte-blanche','XOF','$3.36','NASDAQ'),(4029,67,'4041591891361','visa','EUR','$1.50','NASDAQ'),(4030,82,'3550011585094563','jcb','EUR','$9.44','NASDAQ'),(4031,4,'3561619125035958','jcb','BRL','$7.19','NASDAQ'),(4032,44,'3584707575258148','jcb','IDR','$0.96','NASDAQ'),(4033,22,'5048376603020832','mastercard','IDR','$8.69','NYSE'),(4034,90,'490543934140161073','switch','LBP','$0.48','NYSE'),(4035,92,'676183248578419278','maestro','ILS','$2.98','NYSE'),(4036,85,'3579867864092579','jcb','IRR','$2.80','NASDAQ'),(4037,41,'6763211117047347','maestro','BRL','$7.69','NYSE'),(4038,27,'4026462958682845','visa-electron','CNY','$1.22','NYSE'),(4039,11,'201983799470632','diners-club-enroute','CNY','$3.09','NASDAQ'),(4040,62,'3541197359101619','jcb','UGX','$5.62','NASDAQ'),(4041,71,'493613595385029603','switch','MNT','$7.44','NASDAQ'),(4042,32,'3542293407567551','jcb','BAM','$8.49','NYSE'),(4043,81,'6763098742549213','maestro','CNY','$1.94','NASDAQ'),(4044,18,'3580796613618086','jcb','USD','$9.54','NASDAQ'),(4045,7,'6771826279020591535','laser','IDR','$7.51','NASDAQ'),(4046,44,'3565579941009775','jcb','UAH','$3.79','NYSE'),(4047,88,'201970147843776','diners-club-enroute','MYR','$4.99','NASDAQ'),(4048,53,'5512375437822022','mastercard','NOK','$7.49','NASDAQ'),(4049,69,'6334313441372662','solo','IDR','$1.54','NASDAQ'),(4050,61,'4508471441025527','visa-electron','CNY','$5.40','NYSE'),(4051,98,'676283832221776868','maestro','PHP','$2.33','NASDAQ'),(4052,52,'30347438694621','diners-club-carte-blanche','JPY','$1.42','NYSE'),(4053,33,'4844019511963367','visa-electron','TZS','$9.13','NASDAQ'),(4054,104,'5276581602602364','VISA','PLN','$6.48','NYSE'),(4055,81,'3567118803039030','jcb','CZK','$0.71','NASDAQ'),(4056,54,'337941383333050','americanexpress','IDR','$4.16','NASDAQ'),(4057,62,'50204343855130103','maestro','CNY','$7.74','NYSE'),(4058,86,'4905910444889289','switch','CZK','$0.43','NYSE'),(4059,37,'3555799947141214','jcb','KRW','$6.88','NYSE'),(4060,7,'30201575868953','diners-club-carte-blanche','CNY','$0.81','NYSE'),(4061,8,'3536634753217374','jcb','IDR','$5.43','NYSE'),(4062,33,'3532406196285159','jcb','UAH','$1.95','NYSE'),(4063,68,'4508500027099686','visa-electron','RSD','$8.82','NYSE'),(4064,37,'5397875255849569','mastercard','IDR','$8.50','NYSE'),(4065,59,'201664251933305','diners-club-enroute','AMD','$2.80','NASDAQ'),(4066,60,'3550438589277052','jcb','IDR','$3.24','NASDAQ'),(4067,31,'5602249663825994','bankcard','PHP','$1.40','NASDAQ'),(4068,81,'3553278038190432','jcb','EUR','$1.08','NYSE'),(4069,42,'201983494014222','diners-club-enroute','VND','$2.32','NASDAQ'),(4070,24,'201479423757924','diners-club-enroute','CNY','$1.87','NYSE'),(4071,27,'4913897354002401','visa-electron','SEK','$4.03','NYSE'),(4072,62,'4041370507121','visa','PHP','$2.25','NASDAQ'),(4073,76,'5893167652682615216','maestro','USD','$6.22','NYSE'),(4074,66,'30596713951367','diners-club-carte-blanche','DKK','$6.93','NYSE'),(4075,33,'3572639936225959','jcb','EUR','$6.76','NYSE'),(4076,66,'201465492161791','diners-club-enroute','MXN','$0.01','NASDAQ'),(4077,7,'36834357777390','diners-club-international','RUB','$10.00','NYSE'),(4078,77,'56022288490383343','china-unionpay','RUB','$8.66','NASDAQ'),(4079,10,'4017956391114','visa','CNY','$3.31','NASDAQ'),(4080,87,'30347056362725','diners-club-carte-blanche','CAD','$3.07','NASDAQ'),(4081,24,'3579638847992262','jcb','USD','$7.28','NYSE'),(4082,58,'3550807323392882','jcb','CNY','$7.06','NASDAQ'),(4083,22,'6759537033547101','switch','BAM','$5.58','NYSE'),(4084,66,'56022176058118799','china-unionpay','IDR','$4.10','NYSE'),(4085,28,'633379480396530292','switch','SEK','$7.15','NASDAQ'),(4086,31,'6759055899735413','switch','PHP','$1.57','NYSE'),(4087,57,'5010126688348507','mastercard','CNY','$4.29','NASDAQ'),(4088,1,'3562477502607595','jcb','CNY','$2.41','NASDAQ'),(4089,66,'3567190682143266','jcb','THB','$7.22','NYSE'),(4090,7,'3577253954123560','jcb','BRL','$2.66','NYSE'),(4091,17,'67096443858207315','laser','CNY','$3.93','NYSE'),(4092,46,'378049109185216','americanexpress','THB','$1.07','NYSE'),(4093,23,'3554227630633447','jcb','RUB','$6.67','NYSE'),(4094,22,'3555005284878388','jcb','IDR','$7.42','NASDAQ'),(4095,27,'3551146715642433','jcb','EUR','$6.47','NASDAQ'),(4096,99,'6762059681654404694','maestro','MDL','$6.51','NYSE'),(4097,48,'3574657915830308','jcb','BRL','$8.77','NASDAQ'),(4098,33,'3573303952572591','jcb','IDR','$2.05','NASDAQ'),(4099,99,'3588146278548750','jcb','IDR','$5.71','NASDAQ'),(4100,2,'3539901925426358','jcb','CNY','$0.81','NASDAQ'),(4101,3,'4844079496815859','visa-electron','PHP','$2.00','NASDAQ'),(4102,27,'5007665661479875','mastercard','PHP','$7.79','NASDAQ'),(4103,32,'3540982559969704','jcb','CNY','$0.37','NYSE'),(4104,95,'4905296796142704628','switch','IDR','$0.36','NASDAQ'),(4105,67,'374283845378934','americanexpress','PLN','$1.36','NYSE'),(4106,80,'341019813165238','americanexpress','IDR','$5.44','NASDAQ'),(4107,50,'3581285532464797','jcb','CRC','$0.02','NYSE'),(4108,56,'676715108355791264','solo','UAH','$9.68','NYSE'),(4109,9,'6767401019726363','solo','KES','$1.74','NASDAQ'),(4110,68,'3549960753834958','jcb','KZT','$7.80','NASDAQ'),(4111,46,'374283750956245','americanexpress','CNY','$2.09','NASDAQ'),(4112,9,'5602212325370114','china-unionpay','SAR','$5.46','NASDAQ'),(4113,82,'6334696536982456','solo','CNY','$0.89','NYSE'),(4114,74,'5602210437848555','bankcard','ILS','$9.22','NYSE'),(4115,17,'4917300137820955','visa-electron','KZT','$3.50','NYSE'),(4116,16,'3534757497347991','jcb','ZAR','$0.68','NYSE'),(4117,20,'3552628323104780','jcb','USD','$1.67','NASDAQ'),(4118,57,'3549197749780900','jcb','RUB','$2.95','NYSE'),(4119,94,'3574211770383548','jcb','CNY','$3.47','NASDAQ'),(4120,41,'201482186990203','diners-club-enroute','IDR','$3.46','NASDAQ'),(4121,98,'30094547638616','diners-club-carte-blanche','PLN','$0.21','NYSE'),(4122,88,'3575484513432281','jcb','YER','$1.36','NASDAQ'),(4123,25,'6761528771401887625','maestro','BRL','$1.28','NYSE'),(4124,26,'337941511444696','americanexpress','IDR','$6.64','NASDAQ'),(4125,3,'3537403561020282','jcb','EUR','$0.54','NASDAQ'),(4126,94,'3539309687413350','jcb','IDR','$8.76','NYSE'),(4127,58,'3584057724981186','jcb','CNY','$7.94','NASDAQ'),(4128,100,'3572432068292728','jcb','UAH','$7.32','NASDAQ'),(4129,42,'5602247323221935','bankcard','CAD','$4.57','NYSE'),(4130,43,'5602226066754294','bankcard','BDT','$3.69','NYSE'),(4131,94,'5602213059404756','bankcard','EUR','$3.73','NYSE'),(4132,62,'3546510649056390','jcb','IDR','$3.61','NASDAQ'),(4133,59,'3530523435060557','jcb','BGN','$5.71','NYSE'),(4134,63,'5358397873561929','mastercard','ARS','$4.71','NYSE'),(4135,92,'3577514508542518','jcb','ILS','$8.73','NYSE'),(4136,29,'6381360419410901','instapayment','ALL','$3.63','NYSE'),(4137,92,'5416561498375797','mastercard','BTN','$2.64','NASDAQ'),(4138,73,'5174372592749321','mastercard','NOK','$8.12','NASDAQ'),(4139,38,'3539374314488217','jcb','LYD','$4.69','NASDAQ'),(4140,90,'374283299258145','americanexpress','EUR','$8.34','NYSE'),(4141,10,'379179979710055','americanexpress','USD','$3.74','NASDAQ'),(4142,56,'490303999619306715','switch','THB','$9.77','NYSE'),(4143,14,'3540636070883634','jcb','CNY','$0.26','NASDAQ'),(4144,77,'4844951361077742','visa-electron','RUB','$4.85','NASDAQ'),(4145,78,'3553073587928070','jcb','ZAR','$6.13','NASDAQ'),(4146,43,'3583882670172485','jcb','IDR','$8.36','NASDAQ'),(4147,60,'560221023665699839','china-unionpay','CNY','$0.04','NASDAQ'),(4148,64,'30208140227003','diners-club-carte-blanche','CNY','$9.83','NYSE'),(4149,48,'5602216525225160237','china-unionpay','EUR','$4.25','NYSE'),(4150,42,'3560792510463829','jcb','CNY','$5.73','NASDAQ'),(4151,13,'675964546948674150','switch','LKR','$2.31','NYSE'),(4152,59,'3568604183240156','jcb','NGN','$5.32','NYSE'),(4153,49,'4917790853809432','visa-electron','CNY','$1.79','NASDAQ'),(4154,55,'5602244198763315','bankcard','USD','$6.56','NASDAQ'),(4155,90,'4508865676942126','visa-electron','IDR','$5.83','NYSE'),(4156,76,'201717243286503','diners-club-enroute','BGN','$8.40','NYSE'),(4157,69,'5610135030276450','bankcard','PAB','$8.93','NYSE'),(4158,94,'342924615085766','americanexpress','ARS','$3.07','NASDAQ'),(4159,7,'3571676691806236','jcb','RUB','$8.55','NASDAQ'),(4160,27,'201967230434349','diners-club-enroute','EUR','$0.58','NYSE'),(4161,75,'4041597091964278','visa','PHP','$7.34','NASDAQ'),(4162,40,'6767710087446427','solo','USD','$9.07','NASDAQ'),(4163,86,'3576548584904706','jcb','YER','$2.12','NASDAQ'),(4164,22,'633110865478841738','switch','IDR','$8.03','NYSE'),(4165,37,'5100148388706025','mastercard','KRW','$5.33','NYSE'),(4166,62,'30284637321955','diners-club-carte-blanche','RUB','$1.96','NASDAQ'),(4167,79,'4905387156364799535','switch','CNY','$4.21','NASDAQ'),(4168,28,'4913033943860667','visa-electron','RSD','$1.29','NASDAQ'),(4169,99,'56022382701285072','china-unionpay','PHP','$1.63','NYSE'),(4170,14,'4903262575982854163','switch','RUB','$8.79','NASDAQ'),(4171,98,'3532872914765519','jcb','PHP','$9.72','NASDAQ'),(4172,63,'5007669810447288','mastercard','CAD','$7.16','NASDAQ'),(4173,42,'3565835364927475','jcb','EGP','$5.98','NYSE'),(4174,27,'3545940441676387','jcb','CZK','$7.02','NASDAQ'),(4175,36,'5602241053978335','bankcard','HNL','$7.17','NYSE'),(4176,33,'3574411971028294','jcb','TZS','$6.16','NASDAQ'),(4177,85,'30426446624265','diners-club-carte-blanche','PHP','$1.88','NYSE'),(4178,5,'4913782602964836','visa-electron','IDR','$1.93','NASDAQ'),(4179,68,'5010126510012180','mastercard','CZK','$0.38','NASDAQ'),(4180,10,'3547495088880535','jcb','XOF','$2.60','NYSE'),(4181,75,'5582154361336456','mastercard','IDR','$4.96','NYSE'),(4182,36,'372301645369465','americanexpress','BRL','$7.05','NYSE'),(4183,15,'5602229521462768','bankcard','CNY','$5.02','NYSE'),(4184,35,'201614531662760','diners-club-enroute','BDT','$5.02','NASDAQ'),(4185,50,'3585272389889488','jcb','CNY','$4.41','NASDAQ'),(4186,12,'3528095303083577','jcb','HRK','$0.74','NASDAQ'),(4187,56,'67060083829351768','laser','BRL','$4.49','NYSE'),(4188,66,'3569775867083663','jcb','CAD','$0.23','NASDAQ'),(4189,98,'4017957514396880','visa','GBP','$5.57','NYSE'),(4190,2,'4175008583583822','visa-electron','NGN','$2.12','NASDAQ'),(4191,78,'5602223210965900','bankcard','PEN','$4.73','NYSE'),(4192,52,'3541092393892234','jcb','RUB','$6.68','NASDAQ'),(4193,87,'5474738266002220','diners-club-us-ca','PEN','$5.02','NASDAQ'),(4194,46,'3586105148237566','jcb','UAH','$9.77','NYSE'),(4195,25,'67627899339087667','maestro','THB','$9.12','NYSE'),(4196,57,'201742012376814','diners-club-enroute','NGN','$1.95','NYSE'),(4197,47,'4936210896124886','switch','XOF','$0.59','NYSE'),(4198,34,'5010122274608107','mastercard','SEK','$5.69','NYSE'),(4199,33,'5602220792712601','bankcard','USD','$0.58','NYSE'),(4200,20,'3581382503216916','jcb','CNY','$7.39','NYSE'),(4201,78,'5038810218224268741','maestro','PHP','$3.98','NASDAQ'),(4202,80,'201486985989233','diners-club-enroute','HRK','$3.03','NASDAQ'),(4203,45,'3580115428276867','jcb','PLN','$0.74','NASDAQ'),(4204,44,'374288883835885','americanexpress','UGX','$8.76','NYSE'),(4205,74,'56022433966146978','china-unionpay','AFN','$3.84','NYSE'),(4206,3,'5178713380939804','mastercard','ETB','$1.30','NYSE'),(4207,60,'3550743959197982','jcb','ZMW','$0.12','NASDAQ'),(4208,52,'3540255726864870','jcb','EUR','$4.94','NASDAQ'),(4209,17,'3531607559677293','jcb','CZK','$8.94','NASDAQ'),(4210,84,'3580203658698586','jcb','CNY','$0.04','NASDAQ'),(4211,64,'3548778237084011','jcb','EUR','$7.38','NASDAQ'),(4212,25,'677165373945400130','laser','RUB','$1.11','NASDAQ'),(4213,94,'30576266560310','diners-club-carte-blanche','UAH','$6.52','NASDAQ'),(4214,93,'5602221989027423','bankcard','PLN','$7.72','NASDAQ'),(4215,27,'6391072263413240','instapayment','ZMW','$3.30','NYSE'),(4216,79,'3557386173257134','jcb','CNY','$9.07','NASDAQ'),(4217,30,'5602219969795431','china-unionpay','IDR','$7.80','NYSE'),(4218,44,'493616267314356690','switch','YER','$1.64','NYSE'),(4219,35,'3554213845753964','jcb','YER','$7.05','NASDAQ'),(4220,49,'589324520980734113','maestro','IDR','$8.62','NYSE'),(4221,57,'3538325502411065','jcb','EUR','$2.44','NASDAQ'),(4222,22,'4913630379517453','visa-electron','NGN','$2.40','NYSE'),(4223,37,'3565336564647088','jcb','PEN','$4.40','NASDAQ'),(4224,10,'6334354551487106','solo','EUR','$6.82','NYSE'),(4225,93,'3577410292559885','jcb','CNY','$6.79','NYSE'),(4226,3,'3558923816892627','jcb','CNY','$7.27','NASDAQ'),(4227,85,'5458915970468943','mastercard','EUR','$3.65','NYSE'),(4228,94,'3539550668454901','jcb','UAH','$3.56','NYSE'),(4229,90,'6304768985099474','laser','CNY','$5.40','NYSE'),(4230,99,'4844694210404572','visa-electron','ZWL','$7.69','NYSE'),(4231,46,'5100147746597704','mastercard','EUR','$9.32','NASDAQ'),(4232,28,'5602258240360599','china-unionpay','CNY','$4.13','NYSE'),(4233,61,'3555853574723024','jcb','PHP','$6.52','NYSE'),(4234,94,'3552211417497236','jcb','EUR','$2.59','NYSE'),(4235,62,'561097982607857681','china-unionpay','PHP','$2.27','NYSE'),(4236,43,'201516883499388','diners-club-enroute','HRK','$6.64','NASDAQ'),(4237,1,'3562219798813853','jcb','EUR','$8.80','NYSE'),(4238,43,'374283838575538','americanexpress','CLP','$5.68','NASDAQ'),(4239,85,'5100171375565808','mastercard','JPY','$9.58','NYSE'),(4240,90,'3533095240555235','jcb','VND','$9.04','NYSE'),(4241,32,'3568989456060682','jcb','HRK','$9.29','NASDAQ'),(4242,34,'4041596461130338','visa','EUR','$7.07','NASDAQ'),(4243,76,'30499658594971','diners-club-carte-blanche','IDR','$1.90','NASDAQ'),(4244,46,'3558330707448263','jcb','IDR','$7.32','NASDAQ'),(4245,46,'344074983839077','americanexpress','IDR','$3.85','NASDAQ'),(4246,27,'5602217533671070','bankcard','EUR','$6.75','NYSE'),(4247,27,'3541025935720653','jcb','ARS','$1.87','NYSE'),(4248,92,'3579131032782359','jcb','RUB','$3.16','NASDAQ'),(4249,31,'3528656447659349','jcb','IDR','$7.21','NASDAQ'),(4250,92,'6397493856180596','instapayment','JMD','$0.39','NYSE'),(4251,58,'4913336530807003','visa-electron','CNY','$0.24','NYSE'),(4252,8,'6392392981379534','instapayment','IDR','$0.35','NASDAQ'),(4253,90,'3528087261074821','jcb','IDR','$9.51','NYSE'),(4254,74,'3536652080876399','jcb','IDR','$8.26','NYSE'),(4255,85,'30117512777802','diners-club-carte-blanche','BRL','$9.65','NYSE'),(4256,73,'633400576028588732','solo','CNY','$3.42','NYSE'),(4257,60,'6304947770024306841','maestro','CNY','$9.23','NASDAQ'),(4258,93,'3559846467954611','jcb','EGP','$7.50','NYSE'),(4259,75,'676226935722766476','maestro','CNY','$2.08','NYSE'),(4260,66,'3546404392320106','jcb','CNY','$6.27','NYSE'),(4261,13,'3547053457754490','jcb','THB','$2.17','NYSE'),(4262,12,'670631724454731821','laser','IDR','$6.18','NASDAQ'),(4263,38,'374622311559156','americanexpress','PYG','$3.83','NASDAQ'),(4264,98,'561034895998535029','china-unionpay','NGN','$7.27','NASDAQ'),(4265,21,'501882636921263415','maestro','BOB','$1.58','NYSE'),(4266,20,'3532983114484973','jcb','TTD','$1.59','NYSE'),(4267,56,'3566118878614973','jcb','EUR','$6.34','NASDAQ'),(4268,38,'56022394722864710','china-unionpay','PLN','$7.97','NASDAQ'),(4269,85,'4041595806762938','visa','IDR','$9.06','NASDAQ'),(4270,2,'3534873813646915','jcb','CNY','$9.99','NASDAQ'),(4271,40,'3529417150338954','jcb','MYR','$2.12','NYSE'),(4272,39,'3586049722455162','jcb','BYR','$7.18','NYSE'),(4273,39,'6382640436269318','instapayment','AFN','$6.66','NASDAQ'),(4274,31,'5432438385110514','diners-club-us-ca','EUR','$6.06','NASDAQ'),(4275,30,'6767239854864579595','solo','JPY','$3.27','NASDAQ'),(4276,31,'3553246233765498','jcb','BRL','$7.60','NYSE'),(4277,22,'201686742248563','diners-club-enroute','MGA','$9.83','NYSE'),(4278,25,'3569744794965418','jcb','RUB','$1.33','NYSE'),(4279,15,'3574421077145801','jcb','CNY','$2.17','NYSE'),(4280,86,'30023590222432','diners-club-carte-blanche','CNY','$8.15','NASDAQ'),(4281,16,'3569762394174207','jcb','IDR','$9.58','NASDAQ'),(4282,62,'5048378620392772','mastercard','EGP','$3.92','NYSE'),(4283,45,'676299444206896356','maestro','PHP','$8.34','NASDAQ'),(4284,61,'201501423158538','diners-club-enroute','BIF','$6.79','NASDAQ'),(4285,54,'3564857334636557','jcb','BRL','$2.06','NASDAQ'),(4286,2,'3573603252231750','jcb','PHP','$9.95','NASDAQ'),(4287,27,'5893359709170442','maestro','EGP','$4.14','NYSE'),(4288,92,'3529917825923692','jcb','CNY','$4.50','NASDAQ'),(4289,4,'3583189920526266','jcb','CDF','$8.61','NYSE'),(4290,46,'3551023933679838','jcb','RUB','$8.79','NYSE'),(4291,40,'6372023028157450','instapayment','IDR','$1.01','NASDAQ'),(4292,66,'3547522776824952','jcb','SEK','$6.04','NASDAQ'),(4293,86,'374622991015735','americanexpress','PHP','$2.05','NYSE'),(4294,41,'3529652095556837','jcb','USD','$0.17','NYSE'),(4295,66,'4844978996032859','visa-electron','EUR','$0.81','NASDAQ'),(4296,6,'4405042406826623','visa-electron','CNY','$3.34','NASDAQ'),(4297,44,'3539528566601450','jcb','PAB','$1.24','NYSE'),(4298,3,'372301339982649','americanexpress','CZK','$6.37','NYSE'),(4299,70,'67092062778073740','laser','IDR','$6.94','NYSE'),(4300,31,'3571757373811809','jcb','PHP','$8.73','NASDAQ'),(4301,54,'201566601443200','diners-club-enroute','RUB','$8.00','NASDAQ'),(4302,14,'63042073821664047','maestro','BGN','$5.13','NYSE'),(4303,4,'5542602192638010','diners-club-us-ca','JPY','$9.51','NYSE'),(4304,30,'3588226951245765','jcb','SEK','$9.95','NYSE'),(4305,50,'3582016904503410','jcb','CZK','$9.34','NYSE'),(4306,23,'675985036101606970','switch','JMD','$3.75','NYSE'),(4307,82,'3562950927908996','jcb','PHP','$5.28','NASDAQ'),(4308,5,'3560492705564164','jcb','BRL','$8.40','NASDAQ'),(4309,28,'3545161931827550','jcb','PHP','$8.78','NYSE'),(4310,56,'3553725995337224','jcb','EUR','$9.54','NASDAQ'),(4311,8,'3554828593256165','jcb','RUB','$8.51','NYSE'),(4312,17,'30514496803390','diners-club-carte-blanche','BAM','$6.28','NASDAQ'),(4313,29,'201622928472412','diners-club-enroute','CNY','$4.22','NYSE'),(4314,94,'340118822806385','americanexpress','CNY','$9.02','NYSE'),(4315,94,'3579380144980589','jcb','IDR','$3.27','NASDAQ'),(4316,80,'3549955013711178','jcb','NGN','$2.40','NYSE'),(4317,20,'3571088522948080','jcb','VND','$3.93','NYSE'),(4318,91,'3537282484665559','jcb','CZK','$0.13','NYSE'),(4319,97,'3586958573815524','jcb','ZAR','$9.62','NASDAQ'),(4320,50,'3567976176989994','jcb','UAH','$2.79','NASDAQ'),(4321,78,'30287244253479','diners-club-carte-blanche','ILS','$8.07','NYSE'),(4322,54,'3541743152113937','jcb','IDR','$4.83','NYSE'),(4323,100,'3537366386934203','jcb','IDR','$9.93','NYSE'),(4324,58,'3553729553701912','jcb','NGN','$7.65','NYSE'),(4325,81,'4150610717319574','visa','THB','$5.81','NASDAQ'),(4326,78,'67624562096699503','maestro','CZK','$3.30','NASDAQ'),(4327,98,'3542524544590647','jcb','YER','$1.92','NYSE'),(4328,16,'5602253483868659053','china-unionpay','PEN','$4.55','NASDAQ'),(4329,57,'3554226325555196','jcb','CNY','$6.51','NYSE'),(4330,39,'5610611106694644','bankcard','CNY','$8.27','NYSE'),(4331,36,'3571034762691758','jcb','THB','$1.78','NASDAQ'),(4332,18,'4405115477824386','visa-electron','BRL','$0.99','NASDAQ'),(4333,48,'6396454429839077','instapayment','RUB','$4.76','NASDAQ'),(4334,24,'5641821876734484450','switch','BYR','$8.46','NYSE'),(4335,31,'30084650835463','diners-club-carte-blanche','JPY','$4.81','NYSE'),(4336,43,'5610855353047564','bankcard','CNY','$6.42','NYSE'),(4337,9,'56022572683959880','china-unionpay','RUB','$5.85','NASDAQ'),(4338,66,'378917459292461','americanexpress','THB','$7.26','NASDAQ'),(4339,89,'4936861010457139','switch','RUB','$4.54','NYSE'),(4340,91,'3573733011506117','jcb','USD','$1.16','NYSE'),(4341,93,'3532404339437647','jcb','CNY','$2.17','NASDAQ'),(4342,36,'3547812623245471','jcb','EUR','$1.20','NASDAQ'),(4343,36,'4405078657936364','visa-electron','CNY','$8.49','NYSE'),(4344,66,'3581324188320266','jcb','UAH','$7.56','NYSE'),(4345,94,'3553581238772242','jcb','CDF','$0.69','NYSE'),(4346,19,'3535610530092703','jcb','CNY','$5.66','NYSE'),(4347,14,'3552452588565514','jcb','JPY','$8.15','NYSE'),(4348,15,'201748461261316','diners-club-enroute','PHP','$1.65','NASDAQ'),(4349,58,'5602240896150797','china-unionpay','EUR','$3.64','NYSE'),(4350,89,'5602231499844315583','china-unionpay','JPY','$1.33','NYSE'),(4351,89,'4041595456470436','visa','DOP','$2.42','NYSE'),(4352,59,'4936117712606584','switch','SOS','$1.38','NASDAQ'),(4353,21,'201673206526510','diners-club-enroute','JPY','$9.64','NYSE'),(4354,37,'3569460405664858','jcb','PHP','$6.67','NYSE'),(4355,6,'3584958093499645','jcb','ALL','$8.14','NYSE'),(4356,8,'3586011893227473','jcb','IDR','$9.70','NASDAQ'),(4357,93,'3579265259921090','jcb','BRL','$0.20','NASDAQ'),(4358,23,'4905536148468367','switch','XAF','$1.13','NYSE'),(4359,35,'3562397119074296','jcb','CNY','$9.66','NYSE'),(4360,64,'4911847469298029347','switch','THB','$5.41','NASDAQ'),(4361,60,'3529662625974699','jcb','CNY','$3.49','NYSE'),(4362,42,'5893216740337366','maestro','ILS','$8.46','NASDAQ'),(4363,22,'3581498828275971','jcb','CNY','$5.15','NYSE'),(4364,15,'4017955278627','visa','BRL','$9.36','NYSE'),(4365,24,'3536254620322321','jcb','UAH','$1.34','NASDAQ'),(4366,68,'4405435046865896','visa-electron','MXN','$6.44','NYSE'),(4367,17,'3539821811800062','jcb','PHP','$5.79','NASDAQ'),(4368,63,'6373889260181518','instapayment','ILS','$5.08','NYSE'),(4369,86,'3587598033640796','jcb','IDR','$2.11','NYSE'),(4370,50,'3565498942710879','jcb','CZK','$3.36','NASDAQ'),(4371,50,'5602253076994688135','china-unionpay','PHP','$8.52','NYSE'),(4372,44,'6759260740546841','maestro','CNY','$6.10','NASDAQ'),(4373,70,'3537640221621773','jcb','MYR','$8.51','NYSE'),(4374,8,'3548911008376478','jcb','IDR','$9.87','NASDAQ'),(4375,27,'3587632785529350','jcb','EUR','$9.31','NASDAQ'),(4376,26,'5602223042599885','bankcard','AFN','$2.20','NASDAQ'),(4377,100,'3551854374364377','jcb','PHP','$9.07','NASDAQ'),(4378,29,'5602221373154031','bankcard','IDR','$2.86','NYSE'),(4379,76,'3583644758646081','jcb','CNY','$6.49','NYSE'),(4380,45,'6767590947374310','solo','EUR','$1.33','NASDAQ'),(4381,91,'3589995722126293','jcb','LKR','$8.24','NYSE'),(4382,91,'3554286012855226','jcb','UAH','$2.95','NASDAQ'),(4383,46,'3579763678802503','jcb','CNY','$2.63','NYSE'),(4384,54,'4917299442510873','visa-electron','JPY','$3.55','NASDAQ'),(4385,69,'5602223324215701338','china-unionpay','NGN','$7.98','NYSE'),(4386,67,'5602211498677149','bankcard','EUR','$9.88','NYSE'),(4387,46,'3562631734854249','jcb','USD','$4.78','NASDAQ'),(4388,97,'3533417972801324','jcb','CNY','$5.60','NYSE'),(4389,59,'377856134882216','americanexpress','CNY','$5.66','NASDAQ'),(4390,27,'3540319851003488','jcb','CNY','$3.49','NASDAQ'),(4391,69,'63045852999982746','laser','COP','$7.37','NASDAQ'),(4392,60,'3557584507995409','jcb','USD','$3.47','NASDAQ'),(4393,4,'4905192724444925','switch','UGX','$5.72','NYSE'),(4394,92,'3589385461108910','jcb','CZK','$8.81','NASDAQ'),(4395,23,'4041376667168','visa','CNY','$5.63','NYSE'),(4396,55,'5610959705654202064','china-unionpay','BRL','$7.72','NASDAQ'),(4397,5,'4041373688597','visa','RUB','$3.42','NASDAQ'),(4398,11,'5100178569889589','mastercard','CNY','$7.30','NASDAQ'),(4399,71,'503811525650363821','maestro','PKR','$2.18','NYSE'),(4400,25,'3546408265093476','jcb','SEK','$8.38','NYSE'),(4401,84,'3545468724466094','jcb','EUR','$7.15','NASDAQ'),(4402,40,'5286212055939206','mastercard','AZN','$0.33','NASDAQ'),(4403,69,'3557746168073202','jcb','CNY','$4.38','NASDAQ'),(4404,69,'3564937525201112','jcb','ZAR','$4.10','NYSE'),(4405,79,'4064831912374652','visa','EUR','$9.76','NASDAQ'),(4406,71,'4508339375047736','visa-electron','NGN','$7.65','NASDAQ'),(4407,8,'30468843565477','diners-club-carte-blanche','IDR','$7.96','NYSE'),(4408,52,'4905789948131772','switch','PEN','$2.13','NYSE'),(4409,21,'4917432286742399','visa-electron','MMK','$4.66','NASDAQ'),(4410,77,'201849087725427','diners-club-enroute','CNY','$2.75','NYSE'),(4411,46,'5389137031368798','mastercard','IDR','$7.77','NASDAQ'),(4412,97,'5424954115624822','diners-club-us-ca','IDR','$3.47','NASDAQ'),(4413,73,'5100146154835770','mastercard','EUR','$8.93','NASDAQ'),(4414,82,'67635216646964597','maestro','MWK','$6.73','NASDAQ'),(4415,39,'5348996479868613','mastercard','MXN','$1.56','NYSE'),(4416,69,'372301033836661','americanexpress','RUB','$7.34','NASDAQ'),(4417,57,'675929822559214568','switch','CNY','$9.14','NASDAQ'),(4418,87,'3543479032938387','jcb','CNY','$5.32','NYSE'),(4419,82,'676169612448015111','maestro','CNY','$8.21','NYSE'),(4420,64,'6394601252638198','instapayment','COP','$1.13','NYSE'),(4421,40,'5602227639910462','bankcard','IDR','$6.03','NASDAQ'),(4422,94,'3568095989849409','jcb','PAB','$5.44','NASDAQ'),(4423,30,'3571636458915257','jcb','EUR','$7.41','NYSE'),(4424,42,'6374817556847699','instapayment','CNY','$5.35','NASDAQ'),(4425,79,'6392217115193941','instapayment','RSD','$7.34','NYSE'),(4426,58,'3576594043613363','jcb','DOP','$3.90','NASDAQ'),(4427,64,'201780980311512','diners-club-enroute','IDR','$7.69','NASDAQ'),(4428,78,'3548731567280667','jcb','BRL','$7.39','NYSE'),(4429,24,'3565856742322627','jcb','NOK','$7.28','NYSE'),(4430,4,'374622033275297','americanexpress','UZS','$2.31','NYSE'),(4431,24,'3569519916633213','jcb','CNY','$8.88','NYSE'),(4432,10,'30033090313722','diners-club-carte-blanche','MYR','$5.90','NYSE'),(4433,76,'3531757122208868','jcb','CNY','$6.71','NASDAQ'),(4434,6,'5483025948825239','mastercard','IDR','$1.85','NASDAQ'),(4435,57,'3547113279666627','jcb','CNY','$9.39','NASDAQ'),(4436,2,'5209077674111816','mastercard','BRL','$6.42','NASDAQ'),(4437,100,'3576156885468874','jcb','CNY','$2.40','NYSE'),(4438,13,'3537965630566446','jcb','CNY','$7.92','NYSE'),(4439,64,'4041371063035305','visa','VND','$7.59','NASDAQ'),(4440,95,'3537932387656549','jcb','TMT','$3.56','NYSE'),(4441,98,'3583865456051924','jcb','ARS','$8.11','NASDAQ'),(4442,18,'30596941709629','diners-club-carte-blanche','PEN','$0.54','NYSE'),(4443,71,'3585840424997407','jcb','UAH','$6.15','NASDAQ'),(4444,35,'201797174776839','diners-club-enroute','CNY','$2.01','NYSE'),(4445,34,'4913370890112233','visa-electron','MDL','$2.52','NASDAQ'),(4446,66,'6376108505085674','instapayment','SEK','$3.69','NASDAQ'),(4447,91,'3559859867653873','jcb','HNL','$0.38','NYSE'),(4448,97,'490337396629091389','switch','XAF','$7.78','NYSE'),(4449,2,'5602228721916176089','china-unionpay','CNY','$3.46','NASDAQ'),(4450,79,'3569813833856001','jcb','IDR','$9.62','NASDAQ'),(4451,31,'676381792228522031','maestro','BYR','$1.80','NYSE'),(4452,99,'30002923000376','diners-club-carte-blanche','CNY','$0.02','NYSE'),(4453,80,'6761467243953509','maestro','GTQ','$9.64','NASDAQ'),(4454,1,'4508377722806925','visa-electron','CNY','$9.39','NASDAQ'),(4455,44,'3575556682542964','jcb','PHP','$5.90','NYSE'),(4456,25,'58933548491179527','maestro','IDR','$3.91','NYSE'),(4457,84,'6331105290945538','switch','GEL','$1.15','NASDAQ'),(4458,14,'3535311719395443','jcb','PLN','$1.63','NYSE'),(4459,92,'3582103896989219','jcb','EUR','$5.29','NYSE'),(4460,45,'675920835210384090','switch','USD','$1.61','NASDAQ'),(4461,77,'4913220647735531','visa-electron','CVE','$0.19','NYSE'),(4462,78,'201472360420275','diners-club-enroute','ALL','$6.35','NASDAQ'),(4463,42,'201473617821109','diners-club-enroute','PLN','$6.10','NYSE'),(4464,63,'201732968784681','diners-club-enroute','MXN','$1.76','NASDAQ'),(4465,39,'6398450087864413','instapayment','RUB','$2.77','NASDAQ'),(4466,41,'30326017744262','diners-club-carte-blanche','IDR','$4.41','NYSE'),(4467,4,'5602212190465924','bankcard','EUR','$7.57','NASDAQ'),(4468,50,'3564846944846854','jcb','IDR','$1.37','NYSE'),(4469,21,'4844123327431864','visa-electron','PEN','$5.32','NYSE'),(4470,5,'3549944222828411','jcb','CNY','$9.97','NASDAQ'),(4471,19,'3549045494156091','jcb','MNT','$7.46','NASDAQ'),(4472,9,'5602215121866169','bankcard','IDR','$3.20','NYSE'),(4473,18,'3549559297052794','jcb','EUR','$8.15','NASDAQ'),(4474,72,'6759134742065498686','switch','TND','$0.83','NYSE'),(4475,14,'30133772244276','diners-club-carte-blanche','UAH','$7.62','NYSE'),(4476,12,'3569489685108039','jcb','IDR','$4.47','NASDAQ'),(4477,44,'201444829893723','diners-club-enroute','CNY','$5.56','NASDAQ'),(4478,12,'3553535437448665','jcb','IDR','$6.97','NYSE'),(4479,24,'633353929831117560','switch','CZK','$7.74','NYSE'),(4480,7,'5602210613793690','bankcard','PHP','$8.67','NYSE'),(4481,33,'5038589578183276','maestro','CNY','$6.44','NYSE'),(4482,9,'5602218429068967634','china-unionpay','CZK','$7.33','NASDAQ'),(4483,60,'3588947682188905','jcb','SEK','$1.64','NASDAQ'),(4484,55,'30451302452585','diners-club-carte-blanche','CNY','$8.78','NASDAQ'),(4485,14,'4508985744018251','visa-electron','CZK','$9.90','NYSE'),(4486,82,'5100148001879183','mastercard','PHP','$5.52','NASDAQ'),(4487,73,'675976810831819322','switch','IDR','$4.88','NASDAQ'),(4488,9,'3537654610687659','jcb','IDR','$1.10','NASDAQ'),(4489,50,'56022545981119142','china-unionpay','CNY','$0.32','NYSE'),(4490,18,'3535592875691028','jcb','RUB','$4.38','NASDAQ'),(4491,46,'30527864723446','diners-club-carte-blanche','USD','$8.97','NYSE'),(4492,47,'490547254707019978','switch','EUR','$9.21','NYSE'),(4493,61,'30544364659715','diners-club-carte-blanche','CDF','$0.82','NYSE'),(4494,74,'3572329202486457','jcb','PHP','$2.49','NYSE'),(4495,20,'3576728926180088','jcb','EUR','$6.91','NYSE'),(4496,65,'3559844753583228','jcb','CNY','$0.00','NASDAQ'),(4497,90,'4232957146903136','visa','EUR','$7.68','NYSE'),(4498,100,'4175000388118409','visa-electron','CNY','$9.81','NYSE'),(4499,50,'633110838079892194','switch','NOK','$7.60','NASDAQ'),(4500,50,'5100142148317108','mastercard','XAF','$8.70','NASDAQ'),(4501,54,'4017954524088','visa','DOP','$8.96','NASDAQ'),(4502,29,'3577389501731040','jcb','RUB','$8.76','NYSE'),(4503,87,'5602257225031670','china-unionpay','CNY','$8.12','NYSE'),(4504,24,'5602239366989924929','china-unionpay','SEK','$8.04','NYSE'),(4505,28,'3582251169140927','jcb','ZWL','$3.76','NYSE'),(4506,44,'201427753544222','diners-club-enroute','EUR','$7.10','NASDAQ'),(4507,8,'4405105480089747','visa-electron','CNY','$0.65','NASDAQ'),(4508,77,'676130194687161944','maestro','IDR','$1.04','NASDAQ'),(4509,33,'3588449322447528','jcb','RSD','$4.37','NASDAQ'),(4510,41,'5595293934410771','mastercard','USD','$2.53','NASDAQ'),(4511,18,'201601473116053','diners-club-enroute','BRL','$7.97','NYSE'),(4512,22,'06043900042260569','maestro','NPR','$0.27','NASDAQ'),(4513,22,'345643494891865','americanexpress','BRL','$1.06','NYSE'),(4514,53,'5007669337717049','mastercard','PHP','$5.02','NASDAQ'),(4515,20,'3566037645360589','jcb','AZN','$4.91','NASDAQ'),(4516,25,'3540153776401372','jcb','RUB','$7.76','NYSE'),(4517,43,'201707489262037','diners-club-enroute','CAD','$6.24','NYSE'),(4518,52,'3570107288040873','jcb','CNY','$5.42','NASDAQ'),(4519,7,'50388525222365713','maestro','BYR','$8.69','NASDAQ'),(4520,36,'3573167138222458','jcb','BRL','$4.80','NYSE'),(4521,16,'5100173122530085','mastercard','PLN','$7.77','NASDAQ'),(4522,2,'3552435933419933','jcb','EUR','$6.84','NASDAQ'),(4523,3,'6304965280047859781','maestro','MAD','$4.33','NYSE'),(4524,41,'4508521160825232','visa-electron','SYP','$6.66','NYSE'),(4525,86,'3564199013632742','jcb','CZK','$1.04','NASDAQ'),(4526,40,'374283803702109','americanexpress','RUB','$4.11','NASDAQ'),(4527,93,'5602259522345597','bankcard','MNT','$1.39','NASDAQ'),(4528,96,'3561879648844993','jcb','BOB','$4.75','NYSE'),(4529,41,'4903207705465160','switch','USD','$9.36','NYSE'),(4530,10,'3536151055559858','jcb','IDR','$9.08','NASDAQ'),(4531,23,'30584406061041','diners-club-carte-blanche','CNY','$0.98','NASDAQ'),(4532,57,'3586078224609927','jcb','PLN','$5.48','NASDAQ'),(4533,22,'3550661009369262','jcb','XAF','$5.98','NYSE'),(4534,15,'5610564258929344','bankcard','IDR','$4.98','NYSE'),(4535,34,'337941929190303','americanexpress','BRL','$3.98','NASDAQ'),(4536,6,'5002358096074603','mastercard','CNY','$3.24','NASDAQ'),(4537,20,'633446909060143437','solo','IDR','$7.14','NASDAQ'),(4538,30,'676768953139429145','solo','SEK','$4.10','NYSE'),(4539,31,'30530904095999','diners-club-carte-blanche','CNY','$7.34','NYSE'),(4540,46,'3588172839755569','jcb','BRL','$8.49','NASDAQ'),(4541,86,'3572774648976985','jcb','VND','$3.65','NASDAQ'),(4542,22,'3572619135401395','jcb','MWK','$8.20','NASDAQ'),(4543,19,'67597264235486669','maestro','PKR','$1.47','NYSE'),(4544,49,'3579428355423706','jcb','UAH','$4.71','NYSE'),(4545,63,'3530683324862842','jcb','USD','$5.52','NYSE'),(4546,83,'30582886820282','diners-club-carte-blanche','HUF','$4.39','NASDAQ'),(4547,22,'3555477567133973','jcb','CNY','$1.84','NYSE'),(4548,38,'5010120802132590','mastercard','EUR','$0.64','NASDAQ'),(4549,66,'5038122269645013','maestro','JPY','$3.28','NASDAQ'),(4550,17,'3574227373074003','jcb','THB','$7.38','NASDAQ'),(4551,28,'5602246151328726115','china-unionpay','MAD','$5.60','NASDAQ'),(4552,77,'4249259962754581','visa','EUR','$9.56','NYSE'),(4553,61,'30459611477292','diners-club-carte-blanche','CNY','$3.24','NYSE'),(4554,18,'3561368944250428','jcb','CZK','$1.98','NASDAQ'),(4555,86,'5178912640880747','mastercard','IDR','$8.59','NYSE'),(4556,91,'201462998141732','diners-club-enroute','RUB','$1.07','NYSE'),(4557,19,'4936110114832533373','switch','PLN','$0.19','NASDAQ'),(4558,11,'374283923730006','americanexpress','IDR','$0.03','NYSE'),(4559,43,'5002353195769740','mastercard','ARS','$5.44','NASDAQ'),(4560,75,'3534301648830355','jcb','AMD','$7.11','NYSE'),(4561,19,'633320002560852995','switch','UYU','$3.67','NYSE'),(4562,48,'30408564514973','diners-club-carte-blanche','CNY','$4.57','NASDAQ'),(4563,47,'5458281855429215','mastercard','RUB','$5.42','NASDAQ'),(4564,71,'5602242024929191','bankcard','EUR','$7.30','NYSE'),(4565,73,'5602249930312297','bankcard','CNY','$5.70','NYSE'),(4566,18,'3543892498691136','jcb','CNY','$4.54','NYSE'),(4567,65,'3568289440905484','jcb','PHP','$3.27','NASDAQ'),(4568,31,'5018940514681113494','maestro','PHP','$5.84','NYSE'),(4569,1,'201424636111600','diners-club-enroute','CRC','$4.41','NASDAQ'),(4570,60,'4913588690346806','visa-electron','IDR','$9.96','NYSE'),(4571,25,'491142623453520529','switch','UGX','$2.07','NYSE'),(4572,21,'5038416057493318441','maestro','BRL','$0.06','NYSE'),(4573,93,'201788121148214','diners-club-enroute','EUR','$0.44','NASDAQ'),(4574,18,'4917881399883534','visa-electron','EUR','$5.74','NASDAQ'),(4575,69,'374283899148274','americanexpress','IDR','$8.58','NASDAQ'),(4576,52,'6304103154022976733','laser','MXN','$8.91','NYSE'),(4577,5,'5506548404086510','mastercard','USD','$2.91','NYSE'),(4578,80,'3549420984894412','jcb','KZT','$2.09','NASDAQ'),(4579,65,'4041375709730','visa','ARS','$3.00','NYSE'),(4580,40,'5602235242130113','bankcard','ALL','$3.65','NASDAQ'),(4581,86,'564182987661310634','switch','EUR','$3.28','NASDAQ'),(4582,61,'5100172676595999','mastercard','PLN','$7.99','NYSE'),(4583,57,'63048020316414531','laser','COP','$8.45','NASDAQ'),(4584,35,'3564039568232219','jcb','CNY','$0.90','NYSE'),(4585,3,'564182815833482132','switch','BRL','$7.94','NASDAQ'),(4586,24,'3543635907923479','jcb','PEN','$1.30','NYSE'),(4587,9,'5002351131663951','mastercard','TZS','$9.29','NASDAQ'),(4588,82,'201685527080621','diners-club-enroute','EUR','$1.46','NYSE'),(4589,95,'3570318524819877','jcb','SEK','$6.29','NYSE'),(4590,79,'5602253261844498','bankcard','IDR','$3.26','NYSE'),(4591,93,'3565888538228791','jcb','UAH','$9.90','NASDAQ'),(4592,10,'5048374439844186','mastercard','SEK','$5.58','NYSE'),(4593,82,'3580283413196100','jcb','CNY','$2.40','NASDAQ'),(4594,33,'3585100470875548','jcb','THB','$3.60','NYSE'),(4595,29,'5602252477493369238','china-unionpay','USD','$8.69','NYSE'),(4596,44,'6396796552424451','instapayment','RUB','$0.32','NYSE'),(4597,68,'56022169324868909','china-unionpay','PKR','$5.43','NYSE'),(4598,48,'3539719006455744','jcb','PAB','$9.78','NASDAQ'),(4599,98,'3543303519693895','jcb','CNY','$9.97','NYSE'),(4600,76,'5010126266099175','mastercard','RUB','$5.77','NASDAQ'),(4601,80,'3576668853158816','jcb','IDR','$9.55','NASDAQ'),(4602,44,'3549328881562521','jcb','PHP','$2.90','NYSE'),(4603,67,'374622968269570','americanexpress','DKK','$5.69','NASDAQ'),(4604,93,'3588779257436637','jcb','EUR','$4.81','NYSE'),(4605,67,'6771748223423510572','laser','MUR','$5.03','NASDAQ'),(4606,99,'5602256790346190','bankcard','KMF','$0.59','NASDAQ'),(4607,9,'3580176615135290','jcb','RUB','$7.25','NYSE'),(4608,51,'3566012556462930','jcb','CNY','$4.02','NASDAQ'),(4609,63,'3575697855644177','jcb','COP','$4.52','NASDAQ'),(4610,89,'5602218699961487','bankcard','MNT','$6.23','NASDAQ'),(4611,1,'5002350638611588','mastercard','CNY','$7.34','NASDAQ'),(4612,50,'3580651278783958','jcb','BRL','$9.68','NYSE'),(4613,75,'4917842057183914','visa-electron','CNY','$0.24','NYSE'),(4614,52,'3556166192073683','jcb','CZK','$9.69','NYSE'),(4615,59,'201926034318967','diners-club-enroute','TZS','$5.15','NYSE'),(4616,20,'3566457814678167','jcb','SEK','$7.12','NYSE'),(4617,46,'3535024745794741','jcb','CNY','$1.17','NASDAQ'),(4618,85,'3550023849176003','jcb','CNY','$8.76','NASDAQ'),(4619,92,'3561320749304736','jcb','IDR','$0.98','NASDAQ'),(4620,53,'3559092196177378','jcb','TZS','$6.83','NASDAQ'),(4621,19,'5602245613245952','bankcard','EUR','$8.48','NASDAQ'),(4622,88,'36007756427269','diners-club-international','AFN','$8.96','NASDAQ'),(4623,72,'3580333622522529','jcb','EUR','$3.56','NASDAQ'),(4624,83,'3560767003200581','jcb','CNY','$8.25','NYSE'),(4625,30,'5100175871954135','mastercard','MYR','$5.42','NYSE'),(4626,73,'5602222719276868','china-unionpay','EUR','$9.32','NASDAQ'),(4627,77,'4911965074978317','switch','EUR','$5.53','NYSE'),(4628,42,'5366880923555819','mastercard','IQD','$3.97','NYSE'),(4629,9,'3535488724401927','jcb','CNY','$5.44','NASDAQ'),(4630,38,'3577936021110467','jcb','EUR','$7.52','NASDAQ'),(4631,31,'3532140529974821','jcb','BRL','$4.73','NASDAQ'),(4632,21,'5602244059470208','china-unionpay','IDR','$9.54','NYSE'),(4633,54,'3529165353216671','jcb','MXN','$9.54','NASDAQ'),(4634,46,'4829938388806533','visa','UAH','$7.71','NASDAQ'),(4635,30,'3557357182091269','jcb','UAH','$5.88','NYSE'),(4636,60,'5413888791105198','mastercard','CNY','$8.15','NASDAQ'),(4637,93,'5602236803340497','china-unionpay','PHP','$6.95','NASDAQ'),(4638,92,'3546496173679841','jcb','IDR','$5.48','NYSE'),(4639,17,'3529739039257695','jcb','BOB','$7.85','NASDAQ'),(4640,99,'3546318302696159','jcb','CNY','$9.96','NYSE'),(4641,16,'3588454077109406','jcb','PLN','$7.50','NYSE'),(4642,95,'4041592931567134','visa','BGN','$1.94','NASDAQ'),(4643,33,'3538054143316984','jcb','CNY','$8.71','NASDAQ'),(4644,90,'3589037817468403','jcb','MKD','$5.12','NYSE'),(4645,4,'3554782620172434','jcb','EUR','$0.77','NYSE'),(4646,48,'3559768627785232','jcb','BRL','$5.98','NYSE'),(4647,45,'5602258896798126','bankcard','CZK','$2.66','NASDAQ'),(4648,47,'5108758252770667','mastercard','IDR','$5.20','NASDAQ'),(4649,81,'5108757848734450','mastercard','IDR','$8.87','NYSE'),(4650,4,'3541546134715749','jcb','CNY','$7.44','NASDAQ'),(4651,88,'5893904521242491061','maestro','CNY','$8.26','NYSE'),(4652,28,'30510601481940','diners-club-carte-blanche','EUR','$8.63','NYSE'),(4653,64,'3528297581092300','jcb','BYR','$5.50','NASDAQ'),(4654,4,'337941168840923','americanexpress','CNY','$6.71','NASDAQ'),(4655,48,'3529684829848065','jcb','ARS','$9.10','NASDAQ'),(4656,23,'67619363834922340','maestro','ILS','$1.31','NASDAQ'),(4657,24,'633372961714063790','switch','EUR','$2.56','NASDAQ'),(4658,84,'4041593037742233','visa','PHP','$9.79','NASDAQ'),(4659,27,'490500009127968807','switch','PHP','$1.79','NASDAQ'),(4660,49,'3575938561846734','jcb','RUB','$8.54','NASDAQ'),(4661,75,'493699765455385972','switch','USD','$5.09','NYSE'),(4662,83,'560225304698506563','china-unionpay','CZK','$5.00','NASDAQ'),(4663,40,'4017958490083492','visa','EUR','$5.12','NYSE'),(4664,42,'493602737469491423','switch','CNY','$7.56','NYSE'),(4665,13,'5473650895462538','diners-club-us-ca','BRL','$0.22','NASDAQ'),(4666,41,'3532314245173576','jcb','PLN','$8.41','NASDAQ'),(4667,82,'5002357816626973','mastercard','PLN','$3.77','NASDAQ'),(4668,90,'3540144342346274','jcb','MXN','$2.71','NYSE'),(4669,46,'3528695828792824','jcb','BGN','$5.36','NYSE'),(4670,43,'3559810570039280','jcb','CNY','$4.07','NASDAQ'),(4671,12,'5641828908576208','switch','RUB','$4.65','NASDAQ'),(4672,78,'5602228130813417887','china-unionpay','SEK','$1.23','NYSE'),(4673,35,'30251587474027','diners-club-carte-blanche','AFN','$0.43','NYSE'),(4674,10,'5100175354979633','mastercard','PEN','$3.70','NYSE'),(4675,31,'6331101197132966370','switch','ARS','$0.56','NASDAQ'),(4676,98,'4913971637323585','visa-electron','BDT','$3.78','NYSE'),(4677,6,'6388149545627667','instapayment','THB','$4.70','NYSE'),(4678,1,'3587368365810692','jcb','CZK','$5.91','NYSE'),(4679,15,'3555156285941566','jcb','NOK','$7.48','NASDAQ'),(4680,99,'3578034312364628','jcb','CNY','$5.60','NYSE'),(4681,78,'3561498461267362','jcb','BRL','$8.12','NYSE'),(4682,46,'3569750756870595','jcb','HUF','$4.51','NYSE'),(4683,82,'67633141551787175','maestro','IDR','$3.73','NYSE'),(4684,95,'30230676027169','diners-club-carte-blanche','HTG','$7.04','NYSE'),(4685,68,'5602223977831238','bankcard','EUR','$3.90','NYSE'),(4686,88,'675905573377418653','switch','EGP','$2.17','NASDAQ'),(4687,41,'201859677102655','diners-club-enroute','IDR','$7.52','NASDAQ'),(4688,39,'3581140063765973','jcb','HRK','$5.19','NASDAQ'),(4689,45,'3583809121879962','jcb','CNY','$0.80','NYSE'),(4690,56,'3560984856165908','jcb','IDR','$8.12','NASDAQ'),(4691,74,'67061120096244851','laser','EUR','$4.68','NASDAQ'),(4692,43,'3587777430359438','jcb','PLN','$3.01','NYSE'),(4693,61,'3536239795002402','jcb','JPY','$6.64','NYSE'),(4694,4,'3547007862760468','jcb','MXN','$2.21','NASDAQ'),(4695,2,'50387042762524346','maestro','RUB','$3.75','NASDAQ'),(4696,30,'67069802270223551','laser','EUR','$1.51','NYSE'),(4697,45,'3528086933903615','jcb','BRL','$5.60','NASDAQ'),(4698,96,'375264236745179','americanexpress','EUR','$1.26','NASDAQ'),(4699,73,'6371057407302411','instapayment','IDR','$2.68','NYSE'),(4700,40,'3544035649015933','jcb','MKD','$8.92','NYSE'),(4701,77,'337941657031851','americanexpress','SEK','$4.58','NASDAQ'),(4702,20,'5602215594838943','bankcard','EUR','$5.16','NYSE'),(4703,49,'56022237791048956','china-unionpay','IDR','$6.00','NASDAQ'),(4704,73,'201930947787326','diners-club-enroute','VND','$8.20','NASDAQ'),(4705,67,'3545571444810259','jcb','CNY','$3.92','NYSE'),(4706,11,'3546989173695825','jcb','AOA','$3.29','NASDAQ'),(4707,79,'5641820815803770762','switch','PHP','$6.92','NASDAQ'),(4708,19,'3543205670518920','jcb','ARS','$3.01','NASDAQ'),(4709,51,'30568478277262','diners-club-carte-blanche','EUR','$6.77','NASDAQ'),(4710,67,'4405713019196048','visa-electron','IDR','$4.18','NYSE'),(4711,83,'3566407299458650','jcb','EUR','$9.42','NASDAQ'),(4712,49,'3554547485646628','jcb','BRL','$2.97','NYSE'),(4713,40,'3554205959475608','jcb','IDR','$1.49','NASDAQ'),(4714,15,'349534201267646','americanexpress','PLN','$6.19','NASDAQ'),(4715,26,'4913478433420060','visa-electron','PLN','$3.59','NYSE'),(4716,74,'501854137036811853','maestro','MXN','$3.81','NASDAQ'),(4717,85,'374283234543320','americanexpress','RUB','$5.18','NASDAQ'),(4718,31,'3537028478546150','jcb','TZS','$7.29','NYSE'),(4719,18,'3561167723175990','jcb','VND','$9.54','NASDAQ'),(4720,46,'3559990731992757','jcb','EUR','$6.13','NYSE'),(4721,75,'5100179190186510','mastercard','CNY','$6.92','NASDAQ'),(4722,84,'3552971647750544','jcb','CNY','$2.38','NASDAQ'),(4723,5,'3578274444854118','jcb','PEN','$1.78','NYSE'),(4724,11,'6333066115796742126','switch','PHP','$4.47','NYSE'),(4725,78,'337941366372489','americanexpress','EGP','$5.81','NASDAQ'),(4726,13,'56106345866020211','china-unionpay','CNY','$7.31','NASDAQ'),(4727,78,'6709953148431100','laser','MXN','$6.14','NYSE'),(4728,20,'6372966576134620','instapayment','DOP','$5.97','NYSE'),(4729,46,'560223438117688032','china-unionpay','PHP','$8.75','NYSE'),(4730,30,'3531552056766753','jcb','IDR','$8.36','NYSE'),(4731,23,'3571851353645616','jcb','IDR','$7.98','NASDAQ'),(4732,45,'30563300449734','diners-club-carte-blanche','CNY','$9.57','NASDAQ'),(4733,36,'4911684384185691','switch','PYG','$7.32','NYSE'),(4734,36,'3563380221164717','jcb','MXN','$7.70','NASDAQ'),(4735,7,'5610149237857475','bankcard','EUR','$5.71','NYSE'),(4736,93,'3561909321079995','jcb','CNY','$5.81','NYSE'),(4737,3,'5401781535775679','mastercard','UGX','$1.82','NYSE'),(4738,35,'3574583244384397','jcb','ARS','$0.20','NASDAQ'),(4739,43,'5484599273598925','mastercard','MXN','$1.29','NASDAQ'),(4740,23,'4017955885501831','visa','BOB','$3.77','NASDAQ'),(4741,76,'4041377563711378','visa','PHP','$8.97','NYSE'),(4742,29,'3569421801302212','jcb','PHP','$4.10','NASDAQ'),(4743,86,'4913996528681643','visa-electron','IDR','$8.73','NASDAQ'),(4744,32,'3574177892839123','jcb','GNF','$2.90','NASDAQ'),(4745,39,'5010127345327348','mastercard','PEN','$6.09','NYSE'),(4746,67,'6759521278401448','switch','IDR','$1.36','NYSE'),(4747,37,'3543162586644953','jcb','EUR','$3.58','NASDAQ'),(4748,27,'5108756229235913','mastercard','CNY','$1.11','NASDAQ'),(4749,20,'3530802876801186','jcb','ARS','$3.49','NASDAQ'),(4750,47,'3564014887300864','jcb','PHP','$0.40','NASDAQ'),(4751,11,'3562071105276443','jcb','CNY','$0.22','NYSE'),(4752,11,'3588428218272273','jcb','EUR','$4.95','NASDAQ'),(4753,35,'6374519136704925','instapayment','IDR','$7.54','NASDAQ'),(4754,14,'3554476234275762','jcb','PLN','$6.20','NYSE'),(4755,80,'3535050372374143','jcb','ARS','$3.35','NYSE'),(4756,45,'3574775471036209','jcb','KRW','$7.61','NASDAQ'),(4757,31,'4844120054389','visa','RUB','$7.82','NYSE'),(4758,67,'4405613584982543','visa-electron','PEN','$3.75','NYSE'),(4759,18,'201951442343688','diners-club-enroute','CNY','$6.17','NASDAQ'),(4760,42,'3552407311979945','jcb','RUB','$2.95','NASDAQ'),(4761,24,'3534231398279240','jcb','MYR','$4.34','NYSE'),(4762,37,'5893779193976980','maestro','NOK','$4.09','NYSE'),(4763,52,'3567897711483097','jcb','XOF','$7.23','NYSE'),(4764,99,'3568601956407251','jcb','IDR','$7.10','NASDAQ'),(4765,19,'5602215804490618','china-unionpay','ZAR','$6.86','NYSE'),(4766,46,'5038391472017803','maestro','CNY','$3.28','NYSE'),(4767,6,'4026770969486661','visa-electron','CNY','$8.96','NYSE'),(4768,51,'3584509560447813','jcb','CNY','$9.72','NASDAQ'),(4769,33,'4041372714453988','visa','XOF','$0.68','NYSE'),(4770,9,'3556071935272602','jcb','MNT','$0.66','NYSE'),(4771,92,'3563599504238589','jcb','NGN','$2.97','NASDAQ'),(4772,66,'3552858917741636','jcb','JPY','$0.15','NASDAQ'),(4773,73,'630495962491329410','laser','EUR','$6.71','NYSE'),(4774,38,'4026051903764616','visa-electron','IDR','$5.70','NASDAQ'),(4775,66,'4903347829466806739','switch','RUB','$6.96','NYSE'),(4776,94,'5553795465940174','diners-club-us-ca','EUR','$5.76','NYSE'),(4777,50,'5569808171894296','diners-club-us-ca','RUB','$3.88','NYSE'),(4778,65,'5602234955246069679','china-unionpay','THB','$0.11','NASDAQ'),(4779,59,'3531002378104457','jcb','IDR','$4.37','NASDAQ'),(4780,6,'3571395312216762','jcb','EUR','$8.07','NYSE'),(4781,12,'3569934006593252','jcb','VND','$2.97','NASDAQ'),(4782,60,'201794004741828','diners-club-enroute','EUR','$9.07','NYSE'),(4783,91,'6331108918188843525','switch','ILS','$9.72','NASDAQ'),(4784,36,'374283031959000','americanexpress','HNL','$2.91','NYSE'),(4785,55,'3568004937117414','jcb','BRL','$3.77','NASDAQ'),(4786,25,'560221082379346798','china-unionpay','NAD','$7.53','NASDAQ'),(4787,73,'4911913582066415','switch','CNY','$4.73','NASDAQ'),(4788,68,'3532802071288146','jcb','CNY','$6.00','NASDAQ'),(4789,48,'5100143821926728','mastercard','RUB','$2.48','NASDAQ'),(4790,52,'3563197560664390','jcb','USD','$6.54','NASDAQ'),(4791,28,'3578220436874986','jcb','IDR','$9.18','NASDAQ'),(4792,41,'3546619427273760','jcb','PHP','$8.97','NASDAQ'),(4793,43,'676368991038335413','maestro','CNY','$2.25','NASDAQ'),(4794,41,'677164151049656869','laser','CZK','$3.89','NYSE'),(4795,75,'4990482867710455','visa','USD','$4.74','NYSE'),(4796,18,'3532262459093032','jcb','ETB','$9.25','NYSE'),(4797,36,'201807463965801','diners-club-enroute','PHP','$6.47','NASDAQ'),(4798,1,'3559059126134639','jcb','BGN','$3.61','NASDAQ'),(4799,77,'3589215374283932','jcb','USD','$3.10','NYSE'),(4800,42,'3528102958115629','jcb','PKR','$5.39','NYSE'),(4801,19,'30159266572674','diners-club-carte-blanche','KGS','$3.22','NASDAQ'),(4802,3,'3568436210667535','jcb','IDR','$3.21','NYSE'),(4803,82,'30442591309040','diners-club-carte-blanche','USD','$3.41','NYSE'),(4804,70,'3546533976408646','jcb','EUR','$8.94','NYSE'),(4805,6,'3531283298467923','jcb','BRL','$3.40','NASDAQ'),(4806,72,'201879538069331','diners-club-enroute','UAH','$5.11','NASDAQ'),(4807,65,'4508699146148224','visa-electron','USD','$9.06','NASDAQ'),(4808,41,'201574529157407','diners-club-enroute','COP','$0.80','NASDAQ'),(4809,66,'5116520248010537','mastercard','THB','$5.42','NYSE'),(4810,46,'3538961527164014','jcb','KWD','$2.90','NASDAQ'),(4811,52,'4905159042455499167','switch','CNY','$3.79','NYSE'),(4812,39,'3535274245057178','jcb','CNY','$2.67','NYSE'),(4813,70,'3573356637708667','jcb','UAH','$5.66','NASDAQ'),(4814,65,'30250008776283','diners-club-carte-blanche','KMF','$1.24','NYSE'),(4815,59,'5641829725632844','switch','PHP','$0.96','NYSE'),(4816,49,'3528033674123904','jcb','BRL','$5.90','NYSE'),(4817,22,'4405485139689133','visa-electron','PHP','$5.54','NYSE'),(4818,71,'3582692271210365','jcb','CAD','$0.48','NASDAQ'),(4819,9,'3560340274647086','jcb','IDR','$1.67','NASDAQ'),(4820,26,'3532938657899086','jcb','MGA','$6.38','NASDAQ'),(4821,62,'3530830096354173','jcb','PHP','$5.02','NASDAQ'),(4822,82,'5602236336297008','china-unionpay','SYP','$2.59','NYSE'),(4823,92,'3581887289526841','jcb','USD','$4.81','NYSE'),(4824,70,'5048374089754974','mastercard','XAF','$3.36','NYSE'),(4825,50,'4041597452718701','visa','JPY','$2.30','NASDAQ'),(4826,20,'201601299281339','diners-club-enroute','RUB','$8.00','NASDAQ'),(4827,75,'3561640395573460','jcb','CNY','$0.24','NASDAQ'),(4828,56,'3579462613688883','jcb','CNY','$9.63','NASDAQ'),(4829,100,'374283776695991','americanexpress','EUR','$2.34','NYSE'),(4830,60,'5108759516131522','mastercard','LAK','$3.15','NYSE'),(4831,7,'3559869787438552','jcb','CNY','$1.22','NYSE'),(4832,100,'30457340874219','diners-club-carte-blanche','EUR','$5.88','NASDAQ'),(4833,70,'3539472990515798','jcb','BRL','$8.09','NYSE'),(4834,75,'5278305283673025','mastercard','PHP','$9.59','NASDAQ'),(4835,45,'3546096037789065','jcb','PHP','$9.95','NYSE'),(4836,8,'30426604562380','diners-club-carte-blanche','RUB','$0.22','NASDAQ'),(4837,66,'6304361213021492','maestro','RUB','$0.46','NYSE'),(4838,12,'4041595873837','visa','BRL','$1.85','NYSE'),(4839,47,'3558561528565600','jcb','SEK','$5.05','NASDAQ'),(4840,79,'6709856832768754','laser','BRL','$0.50','NASDAQ'),(4841,47,'3558819498617490','jcb','CNY','$8.15','NASDAQ'),(4842,12,'201608194524903','diners-club-enroute','IDR','$3.99','NYSE'),(4843,56,'5584934436675493','diners-club-us-ca','COP','$7.81','NASDAQ'),(4844,79,'3584148299874458','jcb','CNY','$5.20','NYSE'),(4845,8,'5313038786365552','mastercard','RUB','$5.39','NYSE'),(4846,80,'5108750487833188','mastercard','PLN','$0.29','NASDAQ'),(4847,29,'3539137077868416','jcb','THB','$1.57','NYSE'),(4848,92,'201509348833804','diners-club-enroute','SEK','$0.62','NYSE'),(4849,11,'3562529160424216','jcb','ARS','$7.46','NYSE'),(4850,19,'3586363107869917','jcb','EUR','$5.84','NASDAQ'),(4851,46,'6767070085664582','solo','CAD','$4.41','NYSE'),(4852,22,'3538064088964375','jcb','THB','$4.87','NYSE'),(4853,38,'3542281784641446','jcb','PLN','$8.71','NYSE'),(4854,35,'676289892873842529','maestro','CZK','$5.23','NASDAQ'),(4855,59,'30002777581166','diners-club-carte-blanche','MXN','$0.44','NYSE'),(4856,65,'3539642036649575','jcb','EUR','$8.47','NYSE'),(4857,86,'4405375501487515','visa-electron','ARS','$8.32','NASDAQ'),(4858,55,'5192669695232495','mastercard','RUB','$3.45','NASDAQ'),(4859,33,'3566099278200748','jcb','RUB','$1.36','NYSE'),(4860,9,'56100972382635093','china-unionpay','VND','$4.13','NASDAQ'),(4861,58,'5048377753056444','mastercard','EUR','$5.52','NASDAQ'),(4862,58,'5104927886231495','mastercard','VND','$9.56','NYSE'),(4863,23,'3565739672519430','jcb','PLN','$7.89','NYSE'),(4864,24,'633110584352471047','switch','USD','$1.58','NASDAQ'),(4865,21,'3561400308580288','jcb','PHP','$8.54','NASDAQ'),(4866,37,'5491303598044652','diners-club-us-ca','IDR','$0.91','NASDAQ'),(4867,2,'3567554495952587','jcb','PLN','$1.39','NASDAQ'),(4868,43,'201641057020131','diners-club-enroute','XAF','$6.58','NASDAQ'),(4869,100,'3550540305896485','jcb','CNY','$7.86','NYSE'),(4870,58,'5010126776039695','mastercard','EUR','$5.47','NASDAQ'),(4871,81,'56108477342450171','china-unionpay','CNY','$2.50','NYSE'),(4872,57,'5108751386915365','mastercard','EUR','$0.56','NYSE'),(4873,45,'3554471576444910','jcb','IDR','$8.74','NYSE'),(4874,60,'374288600208184','americanexpress','EUR','$7.73','NASDAQ'),(4875,99,'5481325899251134','diners-club-us-ca','EUR','$1.63','NASDAQ'),(4876,74,'201702349594802','diners-club-enroute','CNY','$5.74','NYSE'),(4877,47,'3556463150223446','jcb','MMK','$4.04','NYSE'),(4878,59,'3557902113455297','jcb','CNY','$0.35','NASDAQ'),(4879,51,'5316206942747453','mastercard','KMF','$8.27','NYSE'),(4880,30,'6383145449200986','instapayment','RUB','$2.35','NASDAQ'),(4881,76,'337941425789590','americanexpress','BRL','$2.94','NYSE'),(4882,32,'201404763425064','diners-club-enroute','BOB','$1.51','NASDAQ'),(4883,23,'5602221485991593','bankcard','UAH','$1.56','NASDAQ'),(4884,33,'4026431494931933','visa-electron','PHP','$9.76','NYSE'),(4885,19,'36039103705295','diners-club-international','EUR','$9.24','NYSE'),(4886,84,'3560540782599550','jcb','USD','$3.37','NASDAQ'),(4887,36,'4017952962031261','visa','NPR','$0.56','NYSE'),(4888,48,'3569687707131109','jcb','CNY','$3.28','NYSE'),(4889,64,'3559217178672274','jcb','CNY','$4.47','NASDAQ'),(4890,87,'3580168433530059','jcb','IDR','$1.90','NASDAQ'),(4891,28,'5538066035452722','diners-club-us-ca','PHP','$1.00','NASDAQ'),(4892,72,'4017953792017','visa','IDR','$1.13','NASDAQ'),(4893,76,'4913260409712880','visa-electron','RUB','$5.84','NASDAQ'),(4894,81,'3552296137806246','jcb','RUB','$5.00','NASDAQ'),(4895,43,'3541305901143704','jcb','SEK','$0.76','NASDAQ'),(4896,23,'633309992651476545','switch','IDR','$7.28','NYSE'),(4897,8,'3564208850413015','jcb','RUB','$10.00','NYSE'),(4898,29,'3535660742110629','jcb','JPY','$4.22','NASDAQ'),(4899,24,'3562702264370649','jcb','CZK','$5.03','NASDAQ'),(4900,6,'6397962278407266','instapayment','RUB','$4.53','NASDAQ'),(4901,68,'3536463229980575','jcb','PHP','$2.35','NASDAQ'),(4902,53,'4175001172129131','visa-electron','SEK','$6.01','NYSE'),(4903,25,'5010126899497564','mastercard','MMK','$6.92','NYSE'),(4904,64,'201827393258077','diners-club-enroute','SEK','$4.56','NASDAQ'),(4905,12,'3538775814019693','jcb','IDR','$1.41','NYSE'),(4906,33,'201940017182969','diners-club-enroute','PLN','$8.15','NYSE'),(4907,43,'5100140569273024','mastercard','XOF','$3.84','NYSE'),(4908,54,'3536398684030179','jcb','CZK','$8.58','NASDAQ'),(4909,52,'3544116964457676','jcb','EUR','$3.55','NASDAQ'),(4910,70,'5561528776697104','mastercard','DKK','$3.10','NASDAQ'),(4911,17,'3585691274092777','jcb','IDR','$4.06','NASDAQ'),(4912,26,'5566974351923405','mastercard','IRR','$8.27','NYSE'),(4913,45,'3564200635512252','jcb','IRR','$1.83','NASDAQ'),(4914,32,'3535759880809065','jcb','EUR','$0.70','NYSE'),(4915,66,'349694847812013','americanexpress','PLN','$4.30','NASDAQ'),(4916,63,'3574462987074673','jcb','DKK','$7.62','NYSE'),(4917,54,'349121100776842','americanexpress','EUR','$0.32','NYSE'),(4918,18,'3545226624833106','jcb','EUR','$10.00','NASDAQ'),(4919,3,'50181368418367766','maestro','BYR','$4.15','NASDAQ'),(4920,49,'374622971145379','americanexpress','PHP','$6.91','NYSE'),(4921,60,'6334656504109313234','solo','AZN','$8.08','NASDAQ'),(4922,19,'6394888704585867','instapayment','CNY','$7.90','NYSE'),(4923,58,'490375280888962337','switch','EUR','$3.26','NASDAQ'),(4924,45,'3567387940861743','jcb','PLN','$1.81','NASDAQ'),(4925,24,'3549011355777854','jcb','JPY','$5.60','NYSE'),(4926,57,'3571635428480012','jcb','COP','$6.56','NASDAQ'),(4927,36,'5602220942285110','bankcard','IDR','$0.73','NASDAQ'),(4928,26,'4041596149569741','visa','SYP','$8.72','NYSE'),(4929,39,'5002353932800139','mastercard','PEN','$7.12','NYSE'),(4930,55,'3548884289901688','jcb','CNY','$4.74','NYSE'),(4931,60,'36755363909869','diners-club-international','CNY','$0.34','NYSE'),(4932,58,'30359569887122','diners-club-carte-blanche','SDG','$7.35','NYSE'),(4933,17,'3589290051188944','jcb','IDR','$2.10','NYSE'),(4934,94,'6331103366602044293','switch','KZT','$8.17','NYSE'),(4935,96,'201866379549687','diners-club-enroute','IDR','$3.73','NASDAQ'),(4936,23,'5602233782774490064','china-unionpay','CZK','$4.53','NASDAQ'),(4937,43,'3587334650285594','jcb','EUR','$3.05','NYSE'),(4938,18,'503839797641368825','maestro','RUB','$3.09','NYSE'),(4939,10,'5100142939013932','mastercard','UAH','$1.64','NASDAQ'),(4940,20,'3567889091767009','jcb','PHP','$4.02','NYSE'),(4941,72,'3530247291551257','jcb','EUR','$2.57','NASDAQ'),(4942,43,'3547158332275783','jcb','EUR','$4.71','NASDAQ'),(4943,33,'5602259594412986','bankcard','IDR','$6.28','NASDAQ'),(4944,63,'4175002508943211','visa-electron','EUR','$8.29','NYSE'),(4945,99,'3576828700603519','jcb','EUR','$6.98','NASDAQ'),(4946,22,'3533006887536859','jcb','EUR','$6.44','NASDAQ'),(4947,39,'4041592800141854','visa','IDR','$6.13','NASDAQ'),(4948,68,'5230859059567248','mastercard','USD','$2.67','NASDAQ'),(4949,57,'201479299497514','diners-club-enroute','PHP','$5.98','NYSE'),(4950,68,'3538411220657021','jcb','EUR','$6.00','NASDAQ'),(4951,13,'6767572862874988172','solo','SEK','$5.13','NASDAQ'),(4952,10,'3571133444813135','jcb','PLN','$4.16','NYSE'),(4953,17,'67621647518913013','maestro','ILS','$5.95','NASDAQ'),(4954,86,'374288015102972','americanexpress','COP','$0.07','NYSE'),(4955,67,'5100138383397169','mastercard','CNY','$0.33','NASDAQ'),(4956,51,'4175001904513271','visa-electron','CNY','$3.07','NYSE'),(4957,91,'3541201945182495','jcb','CNY','$6.77','NYSE'),(4958,23,'501830412636259350','maestro','SEK','$2.67','NASDAQ'),(4959,64,'5602228769295427','china-unionpay','CNY','$9.85','NYSE'),(4960,10,'3581907284655013','jcb','CNY','$0.62','NYSE'),(4961,48,'372301700454038','americanexpress','IDR','$4.09','NYSE'),(4962,93,'3558250592420062','jcb','UAH','$9.13','NYSE'),(4963,16,'4175004199719454','visa-electron','RUB','$7.08','NASDAQ'),(4964,42,'67598428837143262','maestro','EUR','$8.86','NASDAQ'),(4965,86,'3540716147969606','jcb','VND','$6.43','NYSE'),(4966,43,'373578260623735','americanexpress','CNY','$3.22','NASDAQ'),(4967,83,'3547650197902329','jcb','CNY','$9.44','NYSE'),(4968,82,'56022101838356162','china-unionpay','BRL','$3.41','NASDAQ'),(4969,80,'201429688766581','diners-club-enroute','THB','$0.73','NYSE'),(4970,14,'4405008542768573','visa-electron','BRL','$6.98','NASDAQ'),(4971,12,'5048372240212320','mastercard','NIO','$2.96','NYSE'),(4972,74,'630428876442031887','maestro','USD','$7.91','NASDAQ'),(4973,22,'374622994384997','americanexpress','IDR','$5.21','NYSE'),(4974,91,'374622085390317','americanexpress','NAD','$3.27','NYSE'),(4975,50,'5007663420604487','mastercard','COP','$1.01','NASDAQ'),(4976,35,'374135658677168','americanexpress','EUR','$0.55','NASDAQ'),(4977,97,'6761060109806558414','maestro','LBP','$2.36','NYSE'),(4978,95,'3581471763181546','jcb','IDR','$8.29','NYSE'),(4979,98,'201963363197365','diners-club-enroute','PHP','$5.85','NASDAQ'),(4980,68,'5505255215449058','diners-club-us-ca','CNY','$9.03','NASDAQ'),(4981,11,'3580060191323878','jcb','HRK','$3.78','NASDAQ'),(4982,75,'3566205732551275','jcb','SEK','$8.16','NYSE'),(4983,42,'3568423062919313','jcb','ZAR','$9.23','NASDAQ'),(4984,80,'06046016696892636','maestro','VND','$1.86','NASDAQ'),(4985,49,'4175007183545694','visa-electron','CNY','$2.63','NYSE'),(4986,47,'5602222238020342','bankcard','TZS','$5.53','NYSE'),(4987,10,'3558896432437490','jcb','IDR','$4.88','NASDAQ'),(4988,17,'3539943764802901','jcb','EUR','$0.96','NYSE'),(4989,96,'3574003100998099','jcb','UAH','$5.01','NYSE'),(4990,53,'3548510240465840','jcb','PHP','$8.00','NYSE'),(4991,25,'6370018047951620','instapayment','EUR','$2.92','NASDAQ'),(4992,43,'201782985046143','diners-club-enroute','ARS','$9.90','NASDAQ'),(4993,2,'3550030862118663','jcb','VEF','$1.39','NASDAQ'),(4994,15,'6333234435504477','switch','EUR','$6.93','NYSE'),(4995,64,'3528895628341521','jcb','IDR','$9.11','NASDAQ'),(4996,24,'5038892823073080','maestro','IRR','$4.52','NYSE'),(4997,81,'3584152728565323','jcb','AMD','$5.02','NYSE'),(4998,47,'4917666474438266','visa-electron','UAH','$1.31','NYSE'),(4999,77,'30581464209157','diners-club-carte-blanche','IDR','$3.44','NASDAQ'),(5000,28,'670621565658967790','laser','PKR','$7.45','NASDAQ'),(5001,90,'0604911998806564','maestro','USD','$9.67','NASDAQ'),(5002,71,'5007669770358038','mastercard','IDR','$5.23','NYSE'),(5003,45,'3559295720082531','jcb','CNY','$1.04','NASDAQ'),(5004,58,'3587943934522125','jcb','CNY','$8.54','NASDAQ'),(5005,85,'3576262300553751','jcb','CNY','$5.32','NYSE'),(5006,86,'201592380189145','diners-club-enroute','IDR','$6.77','NYSE'),(5007,77,'30232099917174','diners-club-carte-blanche','CNY','$7.71','NYSE'),(5008,4,'4508919817298938','visa-electron','PLN','$1.23','NYSE'),(5009,40,'3535179278390588','jcb','IDR','$7.46','NASDAQ'),(5010,95,'676281822121974095','maestro','SEK','$7.33','NYSE'),(5011,74,'3555734643267906','jcb','CAD','$8.00','NASDAQ'),(5012,38,'5561523558581055','diners-club-us-ca','UAH','$9.65','NASDAQ'),(5013,7,'3551363182970805','jcb','CZK','$1.80','NYSE'),(5014,9,'5602218229568141','china-unionpay','CNY','$1.59','NASDAQ'),(5015,31,'4405287323024824','visa-electron','IDR','$0.65','NYSE'),(5016,78,'589327624100301642','maestro','AFN','$5.29','NASDAQ'),(5017,76,'3565175465586536','jcb','SEK','$2.45','NYSE'),(5018,19,'3547840827586812','jcb','CNY','$8.27','NYSE'),(5019,1,'3532599449167420','jcb','PLN','$0.55','NYSE'),(5020,16,'374288956937626','americanexpress','JOD','$7.93','NASDAQ'),(5021,14,'3568702986203072','jcb','BRL','$2.13','NASDAQ'),(5022,51,'3545048708966960','jcb','BRL','$2.90','NYSE'),(5023,44,'3567086730907092','jcb','IDR','$7.82','NYSE'),(5024,72,'36993991245824','diners-club-international','CNY','$6.47','NYSE'),(5025,22,'4911257918166832','switch','PHP','$7.50','NYSE'),(5026,81,'6763811906039071240','maestro','EUR','$4.06','NASDAQ'),(5027,99,'5610276160388297269','china-unionpay','THB','$7.19','NYSE'),(5028,71,'3566193081972070','jcb','RUB','$1.76','NYSE'),(5029,39,'6375563230277718','instapayment','THB','$5.18','NASDAQ'),(5030,9,'676787620101951250','solo','JPY','$2.70','NASDAQ'),(5031,98,'3559067948056187','jcb','SEK','$7.21','NYSE'),(5032,17,'3573415407436840','jcb','THB','$8.17','NASDAQ'),(5033,72,'3537387464197265','jcb','EUR','$0.36','NASDAQ'),(5034,64,'490329166712324033','switch','EUR','$1.94','NYSE'),(5035,18,'670911327514890420','laser','ZAR','$2.20','NASDAQ'),(5036,35,'633356470110516740','switch','CNY','$9.98','NASDAQ'),(5037,51,'30501026165911','diners-club-carte-blanche','JPY','$4.58','NYSE'),(5038,50,'3561756052996446','jcb','EUR','$7.00','NYSE'),(5039,58,'6304992037583877','laser','ARS','$4.06','NASDAQ'),(5040,88,'4917400016955953','visa-electron','CAD','$2.13','NYSE'),(5041,53,'3540571726685135','jcb','CNY','$6.90','NASDAQ'),(5042,19,'3543067088168783','jcb','CZK','$5.92','NYSE'),(5043,78,'6381190486033819','instapayment','KES','$1.13','NASDAQ'),(5044,29,'6771369079556703261','laser','PLN','$9.73','NASDAQ'),(5045,29,'6398565958937152','instapayment','CNY','$2.47','NASDAQ'),(5046,62,'3546278904018857','jcb','EGP','$4.21','NYSE'),(5047,27,'67099038867841802','laser','EUR','$0.32','NYSE'),(5048,70,'3579428018867315','jcb','IDR','$5.87','NASDAQ'),(5049,67,'4936297004398544','switch','USD','$8.19','NYSE'),(5050,94,'3567207201159019','jcb','GBP','$3.22','NYSE'),(5051,46,'374622462614651','americanexpress','TND','$3.99','NASDAQ'),(5052,81,'6331109181947330','switch','CZK','$0.50','NYSE'),(5053,12,'67591057788654550','maestro','PHP','$6.99','NYSE'),(5054,33,'3579485428655706','jcb','IDR','$1.11','NYSE'),(5055,57,'3562884231094518','jcb','ZMW','$7.45','NYSE'),(5056,89,'3554380041853334','jcb','EUR','$8.65','NYSE'),(5057,80,'3533441079195976','jcb','CNY','$6.52','NASDAQ'),(5058,92,'5108754800170153','mastercard','IDR','$1.89','NASDAQ'),(5059,78,'630499249341632573','laser','AZN','$6.08','NASDAQ'),(5060,92,'4917372084117578','visa-electron','IDR','$9.34','NASDAQ'),(5061,40,'30306894157416','diners-club-carte-blanche','EUR','$0.28','NASDAQ'),(5062,84,'5602258402909399','bankcard','THB','$0.03','NYSE'),(5063,36,'5100138586838936','mastercard','PEN','$0.58','NYSE'),(5064,80,'3583811889276431','jcb','VEF','$1.60','NYSE'),(5065,61,'3580889939603740','jcb','CNY','$9.45','NYSE'),(5066,87,'3574230288724647','jcb','CNY','$0.48','NASDAQ'),(5067,59,'3580823499132287','jcb','PEN','$8.92','NASDAQ'),(5068,19,'3539554264214537','jcb','PHP','$2.81','NYSE'),(5069,16,'3538768795231957','jcb','MXN','$3.21','NASDAQ'),(5070,17,'36639162474210','diners-club-international','USD','$5.10','NYSE'),(5071,1,'3584500358377155','jcb','MXN','$6.62','NASDAQ'),(5072,33,'201699708901505','diners-club-enroute','EUR','$4.51','NYSE'),(5073,5,'67062183679046480','laser','USD','$0.44','NYSE'),(5074,14,'201791651296841','diners-club-enroute','SEK','$2.99','NASDAQ'),(5075,9,'3537442761344878','jcb','CRC','$5.68','NASDAQ'),(5076,42,'3542007910064371','jcb','BRL','$0.77','NYSE'),(5077,85,'3554285880837860','jcb','AMD','$2.45','NASDAQ'),(5078,28,'201942406685990','diners-club-enroute','PLN','$9.55','NYSE'),(5079,76,'3539185438017348','jcb','PHP','$4.51','NYSE'),(5080,47,'5010121539397308','mastercard','MYR','$6.90','NASDAQ'),(5081,78,'371762618558718','americanexpress','VND','$3.19','NASDAQ'),(5082,88,'3563463240441942','jcb','XAF','$3.53','NYSE'),(5083,14,'5100148026065321','mastercard','BGN','$5.26','NASDAQ'),(5084,36,'3550484656170770','jcb','IDR','$4.44','NASDAQ'),(5085,76,'4508663734386281','visa-electron','CNY','$4.85','NYSE'),(5086,72,'201796894011600','diners-club-enroute','IDR','$8.31','NASDAQ'),(5087,52,'374283349733022','americanexpress','EUR','$1.19','NASDAQ'),(5088,90,'4041596689802296','visa','PHP','$0.01','NASDAQ'),(5089,19,'4508667233170153','visa-electron','VND','$7.06','NYSE'),(5090,88,'30241997481274','diners-club-carte-blanche','EUR','$6.19','NYSE'),(5091,25,'5602217672323103','bankcard','PEN','$8.95','NASDAQ'),(5092,53,'3538800151931563','jcb','PHP','$1.58','NYSE'),(5093,73,'3540936110432255','jcb','CNY','$9.78','NASDAQ'),(5094,77,'491136470987744169','switch','CNY','$0.36','NASDAQ'),(5095,80,'5641827539072506409','switch','ALL','$6.81','NASDAQ'),(5096,62,'3528071158542439','jcb','VND','$5.11','NYSE'),(5097,80,'3571929707909332','jcb','CLP','$0.28','NASDAQ'),(5098,63,'6709784389571966091','laser','EUR','$3.72','NYSE'),(5099,36,'3583567485010190','jcb','PHP','$2.46','NYSE'),(5100,51,'5641827698785128','switch','MGA','$2.04','NYSE'),(5101,96,'374622370379413','americanexpress','COP','$8.88','NASDAQ'),(5102,34,'3568825721747986','jcb','SYP','$9.44','NYSE'),(5103,19,'6333940560219257','switch','PHP','$8.24','NASDAQ'),(5104,56,'67626560893675427','maestro','EUR','$7.38','NASDAQ'),(5105,10,'3552461267705457','jcb','RUB','$2.02','NYSE'),(5106,95,'5160825685256278','mastercard','CNY','$7.24','NASDAQ'),(5107,17,'5641826437403238597','switch','KZT','$7.06','NASDAQ'),(5108,45,'50182640451622912','maestro','PLN','$0.93','NASDAQ'),(5109,48,'3554304184528412','jcb','CNY','$9.90','NASDAQ'),(5110,44,'3539198370325538','jcb','IDR','$7.58','NYSE'),(5111,5,'5426789063276276','mastercard','XOF','$6.51','NASDAQ'),(5112,73,'3549569857140756','jcb','NGN','$0.90','NYSE'),(5113,81,'3554589047812694','jcb','ZAR','$5.52','NYSE'),(5114,38,'4405987031206502','visa-electron','EUR','$6.74','NASDAQ'),(5115,41,'4913271608364852','visa-electron','IDR','$3.65','NYSE'),(5116,6,'3549105849818272','jcb','PLN','$2.37','NASDAQ'),(5117,71,'30014678298410','diners-club-carte-blanche','PLN','$3.91','NASDAQ'),(5118,58,'3575773484526778','jcb','PHP','$7.36','NASDAQ'),(5119,76,'5893561138945147132','maestro','DKK','$8.02','NASDAQ'),(5120,104,'5276581602602364','VISA','PLN','$0.64','NASDAQ'),(5121,95,'3541415592426183','jcb','THB','$6.33','NASDAQ'),(5122,57,'6371982298175362','instapayment','PEN','$4.54','NASDAQ'),(5123,66,'5464536007896625','diners-club-us-ca','NPR','$7.76','NASDAQ'),(5124,91,'6334433707627342','solo','CNY','$5.65','NYSE'),(5125,59,'3584050103170182','jcb','IDR','$2.55','NYSE'),(5126,16,'374622361281446','americanexpress','USD','$7.01','NASDAQ'),(5127,81,'5496380287026336','diners-club-us-ca','THB','$2.31','NASDAQ'),(5128,41,'060450684297699142','maestro','IDR','$9.01','NASDAQ'),(5129,22,'3542956838030981','jcb','NOK','$6.39','NASDAQ'),(5130,69,'3573683057824801','jcb','IDR','$4.84','NASDAQ'),(5131,44,'3586055743657926','jcb','PKR','$3.17','NASDAQ'),(5132,18,'3539961978422217','jcb','PLN','$0.49','NYSE'),(5133,53,'3564701099079894','jcb','AZN','$7.56','NASDAQ'),(5134,48,'5002352017352925','mastercard','PHP','$9.20','NYSE'),(5135,86,'5602255929888378197','china-unionpay','CNY','$4.99','NASDAQ'),(5136,94,'3578431269938950','jcb','CNY','$7.00','NYSE'),(5137,95,'5100175046584239','mastercard','RUB','$1.85','NASDAQ'),(5138,19,'3571072757838216','jcb','CNY','$2.84','NYSE'),(5139,73,'201983567625730','diners-club-enroute','DOP','$8.97','NYSE'),(5140,22,'3567571595539031','jcb','CNY','$6.39','NYSE'),(5141,80,'490585188579116897','switch','KES','$6.94','NASDAQ'),(5142,40,'3550368720000347','jcb','AMD','$2.21','NYSE'),(5143,60,'5602237545546289577','china-unionpay','CUP','$1.07','NASDAQ'),(5144,79,'3557319034359013','jcb','CNY','$8.25','NASDAQ'),(5145,75,'374288643097552','americanexpress','PEN','$2.46','NASDAQ'),(5146,36,'5007661224496928','mastercard','IDR','$6.60','NYSE'),(5147,78,'3581801099494165','jcb','PLN','$2.43','NASDAQ'),(5148,53,'30391940054411','diners-club-carte-blanche','IDR','$4.08','NYSE'),(5149,41,'5602230538995436','bankcard','AFN','$1.93','NYSE'),(5150,23,'5610002097519174','bankcard','YER','$8.68','NYSE'),(5151,31,'4508598535645172','visa-electron','EUR','$9.56','NYSE'),(5152,82,'337941016913542','americanexpress','IDR','$1.62','NASDAQ'),(5153,55,'6331100096340069426','switch','CRC','$0.28','NYSE'),(5154,44,'3547646422717086','jcb','CNY','$3.82','NASDAQ'),(5155,2,'372301288482641','americanexpress','PHP','$3.82','NYSE'),(5156,39,'3585988190006588','jcb','XAF','$8.54','NYSE'),(5157,72,'5100178840524088','mastercard','PEN','$8.35','NASDAQ'),(5158,33,'3528326965289602','jcb','KZT','$1.16','NASDAQ'),(5159,73,'348507884789087','americanexpress','CNY','$8.34','NYSE'),(5160,64,'5602258645350872','bankcard','TJS','$4.92','NYSE'),(5161,58,'374288645664888','americanexpress','PHP','$1.90','NYSE'),(5162,47,'5602247744678602248','china-unionpay','CNY','$6.14','NASDAQ'),(5163,61,'374622339677501','americanexpress','IDR','$0.24','NYSE'),(5164,33,'4175006039750383','visa-electron','EUR','$3.08','NASDAQ'),(5165,18,'3585160132898189','jcb','IDR','$2.66','NYSE'),(5166,79,'5048375142300366','mastercard','THB','$2.22','NASDAQ'),(5167,66,'5010120867714894','mastercard','PHP','$0.47','NASDAQ'),(5168,44,'4913917042641590','visa-electron','SEK','$6.53','NASDAQ'),(5169,57,'3580068715067640','jcb','BRL','$9.33','NYSE'),(5170,81,'5602252493616294','bankcard','IDR','$2.03','NYSE'),(5171,77,'201579599287224','diners-club-enroute','BRL','$7.61','NYSE'),(5172,94,'3588203150688095','jcb','VND','$3.65','NASDAQ'),(5173,82,'3528079617221487','jcb','EUR','$4.30','NASDAQ'),(5174,81,'5100133176146923','mastercard','CNY','$2.52','NASDAQ'),(5175,10,'3589650848965070','jcb','CNY','$6.03','NYSE'),(5176,52,'3545042283107801','jcb','CNY','$8.10','NASDAQ'),(5177,93,'3530978668691082','jcb','EUR','$6.08','NYSE'),(5178,88,'6333589029756571','switch','XAF','$0.20','NASDAQ'),(5179,27,'30356029811957','diners-club-carte-blanche','NOK','$1.56','NASDAQ'),(5180,71,'4017959085343911','visa','CNY','$1.54','NASDAQ'),(5181,91,'5602213650647563','bankcard','PHP','$4.44','NYSE'),(5182,87,'5048370964080329','mastercard','PEN','$4.81','NYSE'),(5183,20,'3559832215756243','jcb','BYR','$8.54','NYSE'),(5184,55,'3584769108053263','jcb','EUR','$0.19','NYSE'),(5185,33,'3553607395938498','jcb','EUR','$3.19','NYSE'),(5186,30,'201730517055355','diners-club-enroute','ILS','$2.97','NASDAQ'),(5187,51,'3536474592467884','jcb','XAF','$4.44','NYSE'),(5188,54,'3574564374339922','jcb','CNY','$3.73','NYSE'),(5189,38,'3539401282298698','jcb','MXN','$1.31','NASDAQ'),(5190,42,'4508357739469255','visa-electron','IDR','$2.24','NYSE'),(5191,95,'3574959685476191','jcb','CNY','$8.86','NASDAQ'),(5192,35,'5002354040814145','mastercard','CAD','$2.79','NYSE'),(5193,17,'3563766996525464','jcb','CNY','$5.55','NYSE'),(5194,95,'3570878090961767','jcb','SEK','$9.22','NYSE'),(5195,46,'560223185875734397','china-unionpay','VND','$3.25','NYSE'),(5196,98,'3539417773945654','jcb','IDR','$6.28','NYSE'),(5197,40,'5010126175917376','mastercard','CNY','$5.15','NYSE'),(5198,44,'4041593743526888','visa','VND','$6.34','NASDAQ'),(5199,6,'3528622117219756','jcb','QAR','$6.91','NYSE'),(5200,9,'30038294442839','diners-club-carte-blanche','CUP','$2.48','NYSE'),(5201,36,'3543519981961789','jcb','EUR','$1.03','NASDAQ'),(5202,92,'5602210044555015','china-unionpay','BGN','$5.90','NASDAQ'),(5203,70,'3530657452479272','jcb','CNY','$5.95','NASDAQ'),(5204,57,'4911637079229754873','switch','CUP','$9.14','NASDAQ'),(5205,76,'5108750952319515','mastercard','RUB','$7.19','NASDAQ'),(5206,100,'6762125464281690','maestro','PHP','$8.67','NASDAQ'),(5207,78,'5286178910753092','mastercard','RUB','$8.05','NASDAQ'),(5208,2,'56022213227432247','china-unionpay','AFN','$8.84','NASDAQ'),(5209,25,'30297898793274','diners-club-carte-blanche','CNY','$2.06','NYSE'),(5210,97,'3573870989713695','jcb','IDR','$5.66','NYSE'),(5211,43,'501828954767375855','maestro','CNY','$9.44','NYSE'),(5212,94,'5602245602274930','bankcard','PHP','$9.63','NASDAQ'),(5213,15,'50385708927301653','maestro','NZD','$6.32','NYSE'),(5214,29,'374384131420677','americanexpress','CNY','$9.84','NYSE'),(5215,19,'56022107872337430','china-unionpay','CNY','$2.50','NYSE'),(5216,92,'3530980226874093','jcb','EUR','$0.27','NYSE'),(5217,32,'3543845567611419','jcb','BRL','$8.59','NYSE'),(5218,54,'3575353393220753','jcb','MKD','$5.21','NYSE'),(5219,81,'50202117383697854','maestro','SYP','$6.15','NASDAQ'),(5220,32,'4026576670249524','visa-electron','XAF','$7.37','NASDAQ'),(5221,93,'3589439760312655','jcb','XAF','$9.98','NASDAQ'),(5222,45,'6304581777436256127','laser','PHP','$9.31','NASDAQ'),(5223,18,'3535317624414666','jcb','IDR','$7.51','NASDAQ'),(5224,78,'3587086019125727','jcb','EUR','$5.20','NASDAQ'),(5225,63,'3568429213741472','jcb','EUR','$2.47','NASDAQ'),(5226,58,'3554817066962425','jcb','BDT','$2.05','NYSE'),(5227,40,'3544715391970647','jcb','TND','$8.03','NYSE'),(5228,86,'3570361278260625','jcb','RUB','$3.67','NYSE'),(5229,24,'3548532873859487','jcb','CNY','$5.82','NASDAQ'),(5230,15,'633110771221982672','switch','IDR','$7.12','NYSE'),(5231,16,'3535978227756652','jcb','EUR','$2.47','NYSE'),(5232,32,'6759776482811864633','maestro','BGN','$5.09','NYSE'),(5233,93,'6387822320096545','instapayment','EUR','$1.67','NYSE'),(5234,75,'3529921504614325','jcb','CNY','$1.06','NYSE'),(5235,22,'374622599260196','americanexpress','USD','$3.14','NYSE'),(5236,41,'3538561045213010','jcb','UZS','$1.69','NYSE'),(5237,7,'6377105337315344','instapayment','BRL','$9.98','NYSE'),(5238,43,'3557969407165783','jcb','XAF','$4.66','NYSE'),(5239,39,'560224211104580275','china-unionpay','JPY','$2.73','NYSE'),(5240,6,'30343917504258','diners-club-carte-blanche','PLN','$6.36','NASDAQ'),(5241,96,'341235634554224','americanexpress','SLL','$6.00','NASDAQ'),(5242,42,'3572905337221305','jcb','CNY','$7.97','NYSE'),(5243,30,'6331109388956454096','switch','IDR','$5.73','NASDAQ'),(5244,13,'3568063954630691','jcb','PHP','$3.92','NYSE'),(5245,84,'5602247738300589','bankcard','RUB','$9.18','NASDAQ'),(5246,40,'63044060390234532','maestro','NOK','$0.77','NYSE'),(5247,82,'30380547113811','diners-club-carte-blanche','NGN','$1.45','NASDAQ'),(5248,38,'3580081569491105','jcb','CZK','$5.66','NYSE'),(5249,22,'3577244833427009','jcb','ZMW','$8.15','NASDAQ'),(5250,84,'3577983967545736','jcb','BRL','$7.96','NASDAQ'),(5251,29,'30043071101228','diners-club-carte-blanche','CAD','$8.67','NYSE'),(5252,13,'3574114198506379','jcb','CNY','$0.74','NYSE'),(5253,78,'67099860581954086','laser','EUR','$4.75','NASDAQ'),(5254,71,'30526184733804','diners-club-carte-blanche','EUR','$0.98','NASDAQ'),(5255,77,'3547844084694038','jcb','CNY','$7.61','NASDAQ'),(5256,81,'3558829812022509','jcb','KGS','$3.31','NASDAQ'),(5257,49,'4508984095121061','visa-electron','ALL','$4.41','NASDAQ'),(5258,46,'201590137148166','diners-club-enroute','CNY','$4.50','NASDAQ'),(5259,84,'5602228427524853','bankcard','CNY','$9.63','NYSE'),(5260,8,'3582683928008559','jcb','CNY','$4.80','NYSE'),(5261,94,'50382085246752327','maestro','RUB','$1.43','NASDAQ'),(5262,79,'3560920183659593','jcb','RUB','$5.18','NASDAQ'),(5263,83,'3528926982309679','jcb','IDR','$7.51','NASDAQ'),(5264,13,'3533371271168663','jcb','PHP','$8.56','NASDAQ'),(5265,2,'3571625576167032','jcb','PHP','$3.88','NYSE'),(5266,51,'374622553849950','americanexpress','BRL','$9.15','NYSE'),(5267,79,'676353852978655326','maestro','THB','$4.27','NYSE'),(5268,55,'3556667984360899','jcb','CNY','$7.78','NASDAQ'),(5269,27,'6399457930188196','instapayment','USD','$3.97','NASDAQ'),(5270,3,'3542847464197709','jcb','RUB','$1.71','NYSE'),(5271,91,'3552347224485335','jcb','CZK','$3.85','NASDAQ'),(5272,53,'3534749896601557','jcb','CLP','$1.69','NASDAQ'),(5273,1,'3575785862442659','jcb','CNY','$6.37','NYSE'),(5274,46,'3556799229299879','jcb','CZK','$9.31','NASDAQ'),(5275,51,'3573933013667046','jcb','CNY','$4.02','NASDAQ'),(5276,79,'5494733165958297','diners-club-us-ca','IDR','$0.10','NYSE'),(5277,26,'6398801929463618','instapayment','CAD','$3.74','NYSE'),(5278,51,'3548165495650669','jcb','THB','$0.21','NASDAQ'),(5279,92,'4041596112297429','visa','SEK','$3.54','NYSE'),(5280,39,'3577349305644286','jcb','MXN','$1.88','NYSE'),(5281,62,'3576643890234581','jcb','PAB','$3.96','NYSE'),(5282,83,'3537388499153919','jcb','CZK','$5.05','NYSE'),(5283,94,'58931844761393134','maestro','CNY','$3.62','NASDAQ'),(5284,29,'3573215242415003','jcb','IDR','$8.37','NYSE'),(5285,53,'3534974691918309','jcb','RUB','$0.68','NASDAQ'),(5286,45,'3565401483338340','jcb','EUR','$9.11','NYSE'),(5287,45,'6389591986377097','instapayment','IDR','$7.23','NASDAQ'),(5288,94,'374288889055520','americanexpress','IDR','$7.62','NASDAQ'),(5289,12,'3541747770352611','jcb','CNY','$2.85','NYSE'),(5290,20,'50385753016879300','maestro','CNY','$1.49','NYSE'),(5291,35,'3575787578063845','jcb','VEF','$2.44','NASDAQ'),(5292,56,'3545949129139568','jcb','BAM','$9.78','NYSE'),(5293,97,'3588440232514085','jcb','EGP','$9.38','NYSE'),(5294,31,'3537776236130036','jcb','PLN','$5.78','NASDAQ'),(5295,13,'4508618179400054','visa-electron','RUB','$6.76','NYSE'),(5296,24,'4041592075327493','visa','MXN','$4.83','NASDAQ'),(5297,72,'5100132161695522','mastercard','EUR','$0.88','NYSE'),(5298,64,'3541267287557206','jcb','RUB','$9.37','NYSE'),(5299,1,'491111840185750375','switch','CNY','$0.01','NYSE'),(5300,50,'5602217004584107477','china-unionpay','VEF','$1.89','NASDAQ'),(5301,41,'56104443571195089','china-unionpay','CNY','$5.76','NYSE'),(5302,53,'5602225795220221','bankcard','EUR','$8.52','NYSE'),(5303,57,'3535020364040291','jcb','EUR','$1.46','NYSE'),(5304,88,'4936840713745228968','switch','PHP','$3.17','NYSE'),(5305,77,'3587288836822821','jcb','VND','$1.79','NASDAQ'),(5306,34,'3547958734691739','jcb','HNL','$8.20','NASDAQ'),(5307,10,'5610944335725446','bankcard','CNY','$5.12','NASDAQ'),(5308,77,'5142161017727767','mastercard','THB','$3.96','NASDAQ'),(5309,47,'3541497169039052','jcb','AED','$3.97','NYSE'),(5310,56,'3543355760743472','jcb','RUB','$0.67','NYSE'),(5311,37,'5100135736797749','mastercard','JMD','$9.53','NYSE'),(5312,76,'6706603196771534','laser','UAH','$4.04','NYSE'),(5313,62,'201429737897478','diners-club-enroute','PLN','$3.59','NASDAQ'),(5314,9,'3534199155573305','jcb','GEL','$0.08','NASDAQ'),(5315,63,'3568635332250373','jcb','RUB','$3.60','NYSE'),(5316,85,'3564577149425026','jcb','IDR','$0.20','NASDAQ'),(5317,43,'5002356884933527','mastercard','CNY','$2.17','NYSE'),(5318,55,'50201888351123336','maestro','XOF','$6.43','NASDAQ'),(5319,28,'4936514798239640567','switch','USD','$8.49','NYSE'),(5320,32,'58932343558878992','maestro','ETB','$4.71','NYSE'),(5321,74,'3534019021060248','jcb','KPW','$2.72','NASDAQ'),(5322,50,'3563084428695974','jcb','CNY','$5.54','NYSE'),(5323,86,'6767216284589464','solo','CNY','$6.57','NYSE'),(5324,54,'5602237596271832','bankcard','PHP','$2.85','NASDAQ'),(5325,35,'3560527751552207','jcb','BSD','$5.00','NYSE'),(5326,57,'4911386543484482','switch','PKR','$4.97','NYSE'),(5327,93,'3544341248437340','jcb','CUP','$6.76','NASDAQ'),(5328,19,'5127369002452957','mastercard','RUB','$9.62','NASDAQ'),(5329,32,'5020867109313038','maestro','IDR','$3.57','NYSE'),(5330,47,'3544272782609582','jcb','PLN','$2.54','NASDAQ'),(5331,7,'3585725112859722','jcb','CNY','$0.84','NASDAQ'),(5332,94,'3579925528273538','jcb','CNY','$9.18','NYSE'),(5333,39,'3532329180542346','jcb','PHP','$8.69','NYSE'),(5334,25,'676174920451589267','maestro','CNY','$0.41','NASDAQ'),(5335,92,'5602235507192824','bankcard','CNY','$7.34','NASDAQ'),(5336,88,'3560502192588409','jcb','JPY','$5.74','NYSE'),(5337,86,'5591155988578999','mastercard','BTN','$1.43','NYSE'),(5338,12,'633343629878266402','switch','RUB','$2.93','NASDAQ'),(5339,41,'30552645261342','diners-club-carte-blanche','CNY','$0.77','NASDAQ'),(5340,15,'3581448485629911','jcb','CNY','$6.97','NASDAQ'),(5341,97,'3549122670350788','jcb','MXN','$5.56','NASDAQ'),(5342,25,'337941403138208','americanexpress','IDR','$0.65','NYSE'),(5343,40,'3583008594717896','jcb','UAH','$6.45','NASDAQ'),(5344,10,'4911706712752707639','switch','SEK','$1.34','NASDAQ'),(5345,72,'5002354500662711','mastercard','CNY','$3.25','NYSE'),(5346,19,'3561467233875190','jcb','XAF','$9.10','NASDAQ'),(5347,82,'30465014469075','diners-club-carte-blanche','CNY','$8.27','NYSE'),(5348,51,'3573650077297417','jcb','NGN','$5.66','NYSE'),(5349,43,'6373715430863554','instapayment','IDR','$2.57','NASDAQ'),(5350,22,'6761611717933087885','maestro','JPY','$1.55','NASDAQ'),(5351,89,'3548321051499294','jcb','EUR','$3.94','NYSE'),(5352,19,'6333734749174719','switch','USD','$5.87','NASDAQ'),(5353,15,'3544841031408945','jcb','CZK','$2.35','NASDAQ'),(5354,44,'56022179771193636','china-unionpay','CZK','$2.93','NASDAQ'),(5355,93,'3545564845305797','jcb','RUB','$7.17','NASDAQ'),(5356,73,'30098344051865','diners-club-carte-blanche','IDR','$7.01','NYSE'),(5357,15,'3561247657204683','jcb','CNY','$9.47','NYSE'),(5358,39,'3563926722575387','jcb','PEN','$7.46','NYSE'),(5359,65,'3534745471312008','jcb','XCD','$5.41','NYSE'),(5360,85,'4041374059160','visa','RUB','$5.97','NYSE'),(5361,75,'3583643225798152','jcb','CNY','$1.31','NASDAQ'),(5362,48,'3565102937765753','jcb','MKD','$2.48','NASDAQ'),(5363,86,'5533687818286501','mastercard','CZK','$6.97','NASDAQ'),(5364,100,'560224891506308639','china-unionpay','SEK','$6.74','NASDAQ'),(5365,70,'3543132133035351','jcb','PHP','$2.01','NYSE'),(5366,37,'3535448348582817','jcb','MXN','$9.27','NYSE'),(5367,10,'3576567457581284','jcb','CNY','$4.71','NYSE'),(5368,17,'4041375084624195','visa','EUR','$5.81','NASDAQ'),(5369,91,'374622390747573','americanexpress','CNY','$3.93','NYSE'),(5370,29,'3585128753081211','jcb','SAR','$1.76','NYSE'),(5371,66,'4844699799678884','visa-electron','SEK','$8.19','NASDAQ'),(5372,32,'4026203990895577','visa-electron','PHP','$5.32','NYSE'),(5373,27,'50384610277079361','maestro','IDR','$5.06','NYSE'),(5374,47,'3553768765764664','jcb','CNY','$8.47','NASDAQ'),(5375,84,'3544019956441064','jcb','UAH','$7.92','NASDAQ'),(5376,36,'6763297444935911957','maestro','BDT','$7.53','NASDAQ'),(5377,42,'3570078136132529','jcb','UGX','$5.54','NASDAQ'),(5378,23,'3535871224394769','jcb','SAR','$9.73','NYSE'),(5379,14,'3586876481222155','jcb','LKR','$9.41','NASDAQ'),(5380,85,'3569680549139257','jcb','XOF','$0.41','NASDAQ'),(5381,96,'3585494467822013','jcb','VEF','$5.42','NASDAQ'),(5382,63,'560225524144200244','china-unionpay','UAH','$4.41','NYSE'),(5383,23,'3574175412722613','jcb','SEK','$4.86','NYSE'),(5384,32,'30378406645071','diners-club-carte-blanche','CNY','$9.47','NYSE'),(5385,71,'3571535180700385','jcb','GTQ','$9.86','NASDAQ'),(5386,96,'5610059890881986298','china-unionpay','CNY','$5.48','NASDAQ'),(5387,77,'3554862623830889','jcb','CNY','$9.48','NYSE'),(5388,36,'5108755450528590','mastercard','BRL','$4.38','NYSE'),(5389,57,'3547793758879559','jcb','COP','$0.78','NYSE'),(5390,48,'3577413747150219','jcb','EUR','$3.16','NYSE'),(5391,44,'3571320627126639','jcb','CNY','$8.31','NASDAQ'),(5392,19,'4917398440516195','visa-electron','ETB','$0.24','NYSE'),(5393,100,'36672672556168','diners-club-international','EUR','$2.96','NYSE'),(5394,99,'3572691330224286','jcb','EGP','$1.02','NASDAQ'),(5395,82,'3541269798669173','jcb','RUB','$0.44','NASDAQ'),(5396,81,'201439278227639','diners-club-enroute','IDR','$1.79','NASDAQ'),(5397,85,'5602243966044007','bankcard','SYP','$8.84','NASDAQ'),(5398,23,'30022430291425','diners-club-carte-blanche','SEK','$2.65','NYSE'),(5399,60,'3566920025189225','jcb','CNY','$0.40','NASDAQ'),(5400,48,'56022593006297923','china-unionpay','VND','$5.13','NASDAQ'),(5401,76,'374622098591000','americanexpress','IDR','$4.83','NYSE'),(5402,92,'3582654773508944','jcb','IDR','$9.58','NASDAQ'),(5403,83,'6706074534077691736','laser','MXN','$1.79','NYSE'),(5404,76,'4017957713428369','visa','EUR','$6.01','NASDAQ'),(5405,21,'3552626251541494','jcb','RUB','$7.36','NYSE'),(5406,2,'345177028522654','americanexpress','EUR','$9.37','NYSE'),(5407,61,'4017953509353705','visa','IDR','$4.32','NYSE'),(5408,67,'3561395732755722','jcb','MAD','$8.99','NASDAQ'),(5409,42,'6304082456537695723','maestro','IDR','$5.60','NYSE'),(5410,40,'201464112840793','diners-club-enroute','RUB','$2.15','NYSE'),(5411,97,'4405332908586969','visa-electron','IDR','$9.32','NASDAQ'),(5412,97,'560223871465340972','china-unionpay','PHP','$6.63','NYSE'),(5413,62,'56022207196928508','china-unionpay','KPW','$9.37','NASDAQ'),(5414,43,'3553653386840012','jcb','CNY','$1.64','NASDAQ'),(5415,29,'30541058594604','diners-club-carte-blanche','ETB','$2.13','NASDAQ'),(5416,63,'4936618599136611','switch','GTQ','$2.50','NASDAQ'),(5417,38,'3556715878383194','jcb','UAH','$2.63','NYSE'),(5418,85,'3552756555511115','jcb','VND','$8.48','NASDAQ'),(5419,46,'5100141359622263','mastercard','BRL','$2.18','NYSE'),(5420,33,'3554087722310704','jcb','IDR','$5.10','NYSE'),(5421,91,'5641828868532669773','switch','RUB','$8.56','NASDAQ'),(5422,16,'5893047780062501','maestro','SYP','$0.18','NASDAQ'),(5423,92,'4844744125232368','visa-electron','CAD','$6.55','NASDAQ'),(5424,94,'502080857025508889','maestro','CNY','$2.41','NYSE'),(5425,14,'63043702379145582','maestro','IDR','$4.73','NYSE'),(5426,98,'6370357972284254','instapayment','CNY','$8.73','NASDAQ'),(5427,17,'3557224095868938','jcb','CNY','$9.10','NYSE'),(5428,7,'3548570422724810','jcb','EUR','$8.88','NASDAQ'),(5429,59,'3534585721669751','jcb','KWD','$2.62','NASDAQ'),(5430,48,'3574314590203027','jcb','IDR','$2.11','NYSE'),(5431,47,'3554773416611917','jcb','CNY','$5.67','NYSE'),(5432,73,'3550668794517666','jcb','ALL','$0.28','NYSE'),(5433,54,'677128613049091244','laser','UAH','$0.47','NYSE'),(5434,55,'3532330444141438','jcb','AMD','$3.42','NYSE'),(5435,18,'3541838284185561','jcb','EUR','$1.37','NYSE'),(5436,94,'3545936492399374','jcb','CNY','$4.63','NASDAQ'),(5437,36,'3542828024652136','jcb','BRL','$1.19','NYSE'),(5438,35,'30315201958820','diners-club-carte-blanche','CZK','$8.85','NASDAQ'),(5439,2,'5038106545988358604','maestro','BRL','$4.85','NYSE'),(5440,71,'3548582084604131','jcb','UZS','$5.47','NASDAQ'),(5441,33,'3583308042005765','jcb','COP','$0.63','NYSE'),(5442,18,'3576528830325765','jcb','AZN','$2.78','NASDAQ'),(5443,25,'6767871644578639','solo','CNY','$3.23','NYSE'),(5444,7,'5048377397266771','mastercard','EUR','$5.03','NYSE'),(5445,11,'3565649886495543','jcb','IDR','$7.77','NYSE'),(5446,50,'56022240065279844','china-unionpay','IDR','$6.04','NASDAQ'),(5447,91,'5557274184855770','diners-club-us-ca','BRL','$4.59','NYSE'),(5448,24,'3566492164522129','jcb','PHP','$7.91','NASDAQ'),(5449,44,'3537004378484669','jcb','VEF','$5.94','NASDAQ'),(5450,54,'36506336386077','diners-club-international','MXN','$2.71','NASDAQ'),(5451,63,'630409587447217214','maestro','EUR','$6.37','NASDAQ'),(5452,35,'5325399109471964','mastercard','PHP','$4.47','NASDAQ'),(5453,6,'201846432667411','diners-club-enroute','PHP','$4.20','NYSE'),(5454,65,'372301353618871','americanexpress','PHP','$6.87','NASDAQ'),(5455,61,'3578513825348509','jcb','RUB','$3.41','NYSE'),(5456,100,'3543659118705798','jcb','COP','$1.46','NYSE'),(5457,49,'3566831565410329','jcb','VND','$9.70','NASDAQ'),(5458,41,'3576652126368626','jcb','SEK','$2.42','NASDAQ'),(5459,23,'6761698519721306253','maestro','RUB','$6.96','NYSE'),(5460,60,'3577234988935393','jcb','PHP','$7.81','NYSE'),(5461,77,'67713914464001576','laser','CNY','$9.04','NASDAQ'),(5462,93,'3561000335788183','jcb','COP','$3.95','NYSE'),(5463,18,'3567497312812529','jcb','CZK','$4.83','NASDAQ'),(5464,15,'30570168606743','diners-club-carte-blanche','RSD','$3.22','NASDAQ'),(5465,90,'30125937585791','diners-club-carte-blanche','EUR','$3.38','NASDAQ'),(5466,26,'3548908512294882','jcb','AOA','$2.73','NASDAQ'),(5467,82,'3555733332779288','jcb','IDR','$6.86','NASDAQ'),(5468,14,'6762827094541514','maestro','CNY','$8.36','NASDAQ'),(5469,90,'30015430220386','diners-club-carte-blanche','XAF','$1.37','NASDAQ'),(5470,85,'3578448298046209','jcb','PHP','$0.84','NASDAQ'),(5471,25,'6393323657529457','instapayment','SYP','$0.36','NASDAQ'),(5472,28,'56022388613263099','china-unionpay','BRL','$2.00','NASDAQ'),(5473,32,'3578138874917556','jcb','CNY','$3.43','NYSE'),(5474,66,'5602218856768783087','china-unionpay','BYR','$3.30','NYSE'),(5475,17,'5127742489212534','mastercard','CNY','$4.61','NYSE'),(5476,56,'3545775005378347','jcb','RUB','$5.62','NASDAQ'),(5477,51,'5602237100754995489','china-unionpay','CNY','$0.50','NASDAQ'),(5478,89,'5602256434237227','bankcard','EUR','$6.54','NYSE'),(5479,22,'6761446841362438','maestro','CZK','$8.39','NASDAQ'),(5480,29,'675999804689985536','switch','IDR','$4.25','NYSE'),(5481,5,'3556867054508449','jcb','EUR','$2.73','NYSE'),(5482,92,'5100139174125850','mastercard','EUR','$4.22','NASDAQ'),(5483,10,'374288717414642','americanexpress','CNY','$1.91','NASDAQ'),(5484,39,'4041376024485','visa','IDR','$2.12','NYSE'),(5485,99,'3539890818500298','jcb','HNL','$0.28','NYSE'),(5486,93,'5610181036459720013','china-unionpay','ZAR','$6.15','NASDAQ'),(5487,100,'3532075305891981','jcb','IDR','$6.07','NASDAQ'),(5488,68,'490322383413041256','switch','CAD','$8.71','NASDAQ'),(5489,44,'3583836243260862','jcb','CNY','$5.89','NYSE'),(5490,18,'4041378376263','visa','RUB','$3.08','NASDAQ'),(5491,6,'30210078195814','diners-club-carte-blanche','EUR','$1.97','NASDAQ'),(5492,84,'5048375778624501','mastercard','USD','$6.98','NYSE'),(5493,44,'201485640758835','diners-club-enroute','PHP','$5.41','NASDAQ'),(5494,18,'3577871710423543','jcb','PLN','$1.41','NASDAQ'),(5495,57,'345484656651668','americanexpress','EUR','$2.50','NYSE'),(5496,24,'6382503177384821','instapayment','BRL','$4.82','NASDAQ'),(5497,97,'3548508636772530','jcb','TND','$5.66','NASDAQ'),(5498,13,'3554909807189044','jcb','PHP','$6.19','NYSE'),(5499,78,'3578921917508296','jcb','CNY','$0.09','NYSE'),(5500,12,'5602239429393544','bankcard','CNY','$2.77','NYSE'),(5501,53,'3572281565900154','jcb','KZT','$7.73','NASDAQ'),(5502,35,'4041373216327290','visa','RUB','$3.48','NASDAQ'),(5503,12,'5048377075992219','mastercard','PHP','$2.84','NASDAQ'),(5504,29,'3551697620975219','jcb','PEN','$9.98','NYSE'),(5505,19,'560224676020101705','china-unionpay','IDR','$8.87','NASDAQ'),(5506,93,'3544609441912875','jcb','BRL','$2.90','NYSE'),(5507,56,'6375302254537966','instapayment','JPY','$1.13','NYSE'),(5508,62,'30343446504274','diners-club-carte-blanche','EUR','$1.96','NYSE'),(5509,80,'5598899606385880','diners-club-us-ca','HRK','$0.00','NYSE'),(5510,49,'5586156389228496','diners-club-us-ca','CNY','$7.66','NYSE'),(5511,13,'3555651392096866','jcb','JPY','$2.70','NASDAQ'),(5512,36,'5610722399881101','china-unionpay','EUR','$8.49','NASDAQ'),(5513,51,'6759588266352859','maestro','ETB','$9.58','NYSE'),(5514,45,'30593892138197','diners-club-carte-blanche','UZS','$9.80','NASDAQ'),(5515,75,'3561761543435483','jcb','EUR','$8.70','NASDAQ'),(5516,81,'4905106160236439','switch','UAH','$9.61','NASDAQ'),(5517,42,'3537808457701185','jcb','PLN','$2.01','NYSE'),(5518,34,'201762583078706','diners-club-enroute','CNY','$0.63','NYSE'),(5519,93,'3583997441760127','jcb','GMD','$7.51','NASDAQ'),(5520,42,'3569486575071582','jcb','CNY','$9.13','NASDAQ'),(5521,80,'502062416440583381','maestro','BAM','$5.85','NASDAQ'),(5522,52,'5602224493652074','bankcard','PLN','$2.65','NYSE'),(5523,59,'3531101547199792','jcb','CNY','$5.49','NYSE'),(5524,53,'3586619301577998','jcb','BGN','$6.62','NASDAQ'),(5525,71,'3565881452205176','jcb','PLN','$7.46','NASDAQ'),(5526,88,'3570941239252561','jcb','CNY','$9.58','NASDAQ'),(5527,82,'5610894696808689','bankcard','ARS','$4.20','NASDAQ'),(5528,77,'3569545436361811','jcb','IDR','$0.96','NYSE'),(5529,94,'3576366047034262','jcb','SEK','$5.43','NYSE'),(5530,12,'50387831268147317','maestro','PLN','$3.95','NASDAQ'),(5531,23,'3576528591778798','jcb','VND','$7.69','NASDAQ'),(5532,82,'6304878309876516240','maestro','MKD','$8.30','NASDAQ'),(5533,2,'06047812477036099','maestro','IQD','$3.37','NYSE'),(5534,12,'564182870913362688','switch','IDR','$1.36','NASDAQ'),(5535,31,'337941366853553','americanexpress','RUB','$6.50','NASDAQ'),(5536,77,'3540660061737922','jcb','PHP','$8.71','NYSE'),(5537,41,'4017954114010136','visa','COP','$3.21','NYSE'),(5538,38,'5602223684177059169','china-unionpay','CNY','$8.19','NYSE'),(5539,42,'3584524269289507','jcb','RUB','$2.57','NASDAQ'),(5540,67,'3588398537457311','jcb','IDR','$2.78','NASDAQ'),(5541,55,'3577158607380980','jcb','RUB','$0.42','NASDAQ'),(5542,37,'6763854062001494','maestro','IDR','$5.86','NASDAQ'),(5543,7,'3548666187837480','jcb','IDR','$1.95','NYSE'),(5544,6,'3543198869209114','jcb','KES','$4.09','NYSE'),(5545,82,'5136107163948473','mastercard','CNY','$0.51','NASDAQ'),(5546,65,'676173071660397869','maestro','IDR','$8.62','NYSE'),(5547,48,'5038910164024761478','maestro','IDR','$3.54','NYSE'),(5548,84,'3566521318165953','jcb','COP','$8.53','NASDAQ'),(5549,76,'4425156439184929','visa','PEN','$9.46','NASDAQ'),(5550,58,'490549672995321525','switch','VEF','$4.92','NASDAQ'),(5551,84,'3558892193025020','jcb','ARS','$6.39','NASDAQ'),(5552,90,'5529351381118494','diners-club-us-ca','CLP','$2.81','NASDAQ'),(5553,26,'3569721908495953','jcb','RUB','$1.22','NYSE'),(5554,3,'3568698013171854','jcb','EUR','$3.12','NYSE'),(5555,76,'3537704145327063','jcb','RUB','$7.59','NASDAQ'),(5556,40,'30036534624471','diners-club-carte-blanche','NZD','$1.24','NASDAQ'),(5557,95,'5602221953537533789','china-unionpay','EUR','$0.90','NASDAQ'),(5558,59,'3585211491340386','jcb','NGN','$5.02','NASDAQ'),(5559,30,'5548924565467254','mastercard','CNY','$1.08','NASDAQ'),(5560,99,'6759525991508420768','maestro','CNY','$4.55','NYSE'),(5561,10,'3589578477081549','jcb','PLN','$4.15','NASDAQ'),(5562,32,'503885954122038905','maestro','CNY','$2.98','NYSE'),(5563,44,'5459481192731393','diners-club-us-ca','CRC','$4.21','NYSE'),(5564,41,'3541647693684050','jcb','RUB','$2.19','NASDAQ'),(5565,90,'5602248787084819','bankcard','CLP','$8.34','NASDAQ'),(5566,18,'3559031376990549','jcb','EUR','$3.54','NASDAQ'),(5567,83,'3577407041379771','jcb','PLN','$5.52','NYSE'),(5568,5,'3588739157943371','jcb','BSD','$7.07','NYSE'),(5569,10,'5427131586760651','mastercard','EUR','$5.58','NASDAQ'),(5570,70,'3535154895940933','jcb','PAB','$4.91','NYSE'),(5571,34,'5602243736591378','bankcard','PHP','$4.26','NYSE'),(5572,74,'4839310807860608','visa','CNY','$9.64','NASDAQ'),(5573,17,'5602221028500836','bankcard','UAH','$2.52','NASDAQ'),(5574,34,'5048377490857930','mastercard','CNY','$8.75','NASDAQ'),(5575,69,'5018508626355665536','maestro','CNY','$9.86','NYSE'),(5576,11,'3531540780897150','jcb','CZK','$4.42','NASDAQ'),(5577,98,'3545259216041556','jcb','RUB','$3.85','NASDAQ'),(5578,73,'3564833802562443','jcb','UZS','$2.49','NASDAQ'),(5579,71,'5100142991066471','mastercard','PKR','$6.60','NASDAQ'),(5580,47,'3562479707517744','jcb','IDR','$9.57','NYSE'),(5581,30,'5430136950245770','mastercard','RUB','$3.02','NYSE'),(5582,83,'6771697919743382','laser','RSD','$9.35','NASDAQ'),(5583,95,'50383356381426293','maestro','USD','$3.63','NASDAQ'),(5584,28,'633484793882880837','solo','IDR','$3.70','NASDAQ'),(5585,11,'3553886742968644','jcb','AFN','$7.00','NASDAQ'),(5586,42,'3561611075714245','jcb','MYR','$4.61','NYSE'),(5587,99,'6334518130935229','solo','PLN','$9.93','NYSE'),(5588,96,'3587635057172007','jcb','THB','$5.14','NASDAQ'),(5589,12,'5610769894332361','china-unionpay','YER','$8.56','NASDAQ'),(5590,7,'3582800991051924','jcb','EUR','$5.55','NYSE'),(5591,72,'4913356311340313','visa-electron','RUB','$2.53','NASDAQ'),(5592,48,'3547867884239985','jcb','UAH','$9.83','NASDAQ'),(5593,68,'6759405999587423251','switch','CNY','$4.68','NYSE'),(5594,92,'5020376049315384','maestro','PHP','$7.23','NYSE'),(5595,57,'3570788191742059','jcb','PHP','$4.54','NYSE'),(5596,50,'3540336424247517','jcb','VND','$7.87','NASDAQ'),(5597,19,'6761356909962332287','maestro','BRL','$7.45','NYSE'),(5598,51,'3556736149909278','jcb','CNY','$3.30','NYSE'),(5599,81,'3540035131766179','jcb','IDR','$6.78','NYSE'),(5600,53,'374288735971177','americanexpress','MZN','$1.63','NASDAQ'),(5601,11,'3538174690749781','jcb','JPY','$0.34','NASDAQ'),(5602,50,'3555753733225152','jcb','MNT','$4.12','NYSE'),(5603,25,'4026088520219780','visa-electron','CNY','$9.85','NASDAQ'),(5604,67,'3577808042556343','jcb','EUR','$2.76','NASDAQ'),(5605,33,'3550542584419179','jcb','PHP','$7.21','NASDAQ'),(5606,40,'3552425277637331','jcb','CNY','$2.17','NASDAQ'),(5607,59,'4905216937712132579','switch','BRL','$8.84','NASDAQ'),(5608,43,'3566686095204497','jcb','PYG','$4.17','NYSE'),(5609,36,'3538919857305078','jcb','PLN','$6.37','NASDAQ'),(5610,11,'6761135382934749624','maestro','CNY','$6.28','NASDAQ'),(5611,33,'560224156588993140','china-unionpay','CNY','$3.51','NASDAQ'),(5612,94,'3567750391798955','jcb','MMK','$7.87','NASDAQ'),(5613,67,'6387546499032995','instapayment','BRL','$4.53','NYSE'),(5614,50,'3528482773120057','jcb','BRL','$6.31','NASDAQ'),(5615,71,'5100147846566906','mastercard','CAD','$7.75','NYSE'),(5616,31,'5108753775263068','mastercard','COP','$5.44','NASDAQ'),(5617,74,'3533203968291518','jcb','AMD','$1.50','NASDAQ'),(5618,53,'3574985224007742','jcb','EUR','$4.69','NYSE'),(5619,33,'3580753956182204','jcb','KZT','$9.17','NYSE'),(5620,46,'3532173058476033','jcb','BRL','$5.88','NASDAQ'),(5621,45,'5360608422302797','mastercard','IDR','$0.94','NYSE'),(5622,74,'4026440787498781','visa-electron','EUR','$5.53','NYSE'),(5623,40,'3589913851481702','jcb','JPY','$0.36','NYSE'),(5624,42,'30439905622225','diners-club-carte-blanche','AFN','$8.86','NYSE'),(5625,83,'5602258944130855634','china-unionpay','PEN','$5.67','NASDAQ'),(5626,86,'3535707356510659','jcb','CNY','$7.29','NASDAQ'),(5627,67,'5527873357527616','diners-club-us-ca','COP','$5.23','NYSE'),(5628,38,'3579701574657365','jcb','IDR','$9.27','NASDAQ'),(5629,98,'5048374652930332','mastercard','CNY','$6.36','NASDAQ'),(5630,71,'5602251719746455','bankcard','SEK','$2.07','NYSE'),(5631,28,'490310883942960607','switch','EUR','$5.23','NASDAQ'),(5632,65,'3536827281230105','jcb','CNY','$0.81','NASDAQ'),(5633,88,'5007666169252343','mastercard','RSD','$5.24','NYSE'),(5634,73,'3568889074913652','jcb','ZAR','$6.47','NASDAQ'),(5635,58,'3535303161592213','jcb','CNY','$8.39','NASDAQ'),(5636,7,'3563152890996616','jcb','NPR','$8.94','NASDAQ'),(5637,93,'3534765581361059','jcb','CNY','$0.92','NASDAQ'),(5638,63,'5602233989803068726','china-unionpay','ARS','$4.96','NYSE'),(5639,27,'5010123278737827','mastercard','CNY','$2.98','NYSE'),(5640,38,'3583733292918666','jcb','USD','$0.91','NYSE'),(5641,68,'3533287278316198','jcb','USD','$5.47','NYSE'),(5642,90,'3546591346967469','jcb','PHP','$3.76','NYSE'),(5643,86,'3569124887709504','jcb','CNY','$0.03','NYSE'),(5644,33,'3568590091347185','jcb','IDR','$7.92','NASDAQ'),(5645,38,'3549262427946965','jcb','CNY','$4.77','NASDAQ'),(5646,68,'4913264702821851','visa-electron','RUB','$9.80','NASDAQ'),(5647,40,'36420225565553','diners-club-international','PLN','$4.80','NYSE'),(5648,80,'6771834112897845462','laser','MNT','$0.35','NYSE'),(5649,77,'3586852729286997','jcb','RUB','$9.44','NYSE'),(5650,80,'201997778423081','diners-club-enroute','RUB','$5.05','NASDAQ'),(5651,92,'5602235405663959','bankcard','IDR','$7.27','NYSE'),(5652,28,'3540025734112251','jcb','CNY','$5.42','NASDAQ'),(5653,98,'5602219112774531','china-unionpay','EUR','$9.98','NASDAQ'),(5654,66,'30479894374131','diners-club-carte-blanche','EUR','$3.00','NYSE'),(5655,17,'3566967234520401','jcb','IDR','$4.25','NYSE'),(5656,69,'56022105961761759','china-unionpay','CAD','$7.84','NYSE'),(5657,5,'3575549452829414','jcb','KHR','$3.46','NYSE'),(5658,91,'3573815790650578','jcb','IDR','$6.23','NYSE'),(5659,93,'3539155948838087','jcb','AFN','$1.95','NYSE'),(5660,92,'3569200831846657','jcb','PLN','$0.44','NYSE'),(5661,14,'3578605032543268','jcb','ALL','$5.97','NYSE'),(5662,90,'371967129259587','americanexpress','USD','$9.59','NASDAQ'),(5663,72,'5602235559715340','china-unionpay','CNY','$1.87','NASDAQ'),(5664,19,'30481384070377','diners-club-carte-blanche','IDR','$1.32','NASDAQ'),(5665,69,'374583744848618','americanexpress','KRW','$0.25','NASDAQ'),(5666,32,'676245630710985504','maestro','AMD','$5.25','NYSE'),(5667,68,'3553243963197950','jcb','IDR','$3.42','NASDAQ'),(5668,55,'5602220392994948','bankcard','RUB','$3.33','NASDAQ'),(5669,87,'3549671985604669','jcb','BDT','$3.53','NASDAQ'),(5670,93,'374283486833643','americanexpress','AMD','$8.35','NYSE'),(5671,62,'3542713565364897','jcb','JPY','$2.12','NYSE'),(5672,94,'3565820061609832','jcb','KMF','$8.13','NASDAQ'),(5673,71,'3577619381920192','jcb','JPY','$0.42','NASDAQ'),(5674,51,'3534841033416278','jcb','EGP','$4.27','NASDAQ'),(5675,85,'5602232253241962','bankcard','PKR','$9.72','NYSE'),(5676,48,'3565822054168248','jcb','USD','$0.78','NASDAQ'),(5677,46,'5602239003975831','bankcard','CNY','$1.02','NYSE'),(5678,53,'3583255377516504','jcb','IDR','$1.55','NASDAQ'),(5679,86,'3589526788251145','jcb','EGP','$5.37','NASDAQ'),(5680,35,'3539200101330850','jcb','UAH','$1.67','NASDAQ'),(5681,4,'5602255963200143','bankcard','PEN','$4.41','NYSE'),(5682,70,'3561590265703863','jcb','RUB','$9.73','NASDAQ'),(5683,7,'3556410481294281','jcb','THB','$6.47','NASDAQ'),(5684,14,'3577846624982503','jcb','PHP','$4.15','NYSE'),(5685,64,'201547298787778','diners-club-enroute','USD','$1.30','NASDAQ'),(5686,38,'3577885128162675','jcb','EUR','$6.56','NYSE'),(5687,74,'3528611458767556','jcb','ZAR','$4.19','NYSE'),(5688,52,'3580125468647752','jcb','SEK','$1.10','NASDAQ'),(5689,23,'3576595795921599','jcb','USD','$9.67','NASDAQ'),(5690,92,'560222676339079123','china-unionpay','MNT','$4.30','NYSE'),(5691,82,'58937438189889858','maestro','CNY','$7.10','NYSE'),(5692,92,'3588653845348945','jcb','BRL','$1.46','NASDAQ'),(5693,12,'56022536912109047','china-unionpay','IDR','$9.58','NYSE'),(5694,11,'3549192284009948','jcb','XAF','$5.99','NASDAQ'),(5695,98,'6762486329989522367','maestro','EUR','$7.28','NYSE'),(5696,73,'4017959304411','visa','PYG','$0.71','NASDAQ'),(5697,21,'6383911436841367','instapayment','CNY','$3.80','NASDAQ'),(5698,22,'3549454310494159','jcb','USD','$8.52','NASDAQ'),(5699,59,'67594504575350196','maestro','PLN','$9.89','NASDAQ'),(5700,87,'3587913974356189','jcb','CNY','$2.51','NASDAQ'),(5701,83,'30320366986574','diners-club-carte-blanche','XOF','$6.00','NYSE'),(5702,15,'0604056398021511','maestro','EUR','$6.97','NYSE'),(5703,89,'5174803536702349','mastercard','EUR','$6.72','NASDAQ'),(5704,54,'3538809794346055','jcb','CNY','$6.06','NYSE'),(5705,42,'3565263289240132','jcb','IDR','$6.65','NYSE'),(5706,59,'3579923230922963','jcb','CNY','$8.08','NASDAQ'),(5707,39,'30445952546506','diners-club-carte-blanche','CNY','$3.65','NASDAQ'),(5708,25,'490537030976136368','switch','BRL','$1.84','NYSE'),(5709,69,'5048371077862132','mastercard','AED','$8.98','NASDAQ'),(5710,63,'5100178322634041','mastercard','SEK','$3.64','NASDAQ'),(5711,5,'3580048490446243','jcb','BRL','$2.14','NYSE'),(5712,3,'5461042652724843','mastercard','RUB','$1.07','NASDAQ'),(5713,19,'3579394416581900','jcb','USD','$9.31','NYSE'),(5714,15,'3549556046952233','jcb','PHP','$6.87','NASDAQ'),(5715,89,'3580813572300224','jcb','IDR','$2.10','NASDAQ'),(5716,91,'5217267219095356','mastercard','EUR','$2.69','NYSE'),(5717,34,'3541705579119151','jcb','IQD','$0.78','NASDAQ'),(5718,37,'560223801076396055','china-unionpay','ALL','$3.98','NASDAQ'),(5719,13,'3584609883523512','jcb','XOF','$3.52','NYSE'),(5720,99,'3555733156745274','jcb','CAD','$2.90','NASDAQ'),(5721,38,'3549811028968560','jcb','EUR','$5.77','NYSE'),(5722,75,'5602223673686860','bankcard','NOK','$1.68','NASDAQ'),(5723,67,'201887101319686','diners-club-enroute','EUR','$6.09','NYSE'),(5724,1,'5424219702768998','diners-club-us-ca','EUR','$4.95','NYSE'),(5725,72,'3557737709198996','jcb','BOB','$1.47','NASDAQ'),(5726,72,'5100143709170340','mastercard','IDR','$5.76','NYSE'),(5727,3,'4041593783140996','visa','ZAR','$9.58','NYSE'),(5728,8,'5010129361055829','mastercard','EUR','$2.62','NYSE'),(5729,83,'36170886297885','diners-club-international','IDR','$8.49','NYSE'),(5730,20,'3542498448272208','jcb','JPY','$3.93','NYSE'),(5731,56,'201818554936288','diners-club-enroute','IDR','$3.73','NYSE'),(5732,63,'3560329116934471','jcb','USD','$5.51','NASDAQ'),(5733,94,'4041591277858347','visa','USD','$3.52','NYSE'),(5734,49,'3577451555190927','jcb','CNY','$0.79','NYSE'),(5735,7,'67624826850203269','maestro','IDR','$3.48','NYSE'),(5736,57,'5610810234421355','china-unionpay','EUR','$9.38','NYSE'),(5737,67,'5602244510500197','china-unionpay','USD','$0.37','NASDAQ'),(5738,78,'676162986214251515','maestro','PLN','$3.58','NASDAQ'),(5739,49,'201484064288437','diners-club-enroute','IDR','$6.08','NYSE'),(5740,74,'3558323606964456','jcb','PLN','$7.47','NASDAQ'),(5741,66,'3538294458479411','jcb','CNY','$4.02','NASDAQ'),(5742,34,'06043939015888113','maestro','EUR','$7.39','NYSE'),(5743,73,'589300027395623897','maestro','PHP','$9.86','NYSE'),(5744,30,'3560087683222353','jcb','JPY','$6.32','NASDAQ'),(5745,31,'30549676313406','diners-club-carte-blanche','PHP','$1.42','NYSE'),(5746,18,'3531037265111835','jcb','GTQ','$4.65','NASDAQ'),(5747,42,'3571659084629522','jcb','CNY','$5.17','NASDAQ'),(5748,100,'5501749890967909','mastercard','CNY','$7.37','NYSE'),(5749,16,'4175001734240871','visa-electron','CNY','$7.30','NASDAQ'),(5750,79,'3571674664414153','jcb','BRL','$9.91','NASDAQ'),(5751,47,'30069928174480','diners-club-carte-blanche','IDR','$2.07','NASDAQ'),(5752,32,'3542815171452626','jcb','PHP','$1.71','NYSE'),(5753,15,'3530378131869797','jcb','SEK','$3.44','NASDAQ'),(5754,93,'3534805979344877','jcb','CNY','$9.18','NYSE'),(5755,83,'374622725779770','americanexpress','IDR','$5.66','NYSE'),(5756,66,'3587640741359838','jcb','UAH','$9.54','NASDAQ'),(5757,24,'67719232994340149','laser','IDR','$7.59','NASDAQ'),(5758,4,'3550873963715345','jcb','CNY','$3.90','NASDAQ'),(5759,51,'3539499983644491','jcb','CNY','$1.06','NASDAQ'),(5760,23,'5151960597667212','mastercard','PKR','$0.01','NASDAQ'),(5761,68,'3544880443351434','jcb','CNY','$2.23','NYSE'),(5762,32,'374442107720858','americanexpress','EUR','$2.67','NYSE'),(5763,4,'3545226514192092','jcb','CNY','$4.00','NYSE'),(5764,88,'3536526182214008','jcb','CNY','$1.37','NYSE'),(5765,24,'36323558344572','diners-club-international','SYP','$8.06','NYSE'),(5766,65,'50188013651848931','maestro','JOD','$7.20','NASDAQ'),(5767,86,'5893082346737128489','maestro','CNY','$2.71','NYSE'),(5768,83,'3551271997743905','jcb','CNY','$1.18','NYSE'),(5769,38,'3569226034317246','jcb','XOF','$7.55','NYSE'),(5770,32,'3587072100341571','jcb','SEK','$1.07','NASDAQ'),(5771,46,'4175008768067740','visa-electron','IDR','$7.46','NYSE'),(5772,18,'4913854387854399','visa-electron','IDR','$8.53','NASDAQ'),(5773,65,'3571999059217634','jcb','USD','$6.87','NYSE'),(5774,45,'3559574682951507','jcb','RUB','$7.75','NASDAQ'),(5775,35,'3583556029961547','jcb','EUR','$0.12','NYSE'),(5776,51,'201727114862704','diners-club-enroute','JPY','$5.35','NASDAQ'),(5777,28,'3583514475217096','jcb','CNY','$6.75','NASDAQ'),(5778,70,'3554208324680464','jcb','ARS','$5.18','NASDAQ'),(5779,42,'344362296437279','americanexpress','EUR','$2.15','NASDAQ'),(5780,70,'5048371875923409','mastercard','NPR','$2.70','NYSE'),(5781,12,'3586609517541714','jcb','THB','$8.45','NASDAQ'),(5782,18,'4175002875747526','visa-electron','CNY','$8.06','NYSE'),(5783,92,'3547905092980659','jcb','CNY','$3.70','NYSE'),(5784,85,'3573128285578746','jcb','IDR','$1.54','NASDAQ'),(5785,11,'3542961962153823','jcb','PLN','$7.47','NASDAQ'),(5786,36,'5018352095695830449','maestro','GTQ','$7.04','NYSE'),(5787,58,'5559607653545737','mastercard','CNY','$1.14','NASDAQ'),(5788,39,'5390159450783775','mastercard','PHP','$4.66','NASDAQ'),(5789,77,'5010127166197408','mastercard','RUB','$5.41','NYSE'),(5790,52,'4917778030096965','visa-electron','RUB','$9.97','NASDAQ'),(5791,70,'6759667561695434','maestro','SRD','$5.71','NASDAQ'),(5792,62,'4913212351409742','visa-electron','SEK','$4.77','NYSE'),(5793,46,'3534504429188451','jcb','COP','$4.95','NASDAQ'),(5794,86,'3589210409857974','jcb','XOF','$4.44','NASDAQ'),(5795,12,'3571232955996790','jcb','ETB','$2.34','NYSE'),(5796,43,'30116937283370','diners-club-carte-blanche','BWP','$3.92','NASDAQ'),(5797,41,'5602241183461004','china-unionpay','XAF','$2.12','NASDAQ'),(5798,74,'374622753547552','americanexpress','CNY','$2.23','NYSE'),(5799,73,'5038048161584290547','maestro','IDR','$2.87','NASDAQ'),(5800,10,'4041591862475309','visa','MAD','$1.92','NYSE'),(5801,59,'3565609790661457','jcb','CZK','$4.79','NASDAQ'),(5802,60,'6333205628291308468','switch','KZT','$8.95','NYSE'),(5803,19,'374622323272210','americanexpress','ZAR','$8.27','NASDAQ'),(5804,82,'5002352553389273','mastercard','CNY','$7.73','NYSE'),(5805,95,'4175001212670110','visa-electron','IDR','$6.88','NYSE'),(5806,45,'6706667160234563','laser','PHP','$7.31','NASDAQ'),(5807,12,'3578947900780113','jcb','CNY','$3.28','NYSE'),(5808,57,'5435774213220704','diners-club-us-ca','USD','$4.77','NASDAQ'),(5809,2,'4041590561320','visa','THB','$1.68','NYSE'),(5810,29,'4175000601488613','visa-electron','KZT','$4.00','NYSE'),(5811,5,'3558996163305609','jcb','EUR','$3.12','NASDAQ'),(5812,49,'3531801385264091','jcb','EUR','$2.91','NASDAQ'),(5813,72,'3547358021203274','jcb','CNY','$0.61','NASDAQ'),(5814,66,'3537735362847656','jcb','BIF','$1.36','NASDAQ'),(5815,100,'6767632686480310','solo','EUR','$2.29','NYSE'),(5816,48,'3586710154844567','jcb','NIO','$0.67','NASDAQ'),(5817,85,'56106759826429728','china-unionpay','PHP','$7.00','NASDAQ'),(5818,2,'5602247097980682','china-unionpay','JPY','$0.42','NASDAQ'),(5819,9,'6771689220886891565','laser','KRW','$4.28','NASDAQ'),(5820,69,'30056979514797','diners-club-carte-blanche','EUR','$2.92','NYSE'),(5821,23,'3537326510462422','jcb','MYR','$2.91','NYSE'),(5822,48,'3589752664826384','jcb','IDR','$7.88','NASDAQ'),(5823,22,'3566237724907587','jcb','CNY','$0.06','NASDAQ'),(5824,99,'3552738880407540','jcb','CNY','$4.63','NYSE'),(5825,85,'5020046341272338994','maestro','CNY','$1.51','NYSE'),(5826,61,'4041590544680','visa','BRL','$3.46','NASDAQ'),(5827,95,'5427281362169609','mastercard','EUR','$1.50','NYSE'),(5828,16,'676397185400548670','maestro','LKR','$9.80','NYSE'),(5829,22,'3559789372324993','jcb','SYP','$9.43','NASDAQ'),(5830,67,'4017953822368','visa','HKD','$6.69','NASDAQ'),(5831,54,'5602214949664325592','china-unionpay','CNY','$5.59','NASDAQ'),(5832,51,'4017953340875882','visa','EUR','$7.23','NYSE'),(5833,14,'3579648941630734','jcb','AMD','$6.19','NYSE'),(5834,90,'5893405622315080197','maestro','USD','$7.35','NASDAQ'),(5835,7,'3562219702070210','jcb','PEN','$1.76','NYSE'),(5836,96,'6759497343892962','switch','CZK','$2.59','NASDAQ'),(5837,99,'3580005234489657','jcb','CNY','$1.57','NYSE'),(5838,68,'675986109402908079','maestro','MYR','$8.37','NASDAQ'),(5839,49,'3553245710702560','jcb','BAM','$8.05','NASDAQ'),(5840,4,'67621481670194737','maestro','EUR','$6.42','NYSE'),(5841,52,'3572335352727350','jcb','EUR','$7.43','NYSE'),(5842,77,'5602217551333256','bankcard','THB','$1.61','NYSE'),(5843,79,'5602211275090326','bankcard','ILS','$3.33','NASDAQ'),(5844,95,'5602234633344367','bankcard','IDR','$8.06','NYSE'),(5845,23,'5493359155094561','diners-club-us-ca','ZWL','$7.02','NYSE'),(5846,25,'3545848736369222','jcb','CNY','$9.78','NYSE'),(5847,3,'67590357584950777','maestro','CNY','$9.50','NASDAQ'),(5848,15,'3532877228020006','jcb','IDR','$2.34','NYSE'),(5849,27,'201504097543522','diners-club-enroute','PLN','$6.26','NASDAQ'),(5850,34,'4913058309163018','visa-electron','CNY','$7.54','NASDAQ'),(5851,8,'201650045231403','diners-club-enroute','IDR','$4.42','NYSE'),(5852,57,'5135955911016634','mastercard','CNY','$6.83','NASDAQ'),(5853,14,'5602215106946424','bankcard','MXN','$1.42','NASDAQ'),(5854,79,'3572224918448018','jcb','PHP','$9.55','NASDAQ'),(5855,85,'347337325269866','americanexpress','ARS','$3.45','NASDAQ'),(5856,3,'201880734493507','diners-club-enroute','PLN','$5.47','NASDAQ'),(5857,87,'5610845054805501720','china-unionpay','USD','$1.74','NYSE'),(5858,79,'4405951918809911','visa-electron','IDR','$1.24','NYSE'),(5859,65,'6761688630250809','maestro','CNY','$1.19','NASDAQ'),(5860,95,'5416139573084160','mastercard','CNY','$9.60','NASDAQ'),(5861,25,'5038488713111762757','maestro','IDR','$4.98','NASDAQ'),(5862,38,'344241724314203','americanexpress','IDR','$9.89','NYSE'),(5863,21,'6392982236961357','instapayment','BRL','$1.77','NASDAQ'),(5864,3,'6388677250671710','instapayment','MKD','$0.56','NYSE'),(5865,15,'670697009979530184','laser','IDR','$2.60','NASDAQ'),(5866,43,'5328561668813277','mastercard','IDR','$4.98','NASDAQ'),(5867,95,'3535024315465573','jcb','PLN','$5.43','NASDAQ'),(5868,72,'6334727987270222','solo','SEK','$3.53','NYSE'),(5869,47,'3529509718521418','jcb','PHP','$5.27','NASDAQ'),(5870,69,'6761416884265830','maestro','CNY','$9.20','NASDAQ'),(5871,65,'3528603063057200','jcb','RUB','$8.34','NYSE'),(5872,78,'3567049822885782','jcb','ARS','$7.11','NASDAQ'),(5873,29,'3534495696238907','jcb','BGN','$2.89','NYSE'),(5874,70,'3547888318168426','jcb','KZT','$2.70','NYSE'),(5875,9,'373772236676279','americanexpress','PHP','$4.35','NASDAQ'),(5876,98,'3567127438777013','jcb','RUB','$6.34','NYSE'),(5877,86,'3578769256643095','jcb','CNY','$5.44','NYSE'),(5878,2,'3556164748938046','jcb','CNY','$2.73','NYSE'),(5879,48,'56022402208574800','china-unionpay','MAD','$5.90','NASDAQ'),(5880,28,'3576056395835002','jcb','IDR','$8.13','NYSE'),(5881,59,'5602215186408329','bankcard','PHP','$8.64','NASDAQ'),(5882,43,'50200481254059848','maestro','ARS','$6.23','NASDAQ'),(5883,26,'3573801615809110','jcb','CNY','$2.38','NYSE'),(5884,20,'3548627121001815','jcb','PHP','$1.61','NASDAQ'),(5885,14,'6759096096745490','maestro','CUP','$7.70','NYSE'),(5886,97,'5555443401042221','mastercard','RUB','$7.20','NASDAQ'),(5887,36,'3560239939980983','jcb','PEN','$9.26','NYSE'),(5888,10,'6393317101981264','instapayment','BRL','$8.15','NASDAQ'),(5889,13,'201794510511053','diners-club-enroute','CNY','$1.58','NASDAQ'),(5890,51,'5100133981718197','mastercard','IDR','$6.17','NASDAQ'),(5891,65,'4026042327176222','visa-electron','BDT','$0.48','NASDAQ'),(5892,71,'4175007742242569','visa-electron','USD','$8.98','NYSE'),(5893,6,'6767760976485713','solo','BAM','$3.60','NASDAQ'),(5894,10,'3529053760417423','jcb','CNY','$1.00','NASDAQ'),(5895,97,'3582211819653729','jcb','SYP','$7.52','NYSE'),(5896,82,'50381274765425983','maestro','MAD','$9.73','NASDAQ'),(5897,47,'30203278040054','diners-club-carte-blanche','RUB','$9.96','NASDAQ'),(5898,30,'374622859323734','americanexpress','THB','$9.50','NASDAQ'),(5899,55,'3534507971855989','jcb','MNT','$9.23','NYSE'),(5900,79,'3580980019492292','jcb','MXN','$8.26','NASDAQ'),(5901,90,'3584038785242270','jcb','NIO','$6.47','NYSE'),(5902,35,'3537269949330226','jcb','CNY','$7.05','NASDAQ'),(5903,10,'379538511446785','americanexpress','GBP','$3.91','NASDAQ'),(5904,4,'3557854315930421','jcb','HNL','$3.21','NYSE'),(5905,81,'3578349256657898','jcb','CNY','$0.41','NYSE'),(5906,22,'374622243545489','americanexpress','CNY','$3.97','NYSE'),(5907,32,'5010124242655913','mastercard','CNY','$1.77','NYSE'),(5908,23,'5048379580853324','mastercard','MXN','$3.38','NYSE'),(5909,80,'6771201160893903','laser','NOK','$5.92','NASDAQ'),(5910,25,'372301461585871','americanexpress','MAD','$8.27','NASDAQ'),(5911,28,'67095608640367426','laser','EUR','$0.58','NYSE'),(5912,60,'5439480881786770','diners-club-us-ca','EUR','$3.72','NASDAQ'),(5913,82,'3542416229581019','jcb','EUR','$5.49','NYSE'),(5914,34,'3547710826227819','jcb','MXN','$6.39','NASDAQ'),(5915,54,'5412948899161278','mastercard','IDR','$5.73','NYSE'),(5916,49,'3576347112813764','jcb','EUR','$1.77','NYSE'),(5917,62,'5602232897326021','bankcard','COP','$1.34','NASDAQ'),(5918,44,'675983854639206259','switch','CNY','$8.11','NASDAQ'),(5919,43,'30489054780985','diners-club-carte-blanche','YER','$1.97','NASDAQ'),(5920,18,'3578204748726530','jcb','CZK','$9.84','NASDAQ'),(5921,65,'30025681183845','diners-club-carte-blanche','EUR','$1.54','NASDAQ'),(5922,100,'4508836092121447','visa-electron','PLN','$9.10','NYSE'),(5923,88,'56022441930046547','china-unionpay','CNY','$8.10','NASDAQ'),(5924,52,'3578312125423454','jcb','IDR','$2.77','NASDAQ'),(5925,58,'3588803475299401','jcb','TZS','$5.75','NASDAQ'),(5926,12,'5602211971403112','bankcard','ARS','$4.32','NASDAQ'),(5927,72,'3559029908302423','jcb','EUR','$9.96','NYSE'),(5928,43,'3567208316345196','jcb','PLN','$6.16','NYSE'),(5929,52,'201815407071099','diners-club-enroute','CNY','$3.36','NYSE'),(5930,1,'3580885438527380','jcb','CNY','$6.36','NASDAQ'),(5931,71,'5602241020978707','bankcard','PHP','$9.72','NASDAQ'),(5932,22,'3572921940471385','jcb','EUR','$5.38','NYSE'),(5933,91,'3532870079549413','jcb','GTQ','$8.22','NASDAQ'),(5934,62,'5193415227581846','mastercard','CZK','$6.95','NASDAQ'),(5935,75,'5007661419466629','mastercard','BAM','$10.00','NASDAQ'),(5936,15,'3558011656835441','jcb','CNY','$9.22','NASDAQ'),(5937,87,'3546343517057740','jcb','CNY','$7.80','NYSE'),(5938,72,'4508804542447671','visa-electron','CNY','$8.58','NASDAQ'),(5939,83,'3533481284514181','jcb','MKD','$7.86','NASDAQ'),(5940,100,'30212413392031','diners-club-carte-blanche','CNY','$6.51','NASDAQ'),(5941,81,'50383808372210110','maestro','PLN','$6.57','NASDAQ'),(5942,27,'5385421878927377','mastercard','OMR','$0.75','NASDAQ'),(5943,15,'50202259299924913','maestro','IDR','$8.07','NYSE'),(5944,41,'5602217144691517','bankcard','CNY','$0.92','NASDAQ'),(5945,95,'3570801831963884','jcb','COP','$9.42','NYSE'),(5946,56,'060438221702201912','maestro','PHP','$1.05','NASDAQ'),(5947,19,'560225583100542676','china-unionpay','BRL','$7.94','NASDAQ'),(5948,98,'3560238267968453','jcb','EUR','$2.17','NASDAQ'),(5949,39,'337941922179972','americanexpress','PLN','$0.13','NASDAQ'),(5950,32,'3576935459662644','jcb','CNY','$9.64','NASDAQ'),(5951,41,'3581603416690404','jcb','IDR','$0.75','NASDAQ'),(5952,6,'3563641425365750','jcb','BYR','$0.77','NYSE'),(5953,33,'3538245827887817','jcb','CNY','$5.33','NYSE'),(5954,39,'3584117906980990','jcb','CNY','$8.30','NASDAQ'),(5955,62,'3529531250513470','jcb','CNY','$6.23','NASDAQ'),(5956,33,'374283525825386','americanexpress','CNY','$5.16','NYSE'),(5957,43,'3532096243526133','jcb','CNY','$0.31','NASDAQ'),(5958,76,'5602215342732806893','china-unionpay','PEN','$7.33','NASDAQ'),(5959,55,'201525159024465','diners-club-enroute','IDR','$8.99','NASDAQ'),(5960,2,'378342597706373','americanexpress','BRL','$8.44','NYSE'),(5961,67,'4905960883739982','switch','XOF','$3.78','NYSE'),(5962,18,'6396543398712677','instapayment','CNY','$9.80','NASDAQ'),(5963,1,'3555612668811370','jcb','CNY','$5.40','NASDAQ'),(5964,19,'5552878917329211','mastercard','PLN','$2.15','NYSE'),(5965,11,'5007667714046750','mastercard','PLN','$3.47','NASDAQ'),(5966,60,'5491028027234836','mastercard','RUB','$7.93','NYSE'),(5967,18,'3569360562282371','jcb','CNY','$2.65','NASDAQ'),(5968,73,'4844388452850879','visa-electron','RUB','$9.42','NYSE'),(5969,30,'3528798935898995','jcb','ZAR','$7.14','NYSE'),(5970,76,'3538676145460905','jcb','PEN','$2.34','NYSE'),(5971,13,'3548063901874132','jcb','EUR','$5.27','NYSE'),(5972,79,'67064225863745829','laser','HUF','$0.41','NYSE'),(5973,27,'5602233112472889','china-unionpay','BOB','$5.77','NYSE'),(5974,16,'3551496675784000','jcb','IDR','$6.04','NASDAQ'),(5975,48,'5472685379428275','diners-club-us-ca','IDR','$9.76','NYSE'),(5976,77,'374288859527482','americanexpress','PKR','$7.32','NASDAQ'),(5977,14,'4175004731826940','visa-electron','CZK','$7.32','NASDAQ'),(5978,22,'3570514850004288','jcb','SEK','$3.10','NYSE'),(5979,60,'30349718298750','diners-club-carte-blanche','BRL','$6.63','NYSE'),(5980,20,'3589793344266591','jcb','CNY','$4.40','NYSE'),(5981,20,'3540990638673239','jcb','CNY','$9.32','NYSE'),(5982,5,'5038617758972157880','maestro','BRL','$1.55','NYSE'),(5983,66,'56022517578189101','china-unionpay','VEF','$0.91','NYSE'),(5984,52,'30384897896967','diners-club-carte-blanche','USD','$1.09','NYSE'),(5985,79,'3548954547441312','jcb','TJS','$2.87','NYSE'),(5986,21,'3528603382813473','jcb','PYG','$2.05','NYSE'),(5987,29,'3537695331915366','jcb','EGP','$8.29','NASDAQ'),(5988,64,'3582177359077555','jcb','CNY','$4.35','NYSE'),(5989,100,'5610054387034278561','china-unionpay','CNY','$3.27','NYSE'),(5990,38,'3572450637423160','jcb','MGA','$5.39','NYSE'),(5991,59,'374622336896013','americanexpress','EGP','$8.93','NYSE'),(5992,50,'4917526974277368','visa-electron','RSD','$8.34','NASDAQ'),(5993,50,'5108752802823381','mastercard','CNY','$0.38','NYSE'),(5994,22,'3576606560266837','jcb','PLN','$9.65','NASDAQ'),(5995,26,'3532396958472063','jcb','IDR','$0.96','NYSE'),(5996,88,'58932838249295159','maestro','MNT','$4.06','NYSE'),(5997,44,'3548635495561744','jcb','EUR','$7.09','NASDAQ'),(5998,61,'3575106898242106','jcb','THB','$7.09','NASDAQ'),(5999,11,'30245565651804','diners-club-carte-blanche','JPY','$3.39','NYSE'),(6000,100,'3551786265364530','jcb','PHP','$6.51','NASDAQ'),(6001,27,'6304322152109525451','maestro','UAH','$5.56','NYSE'),(6002,80,'3556139440694212','jcb','PHP','$4.08','NYSE'),(6003,27,'3539396788952071','jcb','CNY','$4.78','NYSE'),(6004,99,'5002351344333772','mastercard','RUB','$3.92','NASDAQ'),(6005,99,'564182697603846625','switch','USD','$5.46','NYSE'),(6006,23,'3532619626867236','jcb','AMD','$5.12','NYSE'),(6007,46,'493611326997107252','switch','CRC','$0.82','NYSE'),(6008,30,'3543130264785653','jcb','UAH','$4.69','NASDAQ'),(6009,54,'493662204387629466','switch','RUB','$6.50','NYSE'),(6010,63,'3551648239131868','jcb','IDR','$3.55','NYSE'),(6011,65,'3565308966183855','jcb','AMD','$5.19','NYSE'),(6012,72,'63047164511877968','laser','CNY','$0.49','NASDAQ'),(6013,18,'5602256827279612','bankcard','CNY','$3.36','NYSE'),(6014,37,'4175009266387192','visa-electron','AMD','$2.51','NYSE'),(6015,79,'3570827095955753','jcb','IDR','$9.29','NASDAQ'),(6016,10,'4041598081197994','visa','RUB','$5.61','NYSE'),(6017,16,'3539680406115827','jcb','EUR','$2.47','NASDAQ'),(6018,75,'3547466409967848','jcb','IDR','$7.85','NYSE'),(6019,82,'3553908127256120','jcb','DOP','$8.60','NYSE'),(6020,3,'3550893638916144','jcb','CNY','$1.25','NASDAQ'),(6021,48,'201794242943475','diners-club-enroute','BRL','$0.47','NYSE'),(6022,45,'676248527147070677','maestro','PLN','$0.23','NYSE'),(6023,64,'5010122902642635','mastercard','MZN','$3.29','NASDAQ'),(6024,74,'3589068883075624','jcb','PHP','$3.70','NYSE'),(6025,13,'5007667874982216','mastercard','UAH','$0.58','NYSE'),(6026,32,'5007665531539304','mastercard','SEK','$0.16','NYSE'),(6027,96,'4026516147512807','visa-electron','CNY','$3.32','NYSE'),(6028,14,'6376460963653554','instapayment','CNY','$6.30','NASDAQ'),(6029,73,'5020088704741354','maestro','KRW','$7.62','NASDAQ'),(6030,77,'6771097985999593185','laser','BGN','$0.52','NASDAQ'),(6031,28,'5602225078697236','bankcard','RUB','$8.64','NASDAQ'),(6032,49,'503807132332620748','maestro','IDR','$6.36','NASDAQ'),(6033,20,'6383257366693125','instapayment','IDR','$7.88','NYSE'),(6034,26,'4041371718495','visa','CZK','$8.87','NYSE'),(6035,51,'3547806308110091','jcb','CNY','$9.62','NYSE'),(6036,78,'379031620895860','americanexpress','UAH','$4.86','NASDAQ'),(6037,72,'3561368828600193','jcb','LKR','$0.21','NYSE'),(6038,13,'5141237616001019','mastercard','ARS','$8.34','NYSE'),(6039,12,'5100172368757287','mastercard','RUB','$4.44','NYSE'),(6040,66,'3580465643503003','jcb','IDR','$5.89','NYSE'),(6041,70,'4911350842830810888','switch','CRC','$2.20','NASDAQ'),(6042,30,'6771354523025711','laser','IDR','$5.34','NYSE'),(6043,71,'30237241519463','diners-club-carte-blanche','CNY','$7.39','NYSE'),(6044,87,'3577133598287908','jcb','CNY','$6.80','NASDAQ'),(6045,52,'6759467938061936136','switch','PHP','$5.79','NYSE'),(6046,87,'3570029813087346','jcb','IDR','$1.47','NASDAQ'),(6047,62,'3571392623882804','jcb','EUR','$4.83','NASDAQ'),(6048,41,'5415122762605400','mastercard','PLN','$2.00','NYSE'),(6049,43,'5010124983123824','mastercard','CNY','$1.63','NYSE'),(6050,62,'5602218016772922','bankcard','MXN','$8.35','NASDAQ'),(6051,29,'3576059593017365','jcb','IDR','$5.35','NYSE'),(6052,2,'5602219092488559644','china-unionpay','BOB','$8.71','NYSE'),(6053,14,'6759247491329251531','switch','UZS','$6.56','NASDAQ'),(6054,45,'3549457476377126','jcb','SEK','$5.63','NASDAQ'),(6055,79,'4881640725878994','visa','IDR','$3.52','NYSE'),(6056,58,'6333075205528901','switch','USD','$0.45','NYSE'),(6057,14,'3552988128109917','jcb','IDR','$6.99','NASDAQ'),(6058,15,'5108758123283320','mastercard','TZS','$1.62','NASDAQ'),(6059,95,'4405417877107291','visa-electron','KRW','$8.45','NASDAQ'),(6060,27,'201869827455572','diners-club-enroute','JPY','$1.82','NASDAQ'),(6061,79,'3576802285382583','jcb','PHP','$9.89','NYSE'),(6062,83,'3563870839048062','jcb','CNY','$7.60','NASDAQ'),(6063,42,'201953223688307','diners-club-enroute','CNY','$5.92','NASDAQ'),(6064,47,'3569455855902113','jcb','BRL','$6.80','NYSE'),(6065,85,'4041378150973','visa','RUB','$0.65','NYSE'),(6066,83,'3585004017434100','jcb','PHP','$5.82','NASDAQ'),(6067,24,'3584738261718319','jcb','EUR','$3.14','NASDAQ'),(6068,3,'6767459884904721','solo','THB','$6.04','NASDAQ'),(6069,7,'3567131286915535','jcb','RUB','$5.87','NASDAQ'),(6070,35,'3584397723070403','jcb','EUR','$3.09','NASDAQ'),(6071,21,'3553509020381781','jcb','PHP','$0.97','NASDAQ'),(6072,89,'5114963984930090','mastercard','EUR','$5.54','NYSE'),(6073,6,'3545861268532083','jcb','HRK','$0.68','NYSE'),(6074,97,'3554904863326556','jcb','MDL','$8.07','NYSE'),(6075,64,'4041591266134163','visa','PHP','$2.67','NASDAQ'),(6076,83,'5020038169879736','maestro','CNY','$0.31','NASDAQ'),(6077,61,'6334125472559052','solo','BRL','$2.98','NASDAQ'),(6078,77,'201814378197652','diners-club-enroute','USD','$9.90','NYSE'),(6079,66,'56022319344214184','china-unionpay','SEK','$0.98','NASDAQ'),(6080,99,'670692171847662675','laser','RSD','$5.31','NYSE'),(6081,35,'3546958026694830','jcb','CZK','$9.63','NASDAQ'),(6082,32,'3539159927071371','jcb','RSD','$2.33','NASDAQ'),(6083,4,'5108759502732309','mastercard','IDR','$0.48','NYSE'),(6084,59,'56022396267510087','china-unionpay','CNY','$7.83','NYSE'),(6085,86,'3528912145355619','jcb','IDR','$2.86','NYSE'),(6086,57,'5010121425867711','mastercard','CNY','$0.89','NYSE'),(6087,10,'6376780848519492','instapayment','EUR','$3.31','NASDAQ'),(6088,45,'5112904504492791','mastercard','USD','$8.03','NYSE'),(6089,55,'3547140302286776','jcb','ARS','$8.65','NASDAQ'),(6090,23,'3570219768268914','jcb','IDR','$1.71','NASDAQ'),(6091,70,'3538755483779710','jcb','CNY','$2.92','NYSE'),(6092,86,'3535896827782391','jcb','MKD','$9.20','NYSE'),(6093,39,'5598519839010010','diners-club-us-ca','EGP','$9.89','NASDAQ'),(6094,67,'3572649375015001','jcb','MXN','$3.58','NASDAQ'),(6095,87,'5100143345921924','mastercard','IDR','$0.27','NYSE'),(6096,22,'30313645695157','diners-club-carte-blanche','BRL','$4.79','NASDAQ'),(6097,16,'5007660615959510','mastercard','UAH','$3.33','NASDAQ'),(6098,2,'3575698303340541','jcb','JPY','$9.79','NASDAQ'),(6099,54,'3563345758111456','jcb','CNY','$9.26','NASDAQ'),(6100,61,'3566664907506946','jcb','CNY','$3.67','NASDAQ'),(6101,34,'3569753608867876','jcb','CUP','$9.77','NYSE'),(6102,100,'3589910702699003','jcb','EUR','$0.91','NASDAQ'),(6103,65,'3537583694473167','jcb','IDR','$2.05','NASDAQ'),(6104,76,'6397185975340099','instapayment','EUR','$1.57','NASDAQ'),(6105,68,'3569263328965679','jcb','MGA','$5.17','NASDAQ'),(6106,16,'36321072283243','diners-club-international','CNY','$2.00','NYSE'),(6107,71,'4041590558805','visa','CNY','$0.53','NASDAQ'),(6108,67,'3551847517638780','jcb','IDR','$8.88','NASDAQ'),(6109,69,'633444081217342767','solo','ARS','$5.89','NASDAQ'),(6110,4,'30468804470832','diners-club-carte-blanche','NOK','$2.44','NASDAQ'),(6111,51,'3555669462830618','jcb','CNY','$9.42','NYSE'),(6112,12,'5602249938707084','bankcard','CNY','$9.73','NASDAQ'),(6113,34,'5048378673970136','mastercard','SEK','$5.04','NASDAQ'),(6114,10,'5560121417740888','mastercard','KES','$4.79','NYSE'),(6115,1,'5100137771570379','mastercard','GBP','$1.29','NASDAQ'),(6116,85,'5100146499634227','mastercard','IRR','$5.62','NYSE'),(6117,53,'3544286439898505','jcb','CNY','$3.30','NASDAQ'),(6118,28,'56022253021046306','china-unionpay','SEK','$8.36','NASDAQ'),(6119,87,'5100137767895590','mastercard','CNY','$8.66','NASDAQ'),(6120,31,'6771698089508597','laser','PEN','$4.86','NASDAQ'),(6121,85,'3547637799649085','jcb','RUB','$3.78','NYSE'),(6122,87,'5010120764377639','mastercard','NGN','$9.10','NYSE'),(6123,100,'3580502227414817','jcb','EUR','$5.82','NASDAQ'),(6124,44,'4917074817808420','visa-electron','CNY','$4.36','NYSE'),(6125,21,'3533563838065404','jcb','IDR','$0.53','NASDAQ'),(6126,42,'3542436674009175','jcb','GBP','$2.24','NASDAQ'),(6127,60,'633110213293757674','switch','YER','$5.65','NASDAQ'),(6128,36,'3547472308821326','jcb','CNY','$4.90','NYSE'),(6129,30,'3564456826758209','jcb','KRW','$4.02','NASDAQ'),(6130,10,'5048377264574240','mastercard','CNY','$2.41','NASDAQ'),(6131,77,'633423362733863295','solo','SEK','$2.29','NASDAQ'),(6132,9,'5175313510601391','mastercard','COP','$8.86','NYSE'),(6133,19,'3543973873045070','jcb','IDR','$8.23','NYSE'),(6134,14,'3565272263942696','jcb','COP','$3.96','NASDAQ'),(6135,77,'501868472967992271','maestro','HRK','$3.18','NYSE'),(6136,5,'6388746043433538','instapayment','THB','$7.05','NYSE'),(6137,46,'347283560131587','americanexpress','SEK','$5.64','NASDAQ'),(6138,1,'5602221426959501','bankcard','CNY','$8.73','NASDAQ'),(6139,36,'4917162809839758','visa-electron','CDF','$6.28','NASDAQ'),(6140,39,'4041372371120','visa','RUB','$0.04','NYSE'),(6141,22,'3534441383394603','jcb','EUR','$9.63','NASDAQ'),(6142,19,'67630612100920346','maestro','PHP','$8.49','NASDAQ'),(6143,41,'3539266805380657','jcb','BRL','$2.64','NASDAQ'),(6144,95,'6387563786365244','instapayment','EUR','$6.82','NASDAQ'),(6145,37,'6396444717916620','instapayment','USD','$5.97','NYSE'),(6146,44,'5100141154378301','mastercard','COP','$2.06','NYSE'),(6147,97,'378322197079736','americanexpress','NIO','$4.31','NYSE'),(6148,85,'3553642512581053','jcb','EUR','$1.93','NASDAQ'),(6149,66,'5010127418373625','mastercard','CNY','$8.81','NYSE'),(6150,76,'6381330323637550','instapayment','BYR','$9.67','NYSE'),(6151,13,'5479815870181130','diners-club-us-ca','PLN','$2.72','NYSE'),(6152,78,'201686292742577','diners-club-enroute','ARS','$8.00','NYSE'),(6153,7,'3551550148738777','jcb','UAH','$6.51','NYSE'),(6154,20,'3583797956094700','jcb','EUR','$9.76','NYSE'),(6155,51,'5048377399697882','mastercard','CNY','$4.89','NYSE'),(6156,75,'4903253764798294175','switch','CNY','$2.82','NASDAQ'),(6157,79,'3542103520949455','jcb','PHP','$6.85','NYSE'),(6158,86,'3542417290485841','jcb','RSD','$6.71','NASDAQ'),(6159,48,'4405408001643038','visa-electron','CDF','$2.01','NYSE'),(6160,67,'3543271606853930','jcb','CRC','$8.06','NYSE'),(6161,21,'3557214527376055','jcb','BRL','$0.66','NYSE'),(6162,32,'36878581428148','diners-club-international','NOK','$9.03','NASDAQ'),(6163,91,'5010127561139625','mastercard','PLN','$7.96','NASDAQ'),(6164,98,'3531073950495167','jcb','CNY','$4.23','NASDAQ'),(6165,57,'30089003202824','diners-club-carte-blanche','EUR','$8.24','NYSE'),(6166,24,'30370181193252','diners-club-carte-blanche','RUB','$1.79','NYSE'),(6167,63,'3558136630241067','jcb','PHP','$3.87','NASDAQ'),(6168,96,'5589278029535945','mastercard','KES','$4.69','NYSE'),(6169,4,'5602246315263392','bankcard','EUR','$3.23','NYSE'),(6170,92,'3531647702157033','jcb','EUR','$1.43','NASDAQ'),(6171,89,'5002359085585989','mastercard','EUR','$2.10','NYSE'),(6172,68,'6334285063357020982','solo','CNY','$8.07','NASDAQ'),(6173,68,'3571695344927207','jcb','CNY','$6.01','NYSE'),(6174,37,'3561829884020824','jcb','BRL','$5.44','NYSE'),(6175,78,'3569698230748780','jcb','EUR','$2.61','NASDAQ'),(6176,6,'3584303434826836','jcb','BDT','$9.81','NYSE'),(6177,82,'3580980650625101','jcb','BBD','$1.76','NASDAQ'),(6178,54,'5459806725215789','diners-club-us-ca','MMK','$9.48','NYSE'),(6179,94,'3568084269099976','jcb','MYR','$5.20','NASDAQ'),(6180,70,'3584990646733048','jcb','RUB','$6.96','NYSE'),(6181,59,'4917217607354507','visa-electron','EUR','$1.20','NYSE'),(6182,6,'3546527458342505','jcb','PEN','$3.92','NYSE'),(6183,21,'5602233389821875','bankcard','CNY','$6.61','NASDAQ'),(6184,60,'56022398346760998','china-unionpay','SEK','$6.86','NYSE'),(6185,92,'4175009716238656','visa-electron','IDR','$3.93','NYSE'),(6186,43,'3543185197307934','jcb','CNY','$5.05','NASDAQ'),(6187,50,'4913065622343813','visa-electron','KYD','$7.25','NASDAQ'),(6188,58,'5141319354977269','mastercard','BRL','$0.77','NASDAQ'),(6189,35,'5602245539638058','bankcard','CNY','$0.36','NYSE'),(6190,30,'6393774794377343','instapayment','PHP','$6.91','NASDAQ'),(6191,30,'3570573439720103','jcb','HRK','$5.00','NASDAQ'),(6192,57,'3548229813852405','jcb','BRL','$9.64','NYSE'),(6193,55,'490339019362380862','switch','EUR','$7.26','NASDAQ'),(6194,57,'5280090381564187','mastercard','BRL','$7.79','NYSE'),(6195,14,'201704930218296','diners-club-enroute','USD','$3.60','NASDAQ'),(6196,91,'5100170350874532','mastercard','CNY','$3.79','NYSE'),(6197,20,'5602232796850154','bankcard','ARS','$7.96','NASDAQ'),(6198,95,'3534250395975535','jcb','IDR','$0.24','NASDAQ'),(6199,52,'3548071876384367','jcb','MYR','$6.55','NYSE'),(6200,67,'378210340877777','americanexpress','ARS','$0.60','NASDAQ'),(6201,96,'4175001546796060','visa-electron','RUB','$3.97','NASDAQ'),(6202,64,'6709083200430125522','laser','PHP','$2.60','NYSE'),(6203,63,'3567494621143647','jcb','JPY','$1.75','NASDAQ'),(6204,94,'5002354285772677','mastercard','MYR','$9.76','NASDAQ'),(6205,52,'3566611398119242','jcb','BRL','$7.19','NYSE'),(6206,51,'5602221002703638','china-unionpay','USD','$4.27','NASDAQ'),(6207,26,'3539072454679021','jcb','SEK','$3.17','NYSE'),(6208,48,'3543123322042399','jcb','CNY','$3.25','NYSE'),(6209,20,'5010128922080433','mastercard','EUR','$0.30','NASDAQ'),(6210,49,'5361026752126810','mastercard','BDT','$3.04','NASDAQ'),(6211,24,'3535768238405559','jcb','RUB','$8.62','NYSE'),(6212,5,'3568306530845956','jcb','EUR','$1.02','NYSE'),(6213,6,'3535329527746573','jcb','RUB','$4.48','NASDAQ'),(6214,24,'3572282997497157','jcb','MXN','$8.99','NYSE'),(6215,98,'3587908801804849','jcb','COP','$9.57','NASDAQ'),(6216,13,'3574599262706394','jcb','USD','$6.20','NYSE'),(6217,69,'4903016383508480350','switch','CZK','$7.18','NASDAQ'),(6218,6,'372301078698935','americanexpress','CNY','$5.88','NASDAQ'),(6219,66,'3535847216011652','jcb','UAH','$8.89','NASDAQ'),(6220,94,'3579090830315855','jcb','SEK','$9.26','NYSE'),(6221,85,'3552467374098199','jcb','IDR','$2.63','NYSE'),(6222,28,'3564695692998114','jcb','IDR','$6.40','NASDAQ'),(6223,73,'3556533595207434','jcb','PLN','$7.37','NYSE'),(6224,92,'3540792683630530','jcb','EUR','$6.10','NYSE'),(6225,12,'3536640465571966','jcb','CNY','$5.67','NASDAQ'),(6226,69,'5205874971427778','mastercard','EUR','$8.57','NASDAQ'),(6227,15,'3546070542879513','jcb','PHP','$3.18','NYSE'),(6228,36,'5249735954603552','mastercard','JPY','$3.68','NASDAQ'),(6229,27,'3571501027458744','jcb','CNY','$9.94','NASDAQ'),(6230,70,'3535982593592295','jcb','IDR','$4.26','NASDAQ'),(6231,43,'3533956750203336','jcb','IDR','$4.17','NASDAQ'),(6232,6,'5602213523629855','china-unionpay','PLN','$0.94','NYSE'),(6233,37,'3556569722208929','jcb','USD','$2.53','NYSE'),(6234,16,'564182638776565600','switch','TJS','$7.07','NASDAQ'),(6235,68,'3563973283707157','jcb','CNY','$2.54','NYSE'),(6236,51,'3549735475111863','jcb','IDR','$1.17','NASDAQ'),(6237,37,'4913413363877807','visa-electron','LYD','$2.60','NYSE'),(6238,59,'6761767994033959','maestro','THB','$8.03','NYSE'),(6239,7,'3587891575561920','jcb','CNY','$0.92','NASDAQ'),(6240,94,'3572724056915173','jcb','MXN','$0.07','NYSE'),(6241,35,'6372263702670960','instapayment','IDR','$6.14','NASDAQ'),(6242,11,'3530076747969130','jcb','IDR','$2.59','NYSE'),(6243,14,'3568203319844492','jcb','JPY','$5.37','NASDAQ'),(6244,18,'6771506428988562','laser','MXN','$2.00','NASDAQ'),(6245,30,'3577496243032452','jcb','MAD','$3.58','NASDAQ'),(6246,97,'490532228672526180','switch','BRL','$3.73','NYSE'),(6247,34,'5038027683667479','maestro','CNY','$7.92','NYSE'),(6248,61,'3553649629570416','jcb','VEF','$0.94','NYSE'),(6249,68,'5100178189871777','mastercard','PLN','$4.99','NYSE'),(6250,42,'6333338347589297107','switch','CNY','$4.82','NASDAQ'),(6251,52,'564182779560418877','switch','THB','$8.42','NYSE'),(6252,87,'36013958693237','diners-club-international','VEF','$8.88','NASDAQ'),(6253,8,'5602234304381219','bankcard','CZK','$5.38','NASDAQ'),(6254,52,'3564308989220461','jcb','RUB','$8.33','NYSE'),(6255,41,'5610527009232094','bankcard','BAM','$5.73','NYSE'),(6256,44,'3549455626058158','jcb','CNY','$9.55','NYSE'),(6257,42,'4041379563435842','visa','CNY','$9.34','NASDAQ'),(6258,52,'5100178405612120','mastercard','PLN','$7.67','NYSE'),(6259,90,'6334740116740697616','solo','MNT','$9.13','NYSE'),(6260,48,'3582627607346954','jcb','BDT','$4.29','NASDAQ'),(6261,65,'4917122563334917','visa-electron','EUR','$6.51','NASDAQ'),(6262,40,'5501915071652491','mastercard','CZK','$7.36','NYSE'),(6263,25,'633416194406244308','solo','PLN','$2.87','NASDAQ'),(6264,6,'5602238117509584326','china-unionpay','EUR','$2.98','NYSE'),(6265,36,'3578527826706572','jcb','USD','$6.79','NYSE'),(6266,7,'67597932784777403','maestro','CNY','$8.18','NYSE'),(6267,20,'201529681801358','diners-club-enroute','SEK','$7.48','NASDAQ'),(6268,34,'3576603803587699','jcb','BDT','$2.69','NASDAQ'),(6269,32,'5100142615603519','mastercard','CNY','$6.78','NASDAQ'),(6270,77,'6333554629352883073','switch','IDR','$6.66','NYSE'),(6271,60,'6304805747156436241','laser','CNY','$8.09','NASDAQ'),(6272,84,'0604851830704793','maestro','PEN','$7.51','NYSE'),(6273,51,'3561107262111394','jcb','KZT','$0.78','NASDAQ'),(6274,26,'3532469458843149','jcb','MAD','$9.19','NYSE'),(6275,25,'6333630401592265','switch','SLL','$1.42','NASDAQ'),(6276,17,'3538644094188901','jcb','THB','$9.95','NYSE'),(6277,61,'3560696179989729','jcb','CNY','$7.63','NYSE'),(6278,18,'589394680486120251','maestro','BRL','$9.44','NYSE'),(6279,97,'5418710835504068','mastercard','MYR','$1.71','NASDAQ'),(6280,31,'4844218701596314','visa-electron','BRL','$0.01','NASDAQ'),(6281,35,'4041593547714','visa','LKR','$2.53','NYSE'),(6282,34,'3532939533127833','jcb','RUB','$4.83','NYSE'),(6283,33,'3583079932903027','jcb','EUR','$9.76','NASDAQ'),(6284,33,'4405438261960699','visa-electron','PEN','$7.25','NYSE'),(6285,43,'0604027062543932436','maestro','BGN','$1.44','NASDAQ'),(6286,81,'3563350418131688','jcb','CZK','$2.18','NYSE'),(6287,99,'5010125135350157','mastercard','CNY','$5.22','NYSE'),(6288,26,'5100130608711530','mastercard','CNY','$7.51','NYSE'),(6289,40,'677152745022732912','laser','VND','$1.32','NASDAQ'),(6290,85,'3556175567552726','jcb','IDR','$9.44','NASDAQ'),(6291,95,'5602239687959374','china-unionpay','RUB','$6.67','NYSE'),(6292,68,'3549839264364590','jcb','ILS','$5.92','NASDAQ'),(6293,7,'3572764033478655','jcb','DOP','$8.92','NYSE'),(6294,36,'3566916494492975','jcb','CZK','$4.81','NYSE'),(6295,58,'36723168581184','diners-club-international','CNY','$1.49','NYSE'),(6296,57,'6334390897026030589','solo','IDR','$2.22','NASDAQ'),(6297,75,'3587103203343097','jcb','USD','$2.41','NASDAQ'),(6298,44,'5602237702270439','bankcard','MXN','$7.59','NYSE'),(6299,15,'5224902362433944','mastercard','MXN','$0.64','NYSE'),(6300,13,'589305892458449026','maestro','GHS','$4.17','NYSE'),(6301,73,'5100132507652559','mastercard','CNY','$0.20','NYSE'),(6302,89,'564182204615908947','switch','CNY','$3.45','NYSE'),(6303,25,'3550189566278932','jcb','EUR','$4.55','NYSE'),(6304,20,'3572641688429854','jcb','IDR','$4.22','NASDAQ'),(6305,83,'3560181389704788','jcb','PHP','$0.85','NASDAQ'),(6306,32,'201400947984687','diners-club-enroute','RUB','$5.93','NASDAQ'),(6307,64,'5314750837039627','mastercard','BRL','$6.57','NYSE'),(6308,13,'3540317538028985','jcb','EUR','$9.85','NYSE'),(6309,80,'3552576021670141','jcb','RUB','$5.61','NASDAQ'),(6310,9,'4913836589787386','visa-electron','EUR','$9.29','NYSE'),(6311,56,'6706171662224510798','laser','CNY','$8.93','NASDAQ'),(6312,83,'5100170155851040','mastercard','IDR','$9.06','NASDAQ'),(6313,39,'3575170120915251','jcb','BRL','$8.76','NYSE'),(6314,46,'3548576940930318','jcb','RUB','$0.11','NYSE'),(6315,22,'6761900581368100120','maestro','BRL','$0.08','NASDAQ'),(6316,26,'6383669397435633','instapayment','HNL','$8.51','NASDAQ'),(6317,80,'3569605027194755','jcb','BOB','$8.42','NASDAQ'),(6318,30,'3587369693541579','jcb','PLN','$8.90','NASDAQ'),(6319,82,'3589327452195340','jcb','TMT','$0.06','NASDAQ'),(6320,81,'4041593004070','visa','EUR','$3.73','NASDAQ'),(6321,91,'3534221632307170','jcb','AMD','$9.49','NASDAQ'),(6322,8,'3578884244071059','jcb','EUR','$3.71','NYSE'),(6323,69,'3549074738191037','jcb','USD','$3.56','NASDAQ'),(6324,52,'3544238452712899','jcb','PHP','$7.45','NASDAQ'),(6325,30,'3541325496743643','jcb','SEK','$3.84','NYSE'),(6326,87,'3569811027341327','jcb','PEN','$8.19','NASDAQ'),(6327,38,'3552633608633966','jcb','CNY','$6.28','NASDAQ'),(6328,43,'3556869053201935','jcb','CNY','$0.96','NYSE'),(6329,38,'3545624871982321','jcb','RUB','$9.39','NASDAQ'),(6330,1,'3559088930994664','jcb','BRL','$4.57','NASDAQ'),(6331,33,'3577124576000389','jcb','PLN','$0.88','NASDAQ'),(6332,86,'5509593823466452','diners-club-us-ca','RSD','$6.07','NASDAQ'),(6333,32,'3562586754274423','jcb','UAH','$6.40','NYSE'),(6334,62,'6304145328548669200','maestro','BRL','$9.70','NYSE'),(6335,94,'3579349272288834','jcb','BDT','$5.70','NYSE'),(6336,17,'5100179416782084','mastercard','XAF','$0.56','NASDAQ'),(6337,100,'201484537927363','diners-club-enroute','BAM','$4.83','NASDAQ'),(6338,15,'5007665239574926','mastercard','PLN','$5.37','NASDAQ'),(6339,92,'5602247701325373','china-unionpay','IDR','$6.31','NYSE'),(6340,26,'50201698288524450','maestro','RUB','$0.21','NASDAQ'),(6341,6,'3533774541605960','jcb','EUR','$9.15','NASDAQ'),(6342,18,'50188354590048336','maestro','CNY','$3.41','NYSE'),(6343,88,'30587491175345','diners-club-carte-blanche','UAH','$6.51','NASDAQ'),(6344,6,'4405312747319376','visa-electron','IDR','$0.94','NYSE'),(6345,10,'3550737404501160','jcb','EUR','$9.16','NYSE'),(6346,47,'6391190708109148','instapayment','USD','$4.66','NASDAQ'),(6347,5,'4041590511648','visa','EUR','$7.25','NASDAQ'),(6348,40,'3567055952334418','jcb','JMD','$9.37','NASDAQ'),(6349,3,'3559351756740466','jcb','CNY','$5.93','NYSE'),(6350,99,'3563280827012437','jcb','AMD','$0.71','NASDAQ'),(6351,47,'3563229299610764','jcb','PHP','$3.37','NYSE'),(6352,55,'3569558077320632','jcb','IDR','$2.95','NASDAQ'),(6353,77,'3583603243949518','jcb','NOK','$7.41','NYSE'),(6354,53,'6374597864130737','instapayment','CNY','$6.92','NYSE'),(6355,7,'6761690254796315','maestro','USD','$1.41','NYSE'),(6356,79,'3556005078972081','jcb','BRL','$6.42','NYSE'),(6357,20,'4041598437947985','visa','SEK','$7.77','NYSE'),(6358,2,'5455228661493060','diners-club-us-ca','IDR','$8.99','NASDAQ'),(6359,21,'67612942893686719','maestro','BAM','$4.89','NASDAQ'),(6360,55,'374283214704629','americanexpress','SEK','$4.23','NASDAQ'),(6361,2,'5116155396867204','mastercard','IDR','$2.13','NYSE'),(6362,100,'3529644851253782','jcb','IDR','$4.45','NASDAQ'),(6363,84,'3552885663679116','jcb','RUB','$7.94','NASDAQ'),(6364,56,'5347477442375581','mastercard','KRW','$9.46','NASDAQ'),(6365,32,'3538465570714873','jcb','SEK','$3.74','NYSE'),(6366,87,'30238996159323','diners-club-carte-blanche','AFN','$5.06','NASDAQ'),(6367,31,'3587830835824025','jcb','CNY','$7.39','NASDAQ'),(6368,61,'36786143049445','diners-club-international','COP','$5.87','NASDAQ'),(6369,78,'5525388238892016','mastercard','ZMW','$3.06','NYSE'),(6370,40,'4175000358331586','visa-electron','RUB','$5.08','NYSE'),(6371,32,'3549203013036597','jcb','EUR','$1.87','NASDAQ'),(6372,8,'3536242387285302','jcb','CNY','$1.35','NYSE'),(6373,26,'5893199825733289494','maestro','JPY','$8.86','NASDAQ'),(6374,41,'30160987944218','diners-club-carte-blanche','PEN','$7.82','NYSE'),(6375,81,'4405046960244776','visa-electron','IDR','$7.11','NYSE'),(6376,86,'5002354807204100','mastercard','IDR','$3.84','NASDAQ'),(6377,71,'502099360515856883','maestro','ETB','$0.97','NASDAQ'),(6378,34,'3557943522286097','jcb','EUR','$5.77','NYSE'),(6379,64,'0604699239639486','maestro','PEN','$9.12','NASDAQ'),(6380,7,'3589460612807049','jcb','XAF','$6.70','NASDAQ'),(6381,14,'3556911599968419','jcb','CNY','$1.36','NASDAQ'),(6382,84,'3585644201833169','jcb','IDR','$9.81','NYSE'),(6383,3,'3537964472614588','jcb','CNY','$4.11','NYSE'),(6384,48,'6759404817742977386','switch','RUB','$7.08','NYSE'),(6385,99,'5602228328418148','bankcard','SEK','$9.78','NYSE'),(6386,32,'3543188714147106','jcb','EUR','$6.82','NASDAQ'),(6387,94,'3585509594484625','jcb','CNY','$1.98','NYSE'),(6388,100,'3541652078454285','jcb','CNY','$2.75','NYSE'),(6389,2,'36871660964943','diners-club-international','PEN','$4.79','NYSE'),(6390,100,'30217483746651','diners-club-carte-blanche','CNY','$9.95','NASDAQ'),(6391,83,'5602237868676932','bankcard','TOP','$5.12','NYSE'),(6392,82,'3574490326306340','jcb','BRL','$4.86','NYSE'),(6393,22,'3562088626198435','jcb','CNY','$1.68','NASDAQ'),(6394,97,'6767126853846098','solo','BGN','$0.46','NASDAQ'),(6395,76,'5572203706144463','mastercard','IDR','$9.31','NYSE'),(6396,2,'3581575725010450','jcb','EUR','$9.20','NASDAQ'),(6397,59,'5602213971098346722','china-unionpay','EUR','$5.84','NYSE'),(6398,30,'56022398394323608','china-unionpay','EUR','$6.75','NYSE'),(6399,54,'5310268990144765','mastercard','PHP','$8.69','NYSE'),(6400,94,'3548418499688932','jcb','IDR','$1.14','NASDAQ'),(6401,4,'5100143304008218','mastercard','RUB','$7.37','NASDAQ'),(6402,41,'3531193812815400','jcb','CZK','$5.05','NASDAQ'),(6403,90,'3576624725769652','jcb','IDR','$0.88','NASDAQ'),(6404,78,'3528522608007415','jcb','XOF','$0.55','NASDAQ'),(6405,39,'3561486494307669','jcb','CNY','$9.12','NASDAQ'),(6406,9,'3542860874985316','jcb','RUB','$8.96','NASDAQ'),(6407,71,'50206492714836687','maestro','SEK','$7.27','NASDAQ'),(6408,90,'6333159766038052','switch','XOF','$7.00','NYSE'),(6409,40,'5602235871164044405','china-unionpay','CNY','$6.77','NYSE'),(6410,31,'3557650420604368','jcb','CUP','$7.94','NASDAQ'),(6411,56,'349651467792727','americanexpress','BRL','$2.84','NASDAQ'),(6412,27,'378650010501894','americanexpress','PHP','$8.10','NYSE'),(6413,27,'3540033469215158','jcb','USD','$7.71','NYSE'),(6414,30,'3549622308450942','jcb','EUR','$6.71','NASDAQ'),(6415,27,'3583554422267323','jcb','SYP','$6.47','NYSE'),(6416,53,'5018986886776860105','maestro','CRC','$8.72','NASDAQ'),(6417,37,'6771276329071609','laser','EUR','$2.29','NYSE'),(6418,61,'3583374457733721','jcb','EUR','$4.23','NYSE'),(6419,70,'4917652933329858','visa-electron','USD','$8.24','NYSE'),(6420,79,'4026284416779041','visa-electron','CZK','$9.08','NYSE'),(6421,82,'201632365850962','diners-club-enroute','IDR','$7.60','NASDAQ'),(6422,69,'6771097278416102883','laser','EUR','$1.92','NASDAQ'),(6423,21,'3561179054017089','jcb','RSD','$2.72','NYSE'),(6424,15,'5462830037204971','mastercard','EUR','$4.51','NASDAQ'),(6425,62,'201451645709702','diners-club-enroute','USD','$8.59','NYSE'),(6426,87,'3586257826261119','jcb','CNY','$6.43','NYSE'),(6427,36,'3586741770428782','jcb','EUR','$3.41','NASDAQ'),(6428,17,'3538022118938298','jcb','COP','$8.72','NASDAQ'),(6429,72,'3567041434490077','jcb','IDR','$5.61','NASDAQ'),(6430,14,'633110152547564520','switch','CLP','$0.31','NYSE'),(6431,3,'4844994721609309','visa-electron','IDR','$2.39','NYSE'),(6432,37,'501867801287157515','maestro','BSD','$3.98','NASDAQ'),(6433,98,'490324751027025105','switch','ZAR','$3.56','NYSE'),(6434,73,'3535089960151067','jcb','SEK','$5.94','NASDAQ'),(6435,82,'490565560818210307','switch','HRK','$9.10','NYSE'),(6436,62,'5602220710407235','bankcard','USD','$1.89','NASDAQ'),(6437,75,'5108759488197675','mastercard','CZK','$9.17','NASDAQ'),(6438,86,'5216426682261223','mastercard','RUB','$0.23','NASDAQ'),(6439,11,'3547414465540091','jcb','CNY','$6.96','NYSE'),(6440,80,'3553661818816641','jcb','CNY','$2.95','NASDAQ'),(6441,78,'4113858108826188','visa','XPF','$9.14','NASDAQ'),(6442,13,'5108753799202134','mastercard','UYU','$3.40','NYSE'),(6443,99,'5002359012134588','mastercard','UAH','$1.78','NYSE'),(6444,18,'201686959094569','diners-club-enroute','CLP','$4.20','NASDAQ'),(6445,9,'5602213683688782','bankcard','ARS','$9.08','NYSE'),(6446,41,'4844986945592204','visa-electron','BRL','$8.83','NYSE'),(6447,58,'4903829020905279061','switch','CNY','$1.49','NASDAQ'),(6448,43,'201497429999118','diners-club-enroute','PHP','$8.56','NASDAQ'),(6449,39,'493634977866412133','switch','EUR','$8.00','NASDAQ'),(6450,30,'374622949485972','americanexpress','RUB','$4.82','NYSE'),(6451,63,'560221269750018126','china-unionpay','PYG','$0.85','NYSE'),(6452,45,'3576179399661016','jcb','PHP','$3.00','NASDAQ'),(6453,61,'5526887009697495','mastercard','IDR','$5.66','NASDAQ'),(6454,39,'3585846855567320','jcb','RUB','$1.39','NYSE'),(6455,77,'5602245513163115','bankcard','IDR','$4.66','NYSE'),(6456,14,'3570693618504969','jcb','CZK','$5.62','NASDAQ'),(6457,60,'3588862359715684','jcb','PLN','$0.08','NYSE'),(6458,12,'5251472761577408','mastercard','MZN','$2.82','NASDAQ'),(6459,93,'3553634120127668','jcb','DOP','$1.16','NYSE'),(6460,3,'5893547608782976511','maestro','CNY','$1.89','NYSE'),(6461,57,'6333447693647206','switch','DKK','$6.54','NASDAQ'),(6462,55,'201974152096452','diners-club-enroute','DOP','$3.43','NASDAQ'),(6463,84,'3577582287051126','jcb','EUR','$3.33','NYSE'),(6464,14,'5641825884749327454','switch','COP','$5.43','NYSE'),(6465,4,'3531671537114258','jcb','IDR','$9.72','NASDAQ'),(6466,17,'36907276414756','diners-club-international','SEK','$7.05','NASDAQ'),(6467,92,'201453615731286','diners-club-enroute','PHP','$6.83','NASDAQ'),(6468,39,'3552044634543353','jcb','VEF','$5.65','NYSE'),(6469,89,'3555999469746669','jcb','BRL','$8.88','NYSE'),(6470,26,'491186949722243347','switch','BRL','$5.42','NYSE'),(6471,62,'3556018757697101','jcb','CAD','$1.17','NASDAQ'),(6472,11,'5508288903926753','diners-club-us-ca','SEK','$2.58','NYSE'),(6473,100,'30054422715855','diners-club-carte-blanche','CNY','$5.03','NYSE'),(6474,62,'201539753445224','diners-club-enroute','CNY','$1.15','NYSE'),(6475,42,'4936279539870213','switch','CNY','$1.52','NASDAQ'),(6476,39,'5602228751765304','bankcard','ARS','$2.81','NYSE'),(6477,86,'374288155490468','americanexpress','AMD','$8.53','NASDAQ'),(6478,78,'4017954297628','visa','IDR','$0.40','NYSE'),(6479,11,'5602244895405947','bankcard','CNY','$9.87','NASDAQ'),(6480,1,'201429506602174','diners-club-enroute','LKR','$6.77','NYSE'),(6481,6,'4844021591095144','visa-electron','CNY','$7.03','NASDAQ'),(6482,51,'6706986980694214','laser','TRY','$3.33','NASDAQ'),(6483,31,'3547827627239395','jcb','RUB','$2.29','NASDAQ'),(6484,12,'4293057826031','visa','PHP','$5.83','NYSE'),(6485,60,'374283283759785','americanexpress','SEK','$0.52','NYSE'),(6486,27,'3535477202404438','jcb','MNT','$6.06','NYSE'),(6487,68,'3567654405959738','jcb','CNY','$6.71','NYSE'),(6488,90,'3571348753114772','jcb','SEK','$1.99','NASDAQ'),(6489,97,'201559859787535','diners-club-enroute','DOP','$4.63','NYSE'),(6490,30,'30025396044670','diners-club-carte-blanche','SEK','$9.43','NYSE'),(6491,11,'6391906037648120','instapayment','CNY','$5.27','NYSE'),(6492,93,'6395264832783429','instapayment','MNT','$4.87','NYSE'),(6493,60,'3585868915400151','jcb','EUR','$3.32','NYSE'),(6494,90,'201482702558476','diners-club-enroute','ARS','$6.36','NASDAQ'),(6495,93,'56022581275743255','china-unionpay','BRL','$7.59','NASDAQ'),(6496,41,'30129441981926','diners-club-carte-blanche','PEN','$9.87','NYSE'),(6497,85,'5010121597542381','mastercard','CNY','$1.86','NYSE'),(6498,22,'201586370659455','diners-club-enroute','CNY','$1.22','NYSE'),(6499,30,'4913644258966582','visa-electron','CZK','$2.41','NYSE'),(6500,76,'201944670551213','diners-club-enroute','PHP','$7.02','NASDAQ'),(6501,77,'201615621454646','diners-club-enroute','IDR','$6.50','NYSE'),(6502,1,'3574639004164104','jcb','EUR','$2.60','NYSE'),(6503,57,'372301979141142','americanexpress','PLN','$6.78','NYSE'),(6504,27,'3530134129225330','jcb','CNY','$4.34','NASDAQ'),(6505,34,'3556202547167951','jcb','CNY','$9.97','NYSE'),(6506,46,'3535525035955883','jcb','EUR','$5.28','NYSE'),(6507,28,'30330982148871','diners-club-carte-blanche','SEK','$8.77','NYSE'),(6508,55,'3541647399817673','jcb','CNY','$4.25','NASDAQ'),(6509,56,'4913090166373323','visa-electron','CNY','$8.07','NASDAQ'),(6510,23,'3582711451832432','jcb','BRL','$2.98','NYSE'),(6511,70,'3564650226773616','jcb','CZK','$3.95','NYSE'),(6512,80,'3560481305006585','jcb','ILS','$8.73','NASDAQ'),(6513,81,'201989304859219','diners-club-enroute','CZK','$0.77','NASDAQ'),(6514,77,'5610602395275013','bankcard','CNY','$0.69','NASDAQ'),(6515,13,'491160789958431053','switch','EUR','$6.31','NYSE'),(6516,80,'5602239271865987','bankcard','PHP','$9.11','NYSE'),(6517,18,'5641827088260479938','switch','TZS','$5.95','NYSE'),(6518,64,'50184095968478704','maestro','IDR','$7.79','NYSE'),(6519,85,'337941171984684','americanexpress','CZK','$2.27','NASDAQ'),(6520,46,'3585914309682457','jcb','CNY','$0.86','NASDAQ'),(6521,60,'4041378870448738','visa','CNY','$6.22','NASDAQ'),(6522,76,'6379094372422777','instapayment','BRL','$3.08','NASDAQ'),(6523,59,'5521006251972895','diners-club-us-ca','MXN','$3.68','NYSE'),(6524,43,'5641826669348395','switch','VND','$3.36','NYSE'),(6525,93,'3554033180131976','jcb','CNY','$4.77','NASDAQ'),(6526,17,'201841788228348','diners-club-enroute','PEN','$8.18','NASDAQ'),(6527,19,'3554317142000076','jcb','CNY','$8.45','NYSE'),(6528,7,'3539678819614618','jcb','CNY','$6.09','NYSE'),(6529,15,'6761753069836185475','maestro','CNY','$8.45','NYSE'),(6530,23,'4405110058122623','visa-electron','IDR','$9.76','NYSE'),(6531,100,'3588813641162755','jcb','IDR','$6.19','NYSE'),(6532,57,'4905233040151505642','switch','BRL','$6.33','NASDAQ'),(6533,67,'3550579185841021','jcb','IDR','$3.07','NYSE'),(6534,22,'3536963989403049','jcb','RUB','$1.25','NYSE'),(6535,65,'50182896306259165','maestro','VND','$9.75','NYSE'),(6536,64,'30230504888568','diners-club-carte-blanche','LKR','$3.13','NYSE'),(6537,20,'5100174455870486','mastercard','RSD','$8.59','NYSE'),(6538,55,'3563141614352594','jcb','IDR','$4.14','NASDAQ'),(6539,49,'560222139401860961','china-unionpay','CUP','$3.18','NYSE'),(6540,43,'3550211745700196','jcb','IDR','$1.05','NYSE'),(6541,56,'5602246320480320','bankcard','PLN','$9.38','NASDAQ'),(6542,45,'3563997424739571','jcb','HUF','$8.14','NYSE'),(6543,43,'6762311346253804769','maestro','GBP','$0.35','NASDAQ'),(6544,17,'201655215972629','diners-club-enroute','EUR','$6.25','NYSE'),(6545,75,'201605363974497','diners-club-enroute','YER','$9.89','NYSE'),(6546,41,'63043768191916732','maestro','EUR','$0.63','NYSE'),(6547,48,'50183894017515131','maestro','BRL','$4.27','NASDAQ'),(6548,31,'3587417158820846','jcb','PLN','$8.47','NYSE'),(6549,63,'3589061145778507','jcb','CNY','$1.48','NYSE'),(6550,74,'4175001828602267','visa-electron','TJS','$8.54','NYSE'),(6551,39,'4175002918009256','visa-electron','CNY','$1.98','NYSE'),(6552,72,'3561768281734902','jcb','EUR','$2.92','NYSE'),(6553,56,'4534433073073','visa','XPF','$0.84','NYSE'),(6554,78,'5602259878386088','bankcard','PHP','$2.32','NASDAQ'),(6555,72,'201774740211088','diners-club-enroute','HRK','$7.91','NYSE'),(6556,78,'56022381163036023','china-unionpay','JPY','$6.80','NASDAQ'),(6557,32,'3539275685084305','jcb','USD','$0.12','NYSE'),(6558,36,'3568040025060306','jcb','JPY','$9.54','NYSE'),(6559,2,'5602231711407151274','china-unionpay','CNY','$1.39','NYSE'),(6560,75,'30337047287792','diners-club-carte-blanche','SEK','$9.89','NYSE'),(6561,46,'3560972440177083','jcb','RUB','$4.57','NYSE'),(6562,46,'372301576557559','americanexpress','SEK','$0.27','NASDAQ'),(6563,84,'201409516495934','diners-club-enroute','AED','$5.13','NYSE'),(6564,54,'36973033728136','diners-club-international','EUR','$1.48','NYSE'),(6565,45,'6331101178145020108','switch','IDR','$7.95','NYSE'),(6566,27,'201734357327577','diners-club-enroute','COP','$4.25','NYSE'),(6567,44,'5007667966712059','mastercard','AMD','$9.66','NYSE'),(6568,92,'4026997738358265','visa-electron','PLN','$6.09','NASDAQ'),(6569,19,'5108754909621494','mastercard','PEN','$7.17','NASDAQ'),(6570,77,'6304246480152225478','maestro','PLN','$5.77','NYSE'),(6571,89,'6376091492620739','instapayment','EUR','$8.64','NASDAQ'),(6572,36,'677117621708071467','laser','MXN','$5.53','NASDAQ'),(6573,42,'4041371041492974','visa','CUP','$3.14','NASDAQ'),(6574,90,'589318664931455663','maestro','RUB','$2.95','NYSE'),(6575,44,'36345294200396','diners-club-international','DOP','$6.56','NASDAQ'),(6576,12,'6761087196323466','maestro','BAM','$4.42','NYSE'),(6577,7,'3583971963430427','jcb','IDR','$1.34','NASDAQ'),(6578,16,'67066813555897400','laser','SYP','$0.24','NYSE'),(6579,58,'3557102255279866','jcb','IDR','$1.23','NYSE'),(6580,57,'3581402321928490','jcb','XPF','$2.44','NYSE'),(6581,21,'3575605768618287','jcb','PHP','$1.75','NASDAQ'),(6582,78,'5602230692738176','bankcard','EUR','$1.34','NASDAQ'),(6583,60,'5048375058599860','mastercard','IDR','$2.67','NYSE'),(6584,72,'5602218201316998','bankcard','EUR','$7.07','NASDAQ'),(6585,28,'3538428530702248','jcb','SEK','$9.69','NASDAQ'),(6586,93,'3566339096644887','jcb','EUR','$2.26','NYSE'),(6587,90,'3579677007456809','jcb','HNL','$7.11','NASDAQ'),(6588,41,'3574392705907526','jcb','PHP','$4.84','NYSE'),(6589,35,'374622851553114','americanexpress','EUR','$8.02','NASDAQ'),(6590,11,'5048370228758090','mastercard','CNY','$1.43','NASDAQ'),(6591,88,'5602211963320431986','china-unionpay','IDR','$4.66','NASDAQ'),(6592,15,'5205128287184676','mastercard','EUR','$7.21','NASDAQ'),(6593,67,'3530088210295893','jcb','CNY','$5.17','NASDAQ'),(6594,32,'3532248805734379','jcb','BRL','$7.35','NASDAQ'),(6595,39,'5152249445085655','mastercard','CZK','$0.05','NASDAQ'),(6596,83,'372301891329890','americanexpress','EUR','$7.51','NASDAQ'),(6597,66,'630409956809832797','laser','EUR','$8.77','NYSE'),(6598,77,'36480458038611','diners-club-international','CNY','$4.17','NASDAQ'),(6599,91,'5102970023135155','mastercard','IDR','$1.62','NYSE'),(6600,24,'5007661122891774','mastercard','JPY','$8.91','NASDAQ'),(6601,72,'3565284503194004','jcb','MXN','$7.49','NASDAQ'),(6602,21,'6334676701665681188','solo','SEK','$0.81','NYSE'),(6603,48,'3529362700412166','jcb','EUR','$1.64','NYSE'),(6604,22,'201434108087675','diners-club-enroute','PHP','$4.52','NASDAQ'),(6605,47,'5100175055009474','mastercard','CNY','$5.45','NASDAQ'),(6606,25,'3572785702348614','jcb','CNY','$0.04','NASDAQ'),(6607,63,'3530376999872572','jcb','RUB','$4.19','NYSE'),(6608,53,'564182490031516436','switch','CAD','$3.07','NASDAQ'),(6609,38,'060443782785062979','maestro','NGN','$5.53','NASDAQ'),(6610,43,'4911479218668816212','switch','CNY','$2.04','NASDAQ'),(6611,45,'3563645748837973','jcb','CAD','$7.71','NASDAQ'),(6612,65,'3579902626552493','jcb','MNT','$8.77','NASDAQ'),(6613,93,'3565502330350931','jcb','CNY','$9.66','NASDAQ'),(6614,42,'67613202590038048','maestro','BRL','$0.86','NASDAQ'),(6615,24,'6333578459558466','switch','IDR','$8.19','NASDAQ'),(6616,50,'374288454833491','americanexpress','CNY','$6.15','NYSE'),(6617,80,'3531223291048262','jcb','SHP','$5.61','NYSE'),(6618,14,'675972356711002401','switch','IDR','$5.25','NYSE'),(6619,61,'4998609003440934','visa','EUR','$0.01','NASDAQ'),(6620,67,'4405522285883688','visa-electron','BRL','$0.92','NASDAQ'),(6621,36,'3530729859584994','jcb','CZK','$5.85','NASDAQ'),(6622,39,'3543080268777547','jcb','USD','$8.75','NYSE'),(6623,28,'6763010954950615131','maestro','PHP','$2.93','NASDAQ'),(6624,71,'5602245080402508','bankcard','CNY','$0.41','NYSE'),(6625,8,'3542303816072133','jcb','IDR','$0.56','NYSE'),(6626,92,'201607090798579','diners-club-enroute','BRL','$4.03','NYSE'),(6627,75,'6709055786133256097','laser','CNY','$3.81','NYSE'),(6628,38,'5544058359923851','mastercard','AUD','$5.82','NASDAQ'),(6629,69,'337941284872891','americanexpress','PHP','$8.00','NYSE'),(6630,70,'4508045700903168','visa-electron','PHP','$2.64','NASDAQ'),(6631,70,'5260464306843667','mastercard','EUR','$0.43','NASDAQ'),(6632,45,'5020849336118051479','maestro','PHP','$0.69','NYSE'),(6633,86,'3583079043677759','jcb','IDR','$8.47','NASDAQ'),(6634,22,'201708842278587','diners-club-enroute','MAD','$8.88','NYSE'),(6635,42,'3532723108642537','jcb','AMD','$2.44','NYSE'),(6636,16,'3550324657311660','jcb','EUR','$9.27','NASDAQ'),(6637,44,'5439273030452760','diners-club-us-ca','IDR','$9.29','NASDAQ'),(6638,71,'30101413314071','diners-club-carte-blanche','IDR','$1.68','NASDAQ'),(6639,59,'3583207124557224','jcb','IDR','$3.57','NYSE'),(6640,36,'5602238161167561','bankcard','CNY','$6.94','NYSE'),(6641,87,'30274875315934','diners-club-carte-blanche','CNY','$9.67','NASDAQ'),(6642,64,'3545065003318432','jcb','EUR','$3.53','NYSE'),(6643,76,'3583729755644765','jcb','UAH','$0.62','NYSE'),(6644,56,'0604380179985102','maestro','ILS','$9.97','NYSE'),(6645,1,'3549747755037718','jcb','PLN','$5.60','NYSE'),(6646,82,'201734249473753','diners-club-enroute','RSD','$7.68','NASDAQ'),(6647,56,'3588145412792282','jcb','IDR','$8.03','NYSE'),(6648,59,'6767332078517502','solo','IDR','$5.56','NYSE'),(6649,60,'5893344534123077634','maestro','USD','$3.53','NASDAQ'),(6650,13,'5010127871202675','mastercard','CNY','$0.58','NYSE'),(6651,30,'5602237517654686','bankcard','XPF','$9.03','NASDAQ'),(6652,30,'5602233286608565','bankcard','PHP','$2.36','NASDAQ'),(6653,63,'343023723288419','americanexpress','CNY','$4.30','NASDAQ'),(6654,68,'3557660180277222','jcb','CNY','$6.49','NASDAQ'),(6655,83,'5549525029905265','diners-club-us-ca','SEK','$4.03','NASDAQ'),(6656,23,'675932458549665588','maestro','CNY','$6.16','NASDAQ'),(6657,20,'375535873347134','americanexpress','IDR','$1.01','NYSE'),(6658,9,'5100170044995925','mastercard','CNY','$0.19','NASDAQ'),(6659,74,'3568108987873618','jcb','PEN','$4.92','NYSE'),(6660,58,'3555634064826034','jcb','CNY','$8.94','NASDAQ'),(6661,73,'4017958905406635','visa','CNY','$6.79','NYSE'),(6662,55,'3528881245752670','jcb','RUB','$0.00','NYSE'),(6663,34,'3571929132417281','jcb','ALL','$8.64','NASDAQ'),(6664,89,'36403077945156','diners-club-international','LSL','$7.05','NYSE'),(6665,19,'3575978084429170','jcb','RSD','$2.42','NYSE'),(6666,36,'4175000547432220','visa-electron','EUR','$8.01','NASDAQ'),(6667,38,'3543583675293248','jcb','USD','$5.06','NYSE'),(6668,26,'3566386887181645','jcb','PHP','$6.85','NYSE'),(6669,37,'3546957737384152','jcb','EUR','$5.48','NYSE'),(6670,94,'4508477840451933','visa-electron','RSD','$9.29','NASDAQ'),(6671,63,'201617808142010','diners-club-enroute','IDR','$1.23','NASDAQ'),(6672,46,'3548005813595230','jcb','CNY','$4.68','NYSE'),(6673,1,'5020417525100021','maestro','CNY','$1.17','NASDAQ'),(6674,11,'3551861802540460','jcb','IDR','$0.69','NYSE'),(6675,100,'4508813608521188','visa-electron','RUB','$0.39','NASDAQ'),(6676,60,'3554290123113939','jcb','IDR','$7.99','NASDAQ'),(6677,28,'3588901926599096','jcb','CNY','$6.73','NASDAQ'),(6678,88,'3540364551910681','jcb','RUB','$9.87','NYSE'),(6679,71,'3556307978109909','jcb','KMF','$0.33','NYSE'),(6680,84,'5018767186180934','maestro','EUR','$6.50','NYSE'),(6681,9,'374288402421464','americanexpress','IDR','$9.10','NYSE'),(6682,18,'3542106638758080','jcb','IDR','$3.15','NASDAQ'),(6683,48,'201808023446779','diners-club-enroute','IDR','$0.06','NYSE'),(6684,3,'30538327372804','diners-club-carte-blanche','IQD','$6.94','NYSE'),(6685,3,'3582777042729478','jcb','SEK','$4.23','NASDAQ'),(6686,97,'3557884309715314','jcb','EGP','$1.34','NYSE'),(6687,99,'5145384539770308','mastercard','EUR','$8.09','NASDAQ'),(6688,22,'3581499411494193','jcb','GTQ','$1.78','NYSE'),(6689,12,'3531308220559396','jcb','PLN','$3.77','NYSE'),(6690,48,'6304920774178827637','maestro','PHP','$8.95','NASDAQ'),(6691,24,'6771269107739695798','laser','CNY','$7.84','NYSE'),(6692,66,'3546888962761931','jcb','VEF','$8.04','NYSE'),(6693,96,'676250837720751238','maestro','CNY','$3.79','NASDAQ'),(6694,85,'3557309665862450','jcb','MAD','$5.41','NASDAQ'),(6695,40,'3566611467764027','jcb','CNY','$3.71','NASDAQ'),(6696,1,'3528282260281465','jcb','XOF','$7.67','NASDAQ'),(6697,84,'3576538365824157','jcb','JPY','$4.63','NASDAQ'),(6698,90,'561022851560498926','china-unionpay','TZS','$8.69','NASDAQ'),(6699,94,'3546732456939274','jcb','MYR','$1.48','NASDAQ'),(6700,53,'6331104840845249','switch','CNY','$9.53','NYSE'),(6701,4,'5586335994665850','mastercard','RUB','$0.19','NASDAQ'),(6702,29,'3538184814601842','jcb','RUB','$9.12','NYSE'),(6703,48,'347003705770846','americanexpress','CNY','$7.83','NASDAQ'),(6704,99,'3565104071129762','jcb','USD','$9.75','NASDAQ'),(6705,86,'30407179073557','diners-club-carte-blanche','IDR','$3.24','NYSE'),(6706,24,'3531476483146159','jcb','CUP','$5.87','NYSE'),(6707,34,'3584824894002220','jcb','RUB','$6.57','NASDAQ'),(6708,6,'6375099824203406','instapayment','IDR','$3.21','NYSE'),(6709,59,'3575321684651580','jcb','CAD','$2.53','NASDAQ'),(6710,23,'30050424858461','diners-club-carte-blanche','CNY','$0.48','NASDAQ'),(6711,22,'337941879084654','americanexpress','PGK','$3.59','NYSE'),(6712,69,'5602252649901558','bankcard','PHP','$6.65','NYSE'),(6713,48,'201759071199804','diners-club-enroute','XAF','$9.80','NASDAQ'),(6714,54,'30006641085403','diners-club-carte-blanche','IDR','$8.30','NYSE'),(6715,74,'3567803464342910','jcb','HUF','$3.28','NYSE'),(6716,66,'564182591097021854','switch','EUR','$1.81','NASDAQ'),(6717,66,'490341652248958588','switch','EUR','$6.50','NASDAQ'),(6718,24,'4911662863122950516','switch','RUB','$8.44','NYSE'),(6719,97,'30445914975678','diners-club-carte-blanche','IRR','$8.97','NASDAQ'),(6720,52,'30233677097694','diners-club-carte-blanche','COP','$3.96','NASDAQ'),(6721,77,'5108754003476159','mastercard','EUR','$2.89','NASDAQ'),(6722,5,'3557960698770779','jcb','CNY','$4.41','NASDAQ'),(6723,59,'3533063904586664','jcb','EUR','$8.05','NYSE'),(6724,72,'5610627997952966','china-unionpay','NIO','$5.29','NYSE'),(6725,35,'3557238121770652','jcb','CAD','$6.69','NASDAQ'),(6726,25,'3538508202488018','jcb','EUR','$6.00','NYSE'),(6727,27,'201604141618054','diners-club-enroute','CUP','$1.69','NYSE'),(6728,41,'6372411450710450','instapayment','CNY','$4.52','NYSE'),(6729,13,'3563702613087471','jcb','CNY','$8.27','NYSE'),(6730,53,'5602222138862637','bankcard','EUR','$2.96','NASDAQ'),(6731,56,'5610368374172882','china-unionpay','JPY','$7.39','NYSE'),(6732,72,'4844851372390763','visa-electron','MXN','$7.08','NYSE'),(6733,46,'060432979915938648','maestro','CNY','$3.17','NASDAQ'),(6734,41,'4041379731763','visa','IDR','$9.17','NYSE'),(6735,46,'56022145699971569','china-unionpay','NGN','$5.94','NYSE'),(6736,24,'3565773322651061','jcb','CAD','$7.19','NYSE'),(6737,60,'6759361467721771','switch','EUR','$1.84','NYSE'),(6738,30,'3561185710697784','jcb','CNY','$7.35','NYSE'),(6739,37,'3538638940439906','jcb','EUR','$4.20','NASDAQ'),(6740,95,'6763892480524952','maestro','CNY','$0.74','NASDAQ'),(6741,33,'3536587315081029','jcb','IDR','$9.83','NASDAQ'),(6742,71,'060421844588596060','maestro','ILS','$7.36','NASDAQ'),(6743,97,'3577208264490364','jcb','UGX','$0.30','NASDAQ'),(6744,49,'374622370648080','americanexpress','YER','$8.51','NASDAQ'),(6745,39,'4041599483542','visa','IDR','$1.92','NYSE'),(6746,48,'3555696986735593','jcb','PHP','$1.63','NYSE'),(6747,75,'6709370000948722832','laser','CNY','$1.50','NASDAQ'),(6748,29,'3554841867954035','jcb','PEN','$3.64','NYSE'),(6749,79,'4508788502618480','visa-electron','COP','$8.57','NYSE'),(6750,41,'3540008586918272','jcb','CZK','$4.55','NASDAQ'),(6751,98,'3536544132594585','jcb','IDR','$7.57','NYSE'),(6752,15,'6706482378362170873','laser','CVE','$6.25','NYSE'),(6753,95,'589368270681965858','maestro','SEK','$1.81','NASDAQ'),(6754,69,'3580880657889413','jcb','CZK','$3.70','NYSE'),(6755,4,'374622011837704','americanexpress','CNY','$4.02','NYSE'),(6756,48,'63041923029278530','maestro','CNY','$8.51','NASDAQ'),(6757,42,'3581201018027362','jcb','NIO','$0.52','NASDAQ'),(6758,22,'4026144196766529','visa-electron','KES','$1.31','NASDAQ'),(6759,31,'3547387484151738','jcb','HNL','$3.11','NASDAQ'),(6760,20,'3557454738917053','jcb','HRK','$8.66','NYSE'),(6761,89,'5100139506240674','mastercard','USD','$8.40','NYSE'),(6762,92,'201792937287398','diners-club-enroute','RUB','$7.00','NYSE'),(6763,70,'3557505699265665','jcb','JPY','$3.24','NASDAQ'),(6764,34,'201986199468809','diners-club-enroute','EUR','$1.12','NYSE'),(6765,4,'491160053344384975','switch','CNY','$2.43','NASDAQ'),(6766,69,'67599975721398492','maestro','EUR','$6.69','NYSE'),(6767,53,'3579944211610344','jcb','CNY','$5.79','NASDAQ'),(6768,31,'5602219168842033375','china-unionpay','CNY','$9.53','NYSE'),(6769,87,'30156035186984','diners-club-carte-blanche','IDR','$9.46','NASDAQ'),(6770,76,'3533623628812892','jcb','VND','$9.78','NYSE'),(6771,86,'3569961733467815','jcb','EUR','$7.10','NYSE'),(6772,86,'4041591799012399','visa','IDR','$2.97','NASDAQ'),(6773,59,'5322880954974635','mastercard','IDR','$7.86','NASDAQ'),(6774,6,'3578318613049149','jcb','EUR','$2.45','NYSE'),(6775,13,'3561404332909703','jcb','IDR','$9.93','NYSE'),(6776,92,'3584965621271586','jcb','JPY','$6.51','NYSE'),(6777,76,'3562953757435882','jcb','CRC','$2.39','NASDAQ'),(6778,21,'560222332189899778','china-unionpay','CAD','$4.56','NASDAQ'),(6779,91,'30194371216420','diners-club-carte-blanche','CNY','$2.13','NASDAQ'),(6780,36,'3551904275085504','jcb','COP','$1.68','NYSE'),(6781,21,'3576520531531999','jcb','IDR','$7.58','NYSE'),(6782,47,'3588308703046822','jcb','CNY','$9.01','NYSE'),(6783,31,'374288677227471','americanexpress','IDR','$2.08','NASDAQ'),(6784,35,'30544769554867','diners-club-carte-blanche','MXN','$3.01','NASDAQ'),(6785,85,'4913715863023678','visa-electron','RUB','$0.59','NASDAQ'),(6786,18,'3551147290918404','jcb','MYR','$8.58','NASDAQ'),(6787,7,'5303210099083436','mastercard','EUR','$2.60','NASDAQ'),(6788,82,'633445272928879317','solo','USD','$2.03','NASDAQ'),(6789,17,'3572663836437274','jcb','MKD','$7.99','NASDAQ'),(6790,12,'3579805271674563','jcb','DOP','$4.45','NYSE'),(6791,74,'5108757814606518','mastercard','PHP','$9.53','NYSE'),(6792,31,'3563600122944812','jcb','BRL','$0.85','NYSE'),(6793,40,'3566103190694978','jcb','IDR','$6.40','NYSE'),(6794,30,'5440106070205291','diners-club-us-ca','CNY','$0.25','NASDAQ'),(6795,52,'3589320018295258','jcb','BGN','$7.16','NYSE'),(6796,72,'560224461622029509','china-unionpay','BSD','$0.39','NYSE'),(6797,83,'5366371502543285','mastercard','IDR','$8.70','NYSE'),(6798,44,'30134346173645','diners-club-carte-blanche','PLN','$0.88','NYSE'),(6799,66,'3575400293038585','jcb','PHP','$2.39','NYSE'),(6800,22,'3581532890379715','jcb','SEK','$6.78','NASDAQ'),(6801,60,'3555792886075915','jcb','PLN','$3.77','NASDAQ'),(6802,56,'348993716323313','americanexpress','HRK','$3.66','NASDAQ'),(6803,85,'67069578214402804','laser','HTG','$4.05','NASDAQ'),(6804,83,'633110613890882215','switch','GNF','$0.32','NYSE'),(6805,13,'5196463936583940','mastercard','XOF','$0.16','NYSE'),(6806,67,'3537836899807260','jcb','CNY','$1.02','NASDAQ'),(6807,51,'3588764530126098','jcb','JMD','$9.75','NASDAQ'),(6808,60,'6331103654288231957','switch','THB','$8.79','NYSE'),(6809,38,'4508453726120629','visa-electron','IDR','$0.66','NYSE'),(6810,27,'5602227257700039','bankcard','RUB','$2.97','NASDAQ'),(6811,14,'5602234480365218','bankcard','RUB','$0.71','NYSE'),(6812,71,'30416885431785','diners-club-carte-blanche','IRR','$8.84','NYSE'),(6813,3,'345823202172341','americanexpress','EGP','$0.69','NYSE'),(6814,68,'30404878169687','diners-club-carte-blanche','EUR','$1.93','NASDAQ'),(6815,44,'6334258555020660790','solo','CNY','$6.84','NYSE'),(6816,16,'6374201643565459','instapayment','JPY','$8.29','NYSE'),(6817,17,'5508907380374357','diners-club-us-ca','EUR','$7.83','NASDAQ'),(6818,57,'502093087401706379','maestro','EUR','$6.21','NYSE'),(6819,98,'3580441447207240','jcb','EGP','$9.11','NASDAQ'),(6820,27,'201466770287597','diners-club-enroute','HNL','$9.59','NASDAQ'),(6821,35,'5552493585285149','diners-club-us-ca','CNY','$0.84','NASDAQ'),(6822,94,'3530003760224110','jcb','PLN','$9.76','NYSE'),(6823,44,'3588409760468824','jcb','RUB','$3.52','NASDAQ'),(6824,94,'4936422432148572817','switch','SEK','$6.20','NYSE'),(6825,8,'3547817723413887','jcb','AFN','$4.83','NASDAQ'),(6826,84,'5602239748887796','china-unionpay','VND','$8.05','NYSE'),(6827,35,'5108757631940793','mastercard','ILS','$4.98','NYSE'),(6828,8,'4017950004356092','visa','EUR','$6.72','NASDAQ'),(6829,87,'3543856889066778','jcb','KGS','$4.14','NYSE'),(6830,3,'201814363056632','diners-club-enroute','CNY','$0.89','NASDAQ'),(6831,23,'3535390032247424','jcb','IRR','$4.03','NASDAQ'),(6832,71,'3558265135179322','jcb','PHP','$6.34','NYSE'),(6833,39,'6334962746546592','solo','BIF','$4.78','NYSE'),(6834,4,'3539329267999149','jcb','RUB','$4.44','NASDAQ'),(6835,84,'3589659731992836','jcb','IDR','$8.05','NASDAQ'),(6836,81,'3568294854315378','jcb','PLN','$9.21','NYSE'),(6837,92,'3568822496444063','jcb','CNY','$6.96','NASDAQ'),(6838,99,'6763460332344985','maestro','SEK','$6.84','NASDAQ'),(6839,28,'3531287262697951','jcb','CNY','$3.34','NYSE'),(6840,88,'3586905185124126','jcb','PAB','$8.70','NASDAQ'),(6841,75,'6333307275752172','switch','CNY','$8.54','NASDAQ'),(6842,23,'3536897393946013','jcb','EUR','$6.73','NASDAQ'),(6843,3,'0604942114917902','maestro','PHP','$1.79','NASDAQ'),(6844,92,'5402552166058555','mastercard','COP','$9.88','NYSE'),(6845,31,'3537832673172104','jcb','ARS','$0.73','NYSE'),(6846,89,'6384591957614994','instapayment','COP','$3.11','NYSE'),(6847,68,'337941956782774','americanexpress','PEN','$5.67','NASDAQ'),(6848,63,'374288254663841','americanexpress','PKR','$4.36','NYSE'),(6849,84,'56022172699909936','china-unionpay','BOB','$3.56','NASDAQ'),(6850,61,'3584740571342517','jcb','EUR','$1.77','NASDAQ'),(6851,68,'3573144638812419','jcb','EUR','$9.76','NASDAQ'),(6852,82,'5007667681892293','mastercard','HRK','$1.26','NASDAQ'),(6853,98,'3543477637181197','jcb','RUB','$1.63','NASDAQ'),(6854,66,'58935191182576673','maestro','EUR','$4.73','NYSE'),(6855,61,'3564492440868470','jcb','RUB','$4.64','NYSE'),(6856,8,'3565373904647213','jcb','EUR','$0.22','NYSE'),(6857,26,'3582614722895628','jcb','RUB','$6.44','NASDAQ'),(6858,6,'374622898414106','americanexpress','JPY','$5.90','NYSE'),(6859,81,'4405201454658474','visa-electron','SAR','$1.25','NYSE'),(6860,21,'5602242696583367','bankcard','EUR','$4.91','NASDAQ'),(6861,17,'374288443573190','americanexpress','CNY','$5.23','NYSE'),(6862,31,'6304983016320605','maestro','PLN','$0.74','NYSE'),(6863,62,'6304704984846337073','maestro','PLN','$4.29','NASDAQ'),(6864,4,'3589296439897809','jcb','CAD','$1.06','NASDAQ'),(6865,28,'5020111135603520','maestro','IDR','$4.88','NASDAQ'),(6866,100,'3584388846862743','jcb','RUB','$8.81','NYSE'),(6867,49,'3548158698594891','jcb','CNY','$2.64','NASDAQ'),(6868,87,'3551798936622352','jcb','BRL','$7.57','NYSE'),(6869,27,'3576838569419345','jcb','BYR','$0.75','NYSE'),(6870,33,'3555655246046712','jcb','CNY','$4.61','NASDAQ'),(6871,78,'3578417534280997','jcb','IDR','$5.38','NASDAQ'),(6872,20,'3530232275566398','jcb','PEN','$4.93','NASDAQ'),(6873,47,'3553045941768350','jcb','IDR','$7.36','NYSE'),(6874,82,'5602254859786844','bankcard','CNY','$3.63','NASDAQ'),(6875,78,'3565094115340592','jcb','CNY','$1.21','NYSE'),(6876,99,'4041592941659244','visa','CNY','$3.84','NYSE'),(6877,38,'5577235096753235','diners-club-us-ca','PEN','$6.75','NYSE'),(6878,92,'3553489871599122','jcb','PEN','$3.37','NASDAQ'),(6879,78,'201839105954273','diners-club-enroute','EUR','$3.55','NYSE'),(6880,46,'5602246672521713','china-unionpay','RUB','$3.51','NYSE'),(6881,55,'6767232322338626787','solo','CZK','$0.30','NASDAQ'),(6882,90,'3550279680790662','jcb','AMD','$4.33','NASDAQ'),(6883,67,'3584978785245908','jcb','USD','$2.05','NYSE'),(6884,16,'4905850354236982','switch','CNY','$7.22','NYSE'),(6885,81,'630465329148148229','maestro','IRR','$7.80','NYSE'),(6886,8,'5125742121097477','mastercard','CNY','$3.49','NASDAQ'),(6887,84,'3569365002668337','jcb','CNY','$2.77','NYSE'),(6888,84,'3578733550585782','jcb','SEK','$7.89','NYSE'),(6889,15,'6333890160282884','switch','IDR','$3.67','NYSE'),(6890,38,'6761378133785945','maestro','USD','$3.81','NASDAQ'),(6891,47,'4286551233449','visa','ILS','$2.17','NASDAQ'),(6892,86,'5596046367983279','mastercard','USD','$7.04','NASDAQ'),(6893,15,'3530850858249239','jcb','TJS','$5.32','NASDAQ'),(6894,71,'5018651067274771219','maestro','PHP','$1.91','NASDAQ'),(6895,47,'3544155768087370','jcb','PLN','$3.54','NYSE'),(6896,90,'3551115052312314','jcb','SEK','$5.49','NYSE'),(6897,41,'374283661458216','americanexpress','VND','$8.74','NASDAQ'),(6898,74,'3569278108743930','jcb','PHP','$2.58','NASDAQ'),(6899,34,'3583358941465891','jcb','ALL','$5.05','NYSE'),(6900,93,'5602235918069682878','china-unionpay','TND','$3.89','NYSE'),(6901,42,'3567915600512220','jcb','HNL','$7.83','NYSE'),(6902,6,'3561576824271633','jcb','CNY','$4.12','NYSE'),(6903,77,'5610282080421923','bankcard','CNY','$3.83','NYSE'),(6904,48,'30134236034329','diners-club-carte-blanche','CNY','$7.15','NYSE'),(6905,34,'3576419442669727','jcb','EUR','$0.60','NYSE'),(6906,33,'3567450034046504','jcb','CNY','$3.73','NASDAQ'),(6907,42,'3537571820549786','jcb','IDR','$1.22','NASDAQ'),(6908,59,'3564750326510197','jcb','CNY','$1.46','NASDAQ'),(6909,89,'3574711870056928','jcb','NPR','$0.64','NYSE'),(6910,21,'372301838309377','americanexpress','CNY','$6.66','NYSE'),(6911,59,'30013798809445','diners-club-carte-blanche','BRL','$5.47','NASDAQ'),(6912,64,'3537741359950438','jcb','EUR','$8.02','NASDAQ'),(6913,71,'5284976280744696','mastercard','HRK','$2.89','NYSE'),(6914,98,'3569319417412575','jcb','PHP','$4.95','NYSE'),(6915,17,'6759458823624465','switch','IDR','$8.83','NYSE'),(6916,71,'201987105591569','diners-club-enroute','PLN','$9.10','NASDAQ'),(6917,20,'4508965668117446','visa-electron','CNY','$5.37','NASDAQ'),(6918,35,'5020711701315596953','maestro','PHP','$6.09','NASDAQ'),(6919,33,'3546734340231231','jcb','IDR','$8.96','NYSE'),(6920,67,'3531832596935856','jcb','PHP','$9.81','NASDAQ'),(6921,15,'3542906808316100','jcb','IDR','$0.47','NYSE'),(6922,48,'30414252560666','diners-club-carte-blanche','EUR','$6.10','NYSE'),(6923,60,'5321796807381342','mastercard','CAD','$2.74','NASDAQ'),(6924,61,'3556936188681552','jcb','EUR','$8.84','NASDAQ'),(6925,31,'5245345430388895','mastercard','CNY','$3.75','NYSE'),(6926,69,'6759024959440418873','maestro','CNY','$2.49','NYSE'),(6927,97,'67096526121763575','laser','SEK','$2.19','NYSE'),(6928,72,'3553967141695937','jcb','CNY','$6.40','NYSE'),(6929,43,'3547619976169848','jcb','CNY','$7.40','NYSE'),(6930,51,'3570966416193205','jcb','PHP','$7.82','NASDAQ'),(6931,95,'560223781142289858','china-unionpay','TND','$6.43','NYSE'),(6932,33,'372301641095858','americanexpress','BRL','$6.25','NYSE'),(6933,14,'3582139646210084','jcb','CAD','$2.50','NASDAQ'),(6934,12,'201776687224966','diners-club-enroute','PLN','$3.30','NASDAQ'),(6935,37,'6304634059795622398','maestro','NGN','$0.97','NYSE'),(6936,26,'337941221849382','americanexpress','EUR','$8.15','NASDAQ'),(6937,44,'3583424390078823','jcb','RSD','$8.66','NASDAQ'),(6938,54,'348789881616386','americanexpress','MYR','$5.87','NYSE'),(6939,14,'6763772245181977137','maestro','HNL','$2.05','NASDAQ'),(6940,55,'3559518939215349','jcb','PHP','$5.80','NASDAQ'),(6941,57,'3537598602349366','jcb','VND','$8.69','NYSE'),(6942,62,'676323633854926412','maestro','BRL','$2.22','NASDAQ'),(6943,95,'3561126266953171','jcb','EUR','$0.18','NYSE'),(6944,90,'5007666054874771','mastercard','BDT','$7.56','NASDAQ'),(6945,3,'3589543904836758','jcb','PHP','$8.86','NASDAQ'),(6946,88,'3578341226601601','jcb','SAR','$1.05','NYSE'),(6947,60,'3559415075339852','jcb','HRK','$3.52','NASDAQ'),(6948,37,'201968965951978','diners-club-enroute','BRL','$2.78','NASDAQ'),(6949,5,'3582959565886832','jcb','UAH','$0.24','NASDAQ'),(6950,74,'5007664583804930','mastercard','SEK','$3.93','NYSE'),(6951,99,'6759803941719582','switch','ILS','$0.66','NYSE'),(6952,1,'5237402789959865','mastercard','CNY','$3.44','NYSE'),(6953,31,'3563764535837516','jcb','RUB','$7.72','NASDAQ'),(6954,34,'4911172573723356020','switch','UZS','$6.74','NYSE'),(6955,47,'5303231352448785','mastercard','SEK','$5.93','NYSE'),(6956,47,'201972493619370','diners-club-enroute','EUR','$7.83','NASDAQ'),(6957,89,'5010121337211859','mastercard','XOF','$8.41','NYSE'),(6958,20,'201486911724498','diners-club-enroute','JPY','$8.18','NYSE'),(6959,70,'5143666114463743','mastercard','CNY','$7.17','NYSE'),(6960,22,'3537513551757758','jcb','CNY','$6.36','NASDAQ'),(6961,21,'3574972439768193','jcb','USD','$8.92','NASDAQ'),(6962,61,'5602213689142461','bankcard','KHR','$3.59','NASDAQ'),(6963,32,'3549536644757705','jcb','RSD','$1.44','NYSE'),(6964,42,'5602239245809350','bankcard','IDR','$6.10','NASDAQ'),(6965,54,'3528548491621624','jcb','CNY','$3.10','NASDAQ'),(6966,86,'63041620939246520','laser','MNT','$1.85','NASDAQ'),(6967,16,'6334046594688594402','solo','CAD','$8.52','NASDAQ'),(6968,80,'3566376569711975','jcb','PLN','$6.18','NASDAQ'),(6969,1,'3545442559655063','jcb','CNY','$9.39','NYSE'),(6970,43,'5602255660963373','bankcard','CNY','$4.99','NASDAQ'),(6971,74,'30491135749971','diners-club-carte-blanche','VND','$4.12','NYSE'),(6972,18,'5416149984295271','diners-club-us-ca','BRL','$4.15','NYSE'),(6973,61,'3558442619310968','jcb','CNY','$9.20','NYSE'),(6974,5,'6759115746944350','switch','EUR','$0.03','NYSE'),(6975,55,'3555803558409561','jcb','RUB','$7.25','NASDAQ'),(6976,35,'30189286820852','diners-club-carte-blanche','HNL','$7.04','NYSE'),(6977,17,'491114888413583891','switch','CNY','$3.43','NASDAQ'),(6978,68,'633110870775972020','switch','IDR','$8.85','NYSE'),(6979,49,'6391065032467224','instapayment','VND','$8.23','NASDAQ'),(6980,95,'6399978366396425','instapayment','PHP','$4.98','NYSE'),(6981,53,'4041378333702','visa','CNY','$7.81','NASDAQ'),(6982,4,'3571469613734375','jcb','ARS','$0.88','NYSE'),(6983,44,'561006304831688990','china-unionpay','THB','$2.53','NYSE'),(6984,32,'201700801195803','diners-club-enroute','IDR','$1.54','NASDAQ'),(6985,12,'5048371379885047','mastercard','EUR','$8.82','NASDAQ'),(6986,28,'3586169066307439','jcb','CNY','$1.96','NYSE'),(6987,71,'3582883476885404','jcb','EUR','$0.66','NASDAQ'),(6988,63,'5602219794720398','china-unionpay','CNY','$6.33','NASDAQ'),(6989,85,'4220324016609','visa','XAF','$9.50','NYSE'),(6990,49,'5610871635004018','bankcard','BRL','$6.82','NASDAQ'),(6991,95,'374622432265535','americanexpress','CNY','$0.16','NYSE'),(6992,49,'374283954992624','americanexpress','IDR','$4.05','NYSE'),(6993,15,'4017956736367','visa','PLN','$0.00','NASDAQ'),(6994,97,'5444396978854029','mastercard','BRL','$8.24','NYSE'),(6995,59,'56022581314682829','china-unionpay','OMR','$9.69','NASDAQ'),(6996,9,'6706883109110786','laser','EUR','$4.00','NYSE'),(6997,38,'676331604020723710','maestro','PHP','$2.44','NYSE'),(6998,37,'30194767836633','diners-club-carte-blanche','AFN','$1.20','NYSE'),(6999,11,'3546966933038652','jcb','JPY','$1.47','NYSE'),(7000,2,'6333427584722820898','switch','EUR','$5.51','NASDAQ');
/*!40000 ALTER TABLE `trans_data` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2019-10-22 10:39:57
